
;; Function fbgc_stl_initializer (fbgc_stl_initializer, funcdef_no=65, decl_uid=5685, cgraph_uid=66, symbol_order=77)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs




Pass 1 for finding pseudo/allocno costs



   Insn 13(l0): point = 0
   Insn 12(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_stl_initializer

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r19={1d,2u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} 
;;    total ref usage 29{20d,9u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax]
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 5 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 12 2 (debug_marker) "cmodules/fbgc_stl.c":166:2 -1
     (nil))
(insn 12 7 13 2 (set (reg/i:DI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":167:1 66 {*movdi_internal}
     (nil))
(insn 13 12 0 2 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":167:1 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function fbgc_tuple (fbgc_tuple, funcdef_no=62, decl_uid=5705, cgraph_uid=63, symbol_order=71)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 19 n_edges 27 count 20 (  1.1)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;;
;; Loop 2
;;  header 15, latch 15
;;  depth 1, outer 0
;;  nodes: 15
;;
;; Loop 1
;;  header 9, latch 9
;;  depth 1, outer 0
;;  nodes: 9
;; 2 succs { 3 17 }
;; 3 succs { 4 7 }
;; 4 succs { 5 11 }
;; 5 succs { 18 6 }
;; 6 succs { 1 }
;; 7 succs { 8 10 }
;; 8 succs { 9 }
;; 9 succs { 9 10 }
;; 10 succs { 18 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 15 14 }
;; 14 succs { 18 }
;; 15 succs { 15 16 }
;; 16 succs { 14 }
;; 17 succs { 18 }
;; 18 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 115 uninteresting
Reg 105: def dominates all uses has unique first use
Reg 116 uninteresting
Reg 83 uninteresting
Reg 107 uninteresting
Ignoring reg 108, has equiv memory
Reg 117 uninteresting
Reg 102: local to bb 9 def dominates all uses has unique first use
Reg 118 uninteresting
Reg 88: local to bb 9 def dominates all uses has unique first use
Ignoring reg 109, has equiv memory
Ignoring reg 110, has equiv memory
Reg 98: def dominates all uses has unique first use
Reg 92: def dominates all uses has unique first use
Reg 112 uninteresting
Reg 113 uninteresting
Reg 96 uninteresting
Reg 119 uninteresting
Reg 120 uninteresting
Reg 97: local to bb 15 def dominates all uses has unique first use
Examining insn 59, def for 88
  all ok
Reg 92 not local to one basic block
Examining insn 129, def for 97
  all ok
Reg 98 not local to one basic block
Examining insn 53, def for 102
  all ok
Reg 105 not local to one basic block
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;;
;; Loop 2
;;  header 15, latch 15
;;  depth 1, outer 0
;;  nodes: 15
;;
;; Loop 1
;;  header 9, latch 9
;;  depth 1, outer 0
;;  nodes: 9
;; 2 succs { 3 17 }
;; 3 succs { 4 7 }
;; 4 succs { 5 11 }
;; 5 succs { 18 6 }
;; 6 succs { 1 }
;; 7 succs { 8 10 }
;; 8 succs { 9 }
;; 9 succs { 9 10 }
;; 10 succs { 18 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 15 14 }
;; 14 succs { 18 }
;; 15 succs { 15 16 }
;; 16 succs { 14 }
;; 17 succs { 18 }
;; 18 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 108: (insn_list:REG_DEP_TRUE 38 (nil))
init_insns for 109: (insn_list:REG_DEP_TRUE 83 (nil))
init_insns for 110: (insn_list:REG_DEP_TRUE 87 (nil))

Pass 0 for finding pseudo/allocno costs

    a29 (r120,l2) best AREG, allocno AREG
    a5 (r119,l0) best AREG, allocno AREG
    a36 (r118,l1) best AREG, allocno AREG
    a16 (r117,l0) best AREG, allocno AREG
    a21 (r116,l0) best SIREG, allocno SIREG
    a22 (r115,l0) best DIREG, allocno DIREG
    a6 (r113,l0) best SSE_REGS, allocno SSE_REGS
    a8 (r112,l0) best SSE_REGS, allocno SSE_REGS
    a9 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a12 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a13 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a17 (r108,l0) best DIREG, allocno DIREG
    a18 (r107,l0) best DIREG, allocno DIREG
    a27 (r106,l2) best DREG, allocno DREG
    a1 (r106,l0) best DREG, allocno DREG
    a20 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a32 (r104,l1) best AREG, allocno AREG
    a26 (r104,l2) best AREG, allocno AREG
    a0 (r104,l0) best AREG, allocno AREG
    a35 (r102,l1) best DREG, allocno DREG
    a25 (r101,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a7 (r99,l0) best SSE_REGS, allocno SSE_REGS
    a24 (r98,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a28 (r97,l2) best SIREG, allocno SIREG
    a23 (r96,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a33 (r89,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a14 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a34 (r88,l1) best SIREG, allocno SIREG
    a31 (r87,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a15 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a19 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a30 (r82,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a11 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r104,l0) costs: AREG:-501,3059 DREG:1002,4562 CREG:1002,4562 BREG:1002,4562 SIREG:1002,4562 DIREG:1002,4562 AD_REGS:1002,4562 CLOBBERED_REGS:1002,4562 Q_REGS:1002,4562 NON_Q_REGS:1002,4562 TLS_GOTBASE_REGS:1002,4562 GENERAL_REGS:1002,4562 SSE_FIRST_REG:10754,24994 NO_REX_SSE_REGS:10754,24994 SSE_REGS:10754,24994 MMX_REGS:14359,37499 INT_SSE_REGS:14359,37499 ALL_REGS:235952,613312 MEM:5157,15837
  a1(r106,l0) costs: AREG:342,342 DREG:-171,-171 CREG:342,342 BREG:342,342 SIREG:342,342 DIREG:342,342 AD_REGS:342,342 CLOBBERED_REGS:342,342 Q_REGS:342,342 NON_Q_REGS:342,342 TLS_GOTBASE_REGS:342,342 GENERAL_REGS:342,342 SSE_FIRST_REG:11000,18120 NO_REX_SSE_REGS:11000,18120 SSE_REGS:11000,18120 MMX_REGS:15218,26788 INT_SSE_REGS:15218,26788 ALL_REGS:242746,431426 MEM:5231,9681
  a2(r96,l0) costs: AREG:220,220 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:220,220 DIREG:220,220 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:2640,2640 NO_REX_SSE_REGS:2640,2640 SSE_REGS:2640,2640 MMX_REGS:4290,4290 INT_SSE_REGS:4290,4290 ALL_REGS:69960,69960 MEM:1980,1980
  a3(r98,l0) costs: AREG:220,220 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:220,220 DIREG:220,220 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:2860,9980 NO_REX_SSE_REGS:2860,9980 SSE_REGS:2860,9980 MMX_REGS:4400,15970 INT_SSE_REGS:4400,15970 ALL_REGS:58520,247200 MEM:1980,6430
  a4(r101,l0) costs: AREG:220,3780 DREG:220,3780 CREG:220,3780 BREG:220,3780 SIREG:220,3780 DIREG:220,3780 AD_REGS:220,3780 CLOBBERED_REGS:220,3780 Q_REGS:220,3780 NON_Q_REGS:220,3780 TLS_GOTBASE_REGS:220,3780 GENERAL_REGS:220,3780 SSE_FIRST_REG:2860,38460 NO_REX_SSE_REGS:2860,38460 SSE_REGS:2860,38460 MMX_REGS:4400,62250 INT_SSE_REGS:4400,62250 ALL_REGS:58520,1001920 MEM:1980,26010
  a5(r119,l0) costs: AREG:-110,-110 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:220,220 DIREG:220,220 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:880,880 NO_REX_SSE_REGS:880,880 SSE_REGS:880,880 MMX_REGS:2860,2860 INT_SSE_REGS:2860,2860 ALL_REGS:46640,46640 MEM:1210,1210
  a6(r113,l0) costs: AREG:1540,1540 DREG:1540,1540 CREG:1540,1540 BREG:1540,1540 SIREG:1540,1540 DIREG:1540,1540 AD_REGS:1540,1540 CLOBBERED_REGS:1540,1540 Q_REGS:1540,1540 NON_Q_REGS:1540,1540 TLS_GOTBASE_REGS:1540,1540 GENERAL_REGS:1540,1540 FP_TOP_REG:2090,2090 FP_SECOND_REG:2090,2090 FLOAT_REGS:2090,2090 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:2090,2090 FLOAT_INT_REGS:2090,2090 INT_SSE_REGS:2090,2090 FLOAT_INT_SSE_REGS:2090,2090 MEM:770,770
  a7(r99,l0) costs: AREG:1716,1716 DREG:1716,1716 CREG:1716,1716 BREG:1716,1716 SIREG:1716,1716 DIREG:1716,1716 AD_REGS:1716,1716 CLOBBERED_REGS:1716,1716 Q_REGS:1716,1716 NON_Q_REGS:1716,1716 TLS_GOTBASE_REGS:1716,1716 GENERAL_REGS:1716,1716 FP_TOP_REG:3751,3751 FP_SECOND_REG:3751,3751 FLOAT_REGS:3751,3751 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:3751,3751 FLOAT_INT_REGS:3751,3751 INT_SSE_REGS:3751,3751 FLOAT_INT_SSE_REGS:3751,3751 MEM:1672,1672
  a8(r112,l0) costs: AREG:1760,1760 DREG:1760,1760 CREG:1760,1760 BREG:1760,1760 SIREG:1760,1760 DIREG:1760,1760 AD_REGS:1760,1760 CLOBBERED_REGS:1760,1760 Q_REGS:1760,1760 NON_Q_REGS:1760,1760 TLS_GOTBASE_REGS:1760,1760 GENERAL_REGS:1760,1760 FP_TOP_REG:2860,2860 FP_SECOND_REG:2860,2860 FLOAT_REGS:2860,2860 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:2860,2860 FLOAT_INT_REGS:2860,2860 INT_SSE_REGS:2860,2860 FLOAT_INT_SSE_REGS:2860,2860 MEM:1320,1320
  a9(r111,l0) costs: AREG:220,220 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:220,220 DIREG:220,220 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1760,1760 NO_REX_SSE_REGS:1760,1760 SSE_REGS:1760,1760 MMX_REGS:2310,2310 INT_SSE_REGS:2310,2310 ALL_REGS:34540,34540 MEM:880,880
  a10(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2376,2376 NO_REX_SSE_REGS:2376,2376 SSE_REGS:2376,2376 MMX_REGS:3751,3751 INT_SSE_REGS:3751,3751 ALL_REGS:51304,51304 MEM:1782,1782
  a11(r82,l0) costs: AREG:0,1780 DREG:0,1780 CREG:0,1780 BREG:0,1780 SIREG:0,1780 DIREG:0,1780 AD_REGS:0,1780 CLOBBERED_REGS:0,1780 Q_REGS:0,1780 NON_Q_REGS:0,1780 TLS_GOTBASE_REGS:0,1780 GENERAL_REGS:0,1780 SSE_FIRST_REG:14960,29200 NO_REX_SSE_REGS:14960,29200 SSE_REGS:14960,29200 MMX_REGS:23870,47010 INT_SSE_REGS:23870,47010 ALL_REGS:349800,727160 MEM:11220,21900
  a12(r110,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1760,1760 NO_REX_SSE_REGS:1760,1760 SSE_REGS:1760,1760 MMX_REGS:2750,2750 INT_SSE_REGS:2750,2750 ALL_REGS:34980,34980 MEM:0,0
  a13(r109,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1760,1760 NO_REX_SSE_REGS:1760,1760 SSE_REGS:1760,1760 MMX_REGS:2750,2750 INT_SSE_REGS:2750,2750 ALL_REGS:34980,34980 MEM:0,0
  a14(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2640,16880 NO_REX_SSE_REGS:2640,16880 SSE_REGS:2640,16880 MMX_REGS:4180,26430 INT_SSE_REGS:4180,26430 ALL_REGS:58300,341320 MEM:1980,11770
  a15(r87,l0) costs: AREG:0,1780 DREG:0,1780 CREG:0,1780 BREG:0,1780 SIREG:0,1780 DIREG:0,1780 AD_REGS:0,1780 CLOBBERED_REGS:0,1780 Q_REGS:0,1780 NON_Q_REGS:0,1780 TLS_GOTBASE_REGS:0,1780 GENERAL_REGS:0,1780 SSE_FIRST_REG:582,36182 NO_REX_SSE_REGS:582,36182 SSE_REGS:582,36182 MMX_REGS:582,58432 INT_SSE_REGS:582,58432 ALL_REGS:9700,953100 MEM:97,23237
  a16(r117,l0) costs: AREG:-110,-110 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:220,220 DIREG:220,220 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:880,880 NO_REX_SSE_REGS:880,880 SSE_REGS:880,880 MMX_REGS:2860,2860 INT_SSE_REGS:2860,2860 ALL_REGS:46640,46640 MEM:1210,1210
  a17(r108,l0) costs: AREG:220,220 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:220,220 DIREG:-110,-110 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1760,1760 NO_REX_SSE_REGS:1760,1760 SSE_REGS:1760,1760 MMX_REGS:2750,2750 INT_SSE_REGS:2750,2750 ALL_REGS:34980,34980 MEM:0,0
  a18(r107,l0) costs: AREG:220,220 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:220,220 DIREG:-110,-110 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1760,1760 NO_REX_SSE_REGS:1760,1760 SSE_REGS:1760,1760 MMX_REGS:2750,2750 INT_SSE_REGS:2750,2750 ALL_REGS:34980,34980 MEM:1320,1320
  a19(r83,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 MEM:9240,9240
  a20(r105,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7186,7186 NO_REX_SSE_REGS:7186,7186 SSE_REGS:7186,7186 MMX_REGS:9386,9386 INT_SSE_REGS:9386,9386 ALL_REGS:154380,154380 MEM:3251,3251
  a21(r116,l0) costs: AREG:1222,1222 DREG:1222,1222 CREG:1222,1222 BREG:1222,1222 SIREG:-611,-611 DIREG:1222,1222 AD_REGS:1222,1222 CLOBBERED_REGS:1222,1222 Q_REGS:1222,1222 NON_Q_REGS:1222,1222 TLS_GOTBASE_REGS:1222,1222 GENERAL_REGS:1222,1222 SSE_FIRST_REG:9776,9776 NO_REX_SSE_REGS:9776,9776 SSE_REGS:9776,9776 MMX_REGS:15886,15886 INT_SSE_REGS:15886,15886 ALL_REGS:259064,259064 MEM:6721,6721
  a22(r115,l0) costs: AREG:1222,1222 DREG:1222,1222 CREG:1222,1222 BREG:1222,1222 SIREG:1222,1222 DIREG:-611,-611 AD_REGS:1222,1222 CLOBBERED_REGS:1222,1222 Q_REGS:1222,1222 NON_Q_REGS:1222,1222 TLS_GOTBASE_REGS:1222,1222 GENERAL_REGS:1222,1222 SSE_FIRST_REG:4888,4888 NO_REX_SSE_REGS:4888,4888 SSE_REGS:4888,4888 MMX_REGS:15886,15886 INT_SSE_REGS:15886,15886 ALL_REGS:259064,259064 MEM:6721,6721
  a23(r96,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a24(r98,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7120,7120 NO_REX_SSE_REGS:7120,7120 SSE_REGS:7120,7120 MMX_REGS:11570,11570 INT_SSE_REGS:11570,11570 ALL_REGS:188680,188680 MEM:4450,4450
  a25(r101,l2) costs: AREG:3560,3560 DREG:3560,3560 CREG:3560,3560 BREG:3560,3560 SIREG:3560,3560 DIREG:3560,3560 AD_REGS:3560,3560 CLOBBERED_REGS:3560,3560 Q_REGS:3560,3560 NON_Q_REGS:3560,3560 TLS_GOTBASE_REGS:3560,3560 GENERAL_REGS:3560,3560 SSE_FIRST_REG:35600,35600 NO_REX_SSE_REGS:35600,35600 SSE_REGS:35600,35600 MMX_REGS:57850,57850 INT_SSE_REGS:57850,57850 ALL_REGS:943400,943400 MEM:24030,24030
  a26(r104,l2) costs: AREG:1780,1780 DREG:1780,1780 CREG:1780,1780 BREG:1780,1780 SIREG:1780,1780 DIREG:1780,1780 AD_REGS:1780,1780 CLOBBERED_REGS:1780,1780 Q_REGS:1780,1780 NON_Q_REGS:1780,1780 TLS_GOTBASE_REGS:1780,1780 GENERAL_REGS:1780,1780 SSE_FIRST_REG:7120,7120 NO_REX_SSE_REGS:7120,7120 SSE_REGS:7120,7120 MMX_REGS:11570,11570 INT_SSE_REGS:11570,11570 ALL_REGS:188680,188680 MEM:5340,5340
  a27(r106,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7120,7120 NO_REX_SSE_REGS:7120,7120 SSE_REGS:7120,7120 MMX_REGS:11570,11570 INT_SSE_REGS:11570,11570 ALL_REGS:188680,188680 MEM:4450,4450
  a28(r97,l2) costs: AREG:1780,1780 DREG:1780,1780 CREG:1780,1780 BREG:1780,1780 SIREG:-890,-890 DIREG:1780,1780 AD_REGS:1780,1780 CLOBBERED_REGS:1780,1780 Q_REGS:1780,1780 NON_Q_REGS:1780,1780 TLS_GOTBASE_REGS:1780,1780 GENERAL_REGS:1780,1780 SSE_FIRST_REG:12460,12460 NO_REX_SSE_REGS:12460,12460 SSE_REGS:12460,12460 MMX_REGS:16910,16910 INT_SSE_REGS:16910,16910 ALL_REGS:277680,277680 MEM:6230,6230
  a29(r120,l2) costs: AREG:-890,-890 DREG:1780,1780 CREG:1780,1780 BREG:1780,1780 SIREG:1780,1780 DIREG:1780,1780 AD_REGS:1780,1780 CLOBBERED_REGS:1780,1780 Q_REGS:1780,1780 NON_Q_REGS:1780,1780 TLS_GOTBASE_REGS:1780,1780 GENERAL_REGS:1780,1780 SSE_FIRST_REG:7120,7120 NO_REX_SSE_REGS:7120,7120 SSE_REGS:7120,7120 MMX_REGS:23140,23140 INT_SSE_REGS:23140,23140 ALL_REGS:377360,377360 MEM:9790,9790
  a30(r82,l1) costs: AREG:1780,1780 DREG:1780,1780 CREG:1780,1780 BREG:1780,1780 SIREG:1780,1780 DIREG:1780,1780 AD_REGS:1780,1780 CLOBBERED_REGS:1780,1780 Q_REGS:1780,1780 NON_Q_REGS:1780,1780 TLS_GOTBASE_REGS:1780,1780 GENERAL_REGS:1780,1780 SSE_FIRST_REG:14240,14240 NO_REX_SSE_REGS:14240,14240 SSE_REGS:14240,14240 MMX_REGS:23140,23140 INT_SSE_REGS:23140,23140 ALL_REGS:377360,377360 MEM:10680,10680
  a31(r87,l1) costs: AREG:1780,1780 DREG:1780,1780 CREG:1780,1780 BREG:1780,1780 SIREG:1780,1780 DIREG:1780,1780 AD_REGS:1780,1780 CLOBBERED_REGS:1780,1780 Q_REGS:1780,1780 NON_Q_REGS:1780,1780 TLS_GOTBASE_REGS:1780,1780 GENERAL_REGS:1780,1780 SSE_FIRST_REG:35600,35600 NO_REX_SSE_REGS:35600,35600 SSE_REGS:35600,35600 MMX_REGS:57850,57850 INT_SSE_REGS:57850,57850 ALL_REGS:943400,943400 MEM:23140,23140
  a32(r104,l1) costs: AREG:1780,1780 DREG:1780,1780 CREG:1780,1780 BREG:1780,1780 SIREG:1780,1780 DIREG:1780,1780 AD_REGS:1780,1780 CLOBBERED_REGS:1780,1780 Q_REGS:1780,1780 NON_Q_REGS:1780,1780 TLS_GOTBASE_REGS:1780,1780 GENERAL_REGS:1780,1780 SSE_FIRST_REG:7120,7120 NO_REX_SSE_REGS:7120,7120 SSE_REGS:7120,7120 MMX_REGS:11570,11570 INT_SSE_REGS:11570,11570 ALL_REGS:188680,188680 MEM:5340,5340
  a33(r89,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:14240,14240 NO_REX_SSE_REGS:14240,14240 SSE_REGS:14240,14240 MMX_REGS:22250,22250 INT_SSE_REGS:22250,22250 ALL_REGS:283020,283020 MEM:9790,9790
  a34(r88,l1) costs: AREG:1780,1780 DREG:1780,1780 CREG:1780,1780 BREG:1780,1780 SIREG:-890,-890 DIREG:1780,1780 AD_REGS:1780,1780 CLOBBERED_REGS:1780,1780 Q_REGS:1780,1780 NON_Q_REGS:1780,1780 TLS_GOTBASE_REGS:1780,1780 GENERAL_REGS:1780,1780 SSE_FIRST_REG:12460,12460 NO_REX_SSE_REGS:12460,12460 SSE_REGS:12460,12460 MMX_REGS:16910,16910 INT_SSE_REGS:16910,16910 ALL_REGS:277680,277680 MEM:6230,6230
  a35(r102,l1) costs: AREG:3560,3560 DREG:890,890 CREG:3560,3560 BREG:3560,3560 SIREG:3560,3560 DIREG:3560,3560 AD_REGS:3560,3560 CLOBBERED_REGS:3560,3560 Q_REGS:3560,3560 NON_Q_REGS:3560,3560 TLS_GOTBASE_REGS:3560,3560 GENERAL_REGS:3560,3560 SSE_FIRST_REG:19580,19580 NO_REX_SSE_REGS:19580,19580 SSE_REGS:19580,19580 MMX_REGS:28480,28480 INT_SSE_REGS:28480,28480 ALL_REGS:466360,466360 MEM:11570,11570
  a36(r118,l1) costs: AREG:-890,-890 DREG:1780,1780 CREG:1780,1780 BREG:1780,1780 SIREG:1780,1780 DIREG:1780,1780 AD_REGS:1780,1780 CLOBBERED_REGS:1780,1780 Q_REGS:1780,1780 NON_Q_REGS:1780,1780 TLS_GOTBASE_REGS:1780,1780 GENERAL_REGS:1780,1780 SSE_FIRST_REG:7120,7120 NO_REX_SSE_REGS:7120,7120 SSE_REGS:7120,7120 MMX_REGS:23140,23140 INT_SSE_REGS:23140,23140 ALL_REGS:377360,377360 MEM:9790,9790


Pass 1 for finding pseudo/allocno costs

    r120: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r112: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r108: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r106,l2) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r104: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r104,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a26 (r104,l2) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r99: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r97: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r104,l0) costs: AREG:1002,3059 DREG:2004,9124 CREG:2004,9124 BREG:2004,9124 SIREG:2004,9124 DIREG:2004,9124 AD_REGS:1002,4562 CLOBBERED_REGS:1002,4562 Q_REGS:1002,4562 NON_Q_REGS:2004,9124 TLS_GOTBASE_REGS:2004,9124 GENERAL_REGS:1002,4562 SSE_FIRST_REG:16424,44904 NO_REX_SSE_REGS:16424,44904 SSE_REGS:16424,44904 MMX_REGS:25858,72138 INT_SSE_REGS:19345,42485 ALL_REGS:240938,618298 MEM:12318,33678
  a1(r106,l0) costs: AREG:684,684 DREG:342,-171 CREG:684,684 BREG:684,684 SIREG:684,684 DIREG:684,684 AD_REGS:342,342 CLOBBERED_REGS:342,342 Q_REGS:342,342 NON_Q_REGS:684,684 TLS_GOTBASE_REGS:342,342 GENERAL_REGS:342,342 SSE_FIRST_REG:13744,20864 NO_REX_SSE_REGS:13744,20864 SSE_REGS:13744,20864 MMX_REGS:21646,33216 INT_SSE_REGS:19423,30993 ALL_REGS:247336,436016 MEM:9697,14147
  a2(r96,l0) costs: GENERAL_REGS:220,220 SSE_FIRST_REG:3520,3520 NO_REX_SSE_REGS:3520,3520 SSE_REGS:3520,3520 MMX_REGS:5720,5720 INT_SSE_REGS:4290,4290 ALL_REGS:69960,69960 MEM:2640,2640
  a3(r98,l0) costs: GENERAL_REGS:220,220 SSE_FIRST_REG:2860,9980 NO_REX_SSE_REGS:2860,9980 SSE_REGS:2860,9980 MMX_REGS:4510,16080 INT_SSE_REGS:4510,16080 ALL_REGS:59180,247860 MEM:1980,6430
  a4(r101,l0) costs: GENERAL_REGS:220,3780 SSE_FIRST_REG:2860,52700 NO_REX_SSE_REGS:2860,52700 SSE_REGS:2860,52700 MMX_REGS:4510,85500 INT_SSE_REGS:4510,62360 ALL_REGS:59180,1002580 MEM:1980,36690
  a5(r119,l0) costs: AREG:220,-110 DREG:440,440 CREG:440,440 BREG:440,440 SIREG:440,440 DIREG:440,440 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:440,440 TLS_GOTBASE_REGS:440,440 GENERAL_REGS:220,220 SSE_FIRST_REG:2640,2640 NO_REX_SSE_REGS:2640,2640 SSE_REGS:2640,2640 MMX_REGS:4290,4290 INT_SSE_REGS:2860,2860 ALL_REGS:46640,46640 MEM:1870,1870
  a6(r113,l0) costs: AREG:1760,1760 DREG:1760,1760 CREG:1760,1760 BREG:1760,1760 SIREG:1760,1760 DIREG:1760,1760 AD_REGS:1760,1760 CLOBBERED_REGS:1760,1760 Q_REGS:1760,1760 NON_Q_REGS:1760,1760 TLS_GOTBASE_REGS:1760,1760 GENERAL_REGS:1760,1760 FP_TOP_REG:2750,2750 FP_SECOND_REG:2750,2750 FLOAT_REGS:2750,2750 SSE_REGS:0,0 FLOAT_SSE_REGS:2750,2750 FLOAT_INT_REGS:2750,2750 INT_SSE_REGS:2750,2750 FLOAT_INT_SSE_REGS:2750,2750 MEM:1320,1320
  a7(r99,l0) costs: AREG:2376,2376 DREG:2376,2376 CREG:2376,2376 BREG:2376,2376 SIREG:2376,2376 DIREG:2376,2376 AD_REGS:2376,2376 CLOBBERED_REGS:2376,2376 Q_REGS:2376,2376 NON_Q_REGS:2376,2376 TLS_GOTBASE_REGS:2376,2376 GENERAL_REGS:2376,2376 FP_TOP_REG:3861,3861 FP_SECOND_REG:3861,3861 FLOAT_REGS:3861,3861 SSE_REGS:0,0 FLOAT_SSE_REGS:3861,3861 FLOAT_INT_REGS:3861,3861 INT_SSE_REGS:3861,3861 FLOAT_INT_SSE_REGS:3861,3861 MEM:1672,1672
  a8(r112,l0) costs: AREG:1760,1760 DREG:1760,1760 CREG:1760,1760 BREG:1760,1760 SIREG:1760,1760 DIREG:1760,1760 AD_REGS:1760,1760 CLOBBERED_REGS:1760,1760 Q_REGS:1760,1760 NON_Q_REGS:1760,1760 TLS_GOTBASE_REGS:1760,1760 GENERAL_REGS:1760,1760 FP_TOP_REG:2860,2860 FP_SECOND_REG:2860,2860 FLOAT_REGS:2860,2860 SSE_REGS:0,0 FLOAT_SSE_REGS:2860,2860 FLOAT_INT_REGS:2860,2860 INT_SSE_REGS:2860,2860 FLOAT_INT_SSE_REGS:2860,2860 MEM:1320,1320
  a9(r111,l0) costs: GENERAL_REGS:220,220 SSE_FIRST_REG:1980,1980 NO_REX_SSE_REGS:1980,1980 SSE_REGS:1980,1980 MMX_REGS:2970,2970 INT_SSE_REGS:2970,2970 ALL_REGS:35200,35200 MEM:1430,1430
  a10(r92,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2376,2376 NO_REX_SSE_REGS:2376,2376 SSE_REGS:2376,2376 MMX_REGS:3861,3861 INT_SSE_REGS:3861,3861 ALL_REGS:51964,51964 MEM:1782,1782
  a11(r82,l0) costs: GENERAL_REGS:0,1780 SSE_FIRST_REG:14960,36320 NO_REX_SSE_REGS:14960,36320 SSE_REGS:14960,36320 MMX_REGS:24310,59020 INT_SSE_REGS:24310,47450 ALL_REGS:352440,729800 MEM:11220,27240
  a12(r110,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1760,1760 NO_REX_SSE_REGS:1760,1760 SSE_REGS:1760,1760 MMX_REGS:2860,2860 INT_SSE_REGS:2860,2860 ALL_REGS:35640,35640 MEM:0,0
  a13(r109,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1760,1760 NO_REX_SSE_REGS:1760,1760 SSE_REGS:1760,1760 MMX_REGS:2860,2860 INT_SSE_REGS:2860,2860 ALL_REGS:35640,35640 MEM:0,0
  a14(r89,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2640,16880 NO_REX_SSE_REGS:2640,16880 SSE_REGS:2640,16880 MMX_REGS:4290,27430 INT_SSE_REGS:4290,27430 ALL_REGS:58960,347320 MEM:1980,11770
  a15(r87,l0) costs: GENERAL_REGS:0,1780 SSE_FIRST_REG:776,43496 NO_REX_SSE_REGS:776,43496 SSE_REGS:776,43496 MMX_REGS:1164,70584 INT_SSE_REGS:1164,59014 ALL_REGS:10282,953682 MEM:582,29062
  a16(r117,l0) costs: AREG:220,-110 DREG:440,440 CREG:440,440 BREG:440,440 SIREG:440,440 DIREG:440,440 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:440,440 TLS_GOTBASE_REGS:440,440 GENERAL_REGS:220,220 SSE_FIRST_REG:2640,2640 NO_REX_SSE_REGS:2640,2640 SSE_REGS:2640,2640 MMX_REGS:4290,4290 INT_SSE_REGS:2860,2860 ALL_REGS:46640,46640 MEM:1870,1870
  a17(r108,l0) costs: AREG:440,440 DREG:440,440 CREG:440,440 BREG:440,440 SIREG:440,440 DIREG:220,-110 AD_REGS:440,440 CLOBBERED_REGS:220,220 Q_REGS:440,440 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:2640,2640 NO_REX_SSE_REGS:2640,2640 SSE_REGS:2640,2640 MMX_REGS:4290,4290 INT_SSE_REGS:2860,2860 ALL_REGS:35640,35640 MEM:660,660
  a18(r107,l0) costs: AREG:440,440 DREG:440,440 CREG:440,440 BREG:440,440 SIREG:440,440 DIREG:220,-110 AD_REGS:440,440 CLOBBERED_REGS:220,220 Q_REGS:440,440 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:2640,2640 NO_REX_SSE_REGS:2640,2640 SSE_REGS:2640,2640 MMX_REGS:4290,4290 INT_SSE_REGS:2860,2860 ALL_REGS:35640,35640 MEM:1980,1980
  a19(r83,l0) costs: GENERAL_REGS:0,0 MEM:9240,9240
  a20(r105,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8408,8408 NO_REX_SSE_REGS:8408,8408 SSE_REGS:8408,8408 MMX_REGS:13052,13052 INT_SSE_REGS:13052,13052 ALL_REGS:158046,158046 MEM:6306,6306
  a21(r116,l0) costs: AREG:2444,2444 DREG:2444,2444 CREG:2444,2444 BREG:2444,2444 SIREG:1222,-611 DIREG:2444,2444 AD_REGS:2444,2444 CLOBBERED_REGS:1222,1222 Q_REGS:2444,2444 NON_Q_REGS:1222,1222 TLS_GOTBASE_REGS:1222,1222 GENERAL_REGS:1222,1222 SSE_FIRST_REG:14664,14664 NO_REX_SSE_REGS:14664,14664 SSE_REGS:14664,14664 MMX_REGS:23829,23829 INT_SSE_REGS:15886,15886 ALL_REGS:259064,259064 MEM:10387,10387
  a22(r115,l0) costs: AREG:2444,2444 DREG:2444,2444 CREG:2444,2444 BREG:2444,2444 SIREG:2444,2444 DIREG:1222,-611 AD_REGS:2444,2444 CLOBBERED_REGS:1222,1222 Q_REGS:2444,2444 NON_Q_REGS:1222,1222 TLS_GOTBASE_REGS:1222,1222 GENERAL_REGS:1222,1222 SSE_FIRST_REG:14664,14664 NO_REX_SSE_REGS:14664,14664 SSE_REGS:14664,14664 MMX_REGS:23829,23829 INT_SSE_REGS:15886,15886 ALL_REGS:259064,259064 MEM:10387,10387
  a23(r96,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a24(r98,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:7120,7120 NO_REX_SSE_REGS:7120,7120 SSE_REGS:7120,7120 MMX_REGS:11570,11570 INT_SSE_REGS:11570,11570 ALL_REGS:188680,188680 MEM:4450,4450
  a25(r101,l2) costs: GENERAL_REGS:3560,3560 SSE_FIRST_REG:49840,49840 NO_REX_SSE_REGS:49840,49840 SSE_REGS:49840,49840 MMX_REGS:80990,80990 INT_SSE_REGS:57850,57850 ALL_REGS:943400,943400 MEM:34710,34710
  a26(r104,l2) costs: AREG:1780,1780 DREG:3560,3560 CREG:3560,3560 BREG:3560,3560 SIREG:3560,3560 DIREG:3560,3560 AD_REGS:1780,1780 CLOBBERED_REGS:1780,1780 Q_REGS:1780,1780 NON_Q_REGS:3560,3560 TLS_GOTBASE_REGS:3560,3560 GENERAL_REGS:1780,1780 SSE_FIRST_REG:14240,14240 NO_REX_SSE_REGS:14240,14240 SSE_REGS:14240,14240 MMX_REGS:23140,23140 INT_SSE_REGS:11570,11570 ALL_REGS:188680,188680 MEM:10680,10680
  a27(r106,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7120,7120 NO_REX_SSE_REGS:7120,7120 SSE_REGS:7120,7120 MMX_REGS:11570,11570 INT_SSE_REGS:11570,11570 ALL_REGS:188680,188680 MEM:4450,4450
  a28(r97,l2) costs: AREG:3560,3560 DREG:3560,3560 CREG:3560,3560 BREG:3560,3560 SIREG:1780,-890 DIREG:3560,3560 AD_REGS:3560,3560 CLOBBERED_REGS:1780,1780 Q_REGS:3560,3560 NON_Q_REGS:1780,1780 TLS_GOTBASE_REGS:1780,1780 GENERAL_REGS:1780,1780 SSE_FIRST_REG:21360,21360 NO_REX_SSE_REGS:21360,21360 SSE_REGS:21360,21360 MMX_REGS:33820,33820 INT_SSE_REGS:22250,22250 ALL_REGS:283020,283020 MEM:16020,16020
  a29(r120,l2) costs: AREG:1780,-890 DREG:3560,3560 CREG:3560,3560 BREG:3560,3560 SIREG:3560,3560 DIREG:3560,3560 AD_REGS:1780,1780 CLOBBERED_REGS:1780,1780 Q_REGS:1780,1780 NON_Q_REGS:3560,3560 TLS_GOTBASE_REGS:3560,3560 GENERAL_REGS:1780,1780 SSE_FIRST_REG:21360,21360 NO_REX_SSE_REGS:21360,21360 SSE_REGS:21360,21360 MMX_REGS:34710,34710 INT_SSE_REGS:23140,23140 ALL_REGS:377360,377360 MEM:15130,15130
  a30(r82,l1) costs: GENERAL_REGS:1780,1780 SSE_FIRST_REG:21360,21360 NO_REX_SSE_REGS:21360,21360 SSE_REGS:21360,21360 MMX_REGS:34710,34710 INT_SSE_REGS:23140,23140 ALL_REGS:377360,377360 MEM:16020,16020
  a31(r87,l1) costs: GENERAL_REGS:1780,1780 SSE_FIRST_REG:42720,42720 NO_REX_SSE_REGS:42720,42720 SSE_REGS:42720,42720 MMX_REGS:69420,69420 INT_SSE_REGS:57850,57850 ALL_REGS:943400,943400 MEM:28480,28480
  a32(r104,l1) costs: AREG:1780,1780 DREG:3560,3560 CREG:3560,3560 BREG:3560,3560 SIREG:3560,3560 DIREG:3560,3560 AD_REGS:1780,1780 CLOBBERED_REGS:1780,1780 Q_REGS:1780,1780 NON_Q_REGS:3560,3560 TLS_GOTBASE_REGS:3560,3560 GENERAL_REGS:1780,1780 SSE_FIRST_REG:14240,14240 NO_REX_SSE_REGS:14240,14240 SSE_REGS:14240,14240 MMX_REGS:23140,23140 INT_SSE_REGS:11570,11570 ALL_REGS:188680,188680 MEM:10680,10680
  a33(r89,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:14240,14240 NO_REX_SSE_REGS:14240,14240 SSE_REGS:14240,14240 MMX_REGS:23140,23140 INT_SSE_REGS:23140,23140 ALL_REGS:288360,288360 MEM:9790,9790
  a34(r88,l1) costs: AREG:3560,3560 DREG:3560,3560 CREG:3560,3560 BREG:3560,3560 SIREG:1780,-890 DIREG:3560,3560 AD_REGS:3560,3560 CLOBBERED_REGS:1780,1780 Q_REGS:3560,3560 NON_Q_REGS:1780,1780 TLS_GOTBASE_REGS:1780,1780 GENERAL_REGS:1780,1780 SSE_FIRST_REG:21360,21360 NO_REX_SSE_REGS:21360,21360 SSE_REGS:21360,21360 MMX_REGS:33820,33820 INT_SSE_REGS:22250,22250 ALL_REGS:283020,283020 MEM:16020,16020
  a35(r102,l1) costs: AREG:7120,7120 DREG:3560,890 CREG:7120,7120 BREG:7120,7120 SIREG:7120,7120 DIREG:7120,7120 AD_REGS:3560,3560 CLOBBERED_REGS:3560,3560 Q_REGS:3560,3560 NON_Q_REGS:7120,7120 TLS_GOTBASE_REGS:3560,3560 GENERAL_REGS:3560,3560 SSE_FIRST_REG:35600,35600 NO_REX_SSE_REGS:35600,35600 SSE_REGS:35600,35600 MMX_REGS:56960,56960 INT_SSE_REGS:33820,33820 ALL_REGS:471700,471700 MEM:26700,26700
  a36(r118,l1) costs: AREG:1780,-890 DREG:3560,3560 CREG:3560,3560 BREG:3560,3560 SIREG:3560,3560 DIREG:3560,3560 AD_REGS:1780,1780 CLOBBERED_REGS:1780,1780 Q_REGS:1780,1780 NON_Q_REGS:3560,3560 TLS_GOTBASE_REGS:3560,3560 GENERAL_REGS:1780,1780 SSE_FIRST_REG:21360,21360 NO_REX_SSE_REGS:21360,21360 SSE_REGS:21360,21360 MMX_REGS:34710,34710 INT_SSE_REGS:23140,23140 ALL_REGS:377360,377360 MEM:15130,15130

   Insn 158(l0): point = 0
   Insn 157(l0): point = 2
   Insn 7(l0): point = 5
   Insn 151(l0): point = 7
   Insn 150(l0): point = 9
   Insn 149(l0): point = 11
   Insn 148(l0): point = 13
   Insn 147(l0): point = 15
   Insn 192(l0): point = 18
   Insn 119(l0): point = 20
   Insn 195(l0): point = 23
   Insn 116(l0): point = 26
   Insn 115(l0): point = 28
   Insn 109(l0): point = 30
   Insn 188(l0): point = 32
   Insn 108(l0): point = 34
   Insn 107(l0): point = 36
   Insn 106(l0): point = 38
   Insn 105(l0): point = 40
   Insn 104(l0): point = 42
   Insn 103(l0): point = 44
   Insn 96(l0): point = 47
   Insn 95(l0): point = 49
   Insn 93(l0): point = 52
   Insn 92(l0): point = 54
   Insn 6(l0): point = 56
   Insn 91(l0): point = 58
   Insn 88(l0): point = 60
   Insn 87(l0): point = 62
   Insn 84(l0): point = 64
   Insn 83(l0): point = 66
   Insn 190(l0): point = 69
   Insn 74(l0): point = 71
   Insn 5(l0): point = 74
   Insn 49(l0): point = 77
   Insn 48(l0): point = 79
   Insn 47(l0): point = 81
   Insn 41(l0): point = 83
   Insn 186(l0): point = 85
   Insn 40(l0): point = 87
   Insn 39(l0): point = 89
   Insn 38(l0): point = 91
   Insn 30(l0): point = 94
   Insn 29(l0): point = 96
   Insn 28(l0): point = 98
   Insn 25(l0): point = 101
   Insn 24(l0): point = 103
   Insn 8(l0): point = 105
   Insn 22(l0): point = 108
   Insn 21(l0): point = 110
   Insn 19(l0): point = 113
   Insn 18(l0): point = 115
   Insn 17(l0): point = 117
   Insn 16(l0): point = 119
   Insn 13(l0): point = 122
   Insn 12(l0): point = 124
   Insn 3(l0): point = 126
   Insn 185(l0): point = 128
   Insn 2(l0): point = 130
   Insn 184(l0): point = 132
   Insn 139(l2): point = 135
   Insn 138(l2): point = 137
   Insn 135(l2): point = 139
   Insn 133(l2): point = 141
   Insn 132(l2): point = 143
   Insn 131(l2): point = 145
   Insn 130(l2): point = 147
   Insn 129(l2): point = 149
   Insn 189(l2): point = 151
   Insn 128(l2): point = 153
   Insn 127(l2): point = 155
   Insn 70(l1): point = 158
   Insn 69(l1): point = 160
   Insn 67(l1): point = 162
   Insn 63(l1): point = 164
   Insn 62(l1): point = 166
   Insn 61(l1): point = 168
   Insn 60(l1): point = 170
   Insn 59(l1): point = 172
   Insn 187(l1): point = 174
   Insn 58(l1): point = 176
   Insn 57(l1): point = 178
   Insn 56(l1): point = 180
   Insn 55(l1): point = 182
   Insn 54(l1): point = 184
   Insn 53(l1): point = 186
 a0(r104): [101..105] [69..83] [18..30] [3..5]
 a1(r106): [108..126] [52..68] [26..49] [16..17]
 a2(r96): [21..38]
 a3(r98): [26..60]
 a4(r101): [26..64]
 a5(r119): [31..32]
 a6(r113): [39..40]
 a7(r99): [52..56] [41..47]
 a8(r112): [41..42]
 a9(r111): [43..44]
 a10(r92): [50..58]
 a11(r82): [99..119] [74..93] [59..68]
 a12(r110): [61..62]
 a13(r109): [65..66]
 a14(r89): [77..81] [72..73]
 a15(r87): [74..74]
 a16(r117): [84..85]
 a17(r108): [90..91]
 a18(r107): [97..98]
 a19(r83): [104..117]
 a20(r105): [120..130]
 a21(r116): [127..128]
 a22(r115): [131..132]
 a23(r96): [135..157]
 a24(r98): [135..157]
 a25(r101): [135..157]
 a26(r104): [135..157]
 a27(r106): [135..157]
 a28(r97): [146..149]
 a29(r120): [150..151]
 a30(r82): [158..188]
 a31(r87): [158..188]
 a32(r104): [158..188]
 a33(r89): [158..162]
 a34(r88): [169..172]
 a35(r102): [171..186]
 a36(r118): [173..174]
 Rebuilding regno allocno list for 120
 Rebuilding regno allocno list for 118
      Moving ranges of a27r106 to a1r106:  [135..157]
      Moving ranges of a32r104 to a0r104:  [158..188]
      Moving ranges of a26r104 to a0r104:  [135..157]
 Rebuilding regno allocno list for 102
      Moving ranges of a25r101 to a4r101:  [135..157]
      Moving ranges of a24r98 to a3r98:  [135..157]
 Rebuilding regno allocno list for 97
      Moving ranges of a23r96 to a2r96:  [135..157]
      Moving ranges of a33r89 to a14r89:  [158..162]
 Rebuilding regno allocno list for 88
      Moving ranges of a31r87 to a15r87:  [158..188]
      Moving ranges of a30r82 to a11r82:  [158..188]
Compressing live ranges: from 189 to 53 - 28%
Ranges after the compression:
 a0(r104): [43..52] [33..34] [22..26] [4..5] [0..1]
 a1(r106): [43..46] [35..38] [2..21]
 a2(r96): [43..46] [4..7]
 a3(r98): [43..46] [4..17]
 a4(r101): [43..46] [4..19]
 a5(r119): [6..7]
 a6(r113): [8..9]
 a7(r99): [10..15]
 a8(r112): [10..11]
 a9(r111): [12..13]
 a10(r92): [14..15]
 a11(r82): [47..52] [33..36] [24..30] [16..21]
 a12(r110): [18..19]
 a13(r109): [20..21]
 a14(r89): [47..48] [25..26] [22..23]
 a15(r87): [47..52] [24..24]
 a16(r117): [27..28]
 a17(r108): [29..30]
 a18(r107): [31..32]
 a19(r83): [33..36]
 a20(r105): [37..40]
 a21(r116): [39..40]
 a22(r115): [41..42]
 a28(r97): [43..44]
 a29(r120): [45..46]
 a34(r88): [49..50]
 a35(r102): [49..52]
 a36(r118): [51..52]
+++Allocating 224 bytes for conflict table (uncompressed size 296)
;; a0(r104,l0) conflicts: a1(r106,l0) a2(r96,l0) a3(r98,l0) a4(r101,l0) a11(r82,l0) a14(r89,l0) a15(r87,l0) a19(r83,l0) a28(r97,l0) a29(r120,l0) a34(r88,l0) a35(r102,l0) a36(r118,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a1(r106,l0) conflicts: a0(r104,l0) a2(r96,l0) a3(r98,l0) a4(r101,l0) a5(r119,l0) a9(r111,l0) a10(r92,l0) a11(r82,l0) a12(r110,l0) a13(r109,l0) a19(r83,l0) a20(r105,l0) a28(r97,l0) a29(r120,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a2(r96,l0) conflicts: a0(r104,l0) a1(r106,l0) a3(r98,l0) a4(r101,l0) a5(r119,l0) a28(r97,l0) a29(r120,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a3(r98,l0) conflicts: a0(r104,l0) a1(r106,l0) a2(r96,l0) a4(r101,l0) a5(r119,l0) a9(r111,l0) a10(r92,l0) a11(r82,l0) a28(r97,l0) a29(r120,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a4(r101,l0) conflicts: a0(r104,l0) a1(r106,l0) a2(r96,l0) a3(r98,l0) a5(r119,l0) a9(r111,l0) a10(r92,l0) a11(r82,l0) a12(r110,l0) a28(r97,l0) a29(r120,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a5(r119,l0) conflicts: a1(r106,l0) a2(r96,l0) a3(r98,l0) a4(r101,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r113,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r99,l0) conflicts: a8(r112,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r112,l0) conflicts: a7(r99,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r111,l0) conflicts: a1(r106,l0) a3(r98,l0) a4(r101,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r92,l0) conflicts: a1(r106,l0) a3(r98,l0) a4(r101,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r82,l0) conflicts: a0(r104,l0) a1(r106,l0) a3(r98,l0) a4(r101,l0) a12(r110,l0) a13(r109,l0) a14(r89,l0) a15(r87,l0) a16(r117,l0) a17(r108,l0) a19(r83,l0) a34(r88,l0) a35(r102,l0) a36(r118,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a12(r110,l0) conflicts: a1(r106,l0) a4(r101,l0) a11(r82,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r109,l0) conflicts: a1(r106,l0) a11(r82,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r89,l0) conflicts: a0(r104,l0) a11(r82,l0) a15(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r87,l0) conflicts: a0(r104,l0) a11(r82,l0) a14(r89,l0) a34(r88,l0) a35(r102,l0) a36(r118,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a16(r117,l0) conflicts: a11(r82,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r108,l0) conflicts: a11(r82,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r107,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r83,l0) conflicts: a0(r104,l0) a1(r106,l0) a11(r82,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r105,l0) conflicts: a1(r106,l0) a21(r116,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a21(r116,l0) conflicts: a20(r105,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r115,l0) conflicts:
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a28(r97,l0) conflicts: a0(r104,l0) a1(r106,l0) a2(r96,l0) a3(r98,l0) a4(r101,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a29(r120,l0) conflicts: a0(r104,l0) a1(r106,l0) a2(r96,l0) a3(r98,l0) a4(r101,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a34(r88,l0) conflicts: a0(r104,l0) a11(r82,l0) a15(r87,l0) a35(r102,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a35(r102,l0) conflicts: a0(r104,l0) a11(r82,l0) a15(r87,l0) a34(r88,l0) a36(r118,l0)
;;     total conflict hard regs: 0 1 5
;;     conflict hard regs: 0 1 5

;; a36(r118,l0) conflicts: a0(r104,l0) a11(r82,l0) a15(r87,l0) a35(r102,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a28(r97)<->a29(r120)@890:move
  cp1:a8(r112)<->a9(r111)@13:shuffle
  cp2:a6(r113)<->a8(r112)@110:constraint
  cp3:a2(r96)<->a6(r113)@13:shuffle
  cp4:a0(r104)<->a5(r119)@110:move
  cp5:a34(r88)<->a36(r118)@890:move
  cp6:a0(r104)<->a16(r117)@110:move
  cp7:a20(r105)<->a22(r115)@611:move
  cp8:a1(r106)<->a21(r116)@611:move
  pref0:a29(r120)<-hr0@1335
  pref1:a5(r119)<-hr0@165
  pref2:a36(r118)<-hr0@1335
  pref3:a16(r117)<-hr0@165
  pref4:a21(r116)<-hr4@916
  pref5:a22(r115)<-hr5@916
  pref6:a17(r108)<-hr5@165
  pref7:a18(r107)<-hr5@165
  pref8:a1(r106)<-hr1@256
  pref9:a0(r104)<-hr0@751
  pref10:a35(r102)<-hr1@1335
  pref11:a28(r97)<-hr4@1335
  pref12:a34(r88)<-hr4@1335
  regions=3, blocks=19, points=53
    allocnos=37 (big 0), copies=9, conflicts=0, ranges=43

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r104 1r106 2r96 3r98 4r101 5r119 6r113 7r99 8r112 9r111 10r92 11r82 12r110 13r109 14r89 15r87 16r117 17r108 18r107 19r83 20r105 21r116 22r115 28r97 29r120 34r88 35r102 36r118
    modified regnos: 82 83 87 88 89 92 96 97 98 99 101 102 104 105 106 107 108 109 110 111 112 113 115 116 117 118 119 120
    border:
    Pressure: GENERAL_REGS=8 SSE_REGS=2
 Removing pref9:hr0@751
 Removing pref8:hr1@256
 Removing pref10:hr1@1335
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 20-27 44-51)@8624
        2:( 0-6 36-43)@147720
          3:( 0 2-6 36-43)@67640
            4:( 2-4 6 36-43)@46280
              5:( 2 3 6 36-43)@200612
                6:( 3 6 40-43)@82612
      Allocno a0r104 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 1 4 5 7-35 44-74)
      Allocno a1r106 of GENERAL_REGS(15) has 11 avail. regs  2 3 6 36-43, node:  2 3 6 36-43 (confl regs =  0 1 4 5 7-35 44-74)
      Allocno a2r96 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 1 4 5 7-35 44-74)
      Allocno a3r98 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 1 4 5 7-35 44-74)
      Allocno a4r101 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 36-43, ^node:  0-6 36-43 (confl regs =  0 4 5 7-35 44-74)
      Allocno a5r119 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a6r113 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a7r99 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a8r112 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a9r111 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a10r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a11r82 of GENERAL_REGS(15) has 11 avail. regs  2 3 6 36-43, node:  2 3 6 36-43 (confl regs =  0 1 4 5 7-35 44-74)
      Allocno a12r110 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a13r109 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a14r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a15r87 of GENERAL_REGS(15) has 11 avail. regs  2 3 6 36-43, node:  2 3 6 36-43 (confl regs =  0 1 4 5 7-35 44-74)
      Allocno a16r117 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a17r108 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a18r107 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a19r83 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a20r105 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, ^node:  0-6 36-43 (confl regs =  4 7-35 44-74)
      Allocno a21r116 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a22r115 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, ^node:  0-6 36-43 (confl regs =  4 7-35 44-74)
      Allocno a28r97 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 36-43, node:  0 2-6 36-43 (confl regs =  1 7-35 44-74)
      Allocno a29r120 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a34r88 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 36-43, node:  0 2-6 36-43 (confl regs =  1 7-35 44-74)
      Allocno a35r102 of GENERAL_REGS(15) has 12 avail. regs  2-4 6 36-43, node:  2-4 6 36-43 (confl regs =  0 1 5 7-35 44-74)
      Allocno a36r118 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Forming thread by copy 0:a28r97-a29r120 (freq=890):
        Result (freq=3560): a28r97(1780) a29r120(1780)
      Forming thread by copy 5:a34r88-a36r118 (freq=890):
        Result (freq=3560): a34r88(1780) a36r118(1780)
      Forming thread by copy 7:a20r105-a22r115 (freq=611):
        Result (freq=2273): a20r105(1051) a22r115(1222)
      Forming thread by copy 2:a6r113-a8r112 (freq=110):
        Result (freq=440): a6r113(220) a8r112(220)
      Forming thread by copy 1:a8r112-a9r111 (freq=13):
        Result (freq=660): a6r113(220) a9r111(220) a8r112(220)
      Pushing a18(r107,l0)(cost 0)
      Pushing a17(r108,l0)(cost 0)
      Pushing a16(r117,l0)(cost 0)
      Pushing a13(r109,l0)(cost 0)
      Pushing a12(r110,l0)(cost 0)
        Making a11(r82,l0) colorable
      Pushing a5(r119,l0)(cost 0)
      Pushing a10(r92,l0)(cost 0)
      Forming thread by copy 8:a1r106-a21r116 (freq=611):
        Result (freq=3659): a1r106(2437) a21r116(1222)
        Making a1(r106,l0) colorable
      Pushing a7(r99,l0)(cost 0)
      Pushing a8(r112,l0)(cost 0)
      Pushing a6(r113,l0)(cost 0)
      Pushing a9(r111,l0)(cost 0)
      Pushing a21(r116,l0)(cost 0)
      Pushing a19(r83,l0)(cost 0)
      Pushing a14(r89,l0)(cost 0)
      Pushing a20(r105,l0)(cost 0)
      Pushing a22(r115,l0)(cost 0)
      Pushing a35(r102,l0)(cost 0)
      Pushing a11(r82,l0)(cost 25460)
      Pushing a36(r118,l0)(cost 0)
      Pushing a34(r88,l0)(cost 0)
      Pushing a29(r120,l0)(cost 0)
      Forming thread by copy 3:a2r96-a6r113 (freq=13):
        Result (freq=990): a2r96(330) a6r113(220) a9r111(220) a8r112(220)
        Making a2(r96,l0) colorable
        Making a3(r98,l0) colorable
      Pushing a2(r96,l0)(cost 2420)
      Forming thread by copy 4:a0r104-a5r119 (freq=110):
        Result (freq=3552): a0r104(3332) a5r119(220)
      Forming thread by copy 6:a0r104-a16r117 (freq=110):
        Result (freq=3772): a0r104(3332) a16r117(220) a5r119(220)
        Making a0(r104,l0) colorable
      Pushing a3(r98,l0)(cost 6210)
      Pushing a28(r97,l0)(cost 0)
      Pushing a1(r106,l0)(cost 13805)
      Pushing a0(r104,l0)(cost 32676)
      Pushing a15(r87,l0)(cost 0)
      Pushing a4(r101,l0)(cost 0)
      Popping a4(r101,l0)  -- assign reg 3
      Popping a15(r87,l0)  -- assign reg 3
      Popping a0(r104,l0)  -- assign reg 40
      Popping a1(r106,l0)  -- assign reg 41
      Popping a28(r97,l0)  -- assign reg 4
      Popping a3(r98,l0)  -- assign reg 6
      Popping a2(r96,l0)  -- assign reg 42
      Popping a29(r120,l0)  -- assign reg 0
      Popping a34(r88,l0)  -- assign reg 4
      Popping a36(r118,l0)  -- assign reg 0
      Popping a11(r82,l0)  -- assign reg 42
      Popping a35(r102,l0)  -- assign reg 41
      Popping a22(r115,l0)  -- assign reg 5
      Popping a20(r105,l0)  -- assign reg 5
      Popping a14(r89,l0)  -- assign reg 0
      Popping a19(r83,l0)  -- assign reg 0
      Popping a21(r116,l0)  -- assign reg 4
      Popping a9(r111,l0)  -- assign reg 0
      Popping a6(r113,l0)  -- assign reg 20
      Popping a8(r112,l0)  -- assign reg 20
      Popping a7(r99,l0)  -- assign reg 21
      Popping a10(r92,l0)  -- assign reg 0
      Popping a5(r119,l0)  -- assign reg 0
      Popping a12(r110,l0)  -- assign reg 0
      Popping a13(r109,l0)  -- assign reg 0
      Popping a16(r117,l0)  -- assign reg 0
      Popping a17(r108,l0)  -- assign reg 5
      Popping a18(r107,l0)  -- assign reg 5
Disposition:
   11:r82  l0    42   19:r83  l0     0   15:r87  l0     3   34:r88  l0     4
   14:r89  l0     0   10:r92  l0     0    2:r96  l0    42   28:r97  l0     4
    3:r98  l0     6    7:r99  l0    21    4:r101 l0     3   35:r102 l0    41
    0:r104 l0    40   20:r105 l0     5    1:r106 l0    41   18:r107 l0     5
   17:r108 l0     5   13:r109 l0     0   12:r110 l0     0    9:r111 l0     0
    8:r112 l0    20    6:r113 l0    20   22:r115 l0     5   21:r116 l0     4
   16:r117 l0     0   36:r118 l0     0    5:r119 l0     0   29:r120 l0     0
New iteration of spill/restore move
+++Costs: overall 7682, reg 7682, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_tuple

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={11d,7u} r1={13d,4u} r2={9d} r4={13d,5u} r5={17d,9u} r6={1d,18u} r7={1d,26u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r16={1d,17u} r17={20d,9u} r18={8d} r19={1d,18u} r20={9d} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={9d} r37={9d} r38={8d} r39={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r82={1d,11u,3e} r83={1d,3u} r87={2d,6u} r88={1d,1u} r89={2d,3u} r92={1d,2u} r96={1d,2u} r97={1d,1u} r98={1d,5u} r99={2d,2u} r101={2d,11u} r102={1d,2u} r104={4d,7u} r105={1d,1u} r106={2d,5u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} 
;;    total ref usage 812{621d,188u,3e} in 128{120 regular + 8 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 656996803 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [always]  count:656996803 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 105 106 115 116
(note 9 1 184 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 184 9 2 2 (set (reg:DI 115)
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_stl.c":99:39 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ arg ])
        (nil)))
(insn 2 184 185 2 (set (reg/v/f:DI 105 [ arg ])
        (reg:DI 115)) "cmodules/fbgc_stl.c":99:39 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 115)
        (nil)))
(insn 185 2 3 2 (set (reg:SI 116)
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_stl.c":99:39 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ argc ])
        (nil)))
(insn 3 185 4 2 (set (reg/v:SI 106 [ argc ])
        (reg:SI 116)) "cmodules/fbgc_stl.c":99:39 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 116)
        (nil)))
(note 4 3 11 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 11 4 12 2 (debug_marker) "cmodules/fbgc_stl.c":100:2 -1
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 106 [ argc ])
            (const_int 1 [0x1]))) "cmodules/fbgc_stl.c":100:4 11 {*cmpsi_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) "cmodules/fbgc_stl.c":100:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 301614084 (nil)))
 -> 144)
;;  succ:       3 [71.9% (guessed)]  count:472446400 (estimated locally) (FALLTHRU)
;;              17 [28.1% (guessed)]  count:184550403 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 105 106

;; basic block 3, loop depth 0, count 472446400 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [71.9% (guessed)]  count:472446400 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 105 106
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 105
;; lr  def 	 17 [flags] 82 83
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 15 14 16 3 (debug_marker) "cmodules/fbgc_stl.c":101:3 -1
     (nil))
(insn 16 15 17 3 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (reg/v/f:DI 105 [ arg ]) [1 *arg_29(D)+0 S8 A64])) "cmodules/fbgc_stl.c":101:13 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 105 [ arg ])
        (nil)))
(insn 17 16 18 3 (set (reg:QI 83 [ _2 ])
        (mem:QI (reg/f:DI 82 [ _1 ]) [0 _1->type+0 S1 A8])) "cmodules/fbgc_stl.c":101:16 69 {*movqi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _2 ])
            (const_int 6 [0x6]))) "cmodules/fbgc_stl.c":101:3 9 {*cmpqi_1}
     (nil))
(jump_insn 19 18 20 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "cmodules/fbgc_stl.c":101:3 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 268435462 (nil)))
 -> 33)
;;  succ:       4 [75.0% (adjusted)]  count:354334800 (estimated locally) (FALLTHRU)
;;              7 [25.0% (adjusted)]  count:118111600 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 106

;; basic block 4, loop depth 0, count 472446400 (estimated locally), maybe hot
;; Invalid sum of incoming counts 354334800 (estimated locally), should be 472446400 (estimated locally)
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [75.0% (adjusted)]  count:354334800 (estimated locally) (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(6){ }u17(7){ }u18(16){ }u19(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 106
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  def 	 17 [flags]
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _2 ])
            (const_int 14 [0xe]))) "cmodules/fbgc_stl.c":101:3 9 {*cmpqi_1}
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) "cmodules/fbgc_stl.c":101:3 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 357913950 (nil)))
 -> 78)
;;  succ:       5 [66.7% (adjusted)]  count:314964265 (estimated locally) (FALLTHRU)
;;              11 [33.3% (adjusted)]  count:157482135 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 106

;; basic block 5, loop depth 0, count 472446400 (estimated locally), maybe hot
;; Invalid sum of incoming counts 314964265 (estimated locally), should be 472446400 (estimated locally)
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [66.7% (adjusted)]  count:314964265 (estimated locally) (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(6){ }u23(7){ }u24(16){ }u25(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  def 	 17 [flags] 104
(note 23 22 8 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 8 23 24 5 (set (reg/v/f:DI 104 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_stl.c":101:3 66 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 24 8 25 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _2 ])
            (const_int 3 [0x3]))) "cmodules/fbgc_stl.c":101:3 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 83 [ _2 ])
        (nil)))
(jump_insn 25 24 26 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 156)
            (pc))) "cmodules/fbgc_stl.c":101:3 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 715827886 (nil)))
 -> 156)
;;  succ:       18 [66.7% (adjusted)]  count:314964265 (estimated locally)
;;              6 [33.3% (adjusted)]  count:157482135 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 104

;; basic block 6, loop depth 0, count 118111600 (estimated locally), maybe hot
;; Invalid sum of incoming counts 157482135 (estimated locally), should be 118111600 (estimated locally)
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [33.3% (adjusted)]  count:157482135 (estimated locally) (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u28(6){ }u29(7){ }u30(16){ }u31(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 107
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 27 26 28 6 (debug_marker) "cmodules/fbgc_stl.c":104:5 -1
     (nil))
(insn 28 27 29 6 (set (reg:SI 107 [ MEM[(struct fbgc_int_object *)_1].content ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 9 [0x9])) [6 MEM[(struct fbgc_int_object *)_1].content+0 S4 A8])) "cmodules/fbgc_stl.c":104:12 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 82 [ _1 ])
        (nil)))
(insn 29 28 30 6 (set (reg:SI 5 di)
        (reg:SI 107 [ MEM[(struct fbgc_int_object *)_1].content ])) "cmodules/fbgc_stl.c":104:12 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 107 [ MEM[(struct fbgc_int_object *)_1].content ])
        (nil)))
(call_insn/j 30 29 31 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80bc00 new_fbgc_tuple_object>) [0 new_fbgc_tuple_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":104:12 681 {*sibcall_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80bc00 new_fbgc_tuple_object>)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:118111600 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 31 30 33)
;; basic block 7, loop depth 0, count 118111600 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [25.0% (adjusted)]  count:118111600 (estimated locally)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u36(6){ }u37(7){ }u38(16){ }u39(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 89 104 108 117
(code_label 33 31 34 7 5 (nil) [1 uses])
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 35 34 36 7 (debug_marker) "cmodules/fbgc_stl.c":108:5 -1
     (nil))
(debug_insn 36 35 37 7 (var_location:DI s (reg/f:DI 82 [ _1 ])) "cmodules/fbgc_stl.c":108:26 -1
     (nil))
(debug_insn 37 36 38 7 (debug_marker) "cmodules/fbgc_stl.c":109:5 -1
     (nil))
(insn 38 37 39 7 (set (reg:SI 108 [ MEM[(struct fbgc_str_object *)_1].len ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 9 [0x9])) [6 MEM[(struct fbgc_str_object *)_1].len+0 S4 A8])) "cmodules/fbgc_stl.c":109:31 67 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 9 [0x9])) [6 MEM[(struct fbgc_str_object *)_1].len+0 S4 A8])
        (nil)))
(insn 39 38 40 7 (set (reg:SI 5 di)
        (reg:SI 108 [ MEM[(struct fbgc_str_object *)_1].len ])) "cmodules/fbgc_stl.c":109:31 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 108 [ MEM[(struct fbgc_str_object *)_1].len ])
        (nil)))
(call_insn 40 39 186 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80bc00 new_fbgc_tuple_object>) [0 new_fbgc_tuple_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":109:31 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80bc00 new_fbgc_tuple_object>)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 186 40 41 7 (set (reg:DI 117)
        (reg:DI 0 ax)) "cmodules/fbgc_stl.c":109:31 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 41 186 42 7 (set (reg/v/f:DI 104 [ <retval> ])
        (reg:DI 117)) "cmodules/fbgc_stl.c":109:31 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 117)
        (nil)))
(debug_insn 42 41 43 7 (var_location:DI t (reg/v/f:DI 104 [ <retval> ])) "cmodules/fbgc_stl.c":109:31 -1
     (nil))
(debug_insn 43 42 44 7 (debug_marker) "cmodules/fbgc_stl.c":110:5 -1
     (nil))
(debug_insn 44 43 45 7 (debug_marker) "cmodules/fbgc_stl.c":110:9 -1
     (nil))
(debug_insn 45 44 46 7 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 46 45 47 7 (debug_marker) "cmodules/fbgc_stl.c":110:20 -1
     (nil))
(insn 47 46 48 7 (set (reg:SI 89 [ _8 ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 9 [0x9])) [6 MEM[(struct fbgc_str_object *)_1].len+0 S4 A8])) "cmodules/fbgc_stl.c":110:24 67 {*movsi_internal}
     (nil))
(insn 48 47 49 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _8 ])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":110:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 49 48 164 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 71)
            (pc))) "cmodules/fbgc_stl.c":110:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 71)
;;  succ:       8 [89.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU)
;;              10 [11.0% (guessed)]  count:12992276 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 89 104

;; basic block 8, loop depth 0, count 105119324 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [89.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u50(6){ }u51(7){ }u52(16){ }u53(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 87
(note 164 49 5 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 5 164 68 8 (set (reg/v:SI 87 [ _6 ])
        (const_int 0 [0])) "cmodules/fbgc_stl.c":110:13 67 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       9 [always]  count:105119324 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 87 104

;; basic block 9, loop depth 1, count 955630224 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (HOT_PARTITION, RTL)
;;  pred:       8 [always]  count:105119324 (estimated locally) (FALLTHRU)
;;              9 [89.0% (guessed)]  count:850510900 (estimated locally) (DFS_BACK)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u54(6){ }u55(7){ }u56(16){ }u57(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 87 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 87 104
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 87 88 89 102 118
(code_label 68 5 50 9 9 (nil) [1 uses])
(note 50 68 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 51 50 52 9 (var_location:SI i (reg/v:SI 87 [ _6 ])) -1
     (nil))
(debug_insn 52 51 53 9 (debug_marker) "cmodules/fbgc_stl.c":111:6 -1
     (nil))
(insn 53 52 54 9 (set (reg/v:SI 102 [ i ])
        (reg/v:SI 87 [ _6 ])) 67 {*movsi_internal}
     (nil))
(insn 54 53 55 9 (parallel [
            (set (reg/v:SI 87 [ _6 ])
                (plus:SI (reg/v:SI 87 [ _6 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":111:6 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 55 54 56 9 (set (reg:SI 1 dx)
        (reg/v:SI 87 [ _6 ])) "cmodules/fbgc_stl.c":111:6 67 {*movsi_internal}
     (nil))
(insn 56 55 57 9 (set (reg:SI 4 si)
        (reg/v:SI 102 [ i ])) "cmodules/fbgc_stl.c":111:6 67 {*movsi_internal}
     (nil))
(insn 57 56 58 9 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _1 ])) "cmodules/fbgc_stl.c":111:6 66 {*movdi_internal}
     (nil))
(call_insn 58 57 187 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_object_in_fbgc_str_object") [flags 0x41]  <function_decl 0x7f626c806400 get_object_in_fbgc_str_object>) [0 get_object_in_fbgc_str_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":111:6 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("get_object_in_fbgc_str_object") [flags 0x41]  <function_decl 0x7f626c806400 get_object_in_fbgc_str_object>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 187 58 59 9 (set (reg:DI 118)
        (reg:DI 0 ax)) "cmodules/fbgc_stl.c":111:6 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 59 187 60 9 (set (reg/f:DI 88 [ _7 ])
        (reg:DI 118)) "cmodules/fbgc_stl.c":111:6 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 118)
        (nil)))
(insn 60 59 61 9 (set (reg:SI 1 dx)
        (reg/v:SI 102 [ i ])) "cmodules/fbgc_stl.c":111:6 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 102 [ i ])
        (nil)))
(insn 61 60 62 9 (set (reg:DI 4 si)
        (reg/f:DI 88 [ _7 ])) "cmodules/fbgc_stl.c":111:6 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _7 ])
        (nil)))
(insn 62 61 63 9 (set (reg:DI 5 di)
        (reg/v/f:DI 104 [ <retval> ])) "cmodules/fbgc_stl.c":111:6 66 {*movdi_internal}
     (nil))
(call_insn 63 62 64 9 (call (mem:QI (symbol_ref:DI ("set_object_in_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80be00 set_object_in_fbgc_tuple_object>) [0 set_object_in_fbgc_tuple_object S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_stl.c":111:6 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("set_object_in_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80be00 set_object_in_fbgc_tuple_object>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(debug_insn 64 63 65 9 (debug_marker) "cmodules/fbgc_stl.c":110:52 -1
     (nil))
(debug_insn 65 64 66 9 (var_location:SI i (reg/v:SI 87 [ _6 ])) -1
     (nil))
(debug_insn 66 65 67 9 (debug_marker) "cmodules/fbgc_stl.c":110:20 -1
     (nil))
(insn 67 66 69 9 (set (reg:SI 89 [ _8 ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 9 [0x9])) [6 MEM[(struct fbgc_str_object *)_1].len+0 S4 A8])) "cmodules/fbgc_stl.c":110:24 67 {*movsi_internal}
     (nil))
(insn 69 67 70 9 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 89 [ _8 ])
            (reg/v:SI 87 [ _6 ]))) "cmodules/fbgc_stl.c":110:5 11 {*cmpsi_1}
     (nil))
(jump_insn 70 69 71 9 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 68)
            (pc))) "cmodules/fbgc_stl.c":110:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 68)
;;  succ:       9 [89.0% (guessed)]  count:850510900 (estimated locally) (DFS_BACK)
;;              10 [11.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 87 89 104

;; basic block 10, loop depth 0, count 118111601 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [11.0% (guessed)]  count:12992276 (estimated locally)
;;              9 [11.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU,LOOP_EXIT)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u81(6){ }u82(7){ }u83(16){ }u84(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 89 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 89 104
;; lr  def 	
(code_label 71 70 72 10 8 (nil) [1 uses])
(note 72 71 73 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 73 72 74 10 (debug_marker) "cmodules/fbgc_stl.c":113:5 -1
     (nil))
(insn 74 73 75 10 (set (mem:SI (plus:DI (reg/v/f:DI 104 [ <retval> ])
                (const_int 13 [0xd])) [6 MEM[(struct fbgc_tuple_object *)t_42].size+0 S4 A8])
        (reg:SI 89 [ _8 ])) "cmodules/fbgc_stl.c":113:31 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ _8 ])
        (nil)))
(debug_insn 75 74 190 10 (debug_marker) "cmodules/fbgc_stl.c":115:5 -1
     (nil))
(jump_insn 190 75 191 10 (set (pc)
        (label_ref 156)) "cmodules/fbgc_stl.c":115:12 660 {jump}
     (nil)
 -> 156)
;;  succ:       18 [always]  count:118111601 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 104

(barrier 191 190 78)
;; basic block 11, loop depth 0, count 118111600 (estimated locally), maybe hot
;; Invalid sum of incoming counts 157482135 (estimated locally), should be 118111600 (estimated locally)
;;  prev block 10, next block 12, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [33.3% (adjusted)]  count:157482135 (estimated locally)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u87(6){ }u88(7){ }u89(16){ }u90(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 106
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82
;; lr  def 	 17 [flags] 92 98 99 101 109 110
(code_label 78 191 79 11 6 (nil) [1 uses])
(note 79 78 80 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 80 79 81 11 (debug_marker) "cmodules/fbgc_stl.c":120:5 -1
     (nil))
(debug_insn 81 80 82 11 (var_location:DI ran (reg/f:DI 82 [ _1 ])) "cmodules/fbgc_stl.c":120:32 -1
     (nil))
(debug_insn 82 81 83 11 (debug_marker) "cmodules/fbgc_stl.c":121:5 -1
     (nil))
(insn 83 82 84 11 (set (reg/f:DI 109 [ MEM[(struct fbgc_range_object *)_1].start ])
        (mem/f:DI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 9 [0x9])) [1 MEM[(struct fbgc_range_object *)_1].start+0 S8 A8])) "cmodules/fbgc_stl.c":121:9 66 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 9 [0x9])) [1 MEM[(struct fbgc_range_object *)_1].start+0 S8 A8])
        (nil)))
(insn 84 83 85 11 (set (reg/v:SI 101 [ start ])
        (mem:SI (plus:DI (reg/f:DI 109 [ MEM[(struct fbgc_range_object *)_1].start ])
                (const_int 9 [0x9])) [6 MEM[(struct fbgc_int_object *)_10].content+0 S4 A8])) "cmodules/fbgc_stl.c":121:9 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 109 [ MEM[(struct fbgc_range_object *)_1].start ])
        (nil)))
(debug_insn 85 84 86 11 (var_location:SI start (reg/v:SI 101 [ start ])) "cmodules/fbgc_stl.c":121:9 -1
     (nil))
(debug_insn 86 85 87 11 (debug_marker) "cmodules/fbgc_stl.c":122:5 -1
     (nil))
(insn 87 86 88 11 (set (reg/f:DI 110 [ MEM[(struct fbgc_range_object *)_1].end ])
        (mem/f:DI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 17 [0x11])) [1 MEM[(struct fbgc_range_object *)_1].end+0 S8 A8])) "cmodules/fbgc_stl.c":122:9 66 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 17 [0x11])) [1 MEM[(struct fbgc_range_object *)_1].end+0 S8 A8])
        (nil)))
(insn 88 87 89 11 (set (reg/v:SI 98 [ end ])
        (mem:SI (plus:DI (reg/f:DI 110 [ MEM[(struct fbgc_range_object *)_1].end ])
                (const_int 9 [0x9])) [6 MEM[(struct fbgc_int_object *)_11].content+0 S4 A8])) "cmodules/fbgc_stl.c":122:9 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 110 [ MEM[(struct fbgc_range_object *)_1].end ])
        (nil)))
(debug_insn 89 88 90 11 (var_location:SI end (reg/v:SI 98 [ end ])) "cmodules/fbgc_stl.c":122:9 -1
     (nil))
(debug_insn 90 89 91 11 (debug_marker) "cmodules/fbgc_stl.c":123:5 -1
     (nil))
(insn 91 90 6 11 (set (reg/f:DI 92 [ _12 ])
        (mem/f:DI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 25 [0x19])) [1 MEM[(struct fbgc_range_object *)_1].step+0 S8 A8])) "cmodules/fbgc_stl.c":123:19 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 82 [ _1 ])
        (nil)))
(insn 6 91 92 11 (set (reg:DF 99 [ _32 ])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S8 A64])) 111 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 92 6 93 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ _12 ])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":123:38 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 93 92 94 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 97)
            (pc))) "cmodules/fbgc_stl.c":123:38 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 322122548 (nil)))
 -> 97)
;;  succ:       12 [70.0% (guessed)]  count:82678120 (estimated locally) (FALLTHRU)
;;              13 [30.0% (guessed)]  count:35433480 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 92 98 99 101 106

;; basic block 12, loop depth 0, count 82678120 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (HOT_PARTITION, RTL)
;;  pred:       11 [70.0% (guessed)]  count:82678120 (estimated locally) (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u101(6){ }u102(7){ }u103(16){ }u104(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 92 98 101
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 92
;; lr  def 	 99 106
(note 94 93 95 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 12 (set (reg/v:SI 106 [ argc ])
        (mem:SI (plus:DI (reg/f:DI 92 [ _12 ])
                (const_int 9 [0x9])) [6 MEM[(struct fbgc_int_object *)_12].content+0 S4 A8])) "cmodules/fbgc_stl.c":123:38 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ _12 ])
        (nil)))
(insn 96 95 97 12 (set (reg:DF 99 [ _32 ])
        (float:DF (reg/v:SI 106 [ argc ]))) 172 {*floatsidf2}
     (nil))
;;  succ:       13 [always]  count:82678120 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 98 99 101 106

;; basic block 13, loop depth 0, count 118111600 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (HOT_PARTITION, RTL)
;;  pred:       11 [30.0% (guessed)]  count:35433480 (estimated locally)
;;              12 [always]  count:82678120 (estimated locally) (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u107(6){ }u108(7){ }u109(16){ }u110(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 98 99 101 106
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 98 99 101
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 96 104 111 112 113 119
(code_label 97 96 98 13 10 (nil) [1 uses])
(note 98 97 99 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 99 98 100 13 (var_location:SI step (reg/v:SI 106 [ argc ])) "cmodules/fbgc_stl.c":123:9 -1
     (nil))
(debug_insn 100 99 101 13 (debug_marker) "cmodules/fbgc_stl.c":125:5 -1
     (nil))
(debug_insn 101 100 102 13 (var_location:SI sz (fix:SI (div:DF (float:DF (minus:SI (reg/v:SI 98 [ end ])
                    (reg/v:SI 101 [ start ])))
            (reg:DF 99 [ _32 ])))) "cmodules/fbgc_stl.c":125:9 -1
     (nil))
(debug_insn 102 101 103 13 (debug_marker) "cmodules/fbgc_stl.c":127:5 -1
     (nil))
(insn 103 102 104 13 (parallel [
            (set (reg:SI 111)
                (minus:SI (reg/v:SI 98 [ end ])
                    (reg/v:SI 101 [ start ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":125:26 246 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 104 103 105 13 (set (reg:DF 112)
        (float:DF (reg:SI 111))) "cmodules/fbgc_stl.c":125:14 172 {*floatsidf2}
     (expr_list:REG_DEAD (reg:SI 111)
        (nil)))
(insn 105 104 106 13 (set (reg:DF 113)
        (div:DF (reg:DF 112)
            (reg:DF 99 [ _32 ]))) "cmodules/fbgc_stl.c":125:33 822 {*fop_df_1}
     (expr_list:REG_DEAD (reg:DF 112)
        (expr_list:REG_DEAD (reg:DF 99 [ _32 ])
            (nil))))
(insn 106 105 107 13 (set (reg:SI 96 [ sz.3_17 ])
        (fix:SI (reg:DF 113))) "cmodules/fbgc_stl.c":125:9 153 {fix_truncdfsi_sse}
     (expr_list:REG_DEAD (reg:DF 113)
        (nil)))
(insn 107 106 108 13 (set (reg:SI 5 di)
        (reg:SI 96 [ sz.3_17 ])) "cmodules/fbgc_stl.c":127:31 67 {*movsi_internal}
     (nil))
(call_insn 108 107 188 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80bc00 new_fbgc_tuple_object>) [0 new_fbgc_tuple_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":127:31 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80bc00 new_fbgc_tuple_object>)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 188 108 109 13 (set (reg:DI 119)
        (reg:DI 0 ax)) "cmodules/fbgc_stl.c":127:31 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 109 188 110 13 (set (reg/v/f:DI 104 [ <retval> ])
        (reg:DI 119)) "cmodules/fbgc_stl.c":127:31 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 119)
        (nil)))
(debug_insn 110 109 111 13 (var_location:DI tp (reg/v/f:DI 104 [ <retval> ])) "cmodules/fbgc_stl.c":127:31 -1
     (nil))
(debug_insn 111 110 112 13 (debug_marker) "cmodules/fbgc_stl.c":128:5 -1
     (nil))
(debug_insn 112 111 113 13 (debug_marker) "cmodules/fbgc_stl.c":128:9 -1
     (nil))
(debug_insn 113 112 114 13 (var_location:SI i (reg/v:SI 101 [ start ])) -1
     (nil))
(debug_insn 114 113 115 13 (debug_marker) "cmodules/fbgc_stl.c":128:24 -1
     (nil))
(insn 115 114 116 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 101 [ start ])
            (reg/v:SI 98 [ end ]))) "cmodules/fbgc_stl.c":128:5 11 {*cmpsi_1}
     (nil))
(jump_insn 116 115 140 13 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 123)
            (pc))) "cmodules/fbgc_stl.c":128:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 123)
;;  succ:       15 [89.0% (guessed)]  count:105119324 (estimated locally)
;;              14 [11.0% (guessed)]  count:12992276 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96 98 101 104 106

;; basic block 14, loop depth 0, count 118111601 (estimated locally), maybe hot
;;  prev block 13, next block 15, flags: (HOT_PARTITION, RTL)
;;  pred:       13 [11.0% (guessed)]  count:12992276 (estimated locally) (FALLTHRU)
;;              16 [always]  count:105119324 (estimated locally) (LOOP_EXIT)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u130(6){ }u131(7){ }u132(16){ }u133(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96 104
;; lr  def 	
(code_label 140 116 117 14 12 (nil) [1 uses])
(note 117 140 118 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 118 117 119 14 (debug_marker) "cmodules/fbgc_stl.c":132:5 -1
     (nil))
(insn 119 118 120 14 (set (mem:SI (plus:DI (reg/v/f:DI 104 [ <retval> ])
                (const_int 13 [0xd])) [6 MEM[(struct fbgc_tuple_object *)tp_36].size+0 S4 A8])
        (reg:SI 96 [ sz.3_17 ])) "cmodules/fbgc_stl.c":132:32 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 96 [ sz.3_17 ])
        (nil)))
(debug_insn 120 119 192 14 (debug_marker) "cmodules/fbgc_stl.c":134:5 -1
     (nil))
(jump_insn 192 120 193 14 (set (pc)
        (label_ref 156)) "cmodules/fbgc_stl.c":134:12 660 {jump}
     (nil)
 -> 156)
;;  succ:       18 [always]  count:118111601 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 104

(barrier 193 192 123)
;; basic block 15, loop depth 1, count 955630224 (estimated locally), maybe hot
;;  prev block 14, next block 16, flags: (HOT_PARTITION, RTL)
;;  pred:       13 [89.0% (guessed)]  count:105119324 (estimated locally)
;;              15 [89.0% (guessed)]  count:850510900 (estimated locally) (DFS_BACK)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u136(6){ }u137(7){ }u138(16){ }u139(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96 98 101 104 106
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 98 101 104 106
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 97 101 120
(code_label 123 193 124 15 11 (nil) [2 uses])
(note 124 123 125 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(debug_insn 125 124 126 15 (var_location:SI i (reg/v:SI 101 [ start ])) -1
     (nil))
(debug_insn 126 125 127 15 (debug_marker) "cmodules/fbgc_stl.c":129:6 -1
     (nil))
(insn 127 126 128 15 (set (reg:SI 5 di)
        (reg/v:SI 101 [ start ])) "cmodules/fbgc_stl.c":129:6 67 {*movsi_internal}
     (nil))
(call_insn 128 127 189 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_int_object") [flags 0x41]  <function_decl 0x7f626c7fa500 new_fbgc_int_object>) [0 new_fbgc_int_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":129:6 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_int_object") [flags 0x41]  <function_decl 0x7f626c7fa500 new_fbgc_int_object>)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 189 128 129 15 (set (reg:DI 120)
        (reg:DI 0 ax)) "cmodules/fbgc_stl.c":129:6 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 129 189 130 15 (set (reg/f:DI 97 [ _18 ])
        (reg:DI 120)) "cmodules/fbgc_stl.c":129:6 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 120)
        (nil)))
(insn 130 129 131 15 (set (reg:SI 1 dx)
        (reg/v:SI 101 [ start ])) "cmodules/fbgc_stl.c":129:6 67 {*movsi_internal}
     (nil))
(insn 131 130 132 15 (set (reg:DI 4 si)
        (reg/f:DI 97 [ _18 ])) "cmodules/fbgc_stl.c":129:6 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97 [ _18 ])
        (nil)))
(insn 132 131 133 15 (set (reg:DI 5 di)
        (reg/v/f:DI 104 [ <retval> ])) "cmodules/fbgc_stl.c":129:6 66 {*movdi_internal}
     (nil))
(call_insn 133 132 134 15 (call (mem:QI (symbol_ref:DI ("set_object_in_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80be00 set_object_in_fbgc_tuple_object>) [0 set_object_in_fbgc_tuple_object S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_stl.c":129:6 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("set_object_in_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80be00 set_object_in_fbgc_tuple_object>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(debug_insn 134 133 135 15 (debug_marker) "cmodules/fbgc_stl.c":128:31 -1
     (nil))
(insn 135 134 136 15 (parallel [
            (set (reg/v:SI 101 [ start ])
                (plus:SI (reg/v:SI 101 [ start ])
                    (reg/v:SI 106 [ argc ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":128:32 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 136 135 137 15 (var_location:SI i (reg/v:SI 101 [ start ])) -1
     (nil))
(debug_insn 137 136 138 15 (debug_marker) "cmodules/fbgc_stl.c":128:24 -1
     (nil))
(insn 138 137 139 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 98 [ end ])
            (reg/v:SI 101 [ start ]))) "cmodules/fbgc_stl.c":128:5 11 {*cmpsi_1}
     (nil))
(jump_insn 139 138 194 15 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 123)
            (pc))) "cmodules/fbgc_stl.c":128:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 123)
;;  succ:       15 [89.0% (guessed)]  count:850510900 (estimated locally) (DFS_BACK)
;;              16 [11.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96 98 101 104 106

;; basic block 16, loop depth 0, count 105119324 (estimated locally), maybe hot
;;  prev block 15, next block 17, flags: (HOT_PARTITION, RTL)
;;  pred:       15 [11.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 194 139 195 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(jump_insn 195 194 196 16 (set (pc)
        (label_ref 140)) 660 {jump}
     (nil)
 -> 140)
;;  succ:       14 [always]  count:105119324 (estimated locally) (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96 104

(barrier 196 195 144)
;; basic block 17, loop depth 0, count 184550402 (estimated locally), maybe hot
;;  prev block 16, next block 18, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [28.1% (guessed)]  count:184550403 (estimated locally)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u158(6){ }u159(7){ }u160(16){ }u161(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 106
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 106
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 104
(code_label 144 196 145 17 4 (nil) [1 uses])
(note 145 144 146 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(debug_insn 146 145 147 17 (debug_marker) "cmodules/fbgc_stl.c":139:7 -1
     (nil))
(insn 147 146 148 17 (set (reg:SI 1 dx)
        (reg/v:SI 106 [ argc ])) "cmodules/fbgc_stl.c":139:7 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 106 [ argc ])
        (nil)))
(insn 148 147 149 17 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f626c3ef510 *.LC1>)) "cmodules/fbgc_stl.c":139:7 66 {*movdi_internal}
     (nil))
(insn 149 148 150 17 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_stl.c":139:7 67 {*movsi_internal}
     (nil))
(insn 150 149 151 17 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":139:7 69 {*movqi_internal}
     (nil))
(call_insn 151 150 7 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":139:7 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 7 151 156 17 (set (reg/v/f:DI 104 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_stl.c":140:9 66 {*movdi_internal}
     (nil))
;;  succ:       18 [always]  count:184550402 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 104

;; basic block 18, loop depth 0, count 538885205 (estimated locally), maybe hot
;; Invalid sum of incoming counts 735737869 (estimated locally), should be 538885205 (estimated locally)
;;  prev block 17, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [66.7% (adjusted)]  count:314964265 (estimated locally)
;;              17 [always]  count:184550402 (estimated locally) (FALLTHRU)
;;              10 [always]  count:118111601 (estimated locally)
;;              14 [always]  count:118111601 (estimated locally)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u168(6){ }u169(7){ }u170(16){ }u171(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 104
;; lr  def 	 0 [ax]
(code_label 156 7 159 18 3 (nil) [3 uses])
(note 159 156 157 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 157 159 158 18 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 104 [ <retval> ])) "cmodules/fbgc_stl.c":141:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 104 [ <retval> ])
        (nil)))
(insn 158 157 0 18 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":141:1 -1
     (nil))
;;  succ:       EXIT [always]  count:538885205 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function fbgc_len (fbgc_len, funcdef_no=56, decl_uid=5689, cgraph_uid=57, symbol_order=59)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 1 }
Will split live ranges of parameters at BB 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 87 uninteresting
Reg 84: def dominates all uses has unique first use
Reg 88 uninteresting
Reg 85 uninteresting
Reg 84 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a2 (r88,l0) best SIREG, allocno SIREG
    a3 (r87,l0) best DIREG, allocno DIREG
    a0 (r85,l0) best DREG, allocno DREG
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:1212,1212 DREG:-606,-606 CREG:1212,1212 BREG:1212,1212 SIREG:1212,1212 DIREG:1212,1212 AD_REGS:1212,1212 CLOBBERED_REGS:1212,1212 Q_REGS:1212,1212 NON_Q_REGS:1212,1212 TLS_GOTBASE_REGS:1212,1212 GENERAL_REGS:1212,1212 SSE_FIRST_REG:18848,18848 NO_REX_SSE_REGS:18848,18848 SSE_REGS:18848,18848 MMX_REGS:26878,26878 INT_SSE_REGS:26878,26878 ALL_REGS:440472,440472 MEM:9636,9636
  a1(r84,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:9144,9144 NO_REX_SSE_REGS:9144,9144 SSE_REGS:9144,9144 MMX_REGS:11109,11109 INT_SSE_REGS:11109,11109 ALL_REGS:183316,183316 MEM:3358,3358
  a2(r88,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:-1000,-1000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a3(r87,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:-1000,-1000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000


Pass 1 for finding pseudo/allocno costs

    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:2424,2424 DREG:1212,-606 CREG:2424,2424 BREG:2424,2424 SIREG:2424,2424 DIREG:2424,2424 AD_REGS:1212,1212 CLOBBERED_REGS:1212,1212 Q_REGS:1212,1212 NON_Q_REGS:2424,2424 TLS_GOTBASE_REGS:1212,1212 GENERAL_REGS:1212,1212 SSE_FIRST_REG:25696,25696 NO_REX_SSE_REGS:25696,25696 SSE_REGS:25696,25696 MMX_REGS:40756,40756 INT_SSE_REGS:32878,32878 ALL_REGS:446472,446472 MEM:18272,18272
  a1(r84,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11144,11144 NO_REX_SSE_REGS:11144,11144 SSE_REGS:11144,11144 MMX_REGS:17109,17109 INT_SSE_REGS:17109,17109 ALL_REGS:189316,189316 MEM:8358,8358
  a2(r88,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:2000,-1000 DIREG:4000,4000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000
  a3(r87,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:2000,-1000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000

   Insn 36(l0): point = 0
   Insn 35(l0): point = 2
   Insn 29(l0): point = 4
   Insn 28(l0): point = 6
   Insn 27(l0): point = 8
   Insn 26(l0): point = 10
   Insn 25(l0): point = 12
   Insn 19(l0): point = 15
   Insn 18(l0): point = 17
   Insn 10(l0): point = 20
   Insn 9(l0): point = 22
   Insn 3(l0): point = 24
   Insn 39(l0): point = 26
   Insn 2(l0): point = 28
   Insn 38(l0): point = 30
 a0(r85): [20..24] [13..14]
 a1(r84): [18..28]
 a2(r88): [25..26]
 a3(r87): [29..30]
Compressing live ranges: from 33 to 8 - 24%
Ranges after the compression:
 a0(r85): [0..3]
 a1(r84): [2..5]
 a2(r88): [4..5]
 a3(r87): [6..7]
+++Allocating 24 bytes for conflict table (uncompressed size 32)
;; a0(r85,l0) conflicts: a1(r84,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r84,l0) conflicts: a0(r85,l0) a2(r88,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a2(r88,l0) conflicts: a1(r84,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r87,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a1(r84)<->a3(r87)@1000:move
  cp1:a0(r85)<->a2(r88)@1000:move
  pref0:a2(r88)<-hr4@1500
  pref1:a3(r87)<-hr5@1500
  pref2:a0(r85)<-hr1@909
  regions=1, blocks=5, points=8
    allocnos=4 (big 0), copies=2, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r85 1r84 2r88 3r87
    modified regnos: 84 85 87 88
    border:
    Pressure: GENERAL_REGS=4
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@73756
          2:( 0-3 5 6 36-43)@52716
      Allocno a0r85 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a1r84 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Allocno a2r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a3r87 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Forming thread by copy 0:a1r84-a3r87 (freq=1000):
        Result (freq=3393): a1r84(1393) a3r87(2000)
      Forming thread by copy 1:a0r85-a2r88 (freq=1000):
        Result (freq=4606): a0r85(2606) a2r88(2000)
      Pushing a1(r84,l0)(cost 0)
      Pushing a3(r87,l0)(cost 0)
      Pushing a2(r88,l0)(cost 0)
      Pushing a0(r85,l0)(cost 0)
      Popping a0(r85,l0)  -- assign reg 1
      Popping a2(r88,l0)  -- assign reg 4
      Popping a3(r87,l0)  -- assign reg 5
      Popping a1(r84,l0)  -- assign reg 5
Disposition:
    1:r84  l0     5    0:r85  l0     1    3:r87  l0     5    2:r88  l0     4
New iteration of spill/restore move
+++Costs: overall -2606, reg -2606, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_len

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,3u} r1={4d,1u} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={3d,1u} r18={2d} r19={1d,4u} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r84={1d,2u} r85={1d,2u} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 197{164d,33u,0e} in 24{22 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 84 85 87 88
(note 6 1 38 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 38 6 2 2 (set (reg:DI 87)
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_stl.c":18:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ arg ])
        (nil)))
(insn 2 38 39 2 (set (reg/v/f:DI 84 [ arg ])
        (reg:DI 87)) "cmodules/fbgc_stl.c":18:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 39 2 3 2 (set (reg:SI 88)
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_stl.c":18:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ argc ])
        (nil)))
(insn 3 39 4 2 (set (reg/v:SI 85 [ argc ])
        (reg:SI 88)) "cmodules/fbgc_stl.c":18:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88)
        (nil)))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 4 9 2 (debug_marker) "cmodules/fbgc_stl.c":19:2 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 85 [ argc ])
            (const_int 1 [0x1]))) "cmodules/fbgc_stl.c":19:4 11 {*cmpsi_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) "cmodules/fbgc_stl.c":19:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 650902300 (nil)))
 -> 22)
;;  succ:       3 [39.4% (guessed)]  count:422839528 (estimated locally) (FALLTHRU)
;;              4 [60.6% (guessed)]  count:650902296 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 85

;; basic block 3, loop depth 0, count 422839530 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [39.4% (guessed)]  count:422839528 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 12 11 13 3 (var_location:SI D#1 (const_int 1 [0x1])) -1
     (nil))
(debug_insn 13 12 14 3 (var_location:DI arg (reg/v/f:DI 84 [ arg ])) -1
     (nil))
(debug_insn 14 13 15 3 (debug_marker:BLK) "cmodules/fbgc_stl.c":17:1 -1
     (nil))
(debug_insn 15 14 16 3 (var_location:SI D#2 (debug_expr:SI D#1)) -1
     (nil))
(debug_insn 16 15 17 3 (var_location:SI argc (debug_expr:SI D#2)) -1
     (nil))
(debug_insn 17 16 18 3 (debug_marker) "cmodules/fbgc_stl.c":20:3 -1
     (nil))
(insn 18 17 19 3 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 84 [ arg ]) [1 *arg_6(D)+0 S8 A64])) "cmodules/fbgc_stl.c":20:10 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 84 [ arg ])
        (nil)))
(call_insn/j 19 18 20 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_length_fbgc_object") [flags 0x41]  <function_decl 0x7f626c7e8a00 get_length_fbgc_object>) [0 get_length_fbgc_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":20:10 681 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("get_length_fbgc_object") [flags 0x41]  <function_decl 0x7f626c7e8a00 get_length_fbgc_object>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:422839530 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 20 19 22)
;; basic block 4, loop depth 0, count 650902295 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [60.6% (guessed)]  count:650902296 (estimated locally)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(6){ }u17(7){ }u18(16){ }u19(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(code_label 22 20 23 4 25 (nil) [1 uses])
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 24 23 25 4 (debug_marker) "cmodules/fbgc_stl.c":22:7 -1
     (nil))
(insn 25 24 26 4 (set (reg:SI 1 dx)
        (reg/v:SI 85 [ argc ])) "cmodules/fbgc_stl.c":22:7 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 85 [ argc ])
        (nil)))
(insn 26 25 27 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f626c44e3f0 *.LC2>)) "cmodules/fbgc_stl.c":22:7 66 {*movdi_internal}
     (nil))
(insn 27 26 28 4 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_stl.c":22:7 67 {*movsi_internal}
     (nil))
(insn 28 27 29 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":22:7 69 {*movqi_internal}
     (nil))
(call_insn 29 28 30 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":22:7 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(debug_insn 30 29 35 4 (debug_marker) "cmodules/fbgc_stl.c":23:2 -1
     (nil))
(insn 35 30 36 4 (set (reg/i:DI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":24:1 66 {*movdi_internal}
     (nil))
(insn 36 35 0 4 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":24:1 -1
     (nil))
;;  succ:       EXIT [always]  count:650902295 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function fbgc_id (fbgc_id, funcdef_no=58, decl_uid=5697, cgraph_uid=59, symbol_order=63)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
rescanning insn with uid = 25.
deleting insn with uid = 21.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
Reg 89 uninteresting
Reg 85: def dominates all uses has unique first use
Reg 90 uninteresting
Reg 86 uninteresting
Reg 85 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a2 (r90,l0) best SIREG, allocno SIREG
    a3 (r89,l0) best DIREG, allocno DIREG
    a0 (r86,l0) best DREG, allocno DREG
    a1 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r86,l0) costs: AREG:1320,1320 DREG:-660,-660 CREG:1320,1320 BREG:1320,1320 SIREG:1320,1320 DIREG:1320,1320 AD_REGS:1320,1320 CLOBBERED_REGS:1320,1320 Q_REGS:1320,1320 NON_Q_REGS:1320,1320 TLS_GOTBASE_REGS:1320,1320 GENERAL_REGS:1320,1320 SSE_FIRST_REG:19280,19280 NO_REX_SSE_REGS:19280,19280 SSE_REGS:19280,19280 MMX_REGS:27580,27580 INT_SSE_REGS:27580,27580 ALL_REGS:451920,451920 MEM:9960,9960
  a1(r85,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8720,8720 NO_REX_SSE_REGS:8720,8720 SSE_REGS:8720,8720 MMX_REGS:10420,10420 INT_SSE_REGS:10420,10420 ALL_REGS:172080,172080 MEM:3040,3040
  a2(r90,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:-1000,-1000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a3(r89,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:-1000,-1000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000


Pass 1 for finding pseudo/allocno costs

    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r86,l0) costs: AREG:2640,2640 DREG:1320,-660 CREG:2640,2640 BREG:2640,2640 SIREG:2640,2640 DIREG:2640,2640 AD_REGS:1320,1320 CLOBBERED_REGS:1320,1320 Q_REGS:1320,1320 NON_Q_REGS:2640,2640 TLS_GOTBASE_REGS:1320,1320 GENERAL_REGS:1320,1320 SSE_FIRST_REG:26560,26560 NO_REX_SSE_REGS:26560,26560 SSE_REGS:26560,26560 MMX_REGS:42160,42160 INT_SSE_REGS:33580,33580 ALL_REGS:457920,457920 MEM:18920,18920
  a1(r85,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:10720,10720 NO_REX_SSE_REGS:10720,10720 SSE_REGS:10720,10720 MMX_REGS:16420,16420 INT_SSE_REGS:16420,16420 ALL_REGS:178080,178080 MEM:8040,8040
  a2(r90,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:2000,-1000 DIREG:4000,4000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000
  a3(r89,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:2000,-1000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000

   Insn 50(l0): point = 0
   Insn 49(l0): point = 2
   Insn 37(l0): point = 5
   Insn 36(l0): point = 7
   Insn 35(l0): point = 9
   Insn 34(l0): point = 11
   Insn 33(l0): point = 13
   Insn 54(l0): point = 16
   Insn 27(l0): point = 18
   Insn 26(l0): point = 20
   Insn 25(l0): point = 22
   Insn 24(l0): point = 24
   Insn 23(l0): point = 26
   Insn 22(l0): point = 28
   Insn 9(l0): point = 31
   Insn 8(l0): point = 33
   Insn 3(l0): point = 35
   Insn 53(l0): point = 37
   Insn 2(l0): point = 39
   Insn 52(l0): point = 41
 a0(r86): [31..35] [14..15]
 a1(r85): [29..39]
 a2(r90): [36..37]
 a3(r89): [40..41]
Compressing live ranges: from 44 to 8 - 18%
Ranges after the compression:
 a0(r86): [0..3]
 a1(r85): [2..5]
 a2(r90): [4..5]
 a3(r89): [6..7]
+++Allocating 24 bytes for conflict table (uncompressed size 32)
;; a0(r86,l0) conflicts: a1(r85,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r85,l0) conflicts: a0(r86,l0) a2(r90,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a2(r90,l0) conflicts: a1(r85,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r89,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a1(r85)<->a3(r89)@1000:move
  cp1:a0(r86)<->a2(r90)@1000:move
  pref0:a2(r90)<-hr4@1500
  pref1:a3(r89)<-hr5@1500
  pref2:a0(r86)<-hr1@990
  regions=1, blocks=6, points=8
    allocnos=4 (big 0), copies=2, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 5 4 3 2
    all: 0r86 1r85 2r90 3r89
    modified regnos: 85 86 89 90
    border:
    Pressure: GENERAL_REGS=5
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@75160
          2:( 0-3 5 6 36-43)@52080
      Allocno a0r86 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a1r85 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Allocno a2r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a3r89 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Forming thread by copy 0:a1r85-a3r89 (freq=1000):
        Result (freq=3340): a1r85(1340) a3r89(2000)
      Forming thread by copy 1:a0r86-a2r90 (freq=1000):
        Result (freq=4660): a0r86(2660) a2r90(2000)
      Pushing a1(r85,l0)(cost 0)
      Pushing a3(r89,l0)(cost 0)
      Pushing a2(r90,l0)(cost 0)
      Pushing a0(r86,l0)(cost 0)
      Popping a0(r86,l0)  -- assign reg 1
      Popping a2(r90,l0)  -- assign reg 4
      Popping a3(r89,l0)  -- assign reg 5
      Popping a1(r85,l0)  -- assign reg 5
Disposition:
    1:r85  l0     5    0:r86  l0     1    3:r89  l0     5    2:r90  l0     4
New iteration of spill/restore move
+++Costs: overall -2660, reg -2660, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_id

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,4u} r1={5d,2u} r2={4d,1u} r4={5d,3u} r5={5d,3u} r6={1d,5u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,4u} r17={3d,1u} r18={2d} r19={1d,5u} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r85={1d,2u} r86={1d,2u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 209{168d,41u,0e} in 37{35 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 85 86 89 90
(note 5 1 52 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 52 5 2 2 (set (reg:DI 89)
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_stl.c":63:33 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ arg ])
        (nil)))
(insn 2 52 53 2 (set (reg/v/f:DI 85 [ arg ])
        (reg:DI 89)) "cmodules/fbgc_stl.c":63:33 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 53 2 3 2 (set (reg:SI 90)
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_stl.c":63:33 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ argc ])
        (nil)))
(insn 3 53 4 2 (set (reg/v:SI 86 [ argc ])
        (reg:SI 90)) "cmodules/fbgc_stl.c":63:33 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90)
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 8 2 (debug_marker) "cmodules/fbgc_stl.c":64:2 -1
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 86 [ argc ])
            (const_int 1 [0x1]))) "cmodules/fbgc_stl.c":64:4 11 {*cmpsi_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "cmodules/fbgc_stl.c":64:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 708669604 (nil)))
 -> 30)
;;  succ:       3 [34.0% (guessed)]  count:365072224 (estimated locally) (FALLTHRU)
;;              4 [66.0% (guessed)]  count:708669600 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85 86

;; basic block 3, loop depth 0, count 365072220 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [34.0% (guessed)]  count:365072224 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 11 10 12 3 (var_location:SI D#3 (const_int 1 [0x1])) -1
     (nil))
(debug_insn 12 11 13 3 (var_location:DI arg (reg/v/f:DI 85 [ arg ])) -1
     (nil))
(debug_insn 13 12 14 3 (debug_marker:BLK) "cmodules/fbgc_stl.c":63:1 -1
     (nil))
(debug_insn 14 13 15 3 (var_location:SI D#4 (debug_expr:SI D#3)) -1
     (nil))
(debug_insn 15 14 16 3 (var_location:SI argc (debug_expr:SI D#4)) -1
     (nil))
(debug_insn 16 15 17 3 (debug_marker) "cmodules/fbgc_stl.c":65:3 -1
     (nil))
(debug_insn 17 16 18 3 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7f626ca21240 stdout>) [2 stdout+0 S8 A64])) "cmodules/fbgc_stl.c":65:3 -1
     (nil))
(debug_insn 18 17 19 3 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f626c44ec60 *.LC3>)) "cmodules/fbgc_stl.c":65:3 -1
     (nil))
(debug_insn 19 18 20 3 (debug_marker:BLK) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":98:1 -1
     (nil))
(debug_insn 20 19 22 3 (debug_marker) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:3 -1
     (nil))
(insn 22 20 23 3 (set (reg:DI 2 cx)
        (mem/f:DI (reg/v/f:DI 85 [ arg ]) [1 *arg_4(D)+0 S8 A64])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:10 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 85 [ arg ])
        (nil)))
(insn 23 22 24 3 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f626c44ec60 *.LC3>)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:10 66 {*movdi_internal}
     (nil))
(insn 24 23 25 3 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:10 67 {*movsi_internal}
     (nil))
(insn 25 24 26 3 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7f626ca21240 stdout>) [2 stdout+0 S8 A64])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:10 66 {*movdi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:10 69 {*movqi_internal}
     (nil))
(call_insn 27 26 54 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f626c919100 __fprintf_chk>) [0 __builtin___fprintf_chk S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:10 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f626c919100 __fprintf_chk>)
                            (nil)))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(jump_insn 54 27 55 3 (set (pc)
        (label_ref 38)) 660 {jump}
     (nil)
 -> 38)
;;  succ:       5 [always]  count:365072220 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 55 54 30)
;; basic block 4, loop depth 0, count 708669605 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [66.0% (guessed)]  count:708669600 (estimated locally)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(6){ }u22(7){ }u23(16){ }u24(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 86
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(code_label 30 55 31 4 30 (nil) [1 uses])
(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 32 31 33 4 (debug_marker) "cmodules/fbgc_stl.c":67:7 -1
     (nil))
(insn 33 32 34 4 (set (reg:SI 1 dx)
        (reg/v:SI 86 [ argc ])) "cmodules/fbgc_stl.c":67:7 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 86 [ argc ])
        (nil)))
(insn 34 33 35 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f626c44ecf0 *.LC4>)) "cmodules/fbgc_stl.c":67:7 66 {*movdi_internal}
     (nil))
(insn 35 34 36 4 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_stl.c":67:7 67 {*movsi_internal}
     (nil))
(insn 36 35 37 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":67:7 69 {*movqi_internal}
     (nil))
(call_insn 37 36 38 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":67:7 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
;;  succ:       5 [always]  count:708669605 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 4, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [always]  count:708669605 (estimated locally) (FALLTHRU)
;;              3 [always]  count:365072220 (estimated locally)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u31(6){ }u32(7){ }u33(16){ }u34(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax]
(code_label 38 37 39 5 31 (nil) [1 uses])
(note 39 38 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 40 39 41 5 (var_location:DI arg (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 41 40 42 5 (var_location:SI argc (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 42 41 43 5 (var_location:DI __stream (clobber (const_int 0 [0]))) "cmodules/fbgc_stl.c":65:3 -1
     (nil))
(debug_insn 43 42 44 5 (var_location:DI __fmt (clobber (const_int 0 [0]))) "cmodules/fbgc_stl.c":65:3 -1
     (nil))
(debug_insn 44 43 49 5 (debug_marker) "cmodules/fbgc_stl.c":68:2 -1
     (nil))
(insn 49 44 50 5 (set (reg/i:DI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":69:1 66 {*movdi_internal}
     (nil))
(insn 50 49 0 5 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":69:1 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function fbgc_load (fbgc_load, funcdef_no=57, decl_uid=5693, cgraph_uid=58, symbol_order=61)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 16 n_edges 22 count 17 (  1.1)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 2
;;  header 11, latch 11
;;  depth 1, outer 0
;;  nodes: 11
;;
;; Loop 1
;;  header 7, latch 8
;;  depth 1, outer 0
;;  nodes: 7 8
;; 2 succs { 3 5 }
;; 3 succs { 4 15 }
;; 4 succs { 1 }
;; 5 succs { 6 13 }
;; 6 succs { 7 }
;; 7 succs { 14 8 }
;; 8 succs { 7 9 }
;; 9 succs { 10 11 }
;; 10 succs { 1 }
;; 11 succs { 11 12 }
;; 12 succs { 15 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 1 }
Will split live ranges of parameters at BB 9
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 2
;;  header 11, latch 11
;;  depth 1, outer 0
;;  nodes: 11
;;
;; Loop 1
;;  header 7, latch 8
;;  depth 1, outer 0
;;  nodes: 7 8
;; 2 succs { 3 5 }
;; 3 succs { 4 15 }
;; 4 succs { 1 }
;; 5 succs { 6 13 }
;; 6 succs { 7 }
;; 7 succs { 14 8 }
;; 8 succs { 7 9 }
;; 9 succs { 10 11 }
;; 10 succs { 1 }
;; 11 succs { 11 12 }
;; 12 succs { 15 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 124 uninteresting
Reg 125 uninteresting
Reg 108 uninteresting
Reg 82: def dominates all uses has unique first use
Reg 110 uninteresting
Reg 111 uninteresting
Reg 112 uninteresting
Ignoring reg 114, has equiv memory
Reg 126: local to bb 9 def dominates all uses has unique first use
Reg 116 uninteresting
Reg 117 uninteresting
Reg 119 uninteresting
Ignoring reg 121, has equiv memory
Reg 127 uninteresting
Reg 122 uninteresting
Reg 82 not local to one basic block
Found def insn 139 for 126 to be not moveable
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 2
;;  header 11, latch 11
;;  depth 1, outer 0
;;  nodes: 11
;;
;; Loop 1
;;  header 7, latch 8
;;  depth 1, outer 0
;;  nodes: 7 8
;; 2 succs { 3 5 }
;; 3 succs { 4 15 }
;; 4 succs { 1 }
;; 5 succs { 6 13 }
;; 6 succs { 7 }
;; 7 succs { 14 8 }
;; 8 succs { 7 9 }
;; 9 succs { 10 11 }
;; 10 succs { 1 }
;; 11 succs { 11 12 }
;; 12 succs { 15 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 114: (insn_list:REG_DEP_TRUE 59 (nil))
init_insns for 121: (insn_list:REG_DEP_TRUE 85 (nil))

Pass 0 for finding pseudo/allocno costs

    a19 (r127,l2) best AREG, allocno AREG
    a4 (r126,l0) best AREG, allocno AREG
    a12 (r125,l0) best SIREG, allocno SIREG
    a13 (r124,l0) best DIREG, allocno DIREG
    a18 (r122,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a22 (r121,l2) best NO_REGS, allocno NO_REGS
    a20 (r120,l2) best DIREG, allocno DIREG
    a23 (r119,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a21 (r118,l2) best SIREG, allocno SIREG
    a24 (r117,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r115,l0) best DIREG, allocno DIREG
    a7 (r114,l0) best NO_REGS, allocno NO_REGS
    a6 (r113,l0) best DIREG, allocno DIREG
    a28 (r112,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a29 (r111,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a30 (r110,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r109,l0) best DIREG, allocno DIREG
    a27 (r108,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a16 (r108,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a8 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a26 (r107,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a15 (r107,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a17 (r106,l2) best AREG, allocno AREG
    a0 (r106,l0) best AREG, allocno AREG
    a14 (r104,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a5 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a25 (r91,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a9 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a11 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r106,l0) costs: AREG:-172,-172 DREG:344,344 CREG:344,344 BREG:344,344 SIREG:344,344 DIREG:344,344 AD_REGS:344,344 CLOBBERED_REGS:344,344 Q_REGS:344,344 NON_Q_REGS:344,344 TLS_GOTBASE_REGS:344,344 GENERAL_REGS:344,344 SSE_FIRST_REG:2288,4076 NO_REX_SSE_REGS:2288,4076 SSE_REGS:2288,4076 MMX_REGS:3148,4936 INT_SSE_REGS:3148,4936 ALL_REGS:51664,81464 MEM:1184,1482
  a1(r115,l0) costs: AREG:36,36 DREG:36,36 CREG:36,36 BREG:36,36 SIREG:36,36 DIREG:-18,-18 AD_REGS:36,36 CLOBBERED_REGS:36,36 Q_REGS:36,36 NON_Q_REGS:36,36 TLS_GOTBASE_REGS:36,36 GENERAL_REGS:36,36 SSE_FIRST_REG:288,288 NO_REX_SSE_REGS:288,288 SSE_REGS:288,288 MMX_REGS:468,468 INT_SSE_REGS:468,468 ALL_REGS:7632,7632 MEM:198,198
  a2(r116,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:288,288 NO_REX_SSE_REGS:288,288 SSE_REGS:288,288 MMX_REGS:450,450 INT_SSE_REGS:450,450 ALL_REGS:5724,5724 MEM:198,198
  a3(r107,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2832,17544 NO_REX_SSE_REGS:2832,17544 SSE_REGS:2832,17544 MMX_REGS:3822,27729 INT_SSE_REGS:3822,27729 ALL_REGS:62776,452644 MEM:1396,12430
  a4(r126,l0) costs: AREG:-55,-55 DREG:110,110 CREG:110,110 BREG:110,110 SIREG:110,110 DIREG:110,110 AD_REGS:110,110 CLOBBERED_REGS:110,110 Q_REGS:110,110 NON_Q_REGS:110,110 TLS_GOTBASE_REGS:110,110 GENERAL_REGS:110,110 MEM:660,660
  a5(r104,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 MEM:55,6015
  a6(r113,l0) costs: AREG:110,110 DREG:110,110 CREG:110,110 BREG:110,110 SIREG:110,110 DIREG:-55,-55 AD_REGS:110,110 CLOBBERED_REGS:110,110 Q_REGS:110,110 NON_Q_REGS:110,110 TLS_GOTBASE_REGS:110,110 GENERAL_REGS:110,110 SSE_FIRST_REG:880,880 NO_REX_SSE_REGS:880,880 SSE_REGS:880,880 MMX_REGS:1430,1430 INT_SSE_REGS:1430,1430 ALL_REGS:23320,23320 MEM:605,605
  a7(r114,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:880,880 NO_REX_SSE_REGS:880,880 SSE_REGS:880,880 MMX_REGS:1375,1375 INT_SSE_REGS:1375,1375 ALL_REGS:17490,17490 MEM:-55,-55
  a8(r108,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2912,12440 NO_REX_SSE_REGS:2912,12440 SSE_REGS:2912,12440 MMX_REGS:3952,19435 INT_SSE_REGS:3952,19435 ALL_REGS:64896,317388 MEM:1248,7203
  a9(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 MEM:107,18227
  a10(r109,l0) costs: AREG:34,34 DREG:34,34 CREG:34,34 BREG:34,34 SIREG:34,34 DIREG:-17,-17 AD_REGS:34,34 CLOBBERED_REGS:34,34 Q_REGS:34,34 NON_Q_REGS:34,34 TLS_GOTBASE_REGS:34,34 GENERAL_REGS:34,34 SSE_FIRST_REG:272,272 NO_REX_SSE_REGS:272,272 SSE_REGS:272,272 MMX_REGS:442,442 INT_SSE_REGS:442,442 ALL_REGS:7208,7208 MEM:187,187
  a11(r82,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1256,1256 NO_REX_SSE_REGS:1256,1256 SSE_REGS:1256,1256 MMX_REGS:1971,1971 INT_SSE_REGS:1971,1971 ALL_REGS:25864,25864 MEM:925,925
  a12(r125,l0) costs: AREG:416,416 DREG:416,416 CREG:416,416 BREG:416,416 SIREG:-208,-208 DIREG:416,416 AD_REGS:416,416 CLOBBERED_REGS:416,416 Q_REGS:416,416 NON_Q_REGS:416,416 TLS_GOTBASE_REGS:416,416 GENERAL_REGS:416,416 SSE_FIRST_REG:3328,3328 NO_REX_SSE_REGS:3328,3328 SSE_REGS:3328,3328 MMX_REGS:5408,5408 INT_SSE_REGS:5408,5408 ALL_REGS:88192,88192 MEM:2288,2288
  a13(r124,l0) costs: AREG:416,416 DREG:416,416 CREG:416,416 BREG:416,416 SIREG:416,416 DIREG:-208,-208 AD_REGS:416,416 CLOBBERED_REGS:416,416 Q_REGS:416,416 NON_Q_REGS:416,416 TLS_GOTBASE_REGS:416,416 GENERAL_REGS:416,416 SSE_FIRST_REG:1664,1664 NO_REX_SSE_REGS:1664,1664 SSE_REGS:1664,1664 MMX_REGS:5408,5408 INT_SSE_REGS:5408,5408 ALL_REGS:88192,88192 MEM:2288,2288
  a14(r104,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 MEM:5960,5960
  a15(r107,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7152,7152 NO_REX_SSE_REGS:7152,7152 SSE_REGS:7152,7152 MMX_REGS:11622,11622 INT_SSE_REGS:11622,11622 ALL_REGS:189528,189528 MEM:5364,5364
  a16(r108,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2384,2384 NO_REX_SSE_REGS:2384,2384 SSE_REGS:2384,2384 MMX_REGS:3874,3874 INT_SSE_REGS:3874,3874 ALL_REGS:63176,63176 MEM:1490,1490
  a17(r106,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1788,1788 NO_REX_SSE_REGS:1788,1788 SSE_REGS:1788,1788 MMX_REGS:1788,1788 INT_SSE_REGS:1788,1788 ALL_REGS:29800,29800 MEM:298,298
  a18(r122,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4768,4768 NO_REX_SSE_REGS:4768,4768 SSE_REGS:4768,4768 MMX_REGS:7748,7748 INT_SSE_REGS:7748,7748 ALL_REGS:126352,126352 MEM:3278,3278
  a19(r127,l2) costs: AREG:-298,-298 DREG:596,596 CREG:596,596 BREG:596,596 SIREG:596,596 DIREG:596,596 AD_REGS:596,596 CLOBBERED_REGS:596,596 Q_REGS:596,596 NON_Q_REGS:596,596 TLS_GOTBASE_REGS:596,596 GENERAL_REGS:596,596 SSE_FIRST_REG:2384,2384 NO_REX_SSE_REGS:2384,2384 SSE_REGS:2384,2384 MMX_REGS:7748,7748 INT_SSE_REGS:7748,7748 ALL_REGS:126352,126352 MEM:3278,3278
  a20(r120,l2) costs: AREG:596,596 DREG:596,596 CREG:596,596 BREG:596,596 SIREG:596,596 DIREG:-298,-298 AD_REGS:596,596 CLOBBERED_REGS:596,596 Q_REGS:596,596 NON_Q_REGS:596,596 TLS_GOTBASE_REGS:596,596 GENERAL_REGS:596,596 SSE_FIRST_REG:4768,4768 NO_REX_SSE_REGS:4768,4768 SSE_REGS:4768,4768 MMX_REGS:7748,7748 INT_SSE_REGS:7748,7748 ALL_REGS:126352,126352 MEM:3278,3278
  a21(r118,l2) costs: AREG:596,596 DREG:596,596 CREG:596,596 BREG:596,596 SIREG:-298,-298 DIREG:596,596 AD_REGS:596,596 CLOBBERED_REGS:596,596 Q_REGS:596,596 NON_Q_REGS:596,596 TLS_GOTBASE_REGS:596,596 GENERAL_REGS:596,596 SSE_FIRST_REG:4768,4768 NO_REX_SSE_REGS:4768,4768 SSE_REGS:4768,4768 MMX_REGS:7748,7748 INT_SSE_REGS:7748,7748 ALL_REGS:126352,126352 MEM:3278,3278
  a22(r121,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4768,4768 NO_REX_SSE_REGS:4768,4768 SSE_REGS:4768,4768 MMX_REGS:7450,7450 INT_SSE_REGS:7450,7450 ALL_REGS:94764,94764 MEM:-298,-298
  a23(r119,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4768,4768 NO_REX_SSE_REGS:4768,4768 SSE_REGS:4768,4768 MMX_REGS:7450,7450 INT_SSE_REGS:7450,7450 ALL_REGS:94764,94764 MEM:3278,3278
  a24(r117,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4768,4768 NO_REX_SSE_REGS:4768,4768 SSE_REGS:4768,4768 MMX_REGS:7748,7748 INT_SSE_REGS:7748,7748 ALL_REGS:126352,126352 MEM:3576,3576
  a25(r91,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 MEM:18120,18120
  a26(r107,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7560,7560 NO_REX_SSE_REGS:7560,7560 SSE_REGS:7560,7560 MMX_REGS:12285,12285 INT_SSE_REGS:12285,12285 ALL_REGS:200340,200340 MEM:5670,5670
  a27(r108,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7144,7144 NO_REX_SSE_REGS:7144,7144 SSE_REGS:7144,7144 MMX_REGS:11609,11609 INT_SSE_REGS:11609,11609 ALL_REGS:189316,189316 MEM:4465,4465
  a28(r112,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:14288,14288 NO_REX_SSE_REGS:14288,14288 SSE_REGS:14288,14288 MMX_REGS:23218,23218 INT_SSE_REGS:23218,23218 ALL_REGS:378632,378632 MEM:9823,9823
  a29(r111,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15120,15120 NO_REX_SSE_REGS:15120,15120 SSE_REGS:15120,15120 MMX_REGS:23625,23625 INT_SSE_REGS:23625,23625 ALL_REGS:300510,300510 MEM:11340,11340
  a30(r110,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15120,15120 NO_REX_SSE_REGS:15120,15120 SSE_REGS:15120,15120 MMX_REGS:24570,24570 INT_SSE_REGS:24570,24570 ALL_REGS:400680,400680 MEM:11340,11340


Pass 1 for finding pseudo/allocno costs

    r127: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r121: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    r120: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r118: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r115: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    r113: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r109: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r106: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r106,l2) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r106,l0) costs: AREG:344,-172 DREG:688,688 CREG:688,688 BREG:688,688 SIREG:688,688 DIREG:688,688 AD_REGS:344,344 CLOBBERED_REGS:344,344 Q_REGS:344,344 NON_Q_REGS:688,688 TLS_GOTBASE_REGS:688,688 GENERAL_REGS:344,344 SSE_FIRST_REG:3968,6352 NO_REX_SSE_REGS:3968,6352 SSE_REGS:3968,6352 MMX_REGS:6296,9872 INT_SSE_REGS:4060,7636 ALL_REGS:52576,84164 MEM:2976,4764
  a1(r115,l0) costs: AREG:72,72 DREG:72,72 CREG:72,72 BREG:72,72 SIREG:72,72 DIREG:36,-18 AD_REGS:72,72 CLOBBERED_REGS:36,36 Q_REGS:72,72 NON_Q_REGS:36,36 TLS_GOTBASE_REGS:36,36 GENERAL_REGS:36,36 SSE_FIRST_REG:432,432 NO_REX_SSE_REGS:432,432 SSE_REGS:432,432 MMX_REGS:702,702 INT_SSE_REGS:468,468 ALL_REGS:7632,7632 MEM:306,306
  a2(r116,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:288,288 NO_REX_SSE_REGS:288,288 SSE_REGS:288,288 MMX_REGS:468,468 INT_SSE_REGS:468,468 ALL_REGS:5832,5832 MEM:198,198
  a3(r107,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:3248,17960 NO_REX_SSE_REGS:3248,17960 SSE_REGS:3248,17960 MMX_REGS:5070,28977 INT_SSE_REGS:5070,28977 ALL_REGS:64024,453892 MEM:2436,13470
  a4(r126,l0) costs: AREG:110,-55 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:220,220 DIREG:220,220 AD_REGS:110,110 CLOBBERED_REGS:110,110 Q_REGS:110,110 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:110,110 MEM:990,990
  a5(r104,l0) costs: GENERAL_REGS:0,0 MEM:330,6290
  a6(r113,l0) costs: AREG:550,550 DREG:550,550 CREG:550,550 BREG:550,550 SIREG:550,550 DIREG:440,275 AD_REGS:550,550 CLOBBERED_REGS:440,440 Q_REGS:550,550 NON_Q_REGS:440,440 TLS_GOTBASE_REGS:440,440 GENERAL_REGS:440,440 SSE_FIRST_REG:1650,1650 NO_REX_SSE_REGS:1650,1650 SSE_REGS:1650,1650 MMX_REGS:2475,2475 INT_SSE_REGS:1760,1760 ALL_REGS:23650,23650 MEM:1320,1320
  a7(r114,l0) costs: GENERAL_REGS:660,660 SSE_FIRST_REG:1430,1430 NO_REX_SSE_REGS:1430,1430 SSE_REGS:1430,1430 MMX_REGS:1705,1705 INT_SSE_REGS:1705,1705 ALL_REGS:17820,17820 MEM:330,330
  a8(r108,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:3328,12856 NO_REX_SSE_REGS:3328,12856 SSE_REGS:3328,12856 MMX_REGS:5200,20683 INT_SSE_REGS:5200,20683 ALL_REGS:66144,318636 MEM:2288,8243
  a9(r91,l0) costs: GENERAL_REGS:0,0 MEM:642,18762
  a10(r109,l0) costs: AREG:68,68 DREG:68,68 CREG:68,68 BREG:68,68 SIREG:68,68 DIREG:34,-17 AD_REGS:68,68 CLOBBERED_REGS:34,34 Q_REGS:68,68 NON_Q_REGS:34,34 TLS_GOTBASE_REGS:34,34 GENERAL_REGS:34,34 SSE_FIRST_REG:408,408 NO_REX_SSE_REGS:408,408 SSE_REGS:408,408 MMX_REGS:663,663 INT_SSE_REGS:442,442 ALL_REGS:7208,7208 MEM:289,289
  a11(r82,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1256,1256 NO_REX_SSE_REGS:1256,1256 SSE_REGS:1256,1256 MMX_REGS:2041,2041 INT_SSE_REGS:2041,2041 ALL_REGS:26284,26284 MEM:925,925
  a12(r125,l0) costs: AREG:832,832 DREG:832,832 CREG:832,832 BREG:832,832 SIREG:416,-208 DIREG:832,832 AD_REGS:832,832 CLOBBERED_REGS:416,416 Q_REGS:832,832 NON_Q_REGS:416,416 TLS_GOTBASE_REGS:416,416 GENERAL_REGS:416,416 SSE_FIRST_REG:4992,4992 NO_REX_SSE_REGS:4992,4992 SSE_REGS:4992,4992 MMX_REGS:8112,8112 INT_SSE_REGS:5408,5408 ALL_REGS:88192,88192 MEM:3536,3536
  a13(r124,l0) costs: AREG:832,832 DREG:832,832 CREG:832,832 BREG:832,832 SIREG:832,832 DIREG:416,-208 AD_REGS:832,832 CLOBBERED_REGS:416,416 Q_REGS:832,832 NON_Q_REGS:416,416 TLS_GOTBASE_REGS:416,416 GENERAL_REGS:416,416 SSE_FIRST_REG:4992,4992 NO_REX_SSE_REGS:4992,4992 SSE_REGS:4992,4992 MMX_REGS:8112,8112 INT_SSE_REGS:5408,5408 ALL_REGS:88192,88192 MEM:3536,3536
  a14(r104,l2) costs: GENERAL_REGS:0,0 MEM:5960,5960
  a15(r107,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:7152,7152 NO_REX_SSE_REGS:7152,7152 SSE_REGS:7152,7152 MMX_REGS:11622,11622 INT_SSE_REGS:11622,11622 ALL_REGS:189528,189528 MEM:5364,5364
  a16(r108,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2384,2384 NO_REX_SSE_REGS:2384,2384 SSE_REGS:2384,2384 MMX_REGS:3874,3874 INT_SSE_REGS:3874,3874 ALL_REGS:63176,63176 MEM:1490,1490
  a17(r106,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2384,2384 NO_REX_SSE_REGS:2384,2384 SSE_REGS:2384,2384 MMX_REGS:3576,3576 INT_SSE_REGS:3576,3576 ALL_REGS:31588,31588 MEM:1788,1788
  a18(r122,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4768,4768 NO_REX_SSE_REGS:4768,4768 SSE_REGS:4768,4768 MMX_REGS:7748,7748 INT_SSE_REGS:7748,7748 ALL_REGS:126352,126352 MEM:3278,3278
  a19(r127,l2) costs: AREG:596,-298 DREG:1192,1192 CREG:1192,1192 BREG:1192,1192 SIREG:1192,1192 DIREG:1192,1192 AD_REGS:596,596 CLOBBERED_REGS:596,596 Q_REGS:596,596 NON_Q_REGS:1192,1192 TLS_GOTBASE_REGS:1192,1192 GENERAL_REGS:596,596 SSE_FIRST_REG:7152,7152 NO_REX_SSE_REGS:7152,7152 SSE_REGS:7152,7152 MMX_REGS:11622,11622 INT_SSE_REGS:7748,7748 ALL_REGS:126352,126352 MEM:5066,5066
  a20(r120,l2) costs: AREG:2980,2980 DREG:2980,2980 CREG:2980,2980 BREG:2980,2980 SIREG:2980,2980 DIREG:2384,1490 AD_REGS:2980,2980 CLOBBERED_REGS:2384,2384 Q_REGS:2980,2980 NON_Q_REGS:2384,2384 TLS_GOTBASE_REGS:2384,2384 GENERAL_REGS:2384,2384 SSE_FIRST_REG:8940,8940 NO_REX_SSE_REGS:8940,8940 SSE_REGS:8940,8940 MMX_REGS:13410,13410 INT_SSE_REGS:9536,9536 ALL_REGS:128140,128140 MEM:7152,7152
  a21(r118,l2) costs: AREG:1192,1192 DREG:1192,1192 CREG:1192,1192 BREG:1192,1192 SIREG:596,-298 DIREG:1192,1192 AD_REGS:1192,1192 CLOBBERED_REGS:596,596 Q_REGS:1192,1192 NON_Q_REGS:596,596 TLS_GOTBASE_REGS:596,596 GENERAL_REGS:596,596 SSE_FIRST_REG:7152,7152 NO_REX_SSE_REGS:7152,7152 SSE_REGS:7152,7152 MMX_REGS:11622,11622 INT_SSE_REGS:7748,7748 ALL_REGS:126352,126352 MEM:5066,5066
  a22(r121,l2) costs: GENERAL_REGS:3576,3576 SSE_FIRST_REG:7748,7748 NO_REX_SSE_REGS:7748,7748 SSE_REGS:7748,7748 MMX_REGS:9238,9238 INT_SSE_REGS:9238,9238 ALL_REGS:96552,96552 MEM:1788,1788
  a23(r119,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4768,4768 NO_REX_SSE_REGS:4768,4768 SSE_REGS:4768,4768 MMX_REGS:7748,7748 INT_SSE_REGS:7748,7748 ALL_REGS:96552,96552 MEM:3278,3278
  a24(r117,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4768,4768 NO_REX_SSE_REGS:4768,4768 SSE_REGS:4768,4768 MMX_REGS:7748,7748 INT_SSE_REGS:7748,7748 ALL_REGS:126352,126352 MEM:3576,3576
  a25(r91,l1) costs: GENERAL_REGS:0,0 MEM:18120,18120
  a26(r107,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:7560,7560 NO_REX_SSE_REGS:7560,7560 SSE_REGS:7560,7560 MMX_REGS:12285,12285 INT_SSE_REGS:12285,12285 ALL_REGS:200340,200340 MEM:5670,5670
  a27(r108,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:7144,7144 NO_REX_SSE_REGS:7144,7144 SSE_REGS:7144,7144 MMX_REGS:11609,11609 INT_SSE_REGS:11609,11609 ALL_REGS:189316,189316 MEM:4465,4465
  a28(r112,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:14288,14288 NO_REX_SSE_REGS:14288,14288 SSE_REGS:14288,14288 MMX_REGS:23218,23218 INT_SSE_REGS:23218,23218 ALL_REGS:378632,378632 MEM:9823,9823
  a29(r111,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:15120,15120 NO_REX_SSE_REGS:15120,15120 SSE_REGS:15120,15120 MMX_REGS:24570,24570 INT_SSE_REGS:24570,24570 ALL_REGS:306180,306180 MEM:11340,11340
  a30(r110,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:15120,15120 NO_REX_SSE_REGS:15120,15120 SSE_REGS:15120,15120 MMX_REGS:24570,24570 INT_SSE_REGS:24570,24570 ALL_REGS:400680,400680 MEM:11340,11340

   Insn 113(l0): point = 0
   Insn 112(l0): point = 2
   Insn 7(l0): point = 5
   Insn 144(l0): point = 8
   Insn 8(l0): point = 10
   Insn 142(l0): point = 13
   Insn 74(l0): point = 16
   Insn 73(l0): point = 18
   Insn 72(l0): point = 20
   Insn 71(l0): point = 22
   Insn 70(l0): point = 24
   Insn 69(l0): point = 26
   Insn 66(l0): point = 29
   Insn 65(l0): point = 31
   Insn 6(l0): point = 33
   Insn 139(l0): point = 35
   Insn 63(l0): point = 37
   Insn 62(l0): point = 39
   Insn 61(l0): point = 41
   Insn 60(l0): point = 43
   Insn 59(l0): point = 45
   Insn 5(l0): point = 48
   Insn 37(l0): point = 51
   Insn 28(l0): point = 54
   Insn 27(l0): point = 56
   Insn 26(l0): point = 58
   Insn 25(l0): point = 60
   Insn 24(l0): point = 62
   Insn 21(l0): point = 65
   Insn 20(l0): point = 67
   Insn 9(l0): point = 69
   Insn 19(l0): point = 71
   Insn 16(l0): point = 74
   Insn 15(l0): point = 76
   Insn 3(l0): point = 78
   Insn 138(l0): point = 80
   Insn 2(l0): point = 82
   Insn 137(l0): point = 84
   Insn 100(l2): point = 87
   Insn 99(l2): point = 89
   Insn 98(l2): point = 91
   Insn 94(l2): point = 93
   Insn 91(l2): point = 95
   Insn 140(l2): point = 97
   Insn 90(l2): point = 99
   Insn 89(l2): point = 101
   Insn 88(l2): point = 103
   Insn 87(l2): point = 105
   Insn 86(l2): point = 107
   Insn 85(l2): point = 109
   Insn 84(l2): point = 111
   Insn 83(l2): point = 113
   Insn 82(l2): point = 115
   Insn 44(l1): point = 118
   Insn 43(l1): point = 120
   Insn 42(l1): point = 122
   Insn 41(l1): point = 124
   Insn 53(l1): point = 127
   Insn 52(l1): point = 129
   Insn 51(l1): point = 131
   Insn 47(l1): point = 133
 a0(r106): [65..69] [13..15] [8..10] [3..5]
 a1(r115): [19..24]
 a2(r116): [25..26]
 a3(r107): [72..82] [27..53]
 a4(r126): [32..35]
 a5(r104): [29..33]
 a6(r113): [40..43]
 a7(r114): [44..45]
 a8(r108): [74..78] [29..53]
 a9(r91): [48..48]
 a10(r109): [57..62]
 a11(r82): [63..71]
 a12(r125): [79..80]
 a13(r124): [83..84]
 a14(r104): [87..117]
 a15(r107): [87..117]
 a16(r108): [87..117]
 a17(r106): [87..95]
 a18(r122): [90..91]
 a19(r127): [96..97]
 a20(r120): [102..107]
 a21(r118): [104..111]
 a22(r121): [108..109]
 a23(r119): [112..113]
 a24(r117): [114..115]
 a25(r91): [118..135]
 a26(r107): [118..135]
 a27(r108): [118..135]
 a28(r112): [130..131]
 a29(r111): [121..122]
 a30(r110): [123..124]
 Rebuilding regno allocno list for 127
 Rebuilding regno allocno list for 122
 Rebuilding regno allocno list for 121
 Rebuilding regno allocno list for 120
 Rebuilding regno allocno list for 119
 Rebuilding regno allocno list for 118
 Rebuilding regno allocno list for 117
 Rebuilding regno allocno list for 112
 Rebuilding regno allocno list for 111
 Rebuilding regno allocno list for 110
      Moving ranges of a27r108 to a8r108:  [118..135]
      Moving ranges of a16r108 to a8r108:  [87..117]
      Moving ranges of a26r107 to a3r107:  [118..135]
      Moving ranges of a15r107 to a3r107:  [87..117]
      Moving ranges of a17r106 to a0r106:  [87..95]
      Moving ranges of a14r104 to a5r104:  [87..117]
      Moving ranges of a25r91 to a9r91:  [118..135]
Compressing live ranges: from 136 to 46 - 33%
Ranges after the compression:
 a0(r106): [28..29] [20..21] [0..5]
 a1(r115): [6..7]
 a2(r116): [8..9]
 a3(r107): [28..45] [22..25] [10..17]
 a4(r126): [10..11]
 a5(r104): [28..39] [10..11]
 a6(r113): [12..13]
 a7(r114): [14..15]
 a8(r108): [28..45] [22..23] [10..17]
 a9(r91): [40..45] [16..16]
 a10(r109): [18..19]
 a11(r82): [20..21]
 a12(r125): [24..25]
 a13(r124): [26..27]
 a18(r122): [28..29]
 a19(r127): [30..31]
 a20(r120): [32..33]
 a21(r118): [32..35]
 a22(r121): [34..35]
 a23(r119): [36..37]
 a24(r117): [38..39]
 a28(r112): [44..45]
 a29(r111): [40..41]
 a30(r110): [42..43]
+++Allocating 192 bytes for conflict table (uncompressed size 248)
;; a0(r106,l0) conflicts: a5(r104,l0) a3(r107,l0) a8(r108,l0) a11(r82,l0) a18(r122,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r115,l0) conflicts:
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

;; a2(r116,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r107,l0) conflicts: a0(r106,l0) a4(r126,l0) a5(r104,l0) a8(r108,l0) a6(r113,l0) a9(r91,l0) a12(r125,l0) a18(r122,l0) a19(r127,l0) a20(r120,l0) a21(r118,l0) a23(r119,l0) a24(r117,l0) a29(r111,l0) a30(r110,l0) a28(r112,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a4(r126,l0) conflicts: a5(r104,l0) a3(r107,l0) a8(r108,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r104,l0) conflicts: a0(r106,l0) a4(r126,l0) a3(r107,l0) a8(r108,l0) a18(r122,l0) a19(r127,l0) a20(r120,l0) a21(r118,l0) a23(r119,l0) a24(r117,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a6(r113,l0) conflicts: a3(r107,l0) a8(r108,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a7(r114,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r108,l0) conflicts: a0(r106,l0) a4(r126,l0) a5(r104,l0) a3(r107,l0) a6(r113,l0) a9(r91,l0) a18(r122,l0) a19(r127,l0) a20(r120,l0) a21(r118,l0) a23(r119,l0) a24(r117,l0) a29(r111,l0) a30(r110,l0) a28(r112,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a9(r91,l0) conflicts: a3(r107,l0) a8(r108,l0) a29(r111,l0) a30(r110,l0) a28(r112,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r109,l0) conflicts:
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

;; a11(r82,l0) conflicts: a0(r106,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r125,l0) conflicts: a3(r107,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r124,l0) conflicts:
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a18(r122,l0) conflicts: a0(r106,l0) a5(r104,l0) a3(r107,l0) a8(r108,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r127,l0) conflicts: a5(r104,l0) a3(r107,l0) a8(r108,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r120,l0) conflicts: a5(r104,l0) a3(r107,l0) a8(r108,l0) a21(r118,l0)
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

;; a21(r118,l0) conflicts: a5(r104,l0) a3(r107,l0) a8(r108,l0) a20(r120,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a22(r121,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r119,l0) conflicts: a5(r104,l0) a3(r107,l0) a8(r108,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a24(r117,l0) conflicts: a5(r104,l0) a3(r107,l0) a8(r108,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a28(r112,l0) conflicts: a3(r107,l0) a8(r108,l0) a9(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a29(r111,l0) conflicts: a3(r107,l0) a8(r108,l0) a9(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a30(r110,l0) conflicts: a3(r107,l0) a8(r108,l0) a9(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a21(r118)<->a23(r119)@37:shuffle
  cp1:a20(r120)<->a22(r121)@37:shuffle
  cp2:a0(r106)<->a19(r127)@298:move
  cp3:a1(r115)<->a2(r116)@2:shuffle
  cp4:a6(r113)<->a7(r114)@6:shuffle
  cp5:a10(r109)<->a11(r82)@2:shuffle
  cp6:a3(r107)<->a13(r124)@208:move
  cp7:a8(r108)<->a12(r125)@208:move
  pref0:a19(r127)<-hr0@447
  pref1:a4(r126)<-hr0@82
  pref2:a12(r125)<-hr4@312
  pref3:a13(r124)<-hr5@312
  pref4:a20(r120)<-hr5@447
  pref5:a21(r118)<-hr4@447
  pref6:a1(r115)<-hr5@27
  pref7:a6(r113)<-hr5@82
  pref8:a10(r109)<-hr5@25
  pref9:a0(r106)<-hr0@258
  regions=3, blocks=16, points=46
    allocnos=31 (big 0), copies=8, conflicts=0, ranges=32

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r106 1r115 2r116 3r107 4r126 5r104 6r113 7r114 8r108 9r91 10r109 11r82 12r125 13r124 18r122 19r127 20r120 21r118 22r121 23r119 24r117 28r112 29r111 30r110
    modified regnos: 82 91 104 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 124 125 126 127
    border:
    Pressure: GENERAL_REGS=6
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@155218
          2:( 0 2-6 36-43)@10728
            3:( 0 2 3 5 6 36-43)@17373
              4:( 2 3 6 36-43)@56006
      Spill a7(r114,l0)
      Spill a22(r121,l0)
      Allocno a0r106 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a1r115 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 36-43, node:  0 2 3 5 6 36-43 (confl regs =  1 4 7-35 44-74)
      Allocno a2r116 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a3r107 of GENERAL_REGS(15) has 11 avail. regs  2 3 6 36-43, node:  2 3 6 36-43 (confl regs =  0 1 4 5 7-35 44-74)
      Allocno a4r126 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a5r104 of GENERAL_REGS(15) has 11 avail. regs  2 3 6 36-43, node:  2 3 6 36-43 (confl regs =  0 1 4 5 7-35 44-74)
      Allocno a6r113 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, ^node:  0-6 36-43 (confl regs =  4 7-35 44-74)
      Allocno a8r108 of GENERAL_REGS(15) has 11 avail. regs  2 3 6 36-43, node:  2 3 6 36-43 (confl regs =  0 1 4 5 7-35 44-74)
      Allocno a9r91 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a10r109 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 36-43, node:  0 2 3 5 6 36-43 (confl regs =  1 4 7-35 44-74)
      Allocno a11r82 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a12r125 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a13r124 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, ^node:  0-6 36-43 (confl regs =  4 7-35 44-74)
      Allocno a18r122 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a19r127 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a20r120 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 36-43, node:  0 2 3 5 6 36-43 (confl regs =  1 4 7-35 44-74)
      Allocno a21r118 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 36-43, node:  0 2-6 36-43 (confl regs =  1 7-35 44-74)
      Allocno a23r119 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a24r117 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a28r112 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a29r111 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a30r110 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Forming thread by copy 2:a0r106-a19r127 (freq=298):
        Result (freq=1218): a0r106(622) a19r127(596)
      Forming thread by copy 0:a21r118-a23r119 (freq=37):
        Result (freq=1192): a21r118(596) a23r119(596)
      Forming thread by copy 1:a20r120-a22r121 (freq=37):
        Result (freq=1192): a20r120(596) a22r121(596)
      Forming thread by copy 4:a6r113-a7r114 (freq=6):
        Result (freq=220): a6r113(110) a7r114(110)
      Forming thread by copy 3:a1r115-a2r116 (freq=2):
        Result (freq=72): a1r115(36) a2r116(36)
      Forming thread by copy 5:a10r109-a11r82 (freq=2):
        Result (freq=191): a10r109(34) a11r82(157)
      Pushing a2(r116,l0)(cost 0)
      Pushing a1(r115,l0)(cost 0)
      Pushing a4(r126,l0)(cost 0)
      Pushing a10(r109,l0)(cost 0)
      Pushing a11(r82,l0)(cost 0)
      Pushing a6(r113,l0)(cost 0)
      Pushing a13(r124,l0)(cost 0)
      Pushing a12(r125,l0)(cost 0)
      Pushing a24(r117,l0)(cost 0)
      Pushing a18(r122,l0)(cost 0)
      Pushing a23(r119,l0)(cost 0)
      Forming thread by copy 6:a3r107-a13r124 (freq=208):
        Result (freq=2308): a3r107(1892) a13r124(416)
        Making a3(r107,l0) colorable
      Forming thread by copy 7:a8r108-a12r125 (freq=208):
        Result (freq=2023): a8r108(1607) a12r125(416)
        Making a8(r108,l0) colorable
      Pushing a21(r118,l0)(cost 0)
      Pushing a20(r120,l0)(cost 0)
      Pushing a19(r127,l0)(cost 0)
      Pushing a0(r106,l0)(cost 0)
      Pushing a5(r104,l0)(cost 0)
      Pushing a28(r112,l0)(cost 0)
      Pushing a30(r110,l0)(cost 0)
      Pushing a29(r111,l0)(cost 0)
      Pushing a8(r108,l0)(cost 8243)
      Pushing a3(r107,l0)(cost 13470)
      Pushing a9(r91,l0)(cost 0)
      Popping a9(r91,l0)  -- assign reg 0
      Popping a3(r107,l0)  -- assign reg 3
      Popping a8(r108,l0)  -- assign reg 6
      Popping a29(r111,l0)  -- assign reg 1
      Popping a30(r110,l0)  -- assign reg 1
      Popping a28(r112,l0)  -- assign reg 1
      Popping a5(r104,l0)  -- assign reg 40
      Popping a0(r106,l0)  -- assign reg 0
      Popping a19(r127,l0)  -- assign reg 0
      Popping a20(r120,l0)  -- assign reg 5
      Popping a21(r118,l0)  -- assign reg 4
      Popping a23(r119,l0)  -- assign reg 4
      Popping a18(r122,l0)  -- assign reg 1
      Popping a24(r117,l0)  -- assign reg 0
      Popping a12(r125,l0)  -- assign reg 4
      Popping a13(r124,l0)  -- assign reg 5
      Popping a6(r113,l0)  -- assign reg 5
      Popping a11(r82,l0)  -- assign reg 5
      Popping a10(r109,l0)  -- assign reg 5
      Popping a4(r126,l0)  -- assign reg 0
      Popping a1(r115,l0)  -- assign reg 5
      Popping a2(r116,l0)  -- assign reg 5
Disposition:
   11:r82  l0     5    9:r91  l0     0    5:r104 l0    40    0:r106 l0     0
    3:r107 l0     3    8:r108 l0     6   10:r109 l0     5   30:r110 l0     1
   29:r111 l0     1   28:r112 l0     1    6:r113 l0     5    7:r114 l0   mem
    1:r115 l0     5    2:r116 l0     5   24:r117 l0     0   21:r118 l0     4
   23:r119 l0     4   20:r120 l0     5   22:r121 l0   mem   18:r122 l0     1
   13:r124 l0     5   12:r125 l0     4    4:r126 l0     0   19:r127 l0     0
New iteration of spill/restore move
+++Costs: overall 2609, reg 491, mem 2118, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_load

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,4u} r1={8d,3u} r2={5d} r4={9d,5u} r5={9d,5u} r6={1d,15u} r7={1d,19u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,14u} r17={17d,7u} r18={4d} r19={1d,15u} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={5d} r37={5d} r38={4d} r39={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r82={1d,2u} r91={2d,5u} r104={2d,5u} r106={4d,3u} r107={1d,7u,4e} r108={1d,4u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} 
;;    total ref usage 476{341d,131u,4e} in 91{87 regular + 4 call} insns.
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 223437739 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [always]  count:223437739 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 107 108 124 125
(note 10 1 137 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 137 10 2 2 (set (reg:DI 124)
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_stl.c":27:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ arg ])
        (nil)))
(insn 2 137 138 2 (set (reg/v/f:DI 107 [ arg ])
        (reg:DI 124)) "cmodules/fbgc_stl.c":27:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 124)
        (nil)))
(insn 138 2 3 2 (set (reg:SI 125)
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_stl.c":27:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ argc ])
        (nil)))
(insn 3 138 4 2 (set (reg/v:SI 108 [ argc ])
        (reg:SI 125)) "cmodules/fbgc_stl.c":27:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 125)
        (nil)))
(note 4 3 12 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 12 4 13 2 (debug_marker) "cmodules/fbgc_stl.c":34:2 -1
     (nil))
(debug_insn 13 12 14 2 (var_location:DI res (const_int 0 [0])) "cmodules/fbgc_stl.c":34:23 -1
     (nil))
(debug_insn 14 13 15 2 (debug_marker) "cmodules/fbgc_stl.c":36:2 -1
     (nil))
(insn 15 14 16 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 108 [ argc ])
            (const_int 1 [0x1]))) "cmodules/fbgc_stl.c":36:4 11 {*cmpsi_1}
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (ne (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "cmodules/fbgc_stl.c":36:4 659 {*jcc}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 31)
;;  succ:       3 [34.0% (guessed)]  count:75968832 (estimated locally) (FALLTHRU)
;;              5 [66.0% (guessed)]  count:147468907 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 17 [flags] 19 [frame] 107 108

;; basic block 3, loop depth 0, count 75968831 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [34.0% (guessed)]  count:75968832 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 107
;; lr  def 	 17 [flags] 82 106
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 18 17 19 3 (debug_marker) "cmodules/fbgc_stl.c":37:3 -1
     (nil))
(insn 19 18 9 3 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (reg/v/f:DI 107 [ arg ]) [1 *arg_17(D)+0 S8 A64])) "cmodules/fbgc_stl.c":37:9 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 107 [ arg ])
        (nil)))
(insn 9 19 20 3 (set (reg/v/f:DI 106 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_stl.c":34:23 66 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 20 9 21 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 82 [ _1 ]) [0 _1->type+0 S1 A8])
            (const_int 6 [0x6]))) "cmodules/fbgc_stl.c":37:5 9 {*cmpqi_1}
     (nil))
(jump_insn 21 20 22 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 111)
            (pc))) "cmodules/fbgc_stl.c":37:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 813466812 (nil)))
 -> 111)
;;  succ:       4 [24.2% (guessed)]  count:18414844 (estimated locally) (FALLTHRU)
;;              15 [75.8% (guessed)]  count:57553987 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 106

;; basic block 4, loop depth 0, count 18414845 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [24.2% (guessed)]  count:18414844 (estimated locally) (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(6){ }u16(7){ }u17(16){ }u18(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 109
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 23 22 24 4 (debug_marker) "cmodules/fbgc_stl.c":38:4 -1
     (nil))
(insn 24 23 25 4 (parallel [
            (set (reg/f:DI 109)
                (plus:DI (reg/f:DI 82 [ _1 ])
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":38:28 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 82 [ _1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 25 24 26 4 (set (reg:SI 1 dx)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":38:11 67 {*movsi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:DI 4 si)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":38:11 66 {*movdi_internal}
     (nil))
(insn 27 26 28 4 (set (reg:DI 5 di)
        (reg/f:DI 109)) "cmodules/fbgc_stl.c":38:11 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 109)
        (nil)))
(call_insn/j 28 27 29 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fbgc_load_module") [flags 0x41]  <function_decl 0x7f626c82cb00 fbgc_load_module>) [0 fbgc_load_module S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":38:11 681 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("fbgc_load_module") [flags 0x41]  <function_decl 0x7f626c82cb00 fbgc_load_module>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       EXIT [always]  count:18414845 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 29 28 31)
;; basic block 5, loop depth 0, count 147468908 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [66.0% (guessed)]  count:147468907 (estimated locally)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(6){ }u26(7){ }u27(16){ }u28(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 17 [flags] 19 [frame] 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 17 [flags] 19 [frame]
;; lr  def 	
(code_label 31 29 32 5 35 (nil) [1 uses])
(note 32 31 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 33 32 37 5 (debug_marker) "cmodules/fbgc_stl.c":40:7 -1
     (nil))
(jump_insn 37 33 120 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 124)
            (pc))) "cmodules/fbgc_stl.c":40:9 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 237404324 (nil)))
 -> 124)
;;  succ:       6 [77.9% (guessed)]  count:114863532 (estimated locally) (FALLTHRU)
;;              13 [22.1% (guessed)]  count:32605376 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 107 108

;; basic block 6, loop depth 0, count 114863532 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [77.9% (guessed)]  count:114863532 (estimated locally) (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u30(6){ }u31(7){ }u32(16){ }u33(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 91
(note 120 37 5 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 5 120 50 6 (set (reg/v:QI 91 [ i ])
        (const_int 0 [0])) "cmodules/fbgc_stl.c":41:15 69 {*movqi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       7 [always]  count:114863532 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 91 107 108

;; basic block 7, loop depth 1, count 1014686024 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL)
;;  pred:       6 [always]  count:114863532 (estimated locally) (FALLTHRU)
;;              8 [94.5% (guessed)]  count:906139987 (estimated locally) (DFS_BACK)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u34(6){ }u35(7){ }u36(16){ }u37(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 91 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 91 107
;; lr  def 	 17 [flags] 110 111
(code_label 50 5 38 7 37 (nil) [1 uses])
(note 38 50 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 39 38 40 7 (var_location:QI i (reg/v:QI 91 [ i ])) -1
     (nil))
(debug_insn 40 39 41 7 (debug_marker) "cmodules/fbgc_stl.c":42:4 -1
     (nil))
(insn 41 40 42 7 (set (reg:DI 110 [ i ])
        (zero_extend:DI (reg/v:QI 91 [ i ]))) "cmodules/fbgc_stl.c":42:10 115 {zero_extendqidi2}
     (nil))
(insn 42 41 43 7 (set (reg/f:DI 111 [ *_7 ])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 110 [ i ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 107 [ arg ])) [1 *_7+0 S8 A64])) "cmodules/fbgc_stl.c":42:13 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110 [ i ])
        (nil)))
(insn 43 42 44 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 111 [ *_7 ]) [0 _8->type+0 S1 A8])
            (const_int 6 [0x6]))) "cmodules/fbgc_stl.c":42:6 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg/f:DI 111 [ *_7 ])
        (nil)))
(jump_insn 44 43 45 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 128)
            (pc))) "cmodules/fbgc_stl.c":42:6 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 59055804 (nil)))
 -> 128)
;;  succ:       14 [5.5% (guessed)]  count:55807731 (estimated locally) (LOOP_EXIT)
;;              8 [94.5% (guessed)]  count:958878293 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 91 107 108

;; basic block 8, loop depth 1, count 958878293 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [94.5% (guessed)]  count:958878293 (estimated locally) (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u44(6){ }u45(7){ }u46(16){ }u47(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 91 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 91 108
;; lr  def 	 17 [flags] 91 112
(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 46 45 47 8 (debug_marker) "cmodules/fbgc_stl.c":41:30 -1
     (nil))
(insn 47 46 48 8 (parallel [
            (set (reg/v:QI 91 [ i ])
                (plus:QI (reg/v:QI 91 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":41:30 194 {*addqi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 48 47 49 8 (var_location:QI i (reg/v:QI 91 [ i ])) -1
     (nil))
(debug_insn 49 48 51 8 (debug_marker) "cmodules/fbgc_stl.c":41:22 -1
     (nil))
(insn 51 49 52 8 (set (reg:SI 112 [ i ])
        (zero_extend:SI (reg/v:QI 91 [ i ]))) "cmodules/fbgc_stl.c":41:23 119 {*zero_extendqisi2}
     (nil))
(insn 52 51 53 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 112 [ i ])
            (reg/v:SI 108 [ argc ]))) "cmodules/fbgc_stl.c":41:3 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 112 [ i ])
        (nil)))
(jump_insn 53 52 54 8 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 50)
            (pc))) "cmodules/fbgc_stl.c":41:3 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 1014686028 (nil)))
 -> 50)
;;  succ:       7 [94.5% (guessed)]  count:906139987 (estimated locally) (DFS_BACK)
;;              9 [5.5% (guessed)]  count:52738306 (estimated locally) (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 91 107 108

;; basic block 9, loop depth 0, count 59055800 (estimated locally), maybe hot
;; Invalid sum of incoming counts 52738306 (estimated locally), should be 59055800 (estimated locally)
;;  prev block 8, next block 10, flags: (HOT_PARTITION, RTL)
;;  pred:       8 [5.5% (guessed)]  count:52738306 (estimated locally) (FALLTHRU,LOOP_EXIT)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u54(6){ }u55(7){ }u56(16){ }u57(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 107
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 104 113 114 126
(note 54 53 55 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 55 54 56 9 (var_location:DI arg (reg/v/f:DI 107 [ arg ])) -1
     (nil))
(debug_insn 56 55 57 9 (var_location:SI argc (reg/v:SI 108 [ argc ])) -1
     (nil))
(debug_insn 57 56 58 9 (debug_marker:BLK) "cmodules/fbgc_stl.c":26:1 -1
     (nil))
(debug_insn 58 57 59 9 (debug_marker) "cmodules/fbgc_stl.c":45:3 -1
     (nil))
(insn 59 58 60 9 (set (reg/f:DI 114 [ MEM[(struct fbgc_object * *)arg_17(D) + 8B] ])
        (mem/f:DI (plus:DI (reg/v/f:DI 107 [ arg ])
                (const_int 8 [0x8])) [1 MEM[(struct fbgc_object * *)arg_17(D) + 8B]+0 S8 A64])) "cmodules/fbgc_stl.c":45:17 66 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 107 [ arg ])
                (const_int 8 [0x8])) [1 MEM[(struct fbgc_object * *)arg_17(D) + 8B]+0 S8 A64])
        (nil)))
(insn 60 59 61 9 (parallel [
            (set (reg/f:DI 113)
                (plus:DI (reg/f:DI 114 [ MEM[(struct fbgc_object * *)arg_17(D) + 8B] ])
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":45:17 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 114 [ MEM[(struct fbgc_object * *)arg_17(D) + 8B] ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f:DI (plus:DI (reg/v/f:DI 107 [ arg ])
                            (const_int 8 [0x8])) [1 MEM[(struct fbgc_object * *)arg_17(D) + 8B]+0 S8 A64])
                    (const_int 13 [0xd]))
                (nil)))))
(insn 61 60 62 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f626c461d80 *.LC5>)) "cmodules/fbgc_stl.c":45:7 66 {*movdi_internal}
     (nil))
(insn 62 61 63 9 (set (reg:DI 5 di)
        (reg/f:DI 113)) "cmodules/fbgc_stl.c":45:7 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 113)
        (nil)))
(call_insn 63 62 139 9 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("my_strcmp") [flags 0x41]  <function_decl 0x7f626c806900 my_strcmp>) [0 my_strcmp S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":45:7 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("my_strcmp") [flags 0x41]  <function_decl 0x7f626c806900 my_strcmp>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 139 63 64 9 (set (reg:QI 126)
        (reg:QI 0 ax)) "cmodules/fbgc_stl.c":45:7 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(note 64 139 6 9 NOTE_INSN_DELETED)
(insn 6 64 65 9 (set (reg/v:QI 104 [ i ])
        (const_int 1 [0x1])) "cmodules/fbgc_stl.c":50:16 69 {*movqi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 65 6 66 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 126)
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":45:5 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 126)
        (nil)))
(jump_insn 66 65 67 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 77)
            (pc))) "cmodules/fbgc_stl.c":45:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 719407028 (nil)))
 -> 77)
;;  succ:       10 [33.0% (guessed)]  count:19488414 (estimated locally) (FALLTHRU)
;;              11 [67.0% (guessed)]  count:39567386 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 104 107 108

;; basic block 10, loop depth 0, count 19488414 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (HOT_PARTITION, RTL)
;;  pred:       9 [33.0% (guessed)]  count:19488414 (estimated locally) (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u70(6){ }u71(7){ }u72(16){ }u73(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 107
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 115 116
(note 67 66 68 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 68 67 69 10 (debug_marker) "cmodules/fbgc_stl.c":46:4 -1
     (nil))
(insn 69 68 70 10 (set (reg/f:DI 116 [ *arg_17(D) ])
        (mem/f:DI (reg/v/f:DI 107 [ arg ]) [1 *arg_17(D)+0 S8 A64])) "cmodules/fbgc_stl.c":46:27 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 107 [ arg ])
        (nil)))
(insn 70 69 71 10 (parallel [
            (set (reg/f:DI 115)
                (plus:DI (reg/f:DI 116 [ *arg_17(D) ])
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":46:27 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 116 [ *arg_17(D) ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 71 70 72 10 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "cmodules/fbgc_stl.c":46:10 67 {*movsi_internal}
     (nil))
(insn 72 71 73 10 (set (reg:DI 4 si)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":46:10 66 {*movdi_internal}
     (nil))
(insn 73 72 74 10 (set (reg:DI 5 di)
        (reg/f:DI 115)) "cmodules/fbgc_stl.c":46:10 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 115)
        (nil)))
(call_insn/j 74 73 75 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fbgc_load_module") [flags 0x41]  <function_decl 0x7f626c82cb00 fbgc_load_module>) [0 fbgc_load_module S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":46:10 681 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("fbgc_load_module") [flags 0x41]  <function_decl 0x7f626c82cb00 fbgc_load_module>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       EXIT [always]  count:19488414 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 75 74 77)
;; basic block 11, loop depth 1, count 320136127 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (HOT_PARTITION, RTL)
;;  pred:       9 [67.0% (guessed)]  count:39567386 (estimated locally)
;;              11 [89.0% (guessed)]  count:284921153 (estimated locally) (DFS_BACK)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u81(6){ }u82(7){ }u83(16){ }u84(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 104 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 104 107 108
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 104 106 117 118 119 120 121 122 127
(code_label 77 75 78 11 38 (nil) [2 uses])
(note 78 77 79 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 79 78 80 11 (var_location:QI i (reg/v:QI 104 [ i ])) -1
     (nil))
(debug_insn 80 79 81 11 (var_location:DI res (const_int 0 [0])) -1
     (nil))
(debug_insn 81 80 82 11 (debug_marker) "cmodules/fbgc_stl.c":51:5 -1
     (nil))
(insn 82 81 83 11 (set (reg:DI 117 [ i ])
        (zero_extend:DI (reg/v:QI 104 [ i ]))) "cmodules/fbgc_stl.c":51:60 115 {zero_extendqidi2}
     (nil))
(insn 83 82 84 11 (set (reg/f:DI 119 [ *_30 ])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 117 [ i ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 107 [ arg ])) [1 *_30+0 S8 A64])) "cmodules/fbgc_stl.c":51:60 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 117 [ i ])
        (nil)))
(insn 84 83 85 11 (parallel [
            (set (reg/f:DI 118)
                (plus:DI (reg/f:DI 119 [ *_30 ])
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":51:60 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 119 [ *_30 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 85 84 86 11 (set (reg/f:DI 121 [ *arg_17(D) ])
        (mem/f:DI (reg/v/f:DI 107 [ arg ]) [1 *arg_17(D)+0 S8 A64])) "cmodules/fbgc_stl.c":51:28 66 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 107 [ arg ]) [1 *arg_17(D)+0 S8 A64])
        (nil)))
(insn 86 85 87 11 (parallel [
            (set (reg/f:DI 120)
                (plus:DI (reg/f:DI 121 [ *arg_17(D) ])
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":51:28 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 121 [ *arg_17(D) ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f:DI (reg/v/f:DI 107 [ arg ]) [1 *arg_17(D)+0 S8 A64])
                    (const_int 13 [0xd]))
                (nil)))))
(insn 87 86 88 11 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) "cmodules/fbgc_stl.c":51:11 67 {*movsi_internal}
     (nil))
(insn 88 87 89 11 (set (reg:DI 4 si)
        (reg/f:DI 118)) "cmodules/fbgc_stl.c":51:11 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 118)
        (nil)))
(insn 89 88 90 11 (set (reg:DI 5 di)
        (reg/f:DI 120)) "cmodules/fbgc_stl.c":51:11 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 120)
        (nil)))
(call_insn 90 89 140 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fbgc_load_module") [flags 0x41]  <function_decl 0x7f626c82cb00 fbgc_load_module>) [0 fbgc_load_module S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":51:11 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("fbgc_load_module") [flags 0x41]  <function_decl 0x7f626c82cb00 fbgc_load_module>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 140 90 91 11 (set (reg:DI 127)
        (reg:DI 0 ax)) "cmodules/fbgc_stl.c":51:11 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 91 140 92 11 (set (reg/v/f:DI 106 [ <retval> ])
        (reg:DI 127)) "cmodules/fbgc_stl.c":51:11 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 127)
        (nil)))
(debug_insn 92 91 93 11 (var_location:DI res (reg/v/f:DI 106 [ <retval> ])) "cmodules/fbgc_stl.c":51:11 -1
     (nil))
(debug_insn 93 92 94 11 (debug_marker) "cmodules/fbgc_stl.c":50:31 -1
     (nil))
(insn 94 93 95 11 (parallel [
            (set (reg/v:QI 104 [ i ])
                (plus:QI (reg/v:QI 104 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":50:31 194 {*addqi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 95 94 96 11 (var_location:QI i (reg/v:QI 104 [ i ])) -1
     (nil))
(debug_insn 96 95 97 11 (var_location:DI res (reg/v/f:DI 106 [ <retval> ])) -1
     (nil))
(debug_insn 97 96 98 11 (debug_marker) "cmodules/fbgc_stl.c":50:23 -1
     (nil))
(insn 98 97 99 11 (set (reg:SI 122 [ i ])
        (zero_extend:SI (reg/v:QI 104 [ i ]))) "cmodules/fbgc_stl.c":50:24 119 {*zero_extendqisi2}
     (nil))
(insn 99 98 100 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 108 [ argc ])
            (reg:SI 122 [ i ]))) "cmodules/fbgc_stl.c":50:4 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 122 [ i ])
        (nil)))
(jump_insn 100 99 141 11 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 77)
            (pc))) "cmodules/fbgc_stl.c":50:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 77)
;;  succ:       11 [89.0% (guessed)]  count:284921153 (estimated locally) (DFS_BACK)
;;              12 [11.0% (guessed)]  count:35214974 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 104 106 107 108

;; basic block 12, loop depth 0, count 35214974 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (HOT_PARTITION, RTL)
;;  pred:       11 [11.0% (guessed)]  count:35214974 (estimated locally) (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 106
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 141 100 142 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(jump_insn 142 141 143 12 (set (pc)
        (label_ref 111)) 660 {jump}
     (nil)
 -> 111)
;;  succ:       15 [always]  count:35214974 (estimated locally) (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 106

(barrier 143 142 124)
;; basic block 13, loop depth 0, count 32605376 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [22.1% (guessed)]  count:32605376 (estimated locally)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u108(6){ }u109(7){ }u110(16){ }u111(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 106
(code_label 124 143 123 13 40 (nil) [1 uses])
(note 123 124 8 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 8 123 144 13 (set (reg/v/f:DI 106 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_stl.c":34:23 66 {*movdi_internal}
     (nil))
(jump_insn 144 8 145 13 (set (pc)
        (label_ref 111)) 660 {jump}
     (nil)
 -> 111)
;;  succ:       15 [always]  count:32605376 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 106

(barrier 145 144 128)
;; basic block 14, loop depth 0, count 55807731 (estimated locally), maybe hot
;;  prev block 13, next block 15, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [5.5% (guessed)]  count:55807731 (estimated locally) (LOOP_EXIT)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u112(6){ }u113(7){ }u114(16){ }u115(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 106
(code_label 128 145 127 14 41 (nil) [1 uses])
(note 127 128 7 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 7 127 103 14 (set (reg/v/f:DI 106 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_stl.c":34:23 66 {*movdi_internal}
     (nil))
(debug_insn 103 7 104 14 (var_location:DI arg (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 104 103 105 14 (var_location:SI argc (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 105 104 106 14 (var_location:DI res (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 106 105 107 14 (var_location:QI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 107 106 108 14 (var_location:QI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 108 107 111 14 (var_location:DI res (clobber (const_int 0 [0]))) -1
     (nil))
;;  succ:       15 [always]  count:55807731 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 106

;; basic block 15, loop depth 0, count 185534479 (estimated locally), maybe hot
;; Invalid sum of incoming counts 181182068 (estimated locally), should be 185534479 (estimated locally)
;;  prev block 14, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       14 [always]  count:55807731 (estimated locally) (FALLTHRU)
;;              12 [always]  count:35214974 (estimated locally) (LOOP_EXIT)
;;              3 [75.8% (guessed)]  count:57553987 (estimated locally)
;;              13 [always]  count:32605376 (estimated locally)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u116(6){ }u117(7){ }u118(16){ }u119(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 106
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 106
;; lr  def 	 0 [ax]
(code_label 111 108 114 15 34 (nil) [3 uses])
(note 114 111 112 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 112 114 113 15 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 106 [ <retval> ])) "cmodules/fbgc_stl.c":59:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 106 [ <retval> ])
        (nil)))
(insn 113 112 0 15 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":59:1 -1
     (nil))
;;  succ:       EXIT [always]  count:185534479 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function fbgc_type (fbgc_type, funcdef_no=59, decl_uid=5717, cgraph_uid=60, symbol_order=65)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 1 }
Will split live ranges of parameters at BB 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 91 uninteresting
Reg 86: def dominates all uses has unique first use
Reg 92 uninteresting
Reg 87 uninteresting
Reg 88 uninteresting
Reg 89 uninteresting
Reg 86 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a4 (r92,l0) best SIREG, allocno SIREG
    a5 (r91,l0) best DIREG, allocno DIREG
    a1 (r89,l0) best DIREG, allocno DIREG
    a2 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best DREG, allocno DREG
    a3 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:1212,1212 DREG:-606,-606 CREG:1212,1212 BREG:1212,1212 SIREG:1212,1212 DIREG:1212,1212 AD_REGS:1212,1212 CLOBBERED_REGS:1212,1212 Q_REGS:1212,1212 NON_Q_REGS:1212,1212 TLS_GOTBASE_REGS:1212,1212 GENERAL_REGS:1212,1212 SSE_FIRST_REG:18848,18848 NO_REX_SSE_REGS:18848,18848 SSE_REGS:18848,18848 MMX_REGS:26878,26878 INT_SSE_REGS:26878,26878 ALL_REGS:440472,440472 MEM:9636,9636
  a1(r89,l0) costs: AREG:786,786 DREG:786,786 CREG:786,786 BREG:786,786 SIREG:786,786 DIREG:-393,-393 AD_REGS:786,786 CLOBBERED_REGS:786,786 Q_REGS:786,786 NON_Q_REGS:786,786 TLS_GOTBASE_REGS:786,786 GENERAL_REGS:786,786 SSE_FIRST_REG:6288,6288 NO_REX_SSE_REGS:6288,6288 SSE_REGS:6288,6288 MMX_REGS:10218,10218 INT_SSE_REGS:10218,10218 ALL_REGS:166632,166632 MEM:4716,4716
  a2(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:6288,6288 NO_REX_SSE_REGS:6288,6288 SSE_REGS:6288,6288 MMX_REGS:9825,9825 INT_SSE_REGS:9825,9825 ALL_REGS:124974,124974 MEM:4716,4716
  a3(r86,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:9144,9144 NO_REX_SSE_REGS:9144,9144 SSE_REGS:9144,9144 MMX_REGS:11109,11109 INT_SSE_REGS:11109,11109 ALL_REGS:183316,183316 MEM:3358,3358
  a4(r92,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:-1000,-1000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a5(r91,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:-1000,-1000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000


Pass 1 for finding pseudo/allocno costs

    r92: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r87: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:2424,2424 DREG:1212,-606 CREG:2424,2424 BREG:2424,2424 SIREG:2424,2424 DIREG:2424,2424 AD_REGS:1212,1212 CLOBBERED_REGS:1212,1212 Q_REGS:1212,1212 NON_Q_REGS:2424,2424 TLS_GOTBASE_REGS:1212,1212 GENERAL_REGS:1212,1212 SSE_FIRST_REG:25696,25696 NO_REX_SSE_REGS:25696,25696 SSE_REGS:25696,25696 MMX_REGS:40756,40756 INT_SSE_REGS:32878,32878 ALL_REGS:446472,446472 MEM:18272,18272
  a1(r89,l0) costs: AREG:1572,1572 DREG:1572,1572 CREG:1572,1572 BREG:1572,1572 SIREG:1572,1572 DIREG:786,-393 AD_REGS:1572,1572 CLOBBERED_REGS:786,786 Q_REGS:1572,1572 NON_Q_REGS:786,786 TLS_GOTBASE_REGS:786,786 GENERAL_REGS:786,786 SSE_FIRST_REG:9432,9432 NO_REX_SSE_REGS:9432,9432 SSE_REGS:9432,9432 MMX_REGS:15327,15327 INT_SSE_REGS:10218,10218 ALL_REGS:166632,166632 MEM:7074,7074
  a2(r88,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:6288,6288 NO_REX_SSE_REGS:6288,6288 SSE_REGS:6288,6288 MMX_REGS:10218,10218 INT_SSE_REGS:10218,10218 ALL_REGS:127332,127332 MEM:4716,4716
  a3(r86,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11144,11144 NO_REX_SSE_REGS:11144,11144 SSE_REGS:11144,11144 MMX_REGS:17109,17109 INT_SSE_REGS:17109,17109 ALL_REGS:189316,189316 MEM:8358,8358
  a4(r92,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:2000,-1000 DIREG:4000,4000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000
  a5(r91,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:2000,-1000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000

   Insn 38(l0): point = 0
   Insn 37(l0): point = 2
   Insn 31(l0): point = 4
   Insn 30(l0): point = 6
   Insn 29(l0): point = 8
   Insn 28(l0): point = 10
   Insn 27(l0): point = 12
   Insn 21(l0): point = 15
   Insn 20(l0): point = 17
   Insn 19(l0): point = 19
   Insn 18(l0): point = 21
   Insn 10(l0): point = 24
   Insn 9(l0): point = 26
   Insn 3(l0): point = 28
   Insn 41(l0): point = 30
   Insn 2(l0): point = 32
   Insn 40(l0): point = 34
 a0(r87): [24..28] [13..14]
 a1(r89): [18..19]
 a2(r88): [20..21]
 a3(r86): [22..32]
 a4(r92): [29..30]
 a5(r91): [33..34]
Compressing live ranges: from 37 to 12 - 32%
Ranges after the compression:
 a0(r87): [6..7] [0..1]
 a1(r89): [2..3]
 a2(r88): [4..5]
 a3(r86): [6..9]
 a4(r92): [8..9]
 a5(r91): [10..11]
+++Allocating 40 bytes for conflict table (uncompressed size 48)
;; a0(r87,l0) conflicts: a3(r86,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r89,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r88,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r86,l0) conflicts: a0(r87,l0) a4(r92,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a4(r92,l0) conflicts: a3(r86,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r91,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a3(r86)<->a5(r91)@1000:move
  cp1:a0(r87)<->a4(r92)@1000:move
  pref0:a4(r92)<-hr4@1500
  pref1:a5(r91)<-hr5@1500
  pref2:a1(r89)<-hr5@589
  pref3:a0(r87)<-hr1@909
  regions=1, blocks=5, points=12
    allocnos=6 (big 0), copies=2, conflicts=0, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r87 1r89 2r88 3r86 4r92 5r91
    modified regnos: 86 87 88 89 91 92
    border:
    Pressure: GENERAL_REGS=4
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@98122
          2:( 0-3 5 6 36-43)@52716
      Allocno a0r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a1r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a2r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a3r86 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Allocno a4r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a5r91 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Forming thread by copy 0:a3r86-a5r91 (freq=1000):
        Result (freq=3393): a3r86(1393) a5r91(2000)
      Forming thread by copy 1:a0r87-a4r92 (freq=1000):
        Result (freq=4606): a0r87(2606) a4r92(2000)
      Pushing a2(r88,l0)(cost 0)
      Pushing a1(r89,l0)(cost 0)
      Pushing a3(r86,l0)(cost 0)
      Pushing a5(r91,l0)(cost 0)
      Pushing a4(r92,l0)(cost 0)
      Pushing a0(r87,l0)(cost 0)
      Popping a0(r87,l0)  -- assign reg 1
      Popping a4(r92,l0)  -- assign reg 4
      Popping a5(r91,l0)  -- assign reg 5
      Popping a3(r86,l0)  -- assign reg 5
      Popping a1(r89,l0)  -- assign reg 5
      Popping a2(r88,l0)  -- assign reg 0
Disposition:
    3:r86  l0     5    0:r87  l0     1    2:r88  l0     0    1:r89  l0     5
    5:r91  l0     5    4:r92  l0     4
New iteration of spill/restore move
+++Costs: overall -2999, reg -2999, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_type

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,3u} r1={4d,1u} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={3d,1u} r18={2d} r19={1d,4u} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r86={1d,2u} r87={1d,2u} r88={1d,1u} r89={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 201{166d,35u,0e} in 26{24 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 86 87 91 92
(note 6 1 40 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 40 6 2 2 (set (reg:DI 91)
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_stl.c":72:37 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ arg ])
        (nil)))
(insn 2 40 41 2 (set (reg/v/f:DI 86 [ arg ])
        (reg:DI 91)) "cmodules/fbgc_stl.c":72:37 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(insn 41 2 3 2 (set (reg:SI 92)
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_stl.c":72:37 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ argc ])
        (nil)))
(insn 3 41 4 2 (set (reg/v:SI 87 [ argc ])
        (reg:SI 92)) "cmodules/fbgc_stl.c":72:37 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92)
        (nil)))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 4 9 2 (debug_marker) "cmodules/fbgc_stl.c":73:2 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ argc ])
            (const_int 1 [0x1]))) "cmodules/fbgc_stl.c":73:4 11 {*cmpsi_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) "cmodules/fbgc_stl.c":73:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 650902300 (nil)))
 -> 24)
;;  succ:       3 [39.4% (guessed)]  count:422839528 (estimated locally) (FALLTHRU)
;;              4 [60.6% (guessed)]  count:650902296 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 86 87

;; basic block 3, loop depth 0, count 422839530 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [39.4% (guessed)]  count:422839528 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 86
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 88 89
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 12 11 13 3 (var_location:SI D#5 (const_int 1 [0x1])) -1
     (nil))
(debug_insn 13 12 14 3 (var_location:DI arg (reg/v/f:DI 86 [ arg ])) -1
     (nil))
(debug_insn 14 13 15 3 (debug_marker:BLK) "cmodules/fbgc_stl.c":72:1 -1
     (nil))
(debug_insn 15 14 16 3 (var_location:SI D#6 (debug_expr:SI D#5)) -1
     (nil))
(debug_insn 16 15 17 3 (var_location:SI argc (debug_expr:SI D#6)) -1
     (nil))
(debug_insn 17 16 18 3 (debug_marker) "cmodules/fbgc_stl.c":74:3 -1
     (nil))
(insn 18 17 19 3 (set (reg/f:DI 88 [ *arg_6(D) ])
        (mem/f:DI (reg/v/f:DI 86 [ arg ]) [1 *arg_6(D)+0 S8 A64])) "cmodules/fbgc_stl.c":74:36 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 86 [ arg ])
        (nil)))
(insn 19 18 20 3 (set (reg:SI 89 [ _9->type ])
        (zero_extend:SI (mem:QI (reg/f:DI 88 [ *arg_6(D) ]) [0 _9->type+0 S1 A8]))) "cmodules/fbgc_stl.c":74:10 119 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:DI 88 [ *arg_6(D) ])
        (nil)))
(insn 20 19 21 3 (set (reg:SI 5 di)
        (reg:SI 89 [ _9->type ])) "cmodules/fbgc_stl.c":74:10 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ _9->type ])
        (nil)))
(call_insn/j 21 20 22 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_int_object") [flags 0x41]  <function_decl 0x7f626c7fa500 new_fbgc_int_object>) [0 new_fbgc_int_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":74:10 681 {*sibcall_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_int_object") [flags 0x41]  <function_decl 0x7f626c7fa500 new_fbgc_int_object>)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:422839530 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 22 21 24)
;; basic block 4, loop depth 0, count 650902295 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [60.6% (guessed)]  count:650902296 (estimated locally)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(6){ }u19(7){ }u20(16){ }u21(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 87
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(code_label 24 22 25 4 53 (nil) [1 uses])
(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 26 25 27 4 (debug_marker) "cmodules/fbgc_stl.c":76:7 -1
     (nil))
(insn 27 26 28 4 (set (reg:SI 1 dx)
        (reg/v:SI 87 [ argc ])) "cmodules/fbgc_stl.c":76:7 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 87 [ argc ])
        (nil)))
(insn 28 27 29 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f626c44ecf0 *.LC4>)) "cmodules/fbgc_stl.c":76:7 66 {*movdi_internal}
     (nil))
(insn 29 28 30 4 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_stl.c":76:7 67 {*movsi_internal}
     (nil))
(insn 30 29 31 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":76:7 69 {*movqi_internal}
     (nil))
(call_insn 31 30 32 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":76:7 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(debug_insn 32 31 37 4 (debug_marker) "cmodules/fbgc_stl.c":77:2 -1
     (nil))
(insn 37 32 38 4 (set (reg/i:DI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":78:1 66 {*movdi_internal}
     (nil))
(insn 38 37 0 4 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":78:1 -1
     (nil))
;;  succ:       EXIT [always]  count:650902295 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function fbgc_int (fbgc_int, funcdef_no=60, decl_uid=5701, cgraph_uid=61, symbol_order=67)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 88 uninteresting
Reg 85: def dominates all uses has unique first use
Reg 89 uninteresting
Reg 86 uninteresting
Reg 90 uninteresting
Reg 83 uninteresting
Reg 85 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a2 (r90,l0) best AREG, allocno AREG
    a4 (r89,l0) best SIREG, allocno SIREG
    a5 (r88,l0) best DIREG, allocno DIREG
    a0 (r86,l0) best DREG, allocno DREG
    a3 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best DIREG, allocno DIREG

  a0(r86,l0) costs: AREG:1212,1212 DREG:-606,-606 CREG:1212,1212 BREG:1212,1212 SIREG:1212,1212 DIREG:1212,1212 AD_REGS:1212,1212 CLOBBERED_REGS:1212,1212 Q_REGS:1212,1212 NON_Q_REGS:1212,1212 TLS_GOTBASE_REGS:1212,1212 GENERAL_REGS:1212,1212 SSE_FIRST_REG:18848,18848 NO_REX_SSE_REGS:18848,18848 SSE_REGS:18848,18848 MMX_REGS:26878,26878 INT_SSE_REGS:26878,26878 ALL_REGS:440472,440472 MEM:9636,9636
  a1(r83,l0) costs: AREG:786,786 DREG:786,786 CREG:786,786 BREG:786,786 SIREG:786,786 DIREG:-393,-393 AD_REGS:786,786 CLOBBERED_REGS:786,786 Q_REGS:786,786 NON_Q_REGS:786,786 TLS_GOTBASE_REGS:786,786 GENERAL_REGS:786,786 SSE_FIRST_REG:5502,5502 NO_REX_SSE_REGS:5502,5502 SSE_REGS:5502,5502 MMX_REGS:7467,7467 INT_SSE_REGS:7467,7467 ALL_REGS:122616,122616 MEM:2751,2751
  a2(r90,l0) costs: AREG:-393,-393 DREG:786,786 CREG:786,786 BREG:786,786 SIREG:786,786 DIREG:786,786 AD_REGS:786,786 CLOBBERED_REGS:786,786 Q_REGS:786,786 NON_Q_REGS:786,786 TLS_GOTBASE_REGS:786,786 GENERAL_REGS:786,786 SSE_FIRST_REG:6288,6288 NO_REX_SSE_REGS:6288,6288 SSE_REGS:6288,6288 MMX_REGS:10218,10218 INT_SSE_REGS:10218,10218 ALL_REGS:166632,166632 MEM:4323,4323
  a3(r85,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:9144,9144 NO_REX_SSE_REGS:9144,9144 SSE_REGS:9144,9144 MMX_REGS:11109,11109 INT_SSE_REGS:11109,11109 ALL_REGS:183316,183316 MEM:3358,3358
  a4(r89,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:-1000,-1000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a5(r88,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:-1000,-1000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000


Pass 1 for finding pseudo/allocno costs

    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r86,l0) costs: AREG:2424,2424 DREG:1212,-606 CREG:2424,2424 BREG:2424,2424 SIREG:2424,2424 DIREG:2424,2424 AD_REGS:1212,1212 CLOBBERED_REGS:1212,1212 Q_REGS:1212,1212 NON_Q_REGS:2424,2424 TLS_GOTBASE_REGS:1212,1212 GENERAL_REGS:1212,1212 SSE_FIRST_REG:25696,25696 NO_REX_SSE_REGS:25696,25696 SSE_REGS:25696,25696 MMX_REGS:40756,40756 INT_SSE_REGS:32878,32878 ALL_REGS:446472,446472 MEM:18272,18272
  a1(r83,l0) costs: AREG:1572,1572 DREG:1572,1572 CREG:1572,1572 BREG:1572,1572 SIREG:1572,1572 DIREG:786,-393 AD_REGS:1572,1572 CLOBBERED_REGS:786,786 Q_REGS:1572,1572 NON_Q_REGS:786,786 TLS_GOTBASE_REGS:786,786 GENERAL_REGS:786,786 SSE_FIRST_REG:9432,9432 NO_REX_SSE_REGS:9432,9432 SSE_REGS:9432,9432 MMX_REGS:14934,14934 INT_SSE_REGS:9825,9825 ALL_REGS:124974,124974 MEM:7074,7074
  a2(r90,l0) costs: AREG:786,-393 DREG:1572,1572 CREG:1572,1572 BREG:1572,1572 SIREG:1572,1572 DIREG:1572,1572 AD_REGS:786,786 CLOBBERED_REGS:786,786 Q_REGS:786,786 NON_Q_REGS:1572,1572 TLS_GOTBASE_REGS:1572,1572 GENERAL_REGS:786,786 SSE_FIRST_REG:9432,9432 NO_REX_SSE_REGS:9432,9432 SSE_REGS:9432,9432 MMX_REGS:15327,15327 INT_SSE_REGS:10218,10218 ALL_REGS:166632,166632 MEM:6681,6681
  a3(r85,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11144,11144 NO_REX_SSE_REGS:11144,11144 SSE_REGS:11144,11144 MMX_REGS:17109,17109 INT_SSE_REGS:17109,17109 ALL_REGS:189316,189316 MEM:8358,8358
  a4(r89,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:2000,-1000 DIREG:4000,4000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000
  a5(r88,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:2000,-1000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000

   Insn 41(l0): point = 0
   Insn 40(l0): point = 2
   Insn 34(l0): point = 4
   Insn 33(l0): point = 6
   Insn 32(l0): point = 8
   Insn 31(l0): point = 10
   Insn 30(l0): point = 12
   Insn 24(l0): point = 15
   Insn 23(l0): point = 17
   Insn 20(l0): point = 19
   Insn 45(l0): point = 21
   Insn 19(l0): point = 23
   Insn 18(l0): point = 25
   Insn 10(l0): point = 28
   Insn 9(l0): point = 30
   Insn 3(l0): point = 32
   Insn 44(l0): point = 34
   Insn 2(l0): point = 36
   Insn 43(l0): point = 38
 a0(r86): [28..32] [13..14]
 a1(r83): [18..19]
 a2(r90): [20..21]
 a3(r85): [26..36]
 a4(r89): [33..34]
 a5(r88): [37..38]
Compressing live ranges: from 41 to 12 - 29%
Ranges after the compression:
 a0(r86): [6..7] [0..1]
 a1(r83): [2..3]
 a2(r90): [4..5]
 a3(r85): [6..9]
 a4(r89): [8..9]
 a5(r88): [10..11]
+++Allocating 40 bytes for conflict table (uncompressed size 48)
;; a0(r86,l0) conflicts: a3(r85,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r83,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r90,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r85,l0) conflicts: a0(r86,l0) a4(r89,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a4(r89,l0) conflicts: a3(r85,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r88,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a1(r83)<->a2(r90)@393:move
  cp1:a3(r85)<->a5(r88)@1000:move
  cp2:a0(r86)<->a4(r89)@1000:move
  pref0:a2(r90)<-hr0@589
  pref1:a4(r89)<-hr4@1500
  pref2:a5(r88)<-hr5@1500
  pref3:a0(r86)<-hr1@909
  pref4:a1(r83)<-hr5@589
  regions=1, blocks=5, points=12
    allocnos=6 (big 0), copies=3, conflicts=0, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r86 1r83 2r90 3r85 4r89 5r88
    modified regnos: 83 85 86 88 89 90
    border:
    Pressure: GENERAL_REGS=4
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@102838
          2:( 0-3 5 6 36-43)@52716
      Allocno a0r86 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a1r83 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a2r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a3r85 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Allocno a4r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a5r88 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Forming thread by copy 1:a3r85-a5r88 (freq=1000):
        Result (freq=3393): a3r85(1393) a5r88(2000)
      Forming thread by copy 2:a0r86-a4r89 (freq=1000):
        Result (freq=4606): a0r86(2606) a4r89(2000)
      Forming thread by copy 0:a1r83-a2r90 (freq=393):
        Result (freq=1572): a1r83(786) a2r90(786)
      Pushing a2(r90,l0)(cost 0)
      Pushing a1(r83,l0)(cost 0)
      Pushing a3(r85,l0)(cost 0)
      Pushing a5(r88,l0)(cost 0)
      Pushing a4(r89,l0)(cost 0)
      Pushing a0(r86,l0)(cost 0)
      Popping a0(r86,l0)  -- assign reg 1
      Popping a4(r89,l0)  -- assign reg 4
      Popping a5(r88,l0)  -- assign reg 5
      Popping a3(r85,l0)  -- assign reg 5
      Popping a1(r83,l0)  -- assign reg 5
      Popping a2(r90,l0)  -- assign reg 0
Disposition:
    1:r83  l0     5    3:r85  l0     5    0:r86  l0     1    5:r88  l0     5
    4:r89  l0     4    2:r90  l0     0
New iteration of spill/restore move
+++Costs: overall -3392, reg -3392, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_int

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,4u} r1={5d,1u} r2={4d} r4={5d,2u} r5={7d,4u} r6={1d,4u} r7={1d,7u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,3u} r17={4d,1u} r18={3d} r19={1d,4u} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r83={1d,2u} r85={1d,2u} r86={1d,2u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 273{234d,39u,0e} in 30{27 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 85 86 88 89
(note 6 1 43 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 43 6 2 2 (set (reg:DI 88)
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_stl.c":80:35 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ arg ])
        (nil)))
(insn 2 43 44 2 (set (reg/v/f:DI 85 [ arg ])
        (reg:DI 88)) "cmodules/fbgc_stl.c":80:35 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(insn 44 2 3 2 (set (reg:SI 89)
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_stl.c":80:35 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ argc ])
        (nil)))
(insn 3 44 4 2 (set (reg/v:SI 86 [ argc ])
        (reg:SI 89)) "cmodules/fbgc_stl.c":80:35 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89)
        (nil)))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 4 9 2 (debug_marker) "cmodules/fbgc_stl.c":81:2 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 86 [ argc ])
            (const_int 1 [0x1]))) "cmodules/fbgc_stl.c":81:4 11 {*cmpsi_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "cmodules/fbgc_stl.c":81:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 650902300 (nil)))
 -> 27)
;;  succ:       3 [39.4% (guessed)]  count:422839528 (estimated locally) (FALLTHRU)
;;              4 [60.6% (guessed)]  count:650902296 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85 86

;; basic block 3, loop depth 0, count 422839530 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [39.4% (guessed)]  count:422839528 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 83 90
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 12 11 13 3 (var_location:SI D#7 (const_int 1 [0x1])) -1
     (nil))
(debug_insn 13 12 14 3 (var_location:DI arg (reg/v/f:DI 85 [ arg ])) -1
     (nil))
(debug_insn 14 13 15 3 (debug_marker:BLK) "cmodules/fbgc_stl.c":80:1 -1
     (nil))
(debug_insn 15 14 16 3 (var_location:SI D#8 (debug_expr:SI D#7)) -1
     (nil))
(debug_insn 16 15 17 3 (var_location:SI argc (debug_expr:SI D#8)) -1
     (nil))
(debug_insn 17 16 18 3 (debug_marker) "cmodules/fbgc_stl.c":82:3 -1
     (nil))
(insn 18 17 19 3 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 85 [ arg ]) [1 *arg_6(D)+0 S8 A64])) "cmodules/fbgc_stl.c":82:11 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 85 [ arg ])
        (nil)))
(call_insn 19 18 45 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f626c7e8600 convert_fbgc_object_to_int>) [0 convert_fbgc_object_to_int S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":82:11 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f626c7e8600 convert_fbgc_object_to_int>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 45 19 20 3 (set (reg:SI 90)
        (reg:SI 0 ax)) "cmodules/fbgc_stl.c":82:11 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 20 45 21 3 (set (reg/v:SI 83 [ d ])
        (reg:SI 90)) "cmodules/fbgc_stl.c":82:11 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90)
        (nil)))
(debug_insn 21 20 22 3 (var_location:SI d (reg/v:SI 83 [ d ])) "cmodules/fbgc_stl.c":82:11 -1
     (nil))
(debug_insn 22 21 23 3 (debug_marker) "cmodules/fbgc_stl.c":83:3 -1
     (nil))
(insn 23 22 24 3 (set (reg:SI 5 di)
        (reg/v:SI 83 [ d ])) "cmodules/fbgc_stl.c":83:10 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 83 [ d ])
        (nil)))
(call_insn/j 24 23 25 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_int_object") [flags 0x41]  <function_decl 0x7f626c7fa500 new_fbgc_int_object>) [0 new_fbgc_int_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":83:10 681 {*sibcall_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_int_object") [flags 0x41]  <function_decl 0x7f626c7fa500 new_fbgc_int_object>)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:422839530 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 25 24 27)
;; basic block 4, loop depth 0, count 650902295 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [60.6% (guessed)]  count:650902296 (estimated locally)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(6){ }u22(7){ }u23(16){ }u24(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 86
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(code_label 27 25 28 4 58 (nil) [1 uses])
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 29 28 30 4 (debug_marker) "cmodules/fbgc_stl.c":85:7 -1
     (nil))
(insn 30 29 31 4 (set (reg:SI 1 dx)
        (reg/v:SI 86 [ argc ])) "cmodules/fbgc_stl.c":85:7 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 86 [ argc ])
        (nil)))
(insn 31 30 32 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f626c494cf0 *.LC6>)) "cmodules/fbgc_stl.c":85:7 66 {*movdi_internal}
     (nil))
(insn 32 31 33 4 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_stl.c":85:7 67 {*movsi_internal}
     (nil))
(insn 33 32 34 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":85:7 69 {*movqi_internal}
     (nil))
(call_insn 34 33 35 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":85:7 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(debug_insn 35 34 40 4 (debug_marker) "cmodules/fbgc_stl.c":86:2 -1
     (nil))
(insn 40 35 41 4 (set (reg/i:DI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":87:1 66 {*movdi_internal}
     (nil))
(insn 41 40 0 4 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":87:1 -1
     (nil))
;;  succ:       EXIT [always]  count:650902295 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function fbgc_double (fbgc_double, funcdef_no=61, decl_uid=5709, cgraph_uid=62, symbol_order=69)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 88 uninteresting
Reg 85: def dominates all uses has unique first use
Reg 89 uninteresting
Reg 86 uninteresting
Reg 90 uninteresting
Reg 83 uninteresting
Reg 85 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a2 (r90,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a4 (r89,l0) best SIREG, allocno SIREG
    a5 (r88,l0) best DIREG, allocno DIREG
    a0 (r86,l0) best DREG, allocno DREG
    a3 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG

  a0(r86,l0) costs: AREG:1212,1212 DREG:-606,-606 CREG:1212,1212 BREG:1212,1212 SIREG:1212,1212 DIREG:1212,1212 AD_REGS:1212,1212 CLOBBERED_REGS:1212,1212 Q_REGS:1212,1212 NON_Q_REGS:1212,1212 TLS_GOTBASE_REGS:1212,1212 GENERAL_REGS:1212,1212 SSE_FIRST_REG:18848,18848 NO_REX_SSE_REGS:18848,18848 SSE_REGS:18848,18848 MMX_REGS:26878,26878 INT_SSE_REGS:26878,26878 ALL_REGS:440472,440472 MEM:9636,9636
  a1(r83,l0) costs: AREG:3144,3144 DREG:3144,3144 CREG:3144,3144 BREG:3144,3144 SIREG:3144,3144 DIREG:3144,3144 AD_REGS:3144,3144 CLOBBERED_REGS:3144,3144 Q_REGS:3144,3144 NON_Q_REGS:3144,3144 TLS_GOTBASE_REGS:3144,3144 GENERAL_REGS:3144,3144 FP_TOP_REG:7467,7467 FP_SECOND_REG:7467,7467 FLOAT_REGS:7467,7467 SSE_FIRST_REG:-393,-393 NO_REX_SSE_REGS:786,786 SSE_REGS:786,786 FLOAT_SSE_REGS:7467,7467 FLOAT_INT_REGS:7467,7467 INT_SSE_REGS:7467,7467 FLOAT_INT_SSE_REGS:7467,7467 MEM:2751,2751
  a2(r90,l0) costs: AREG:3144,3144 DREG:3144,3144 CREG:3144,3144 BREG:3144,3144 SIREG:3144,3144 DIREG:3144,3144 AD_REGS:3144,3144 CLOBBERED_REGS:3144,3144 Q_REGS:3144,3144 NON_Q_REGS:3144,3144 TLS_GOTBASE_REGS:3144,3144 GENERAL_REGS:3144,3144 FP_TOP_REG:7467,7467 FP_SECOND_REG:7467,7467 FLOAT_REGS:7467,7467 SSE_FIRST_REG:-393,-393 NO_REX_SSE_REGS:786,786 SSE_REGS:786,786 FLOAT_SSE_REGS:7467,7467 FLOAT_INT_REGS:7467,7467 INT_SSE_REGS:7467,7467 FLOAT_INT_SSE_REGS:7467,7467 MEM:2751,2751
  a3(r85,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:9144,9144 NO_REX_SSE_REGS:9144,9144 SSE_REGS:9144,9144 MMX_REGS:11109,11109 INT_SSE_REGS:11109,11109 ALL_REGS:183316,183316 MEM:3358,3358
  a4(r89,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:-1000,-1000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a5(r88,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:-1000,-1000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000


Pass 1 for finding pseudo/allocno costs

    r90: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r83: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS

  a0(r86,l0) costs: AREG:2424,2424 DREG:1212,-606 CREG:2424,2424 BREG:2424,2424 SIREG:2424,2424 DIREG:2424,2424 AD_REGS:1212,1212 CLOBBERED_REGS:1212,1212 Q_REGS:1212,1212 NON_Q_REGS:2424,2424 TLS_GOTBASE_REGS:1212,1212 GENERAL_REGS:1212,1212 SSE_FIRST_REG:25696,25696 NO_REX_SSE_REGS:25696,25696 SSE_REGS:25696,25696 MMX_REGS:40756,40756 INT_SSE_REGS:32878,32878 ALL_REGS:446472,446472 MEM:18272,18272
  a1(r83,l0) costs: AREG:9432,9432 DREG:9432,9432 CREG:9432,9432 BREG:9432,9432 SIREG:9432,9432 DIREG:9432,9432 AD_REGS:9432,9432 CLOBBERED_REGS:9432,9432 Q_REGS:9432,9432 NON_Q_REGS:9432,9432 TLS_GOTBASE_REGS:9432,9432 GENERAL_REGS:9432,9432 FP_TOP_REG:14934,14934 FP_SECOND_REG:14934,14934 FLOAT_REGS:14934,14934 SSE_FIRST_REG:786,-393 NO_REX_SSE_REGS:786,786 SSE_REGS:786,786 FLOAT_SSE_REGS:9825,9825 FLOAT_INT_REGS:14934,14934 INT_SSE_REGS:9825,9825 FLOAT_INT_SSE_REGS:9825,9825 MEM:7074,7074
  a2(r90,l0) costs: AREG:9432,9432 DREG:9432,9432 CREG:9432,9432 BREG:9432,9432 SIREG:9432,9432 DIREG:9432,9432 AD_REGS:9432,9432 CLOBBERED_REGS:9432,9432 Q_REGS:9432,9432 NON_Q_REGS:9432,9432 TLS_GOTBASE_REGS:9432,9432 GENERAL_REGS:9432,9432 FP_TOP_REG:14934,14934 FP_SECOND_REG:14934,14934 FLOAT_REGS:14934,14934 SSE_FIRST_REG:786,-393 NO_REX_SSE_REGS:786,786 SSE_REGS:786,786 FLOAT_SSE_REGS:9825,9825 FLOAT_INT_REGS:14934,14934 INT_SSE_REGS:9825,9825 FLOAT_INT_SSE_REGS:9825,9825 MEM:7074,7074
  a3(r85,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11144,11144 NO_REX_SSE_REGS:11144,11144 SSE_REGS:11144,11144 MMX_REGS:17109,17109 INT_SSE_REGS:17109,17109 ALL_REGS:189316,189316 MEM:8358,8358
  a4(r89,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:2000,-1000 DIREG:4000,4000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000
  a5(r88,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:2000,-1000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000

   Insn 41(l0): point = 0
   Insn 40(l0): point = 2
   Insn 34(l0): point = 4
   Insn 33(l0): point = 6
   Insn 32(l0): point = 8
   Insn 31(l0): point = 10
   Insn 30(l0): point = 12
   Insn 24(l0): point = 15
   Insn 23(l0): point = 17
   Insn 20(l0): point = 19
   Insn 45(l0): point = 21
   Insn 19(l0): point = 23
   Insn 18(l0): point = 25
   Insn 10(l0): point = 28
   Insn 9(l0): point = 30
   Insn 3(l0): point = 32
   Insn 44(l0): point = 34
   Insn 2(l0): point = 36
   Insn 43(l0): point = 38
 a0(r86): [28..32] [13..14]
 a1(r83): [18..19]
 a2(r90): [20..21]
 a3(r85): [26..36]
 a4(r89): [33..34]
 a5(r88): [37..38]
Compressing live ranges: from 41 to 12 - 29%
Ranges after the compression:
 a0(r86): [6..7] [0..1]
 a1(r83): [2..3]
 a2(r90): [4..5]
 a3(r85): [6..9]
 a4(r89): [8..9]
 a5(r88): [10..11]
+++Allocating 40 bytes for conflict table (uncompressed size 48)
;; a0(r86,l0) conflicts: a3(r85,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r83,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r90,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r85,l0) conflicts: a0(r86,l0) a4(r89,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a4(r89,l0) conflicts: a3(r85,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r88,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a1(r83)<->a2(r90)@393:move
  cp1:a3(r85)<->a5(r88)@1000:move
  cp2:a0(r86)<->a4(r89)@1000:move
  pref0:a2(r90)<-hr20@589
  pref1:a4(r89)<-hr4@1500
  pref2:a5(r88)<-hr5@1500
  pref3:a0(r86)<-hr1@909
  pref4:a1(r83)<-hr20@589
  regions=1, blocks=5, points=12
    allocnos=6 (big 0), copies=3, conflicts=0, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r86 1r83 2r90 3r85 4r89 5r88
    modified regnos: 83 85 86 88 89 90
    border:
    Pressure: GENERAL_REGS=4 SSE_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 20-27 44-51)@29868
        2:( 0-6 36-43)@73756
          3:( 0-3 5 6 36-43)@52716
      Allocno a0r86 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a1r83 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a2r90 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a3r85 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Allocno a4r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a5r88 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Forming thread by copy 1:a3r85-a5r88 (freq=1000):
        Result (freq=3393): a3r85(1393) a5r88(2000)
      Forming thread by copy 2:a0r86-a4r89 (freq=1000):
        Result (freq=4606): a0r86(2606) a4r89(2000)
      Forming thread by copy 0:a1r83-a2r90 (freq=393):
        Result (freq=1572): a1r83(786) a2r90(786)
      Pushing a2(r90,l0)(cost 0)
      Pushing a1(r83,l0)(cost 0)
      Pushing a3(r85,l0)(cost 0)
      Pushing a5(r88,l0)(cost 0)
      Pushing a4(r89,l0)(cost 0)
      Pushing a0(r86,l0)(cost 0)
      Popping a0(r86,l0)  -- assign reg 1
      Popping a4(r89,l0)  -- assign reg 4
      Popping a5(r88,l0)  -- assign reg 5
      Popping a3(r85,l0)  -- assign reg 5
      Popping a1(r83,l0)  -- assign reg 20
      Popping a2(r90,l0)  -- assign reg 20
Disposition:
    1:r83  l0    20    3:r85  l0     5    0:r86  l0     1    5:r88  l0     5
    4:r89  l0     4    2:r90  l0    20
New iteration of spill/restore move
+++Costs: overall -3392, reg -3392, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_double

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags] 20 [xmm0]
;;  ref usage 	r0={6d,3u} r1={5d,1u} r2={4d} r4={5d,2u} r5={6d,3u} r6={1d,4u} r7={1d,7u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,3u} r17={4d,1u} r18={3d} r19={1d,4u} r20={5d,2u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r83={1d,2u} r85={1d,2u} r86={1d,2u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 273{234d,39u,0e} in 30{27 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 85 86 88 89
(note 6 1 43 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 43 6 2 2 (set (reg:DI 88)
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_stl.c":89:41 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ arg ])
        (nil)))
(insn 2 43 44 2 (set (reg/v/f:DI 85 [ arg ])
        (reg:DI 88)) "cmodules/fbgc_stl.c":89:41 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(insn 44 2 3 2 (set (reg:SI 89)
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_stl.c":89:41 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ argc ])
        (nil)))
(insn 3 44 4 2 (set (reg/v:SI 86 [ argc ])
        (reg:SI 89)) "cmodules/fbgc_stl.c":89:41 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89)
        (nil)))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 4 9 2 (debug_marker) "cmodules/fbgc_stl.c":90:2 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 86 [ argc ])
            (const_int 1 [0x1]))) "cmodules/fbgc_stl.c":90:4 11 {*cmpsi_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "cmodules/fbgc_stl.c":90:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 650902300 (nil)))
 -> 27)
;;  succ:       3 [39.4% (guessed)]  count:422839528 (estimated locally) (FALLTHRU)
;;              4 [60.6% (guessed)]  count:650902296 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85 86

;; basic block 3, loop depth 0, count 422839530 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [39.4% (guessed)]  count:422839528 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 83 90
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 12 11 13 3 (var_location:SI D#9 (const_int 1 [0x1])) -1
     (nil))
(debug_insn 13 12 14 3 (var_location:DI arg (reg/v/f:DI 85 [ arg ])) -1
     (nil))
(debug_insn 14 13 15 3 (debug_marker:BLK) "cmodules/fbgc_stl.c":89:1 -1
     (nil))
(debug_insn 15 14 16 3 (var_location:SI D#10 (debug_expr:SI D#9)) -1
     (nil))
(debug_insn 16 15 17 3 (var_location:SI argc (debug_expr:SI D#10)) -1
     (nil))
(debug_insn 17 16 18 3 (debug_marker) "cmodules/fbgc_stl.c":91:3 -1
     (nil))
(insn 18 17 19 3 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 85 [ arg ]) [1 *arg_6(D)+0 S8 A64])) "cmodules/fbgc_stl.c":91:14 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 85 [ arg ])
        (nil)))
(call_insn 19 18 45 3 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f626c7e8700 convert_fbgc_object_to_double>) [0 convert_fbgc_object_to_double S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":91:14 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f626c7e8700 convert_fbgc_object_to_double>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 45 19 20 3 (set (reg:DF 90)
        (reg:DF 20 xmm0)) "cmodules/fbgc_stl.c":91:14 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (nil)))
(insn 20 45 21 3 (set (reg/v:DF 83 [ d ])
        (reg:DF 90)) "cmodules/fbgc_stl.c":91:14 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 90)
        (nil)))
(debug_insn 21 20 22 3 (var_location:DF d (reg/v:DF 83 [ d ])) "cmodules/fbgc_stl.c":91:14 -1
     (nil))
(debug_insn 22 21 23 3 (debug_marker) "cmodules/fbgc_stl.c":92:3 -1
     (nil))
(insn 23 22 24 3 (set (reg:DF 20 xmm0)
        (reg/v:DF 83 [ d ])) "cmodules/fbgc_stl.c":92:10 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg/v:DF 83 [ d ])
        (nil)))
(call_insn/j 24 23 25 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f626c7f3d00 new_fbgc_double_object>) [0 new_fbgc_double_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":92:10 681 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f626c7f3d00 new_fbgc_double_object>)
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
;;  succ:       EXIT [always]  count:422839530 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 25 24 27)
;; basic block 4, loop depth 0, count 650902295 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [60.6% (guessed)]  count:650902296 (estimated locally)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(6){ }u22(7){ }u23(16){ }u24(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 86
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(code_label 27 25 28 4 62 (nil) [1 uses])
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 29 28 30 4 (debug_marker) "cmodules/fbgc_stl.c":94:7 -1
     (nil))
(insn 30 29 31 4 (set (reg:SI 1 dx)
        (reg/v:SI 86 [ argc ])) "cmodules/fbgc_stl.c":94:7 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 86 [ argc ])
        (nil)))
(insn 31 30 32 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f626c494cf0 *.LC6>)) "cmodules/fbgc_stl.c":94:7 66 {*movdi_internal}
     (nil))
(insn 32 31 33 4 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_stl.c":94:7 67 {*movsi_internal}
     (nil))
(insn 33 32 34 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":94:7 69 {*movqi_internal}
     (nil))
(call_insn 34 33 35 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":94:7 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(debug_insn 35 34 40 4 (debug_marker) "cmodules/fbgc_stl.c":95:2 -1
     (nil))
(insn 40 35 41 4 (set (reg/i:DI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":96:1 66 {*movdi_internal}
     (nil))
(insn 41 40 0 4 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":96:1 -1
     (nil))
;;  succ:       EXIT [always]  count:650902295 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function fbgc_matrix (fbgc_matrix, funcdef_no=63, decl_uid=5713, cgraph_uid=64, symbol_order=73)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 99 uninteresting
Reg 100 uninteresting
Reg 94 uninteresting
Reg 101 uninteresting
Reg 83: local to bb 3 def dominates all uses has unique first use
Ignoring reg 95, has equiv memory
Reg 102 uninteresting
Reg 86: local to bb 3 def dominates all uses has unique first use
Reg 96 uninteresting
Reg 103 uninteresting
Reg 97 uninteresting
Examining insn 20, def for 83
  all ok
Examining insn 26, def for 86
  all ok
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 95: (insn_list:REG_DEP_TRUE 23 (nil))

Pass 0 for finding pseudo/allocno costs

    a4 (r103,l0) best AREG, allocno AREG
    a7 (r102,l0) best AREG, allocno AREG
    a9 (r101,l0) best AREG, allocno AREG
    a10 (r100,l0) best SIREG, allocno SIREG
    a11 (r99,l0) best DIREG, allocno DIREG
    a3 (r97,l0) best CREG, allocno CREG
    a5 (r96,l0) best DIREG, allocno DIREG
    a8 (r95,l0) best DIREG, allocno DIREG
    a0 (r94,l0) best DREG, allocno DREG
    a6 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r86,l0) best DREG, allocno DREG
    a1 (r83,l0) best SIREG, allocno SIREG

  a0(r94,l0) costs: AREG:1212,1212 DREG:-606,-606 CREG:1212,1212 BREG:1212,1212 SIREG:1212,1212 DIREG:1212,1212 AD_REGS:1212,1212 CLOBBERED_REGS:1212,1212 Q_REGS:1212,1212 NON_Q_REGS:1212,1212 TLS_GOTBASE_REGS:1212,1212 GENERAL_REGS:1212,1212 SSE_FIRST_REG:18848,18848 NO_REX_SSE_REGS:18848,18848 SSE_REGS:18848,18848 MMX_REGS:26878,26878 INT_SSE_REGS:26878,26878 ALL_REGS:440472,440472 MEM:9636,9636
  a1(r83,l0) costs: AREG:786,786 DREG:786,786 CREG:786,786 BREG:786,786 SIREG:-393,-393 DIREG:786,786 AD_REGS:786,786 CLOBBERED_REGS:786,786 Q_REGS:786,786 NON_Q_REGS:786,786 TLS_GOTBASE_REGS:786,786 GENERAL_REGS:786,786 SSE_FIRST_REG:5502,5502 NO_REX_SSE_REGS:5502,5502 SSE_REGS:5502,5502 MMX_REGS:7467,7467 INT_SSE_REGS:7467,7467 ALL_REGS:122616,122616 MEM:2751,2751
  a2(r86,l0) costs: AREG:786,786 DREG:-393,-393 CREG:786,786 BREG:786,786 SIREG:786,786 DIREG:786,786 AD_REGS:786,786 CLOBBERED_REGS:786,786 Q_REGS:786,786 NON_Q_REGS:786,786 TLS_GOTBASE_REGS:786,786 GENERAL_REGS:786,786 SSE_FIRST_REG:5502,5502 NO_REX_SSE_REGS:5502,5502 SSE_REGS:5502,5502 MMX_REGS:7467,7467 INT_SSE_REGS:7467,7467 ALL_REGS:122616,122616 MEM:2751,2751
  a3(r97,l0) costs: AREG:786,786 DREG:786,786 CREG:-393,-393 BREG:786,786 SIREG:786,786 DIREG:786,786 AD_REGS:786,786 CLOBBERED_REGS:786,786 Q_REGS:786,786 NON_Q_REGS:786,786 TLS_GOTBASE_REGS:786,786 GENERAL_REGS:786,786 SSE_FIRST_REG:6288,6288 NO_REX_SSE_REGS:6288,6288 SSE_REGS:6288,6288 MMX_REGS:10218,10218 INT_SSE_REGS:10218,10218 ALL_REGS:166632,166632 MEM:4716,4716
  a4(r103,l0) costs: AREG:-393,-393 DREG:786,786 CREG:786,786 BREG:786,786 SIREG:786,786 DIREG:786,786 AD_REGS:786,786 CLOBBERED_REGS:786,786 Q_REGS:786,786 NON_Q_REGS:786,786 TLS_GOTBASE_REGS:786,786 GENERAL_REGS:786,786 MEM:4323,4323
  a5(r96,l0) costs: AREG:786,786 DREG:786,786 CREG:786,786 BREG:786,786 SIREG:786,786 DIREG:-393,-393 AD_REGS:786,786 CLOBBERED_REGS:786,786 Q_REGS:786,786 NON_Q_REGS:786,786 TLS_GOTBASE_REGS:786,786 GENERAL_REGS:786,786 SSE_FIRST_REG:6288,6288 NO_REX_SSE_REGS:6288,6288 SSE_REGS:6288,6288 MMX_REGS:9825,9825 INT_SSE_REGS:9825,9825 ALL_REGS:124974,124974 MEM:4716,4716
  a6(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:18576,18576 NO_REX_SSE_REGS:18576,18576 SSE_REGS:18576,18576 MMX_REGS:26436,26436 INT_SSE_REGS:26436,26436 ALL_REGS:433264,433264 MEM:10432,10432
  a7(r102,l0) costs: AREG:-393,-393 DREG:786,786 CREG:786,786 BREG:786,786 SIREG:786,786 DIREG:786,786 AD_REGS:786,786 CLOBBERED_REGS:786,786 Q_REGS:786,786 NON_Q_REGS:786,786 TLS_GOTBASE_REGS:786,786 GENERAL_REGS:786,786 SSE_FIRST_REG:6288,6288 NO_REX_SSE_REGS:6288,6288 SSE_REGS:6288,6288 MMX_REGS:10218,10218 INT_SSE_REGS:10218,10218 ALL_REGS:166632,166632 MEM:4323,4323
  a8(r95,l0) costs: AREG:786,786 DREG:786,786 CREG:786,786 BREG:786,786 SIREG:786,786 DIREG:-393,-393 AD_REGS:786,786 CLOBBERED_REGS:786,786 Q_REGS:786,786 NON_Q_REGS:786,786 TLS_GOTBASE_REGS:786,786 GENERAL_REGS:786,786 SSE_FIRST_REG:6288,6288 NO_REX_SSE_REGS:6288,6288 SSE_REGS:6288,6288 MMX_REGS:9825,9825 INT_SSE_REGS:9825,9825 ALL_REGS:124974,124974 MEM:0,0
  a9(r101,l0) costs: AREG:-393,-393 DREG:786,786 CREG:786,786 BREG:786,786 SIREG:786,786 DIREG:786,786 AD_REGS:786,786 CLOBBERED_REGS:786,786 Q_REGS:786,786 NON_Q_REGS:786,786 TLS_GOTBASE_REGS:786,786 GENERAL_REGS:786,786 SSE_FIRST_REG:6288,6288 NO_REX_SSE_REGS:6288,6288 SSE_REGS:6288,6288 MMX_REGS:10218,10218 INT_SSE_REGS:10218,10218 ALL_REGS:166632,166632 MEM:4323,4323
  a10(r100,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:-1000,-1000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a11(r99,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:-1000,-1000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000


Pass 1 for finding pseudo/allocno costs

    r103: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r86: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r94,l0) costs: AREG:2424,2424 DREG:1212,-606 CREG:2424,2424 BREG:2424,2424 SIREG:2424,2424 DIREG:2424,2424 AD_REGS:1212,1212 CLOBBERED_REGS:1212,1212 Q_REGS:1212,1212 NON_Q_REGS:2424,2424 TLS_GOTBASE_REGS:1212,1212 GENERAL_REGS:1212,1212 SSE_FIRST_REG:25696,25696 NO_REX_SSE_REGS:25696,25696 SSE_REGS:25696,25696 MMX_REGS:40756,40756 INT_SSE_REGS:32878,32878 ALL_REGS:446472,446472 MEM:18272,18272
  a1(r83,l0) costs: AREG:1572,1572 DREG:1572,1572 CREG:1572,1572 BREG:1572,1572 SIREG:786,-393 DIREG:1572,1572 AD_REGS:1572,1572 CLOBBERED_REGS:786,786 Q_REGS:1572,1572 NON_Q_REGS:786,786 TLS_GOTBASE_REGS:786,786 GENERAL_REGS:786,786 SSE_FIRST_REG:9432,9432 NO_REX_SSE_REGS:9432,9432 SSE_REGS:9432,9432 MMX_REGS:14934,14934 INT_SSE_REGS:9825,9825 ALL_REGS:124974,124974 MEM:7074,7074
  a2(r86,l0) costs: AREG:1572,1572 DREG:786,-393 CREG:1572,1572 BREG:1572,1572 SIREG:1572,1572 DIREG:1572,1572 AD_REGS:786,786 CLOBBERED_REGS:786,786 Q_REGS:786,786 NON_Q_REGS:1572,1572 TLS_GOTBASE_REGS:786,786 GENERAL_REGS:786,786 SSE_FIRST_REG:9432,9432 NO_REX_SSE_REGS:9432,9432 SSE_REGS:9432,9432 MMX_REGS:14934,14934 INT_SSE_REGS:9825,9825 ALL_REGS:124974,124974 MEM:7074,7074
  a3(r97,l0) costs: AREG:1572,1572 DREG:1572,1572 CREG:786,-393 BREG:1572,1572 SIREG:1572,1572 DIREG:1572,1572 AD_REGS:1572,1572 CLOBBERED_REGS:786,786 Q_REGS:786,786 NON_Q_REGS:1572,1572 TLS_GOTBASE_REGS:786,786 GENERAL_REGS:786,786 SSE_FIRST_REG:9432,9432 NO_REX_SSE_REGS:9432,9432 SSE_REGS:9432,9432 MMX_REGS:15327,15327 INT_SSE_REGS:10218,10218 ALL_REGS:166632,166632 MEM:7074,7074
  a4(r103,l0) costs: AREG:786,-393 DREG:1572,1572 CREG:1572,1572 BREG:1572,1572 SIREG:1572,1572 DIREG:1572,1572 AD_REGS:786,786 CLOBBERED_REGS:786,786 Q_REGS:786,786 NON_Q_REGS:1572,1572 TLS_GOTBASE_REGS:1572,1572 GENERAL_REGS:786,786 MEM:6681,6681
  a5(r96,l0) costs: AREG:1572,1572 DREG:1572,1572 CREG:1572,1572 BREG:1572,1572 SIREG:1572,1572 DIREG:786,-393 AD_REGS:1572,1572 CLOBBERED_REGS:786,786 Q_REGS:1572,1572 NON_Q_REGS:786,786 TLS_GOTBASE_REGS:786,786 GENERAL_REGS:786,786 SSE_FIRST_REG:9432,9432 NO_REX_SSE_REGS:9432,9432 SSE_REGS:9432,9432 MMX_REGS:15327,15327 INT_SSE_REGS:10218,10218 ALL_REGS:127332,127332 MEM:7074,7074
  a6(r93,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:20576,20576 NO_REX_SSE_REGS:20576,20576 SSE_REGS:20576,20576 MMX_REGS:32436,32436 INT_SSE_REGS:32436,32436 ALL_REGS:439264,439264 MEM:15432,15432
  a7(r102,l0) costs: AREG:786,-393 DREG:1572,1572 CREG:1572,1572 BREG:1572,1572 SIREG:1572,1572 DIREG:1572,1572 AD_REGS:786,786 CLOBBERED_REGS:786,786 Q_REGS:786,786 NON_Q_REGS:1572,1572 TLS_GOTBASE_REGS:1572,1572 GENERAL_REGS:786,786 SSE_FIRST_REG:9432,9432 NO_REX_SSE_REGS:9432,9432 SSE_REGS:9432,9432 MMX_REGS:15327,15327 INT_SSE_REGS:10218,10218 ALL_REGS:166632,166632 MEM:6681,6681
  a8(r95,l0) costs: AREG:1572,1572 DREG:1572,1572 CREG:1572,1572 BREG:1572,1572 SIREG:1572,1572 DIREG:786,-393 AD_REGS:1572,1572 CLOBBERED_REGS:786,786 Q_REGS:1572,1572 NON_Q_REGS:786,786 TLS_GOTBASE_REGS:786,786 GENERAL_REGS:786,786 SSE_FIRST_REG:9432,9432 NO_REX_SSE_REGS:9432,9432 SSE_REGS:9432,9432 MMX_REGS:15327,15327 INT_SSE_REGS:10218,10218 ALL_REGS:127332,127332 MEM:2358,2358
  a9(r101,l0) costs: AREG:786,-393 DREG:1572,1572 CREG:1572,1572 BREG:1572,1572 SIREG:1572,1572 DIREG:1572,1572 AD_REGS:786,786 CLOBBERED_REGS:786,786 Q_REGS:786,786 NON_Q_REGS:1572,1572 TLS_GOTBASE_REGS:1572,1572 GENERAL_REGS:786,786 SSE_FIRST_REG:9432,9432 NO_REX_SSE_REGS:9432,9432 SSE_REGS:9432,9432 MMX_REGS:15327,15327 INT_SSE_REGS:10218,10218 ALL_REGS:166632,166632 MEM:6681,6681
  a10(r100,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:2000,-1000 DIREG:4000,4000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000
  a11(r99,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:2000,-1000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000

   Insn 55(l0): point = 0
   Insn 54(l0): point = 2
   Insn 48(l0): point = 4
   Insn 47(l0): point = 6
   Insn 46(l0): point = 8
   Insn 45(l0): point = 10
   Insn 44(l0): point = 12
   Insn 38(l0): point = 15
   Insn 37(l0): point = 17
   Insn 36(l0): point = 19
   Insn 35(l0): point = 21
   Insn 34(l0): point = 23
   Insn 33(l0): point = 25
   Insn 61(l0): point = 27
   Insn 31(l0): point = 29
   Insn 30(l0): point = 31
   Insn 29(l0): point = 33
   Insn 26(l0): point = 35
   Insn 60(l0): point = 37
   Insn 25(l0): point = 39
   Insn 24(l0): point = 41
   Insn 23(l0): point = 43
   Insn 20(l0): point = 45
   Insn 59(l0): point = 47
   Insn 19(l0): point = 49
   Insn 18(l0): point = 51
   Insn 10(l0): point = 54
   Insn 9(l0): point = 56
   Insn 3(l0): point = 58
   Insn 58(l0): point = 60
   Insn 2(l0): point = 62
   Insn 57(l0): point = 64
 a0(r94): [54..58] [13..14]
 a1(r83): [20..45]
 a2(r86): [22..35]
 a3(r97): [24..25]
 a4(r103): [26..27]
 a5(r96): [32..33]
 a6(r93): [34..62]
 a7(r102): [36..37]
 a8(r95): [42..43]
 a9(r101): [46..47]
 a10(r100): [59..60]
 a11(r99): [63..64]
Compressing live ranges: from 67 to 22 - 32%
Ranges after the compression:
 a0(r94): [16..17] [0..1]
 a1(r83): [2..13]
 a2(r86): [2..9]
 a3(r97): [2..3]
 a4(r103): [4..5]
 a5(r96): [6..7]
 a6(r93): [8..19]
 a7(r102): [10..11]
 a8(r95): [12..13]
 a9(r101): [14..15]
 a10(r100): [18..19]
 a11(r99): [20..21]
+++Allocating 88 bytes for conflict table (uncompressed size 96)
;; a0(r94,l0) conflicts: a6(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r83,l0) conflicts: a3(r97,l0) a2(r86,l0) a4(r103,l0) a5(r96,l0) a6(r93,l0) a7(r102,l0) a8(r95,l0)
;;     total conflict hard regs: 0-2 5
;;     conflict hard regs: 0-2 5

;; a2(r86,l0) conflicts: a3(r97,l0) a1(r83,l0) a4(r103,l0) a5(r96,l0) a6(r93,l0)
;;     total conflict hard regs: 0 2 5
;;     conflict hard regs: 0 2 5

;; a3(r97,l0) conflicts: a2(r86,l0) a1(r83,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r103,l0) conflicts: a2(r86,l0) a1(r83,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r96,l0) conflicts: a2(r86,l0) a1(r83,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r93,l0) conflicts: a0(r94,l0) a2(r86,l0) a1(r83,l0) a7(r102,l0) a8(r95,l0) a9(r101,l0) a10(r100,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a7(r102,l0) conflicts: a1(r83,l0) a6(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r95,l0) conflicts: a1(r83,l0) a6(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r101,l0) conflicts: a6(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r100,l0) conflicts: a6(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r99,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a1(r83)<->a9(r101)@393:move
  cp1:a2(r86)<->a7(r102)@393:move
  cp2:a3(r97)<->a4(r103)@49:shuffle
  cp3:a6(r93)<->a11(r99)@1000:move
  cp4:a0(r94)<->a10(r100)@1000:move
  pref0:a4(r103)<-hr0@589
  pref1:a7(r102)<-hr0@589
  pref2:a9(r101)<-hr0@589
  pref3:a10(r100)<-hr4@1500
  pref4:a11(r99)<-hr5@1500
  pref5:a3(r97)<-hr2@589
  pref6:a5(r96)<-hr5@589
  pref7:a8(r95)<-hr5@589
  pref8:a0(r94)<-hr1@909
  pref9:a2(r86)<-hr1@589
  pref10:a1(r83)<-hr4@589
  regions=1, blocks=5, points=22
    allocnos=12 (big 0), copies=5, conflicts=0, ranges=13

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r94 1r83 2r86 3r97 4r103 5r96 6r93 7r102 8r95 9r101 10r100 11r99
    modified regnos: 83 86 93 94 95 96 97 99 100 101 102 103
    border:
    Pressure: GENERAL_REGS=4
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@151570
          2:( 0-3 5 6 36-43)@36000
            3:( 1-3 6 36-43)@30864
      Allocno a0r94 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a1r83 of GENERAL_REGS(15) has 11 avail. regs  3 4 6 36-43, ^node:  0-6 36-43 (confl regs =  0-2 5 7-35 44-74)
      Allocno a2r86 of GENERAL_REGS(15) has 12 avail. regs  1 3 4 6 36-43, ^node:  0-6 36-43 (confl regs =  0 2 5 7-35 44-74)
      Allocno a3r97 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a4r103 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a5r96 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a6r93 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 36-43, node:  1-3 6 36-43 (confl regs =  0 4 5 7-35 44-74)
      Allocno a7r102 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a8r95 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a9r101 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a10r100 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a11r99 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Forming thread by copy 3:a6r93-a11r99 (freq=1000):
        Result (freq=4179): a6r93(2179) a11r99(2000)
      Forming thread by copy 4:a0r94-a10r100 (freq=1000):
        Result (freq=4606): a0r94(2606) a10r100(2000)
      Forming thread by copy 0:a1r83-a9r101 (freq=393):
        Result (freq=1572): a1r83(786) a9r101(786)
      Forming thread by copy 1:a2r86-a7r102 (freq=393):
        Result (freq=1572): a2r86(786) a7r102(786)
      Forming thread by copy 2:a3r97-a4r103 (freq=49):
        Result (freq=1572): a3r97(786) a4r103(786)
      Pushing a8(r95,l0)(cost 0)
      Pushing a5(r96,l0)(cost 0)
      Pushing a4(r103,l0)(cost 0)
      Pushing a3(r97,l0)(cost 0)
      Pushing a7(r102,l0)(cost 0)
      Pushing a2(r86,l0)(cost 0)
      Pushing a9(r101,l0)(cost 0)
      Pushing a1(r83,l0)(cost 0)
      Pushing a11(r99,l0)(cost 0)
      Pushing a6(r93,l0)(cost 0)
      Pushing a10(r100,l0)(cost 0)
      Pushing a0(r94,l0)(cost 0)
      Popping a0(r94,l0)  -- assign reg 1
      Popping a10(r100,l0)  -- assign reg 4
      Popping a6(r93,l0)  -- assign reg 3
      Popping a11(r99,l0)  -- assign reg 5
      Popping a1(r83,l0)  -- assign reg 6
      Popping a9(r101,l0)  -- assign reg 0
      Popping a2(r86,l0)  -- assign reg 40
      Popping a7(r102,l0)  -- assign reg 0
      Popping a3(r97,l0)  -- assign reg 2
      Popping a4(r103,l0)  -- assign reg 0
      Popping a5(r96,l0)  -- assign reg 5
      Popping a8(r95,l0)  -- assign reg 5
Disposition:
    1:r83  l0     6    2:r86  l0    40    6:r93  l0     3    0:r94  l0     1
    8:r95  l0     5    5:r96  l0     5    3:r97  l0     2   11:r99  l0     5
   10:r100 l0     4    9:r101 l0     0    7:r102 l0     0    4:r103 l0     0
New iteration of spill/restore move
+++Costs: overall -3392, reg -3392, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_matrix

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={8d,6u} r1={8d,2u} r2={7d,1u} r4={8d,3u} r5={11d,6u} r6={1d,4u} r7={1d,9u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,3u} r17={6d,1u} r18={5d} r19={1d,4u} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={6d} r37={6d} r38={5d} r39={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r83={1d,2u} r86={1d,2u} r93={1d,4u,1e} r94={1d,2u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} 
;;    total ref usage 437{379d,57u,1e} in 45{40 regular + 5 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 93 94 99 100
(note 6 1 57 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 57 6 2 2 (set (reg:DI 99)
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_stl.c":143:41 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ arg ])
        (nil)))
(insn 2 57 58 2 (set (reg/v/f:DI 93 [ arg ])
        (reg:DI 99)) "cmodules/fbgc_stl.c":143:41 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99)
        (nil)))
(insn 58 2 3 2 (set (reg:SI 100)
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_stl.c":143:41 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ argc ])
        (nil)))
(insn 3 58 4 2 (set (reg/v:SI 94 [ argc ])
        (reg:SI 100)) "cmodules/fbgc_stl.c":143:41 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100)
        (nil)))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 4 9 2 (debug_marker) "cmodules/fbgc_stl.c":145:2 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 94 [ argc ])
            (const_int 3 [0x3]))) "cmodules/fbgc_stl.c":145:4 11 {*cmpsi_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) "cmodules/fbgc_stl.c":145:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 650902300 (nil)))
 -> 41)
;;  succ:       3 [39.4% (guessed)]  count:422839528 (estimated locally) (FALLTHRU)
;;              4 [60.6% (guessed)]  count:650902296 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 93 94

;; basic block 3, loop depth 0, count 422839530 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [39.4% (guessed)]  count:422839528 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 83 86 95 96 97 101 102 103
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 12 11 13 3 (var_location:SI D#11 (const_int 3 [0x3])) -1
     (nil))
(debug_insn 13 12 14 3 (var_location:DI arg (reg/v/f:DI 93 [ arg ])) -1
     (nil))
(debug_insn 14 13 15 3 (debug_marker:BLK) "cmodules/fbgc_stl.c":143:1 -1
     (nil))
(debug_insn 15 14 16 3 (var_location:SI D#12 (debug_expr:SI D#11)) -1
     (nil))
(debug_insn 16 15 17 3 (var_location:SI argc (debug_expr:SI D#12)) -1
     (nil))
(debug_insn 17 16 18 3 (debug_marker) "cmodules/fbgc_stl.c":146:3 -1
     (nil))
(insn 18 17 19 3 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 93 [ arg ]) [1 *arg_8(D)+0 S8 A64])) "cmodules/fbgc_stl.c":146:14 66 {*movdi_internal}
     (nil))
(call_insn 19 18 59 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f626c7e8600 convert_fbgc_object_to_int>) [0 convert_fbgc_object_to_int S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":146:14 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f626c7e8600 convert_fbgc_object_to_int>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 59 19 20 3 (set (reg:SI 101)
        (reg:SI 0 ax)) "cmodules/fbgc_stl.c":146:14 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 20 59 21 3 (set (reg:SI 83 [ _10 ])
        (reg:SI 101)) "cmodules/fbgc_stl.c":146:14 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 101)
        (nil)))
(debug_insn 21 20 22 3 (var_location:SI r (reg:SI 83 [ _10 ])) "cmodules/fbgc_stl.c":146:10 -1
     (nil))
(debug_insn 22 21 23 3 (debug_marker) "cmodules/fbgc_stl.c":147:3 -1
     (nil))
(insn 23 22 24 3 (set (reg/f:DI 95 [ MEM[(struct fbgc_object * *)arg_8(D) + 8B] ])
        (mem/f:DI (plus:DI (reg/v/f:DI 93 [ arg ])
                (const_int 8 [0x8])) [1 MEM[(struct fbgc_object * *)arg_8(D) + 8B]+0 S8 A64])) "cmodules/fbgc_stl.c":147:14 66 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 93 [ arg ])
                (const_int 8 [0x8])) [1 MEM[(struct fbgc_object * *)arg_8(D) + 8B]+0 S8 A64])
        (nil)))
(insn 24 23 25 3 (set (reg:DI 5 di)
        (reg/f:DI 95 [ MEM[(struct fbgc_object * *)arg_8(D) + 8B] ])) "cmodules/fbgc_stl.c":147:14 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ MEM[(struct fbgc_object * *)arg_8(D) + 8B] ])
        (nil)))
(call_insn 25 24 60 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f626c7e8600 convert_fbgc_object_to_int>) [0 convert_fbgc_object_to_int S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":147:14 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f626c7e8600 convert_fbgc_object_to_int>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 60 25 26 3 (set (reg:SI 102)
        (reg:SI 0 ax)) "cmodules/fbgc_stl.c":147:14 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 26 60 27 3 (set (reg:SI 86 [ _13 ])
        (reg:SI 102)) "cmodules/fbgc_stl.c":147:14 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 102)
        (nil)))
(debug_insn 27 26 28 3 (var_location:SI c (reg:SI 86 [ _13 ])) "cmodules/fbgc_stl.c":147:10 -1
     (nil))
(debug_insn 28 27 29 3 (debug_marker) "cmodules/fbgc_stl.c":148:3 -1
     (nil))
(insn 29 28 30 3 (set (reg/f:DI 96 [ MEM[(struct fbgc_object * *)arg_8(D) + 16B] ])
        (mem/f:DI (plus:DI (reg/v/f:DI 93 [ arg ])
                (const_int 16 [0x10])) [1 MEM[(struct fbgc_object * *)arg_8(D) + 16B]+0 S8 A64])) "cmodules/fbgc_stl.c":148:44 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 93 [ arg ])
        (nil)))
(insn 30 29 31 3 (set (reg:DI 5 di)
        (reg/f:DI 96 [ MEM[(struct fbgc_object * *)arg_8(D) + 16B] ])) "cmodules/fbgc_stl.c":148:44 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96 [ MEM[(struct fbgc_object * *)arg_8(D) + 16B] ])
        (nil)))
(call_insn 31 30 61 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f626c7e8600 convert_fbgc_object_to_int>) [0 convert_fbgc_object_to_int S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":148:44 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f626c7e8600 convert_fbgc_object_to_int>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 61 31 32 3 (set (reg:SI 103)
        (reg:SI 0 ax)) "cmodules/fbgc_stl.c":148:44 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(note 32 61 33 3 NOTE_INSN_DELETED)
(insn 33 32 34 3 (set (reg:SI 97 [ _16 ])
        (sign_extend:SI (subreg:QI (reg:SI 103) 0))) "cmodules/fbgc_stl.c":148:10 134 {extendqisi2}
     (expr_list:REG_DEAD (reg:SI 103)
        (nil)))
(insn 34 33 35 3 (set (reg:SI 2 cx)
        (reg:SI 97 [ _16 ])) "cmodules/fbgc_stl.c":148:10 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97 [ _16 ])
        (nil)))
(insn 35 34 36 3 (set (reg:SI 1 dx)
        (reg:SI 86 [ _13 ])) "cmodules/fbgc_stl.c":148:10 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ _13 ])
        (nil)))
(insn 36 35 37 3 (set (reg:SI 4 si)
        (reg:SI 83 [ _10 ])) "cmodules/fbgc_stl.c":148:10 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ _10 ])
        (nil)))
(insn 37 36 38 3 (set (reg:SI 5 di)
        (const_int 4 [0x4])) "cmodules/fbgc_stl.c":148:10 67 {*movsi_internal}
     (nil))
(call_insn/j 38 37 39 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_matrix_object") [flags 0x41]  <function_decl 0x7f626c80b100 new_fbgc_matrix_object>) [0 new_fbgc_matrix_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":148:10 681 {*sibcall_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_matrix_object") [flags 0x41]  <function_decl 0x7f626c80b100 new_fbgc_matrix_object>)
                        (nil))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
;;  succ:       EXIT [always]  count:422839530 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 39 38 41)
;; basic block 4, loop depth 0, count 650902295 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [60.6% (guessed)]  count:650902296 (estimated locally)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u38(6){ }u39(7){ }u40(16){ }u41(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 94
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 94
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(code_label 41 39 42 4 66 (nil) [1 uses])
(note 42 41 43 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 43 42 44 4 (debug_marker) "cmodules/fbgc_stl.c":150:7 -1
     (nil))
(insn 44 43 45 4 (set (reg:SI 1 dx)
        (reg/v:SI 94 [ argc ])) "cmodules/fbgc_stl.c":150:7 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 94 [ argc ])
        (nil)))
(insn 45 44 46 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f626c4a5e10 *.LC7>)) "cmodules/fbgc_stl.c":150:7 66 {*movdi_internal}
     (nil))
(insn 46 45 47 4 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_stl.c":150:7 67 {*movsi_internal}
     (nil))
(insn 47 46 48 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":150:7 69 {*movqi_internal}
     (nil))
(call_insn 48 47 49 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":150:7 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(debug_insn 49 48 54 4 (debug_marker) "cmodules/fbgc_stl.c":151:2 -1
     (nil))
(insn 54 49 55 4 (set (reg/i:DI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":152:1 66 {*movdi_internal}
     (nil))
(insn 55 54 0 4 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":152:1 -1
     (nil))
;;  succ:       EXIT [always]  count:650902295 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function fbgc_mem (fbgc_mem, funcdef_no=64, decl_uid=5721, cgraph_uid=65, symbol_order=75)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 86 uninteresting
Reg 84 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a1 (r86,l0) best SIREG, allocno SIREG
    a0 (r84,l0) best DREG, allocno DREG

  a0(r84,l0) costs: AREG:1000,1000 DREG:-500,-500 CREG:1000,1000 BREG:1000,1000 SIREG:1000,1000 DIREG:1000,1000 AD_REGS:1000,1000 CLOBBERED_REGS:1000,1000 Q_REGS:1000,1000 NON_Q_REGS:1000,1000 TLS_GOTBASE_REGS:1000,1000 GENERAL_REGS:1000,1000 SSE_FIRST_REG:18000,18000 NO_REX_SSE_REGS:18000,18000 SSE_REGS:18000,18000 MMX_REGS:25500,25500 INT_SSE_REGS:25500,25500 ALL_REGS:418000,418000 MEM:10000,10000
  a1(r86,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:-1000,-1000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000


Pass 1 for finding pseudo/allocno costs

    r86: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:2000,2000 DREG:1000,-500 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:2000,2000 AD_REGS:1000,1000 CLOBBERED_REGS:1000,1000 Q_REGS:1000,1000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:1000,1000 GENERAL_REGS:1000,1000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:38000,38000 INT_SSE_REGS:31500,31500 ALL_REGS:424000,424000 MEM:18000,18000
  a1(r86,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:2000,-1000 DIREG:4000,4000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000

   Insn 39(l0): point = 0
   Insn 38(l0): point = 2
   Insn 28(l0): point = 5
   Insn 27(l0): point = 7
   Insn 26(l0): point = 9
   Insn 25(l0): point = 11
   Insn 24(l0): point = 13
   Insn 42(l0): point = 16
   Insn 13(l0): point = 18
   Insn 12(l0): point = 20
   Insn 9(l0): point = 23
   Insn 8(l0): point = 25
   Insn 3(l0): point = 27
   Insn 41(l0): point = 29
 a0(r84): [23..27] [14..15]
 a1(r86): [28..29]
Compressing live ranges: from 32 to 6 - 18%
Ranges after the compression:
 a0(r84): [0..3]
 a1(r86): [4..5]
+++Allocating 0 bytes for conflict table (uncompressed size 16)
;; a0(r84,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r86,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a0(r84)<->a1(r86)@1000:move
  pref0:a1(r86)<-hr4@1500
  pref1:a0(r84)<-hr1@750
  regions=1, blocks=6, points=6
    allocnos=2 (big 0), copies=1, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 5 4 3 2
    all: 0r84 1r86
    modified regnos: 84 86
    border:
    Pressure: GENERAL_REGS=4
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@73000
      Allocno a0r84 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a1r86 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Forming thread by copy 0:a0r84-a1r86 (freq=1000):
        Result (freq=4500): a0r84(2500) a1r86(2000)
      Pushing a1(r86,l0)(cost 0)
      Pushing a0(r84,l0)(cost 0)
      Popping a0(r84,l0)  -- assign reg 1
      Popping a1(r86,l0)  -- assign reg 4
Disposition:
    0:r84  l0     1    1:r86  l0     4
New iteration of spill/restore move
+++Costs: overall -1500, reg -1500, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_mem

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,4u} r1={4d,1u} r2={3d} r4={4d,2u} r5={4d,1u} r6={1d,5u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,4u} r17={3d,1u} r18={2d} r19={1d,5u} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r84={1d,3u} r86={1d,1u} 
;;    total ref usage 196{162d,34u,0e} in 25{23 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 84 86
(note 5 1 41 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 41 5 3 2 (set (reg:SI 86)
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_stl.c":155:35 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ argc ])
        (nil)))
(insn 3 41 4 2 (set (reg/v:SI 84 [ argc ])
        (reg:SI 86)) "cmodules/fbgc_stl.c":155:35 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86)
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 8 2 (debug_marker) "cmodules/fbgc_stl.c":156:2 -1
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 84 [ argc ])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":156:4 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) "cmodules/fbgc_stl.c":156:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 16)
;;  succ:       3 [50.0% (guessed)]  count:536870912 (estimated locally) (FALLTHRU)
;;              4 [50.0% (guessed)]  count:536870912 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84

;; basic block 3, loop depth 0, count 536870913 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [50.0% (guessed)]  count:536870912 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(6){ }u8(7){ }u9(16){ }u10(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 11 10 12 3 (debug_marker) "cmodules/fbgc_stl.c":157:3 -1
     (nil))
(insn 12 11 13 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":157:3 69 {*movqi_internal}
     (nil))
(call_insn 13 12 42 3 (call (mem:QI (symbol_ref:DI ("print_fbgc_memory_block") [flags 0x41]  <function_decl 0x7f626c7ed000 print_fbgc_memory_block>) [0 print_fbgc_memory_block S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_stl.c":157:3 666 {*call}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("print_fbgc_memory_block") [flags 0x41]  <function_decl 0x7f626c7ed000 print_fbgc_memory_block>)
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(jump_insn 42 13 43 3 (set (pc)
        (label_ref 29)) 660 {jump}
     (nil)
 -> 29)
;;  succ:       5 [always]  count:536870913 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 43 42 16)
;; basic block 4, loop depth 0, count 536870913 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [50.0% (guessed)]  count:536870912 (estimated locally)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(6){ }u14(7){ }u15(16){ }u16(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(code_label 16 43 17 4 70 (nil) [1 uses])
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 18 17 19 4 (var_location:DI D#13 (entry_value:DI (reg:DI 5 di [ arg ]))) -1
     (nil))
(debug_insn 19 18 20 4 (var_location:SI argc (reg/v:SI 84 [ argc ])) -1
     (nil))
(debug_insn 20 19 21 4 (debug_marker:BLK) "cmodules/fbgc_stl.c":155:1 -1
     (nil))
(debug_insn 21 20 22 4 (var_location:DI D#14 (debug_expr:DI D#13)) -1
     (nil))
(debug_insn 22 21 23 4 (var_location:DI arg (debug_expr:DI D#14)) -1
     (nil))
(debug_insn 23 22 24 4 (debug_marker) "cmodules/fbgc_stl.c":159:7 -1
     (nil))
(insn 24 23 25 4 (set (reg:SI 1 dx)
        (reg/v:SI 84 [ argc ])) "cmodules/fbgc_stl.c":159:7 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 84 [ argc ])
        (nil)))
(insn 25 24 26 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f626c4b86c0 *.LC8>)) "cmodules/fbgc_stl.c":159:7 66 {*movdi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_stl.c":159:7 67 {*movsi_internal}
     (nil))
(insn 27 26 28 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":159:7 69 {*movqi_internal}
     (nil))
(call_insn 28 27 29 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":159:7 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
;;  succ:       5 [always]  count:536870913 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 4, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [always]  count:536870913 (estimated locally) (FALLTHRU)
;;              3 [always]  count:536870913 (estimated locally)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(6){ }u25(7){ }u26(16){ }u27(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax]
(code_label 29 28 30 5 71 (nil) [1 uses])
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 31 30 32 5 (var_location:SI argc (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 32 31 33 5 (var_location:DI arg (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 33 32 38 5 (debug_marker) "cmodules/fbgc_stl.c":160:2 -1
     (nil))
(insn 38 33 39 5 (set (reg/i:DI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":161:1 66 {*movdi_internal}
     (nil))
(insn 39 38 0 5 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":161:1 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

