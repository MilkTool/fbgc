
;; Function c_exp (c_exp, funcdef_no=56, decl_uid=5748, cgraph_uid=57, symbol_order=58)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

; Splitting reg 95 -> 107 108
; Splitting reg 96 -> 109 110
; Splitting reg 105 -> 111 112
; Splitting reg 106 -> 113 114
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg:DF 97)
        (reg:DF 20 xmm0 [ z ])) "cmodules/fbgc_math.c":22:47 111 {*movdf_internal}
     (nil))
(insn 3 2 52 2 (set (reg:DF 98)
        (reg:DF 21 xmm1 [ z+8 ])) "cmodules/fbgc_math.c":22:47 111 {*movdf_internal}
     (nil))
(insn 52 3 53 2 (set (reg:DI 109)
        (const_int 0 [0])) "cmodules/fbgc_math.c":22:47 66 {*movdi_internal}
     (nil))
(insn 53 52 5 2 (set (reg:DI 110 [+8 ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":22:47 66 {*movdi_internal}
     (nil))
(insn 5 53 6 2 (set (subreg:DF (reg:DI 109) 0)
        (reg:DF 97)) "cmodules/fbgc_math.c":22:47 111 {*movdf_internal}
     (nil))
(insn 6 5 54 2 (set (subreg:DF (reg:DI 110 [+8 ]) 0)
        (reg:DF 98)) "cmodules/fbgc_math.c":22:47 111 {*movdf_internal}
     (nil))
(insn 54 6 55 2 (set (reg:DI 107 [ z ])
        (reg:DI 109)) "cmodules/fbgc_math.c":22:47 66 {*movdi_internal}
     (nil))
(insn 55 54 8 2 (set (reg:DI 108 [ z+8 ])
        (reg:DI 110 [+8 ])) "cmodules/fbgc_math.c":22:47 66 {*movdi_internal}
     (nil))
(note 8 55 11 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 11 8 12 2 (var_location:DF D#22 (subreg:DF (reg:DI 108 [ z+8 ]) 0)) -1
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 99)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (nil))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (reg:DI 100)) 66 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg:DI 99)) 66 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:DF 20 xmm0)
        (subreg:DF (reg:DI 108 [ z+8 ]) 0)) 111 {*movdf_internal}
     (nil))
(call_insn 17 16 18 2 (call (mem:QI (symbol_ref:DI ("sincos") [flags 0x41]  <function_decl 0x7f213e4ba400 __builtin_sincos>) [0 __builtin_sincos S1 A8])
        (const_int 0 [0])) 666 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sincos") [flags 0x41]  <function_decl 0x7f213e4ba400 __builtin_sincos>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 18 17 19 2 (set (reg:DF 89 [ sincostmp_12 ])
        (mem/c:DF (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2  S8 A64])) 111 {*movdf_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DF 90 [ sincostmp_12+8 ])
        (mem/c:DF (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [2  S8 A64])) 111 {*movdf_internal}
     (nil))
(debug_insn 20 19 21 2 (var_location:DF z$imag (debug_expr:DF D#22)) -1
     (nil))
(debug_insn 21 20 22 2 (debug_marker) "cmodules/fbgc_math.c":24:2 -1
     (nil))
(debug_insn 22 21 23 2 (debug_marker) "cmodules/fbgc_math.c":25:2 -1
     (nil))
(insn 23 22 24 2 (set (reg:DF 20 xmm0)
        (subreg:DF (reg:DI 107 [ z ]) 0)) "cmodules/fbgc_math.c":25:13 111 {*movdf_internal}
     (nil))
(call_insn 24 23 25 2 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":25:13 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 25 24 26 2 (set (reg/v:DF 87 [ r ])
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":25:13 111 {*movdf_internal}
     (nil))
(debug_insn 26 25 27 2 (var_location:DF r (reg/v:DF 87 [ r ])) "cmodules/fbgc_math.c":25:13 -1
     (nil))
(debug_insn 27 26 28 2 (debug_marker) "cmodules/fbgc_math.c":26:2 -1
     (nil))
(debug_insn 28 27 29 2 (var_location:DF res$real (mult:DF (reg:DF 89 [ sincostmp_12 ])
        (reg/v:DF 87 [ r ]))) "cmodules/fbgc_math.c":26:11 -1
     (nil))
(debug_insn 29 28 30 2 (debug_marker) "cmodules/fbgc_math.c":27:2 -1
     (nil))
(debug_insn 30 29 31 2 (var_location:DF res$imag (mult:DF (reg:DF 90 [ sincostmp_12+8 ])
        (reg/v:DF 87 [ r ]))) "cmodules/fbgc_math.c":27:11 -1
     (nil))
(debug_insn 31 30 32 2 (debug_marker) "cmodules/fbgc_math.c":28:2 -1
     (nil))
(insn 32 31 33 2 (set (reg:DF 102)
        (mult:DF (reg:DF 89 [ sincostmp_12 ])
            (reg/v:DF 87 [ r ]))) "cmodules/fbgc_math.c":26:14 818 {*fop_df_comm}
     (nil))
(insn 33 32 34 2 (set (reg:DF 103)
        (mult:DF (reg:DF 90 [ sincostmp_12+8 ])
            (reg/v:DF 87 [ r ]))) "cmodules/fbgc_math.c":27:14 818 {*fop_df_comm}
     (nil))
(insn 34 33 35 2 (set (reg:V2DF 101)
        (vec_concat:V2DF (reg:DF 102)
            (reg:DF 103))) "cmodules/fbgc_math.c":28:9 2986 {vec_concatv2df}
     (nil))
(insn 35 34 36 2 (set (reg:TI 92 [ D.5863 ])
        (subreg:TI (reg:V2DF 101) 0)) "cmodules/fbgc_math.c":28:9 65 {*movti_internal}
     (nil))
(debug_insn 36 35 37 2 (var_location:DF D#1 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 37 36 38 2 (var_location:DF res$real (debug_expr:DF D#1)) -1
     (nil))
(debug_insn 38 37 39 2 (var_location:DF D#2 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 39 38 56 2 (var_location:DF res$imag (debug_expr:DF D#2)) -1
     (nil))
(insn 56 39 57 2 (set (reg:DI 111)
        (subreg:DI (reg:TI 92 [ D.5863 ]) 0)) "cmodules/fbgc_math.c":28:9 66 {*movdi_internal}
     (nil))
(insn 57 56 58 2 (set (reg:DI 112 [+8 ])
        (subreg:DI (reg:TI 92 [ D.5863 ]) 8)) "cmodules/fbgc_math.c":28:9 66 {*movdi_internal}
     (nil))
(insn 58 57 59 2 (set (reg:DI 113)
        (subreg:DI (reg:TI 92 [ D.5863 ]) 0)) "cmodules/fbgc_math.c":28:9 66 {*movdi_internal}
     (nil))
(insn 59 58 42 2 (set (reg:DI 114 [+8 ])
        (subreg:DI (reg:TI 92 [ D.5863 ]) 8)) "cmodules/fbgc_math.c":28:9 66 {*movdi_internal}
     (nil))
(insn 42 59 43 2 (set (reg:DF 93 [ <retval> ])
        (subreg:DF (reg:DI 111) 0)) "cmodules/fbgc_math.c":28:9 111 {*movdf_internal}
     (nil))
(insn 43 42 47 2 (set (reg:DF 94 [ <retval>+8 ])
        (subreg:DF (reg:DI 114 [+8 ]) 0)) "cmodules/fbgc_math.c":28:9 111 {*movdf_internal}
     (nil))
(insn 47 43 48 2 (set (reg:DF 20 xmm0)
        (reg:DF 93 [ <retval> ])) "cmodules/fbgc_math.c":29:1 111 {*movdf_internal}
     (nil))
(insn 48 47 49 2 (set (reg:DF 21 xmm1)
        (reg:DF 94 [ <retval>+8 ])) "cmodules/fbgc_math.c":29:1 111 {*movdf_internal}
     (nil))
(insn 49 48 50 2 (use (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":29:1 -1
     (nil))
(insn 50 49 0 2 (use (reg:DF 21 xmm1)) "cmodules/fbgc_math.c":29:1 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function fbgc_math_initializer (fbgc_math_initializer, funcdef_no=64, decl_uid=5685, cgraph_uid=65, symbol_order=72)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 4 2 (set (reg/v/f:DI 87 [ arg ])
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_math.c":137:1 66 {*movdi_internal}
     (nil))
(note 4 2 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 8 2 (debug_marker) "cmodules/fbgc_math.c":139:2 -1
     (nil))
(insn 8 7 9 2 (set (reg:DF 89)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S8 A64])) "cmodules/fbgc_math.c":139:2 111 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 3.141592653589793115997963468544185161590576171875e+0 [0x0.c90fdaa22168cp+2])
        (nil)))
(insn 9 8 10 2 (set (reg:DF 20 xmm0)
        (reg:DF 89)) "cmodules/fbgc_math.c":139:2 111 {*movdf_internal}
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f213e3e6d00 new_fbgc_double_object>) [0 new_fbgc_double_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":139:2 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f213e3e6d00 new_fbgc_double_object>)
        (nil))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 82 [ _1 ])
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":139:2 66 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (reg/f:DI 82 [ _1 ])) "cmodules/fbgc_math.c":139:2 66 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f213e0382d0 *.LC1>)) "cmodules/fbgc_math.c":139:2 66 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 87 [ arg ]) [3 *arg_7(D)+0 S8 A64])) "cmodules/fbgc_math.c":139:2 66 {*movdi_internal}
     (nil))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("add_variable_in_field_object") [flags 0x41]  <function_decl 0x7f213e412700 add_variable_in_field_object>) [0 add_variable_in_field_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":139:2 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("add_variable_in_field_object") [flags 0x41]  <function_decl 0x7f213e412700 add_variable_in_field_object>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(debug_insn 16 15 17 2 (debug_marker) "cmodules/fbgc_math.c":140:2 -1
     (nil))
(insn 17 16 18 2 (set (reg:DF 90)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S8 A64])) "cmodules/fbgc_math.c":140:2 111 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 2.718281828459045090795598298427648842334747314453125e+0 [0x0.adf85458a2bb48p+2])
        (nil)))
(insn 18 17 19 2 (set (reg:DF 20 xmm0)
        (reg:DF 90)) "cmodules/fbgc_math.c":140:2 111 {*movdf_internal}
     (nil))
(call_insn 19 18 20 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f213e3e6d00 new_fbgc_double_object>) [0 new_fbgc_double_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":140:2 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f213e3e6d00 new_fbgc_double_object>)
        (nil))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 20 19 21 2 (set (reg/f:DI 84 [ _3 ])
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":140:2 66 {*movdi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 1 dx)
        (reg/f:DI 84 [ _3 ])) "cmodules/fbgc_math.c":140:2 66 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f213e038360 *.LC3>)) "cmodules/fbgc_math.c":140:2 66 {*movdi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 87 [ arg ]) [3 *arg_7(D)+0 S8 A64])) "cmodules/fbgc_math.c":140:2 66 {*movdi_internal}
     (nil))
(call_insn 24 23 25 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("add_variable_in_field_object") [flags 0x41]  <function_decl 0x7f213e412700 add_variable_in_field_object>) [0 add_variable_in_field_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":140:2 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("add_variable_in_field_object") [flags 0x41]  <function_decl 0x7f213e412700 add_variable_in_field_object>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(debug_insn 25 24 26 2 (debug_marker) "cmodules/fbgc_math.c":142:2 -1
     (nil))
(insn 26 25 30 2 (set (reg/f:DI 86 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":142:9 66 {*movdi_internal}
     (nil))
(insn 30 26 31 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 86 [ <retval> ])) "cmodules/fbgc_math.c":143:1 66 {*movdi_internal}
     (nil))
(insn 31 30 0 2 (use (reg/i:DI 0 ax)) "cmodules/fbgc_math.c":143:1 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function fbgc_random (fbgc_random, funcdef_no=66, decl_uid=5737, cgraph_uid=67, symbol_order=76)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 97 [ arg ])
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_math.c":170:1 66 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 98 [ argc ])
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_math.c":170:1 67 {*movsi_internal}
     (nil))
(note 4 3 11 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 11 4 12 2 (debug_marker) "cmodules/fbgc_math.c":171:2 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("clock") [flags 0x41]  <function_decl 0x7f213e36da00 clock>) [0 clock S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":171:14 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("clock") [flags 0x41]  <function_decl 0x7f213e36da00 clock>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 13 12 14 2 (set (reg:DI 82 [ _1 ])
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":171:14 66 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:SI 5 di)
        (subreg:SI (reg:DI 82 [ _1 ]) 0)) "cmodules/fbgc_math.c":171:2 67 {*movsi_internal}
     (nil))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref:DI ("srand") [flags 0x41]  <function_decl 0x7f213e5e7700 srand>) [0 srand S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_math.c":171:2 666 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("srand") [flags 0x41]  <function_decl 0x7f213e5e7700 srand>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(debug_insn 16 15 17 2 (debug_marker) "cmodules/fbgc_math.c":173:2 -1
     (nil))
(debug_insn 17 16 18 2 (var_location:DF min (const_double:DF 0.0 [0x0.0p+0])) "cmodules/fbgc_math.c":173:9 -1
     (nil))
(debug_insn 18 17 19 2 (debug_marker) "cmodules/fbgc_math.c":174:2 -1
     (nil))
(debug_insn 19 18 20 2 (var_location:DF max (const_double:DF 1.0e+0 [0x0.8p+1])) "cmodules/fbgc_math.c":174:9 -1
     (nil))
(debug_insn 20 19 21 2 (debug_marker) "cmodules/fbgc_math.c":176:2 -1
     (nil))
(insn 21 20 22 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 98 [ argc ])
            (const_int 1 [0x1]))) "cmodules/fbgc_math.c":176:4 11 {*cmpsi_1}
     (nil))
(jump_insn 22 21 23 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "cmodules/fbgc_math.c":176:4 659 {*jcc}
     (int_list:REG_BR_PROB 856416484 (nil))
 -> 33)
;;  succ:       3 [20.2% (guessed)]  count:217325344 (estimated locally) (FALLTHRU)
;;              4 [79.8% (guessed)]  count:856416480 (estimated locally)

;; basic block 3, loop depth 0, count 217325345 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [20.2% (guessed)]  count:217325344 (estimated locally) (FALLTHRU)
(note 23 22 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 24 23 25 3 (debug_marker) "cmodules/fbgc_math.c":177:3 -1
     (nil))
(insn 25 24 26 3 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 97 [ arg ]) [3 *arg_19(D)+0 S8 A64])) "cmodules/fbgc_math.c":177:9 66 {*movdi_internal}
     (nil))
(call_insn 26 25 27 3 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f213e3db700 convert_fbgc_object_to_double>) [0 convert_fbgc_object_to_double S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":177:9 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f213e3db700 convert_fbgc_object_to_double>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 27 26 28 3 (set (reg/v:DF 93 [ max ])
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":177:9 111 {*movdf_internal}
     (nil))
(debug_insn 28 27 29 3 (var_location:DF max (reg/v:DF 93 [ max ])) "cmodules/fbgc_math.c":177:9 -1
     (nil))
(insn 29 28 30 3 (set (reg:DF 99)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S8 A64])) 111 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 2.147483647e+9 [0x0.fffffffep+31])
        (nil)))
(insn 30 29 5 3 (set (reg:DF 95 [ _34 ])
        (div:DF (reg:DF 99)
            (reg/v:DF 93 [ max ]))) 822 {*fop_df_1}
     (nil))
(insn 5 30 33 3 (set (reg/v:DF 91 [ min ])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S8 A64])) "cmodules/fbgc_math.c":173:9 111 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
;;  succ:       8 [always]  count:217325345 (estimated locally) (FALLTHRU)

;; basic block 4, loop depth 0, count 856416480 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [79.8% (guessed)]  count:856416480 (estimated locally)
(code_label 33 5 34 4 7 (nil) [1 uses])
(note 34 33 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 35 34 36 4 (debug_marker) "cmodules/fbgc_math.c":179:7 -1
     (nil))
(insn 36 35 37 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 98 [ argc ])
            (const_int 2 [0x2]))) "cmodules/fbgc_math.c":179:9 11 {*cmpsi_1}
     (nil))
(jump_insn 37 36 38 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) "cmodules/fbgc_math.c":179:9 659 {*jcc}
     (int_list:REG_BR_PROB 856416484 (nil))
 -> 55)
;;  succ:       5 [20.2% (guessed)]  count:173338695 (estimated locally) (FALLTHRU)
;;              6 [79.8% (guessed)]  count:683077785 (estimated locally)

;; basic block 5, loop depth 0, count 173338695 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [20.2% (guessed)]  count:173338695 (estimated locally) (FALLTHRU)
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 39 38 40 5 (debug_marker) "cmodules/fbgc_math.c":180:3 -1
     (nil))
(insn 40 39 41 5 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 97 [ arg ]) [3 *arg_19(D)+0 S8 A64])) "cmodules/fbgc_math.c":180:9 66 {*movdi_internal}
     (nil))
(call_insn 41 40 42 5 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f213e3db700 convert_fbgc_object_to_double>) [0 convert_fbgc_object_to_double S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":180:9 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f213e3db700 convert_fbgc_object_to_double>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 42 41 43 5 (set (reg/v:DF 91 [ min ])
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":180:9 111 {*movdf_internal}
     (nil))
(debug_insn 43 42 44 5 (var_location:DF min (reg/v:DF 91 [ min ])) "cmodules/fbgc_math.c":180:9 -1
     (nil))
(debug_insn 44 43 45 5 (debug_marker) "cmodules/fbgc_math.c":181:3 -1
     (nil))
(insn 45 44 46 5 (set (reg:DI 100)
        (mem/f:DI (plus:DI (reg/v/f:DI 97 [ arg ])
                (const_int 8 [0x8])) [3 MEM[(struct fbgc_object * *)arg_19(D) + 8B]+0 S8 A64])) "cmodules/fbgc_math.c":181:9 66 {*movdi_internal}
     (nil))
(insn 46 45 47 5 (set (reg:DI 5 di)
        (reg:DI 100)) "cmodules/fbgc_math.c":181:9 66 {*movdi_internal}
     (nil))
(call_insn 47 46 48 5 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f213e3db700 convert_fbgc_object_to_double>) [0 convert_fbgc_object_to_double S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":181:9 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f213e3db700 convert_fbgc_object_to_double>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 48 47 49 5 (set (reg/v:DF 92 [ max ])
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":181:9 111 {*movdf_internal}
     (nil))
(debug_insn 49 48 50 5 (var_location:DF max (reg/v:DF 92 [ max ])) "cmodules/fbgc_math.c":181:9 -1
     (nil))
(insn 50 49 51 5 (set (reg:DF 101)
        (minus:DF (reg/v:DF 92 [ max ])
            (reg/v:DF 91 [ min ]))) 822 {*fop_df_1}
     (nil))
(insn 51 50 52 5 (set (reg:DF 102)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S8 A64])) 111 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 2.147483647e+9 [0x0.fffffffep+31])
        (nil)))
(insn 52 51 55 5 (set (reg:DF 95 [ _34 ])
        (div:DF (reg:DF 102)
            (reg:DF 101))) 822 {*fop_df_1}
     (nil))
;;  succ:       8 [always]  count:173338695 (estimated locally) (FALLTHRU)

;; basic block 6, loop depth 0, count 683077784 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4 [79.8% (guessed)]  count:683077785 (estimated locally)
(code_label 55 52 56 6 9 (nil) [1 uses])
(note 56 55 57 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 57 56 60 6 (debug_marker) "cmodules/fbgc_math.c":183:7 -1
     (nil))
(insn 60 57 61 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 98 [ argc ])
            (const_int 2 [0x2]))) "cmodules/fbgc_math.c":183:9 11 {*cmpsi_1}
     (nil))
(jump_insn 61 60 88 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "cmodules/fbgc_math.c":183:9 659 {*jcc}
     (int_list:REG_BR_PROB 186616332 (nil))
 -> 80)
;;  succ:       9 [17.4% (guessed)]  count:118718918 (estimated locally)
;;              7 [82.6% (guessed)]  count:564358866 (estimated locally) (FALLTHRU)

;; basic block 7, loop depth 0, count 564358866 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [82.6% (guessed)]  count:564358866 (estimated locally) (FALLTHRU)
(note 88 61 6 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 6 88 7 7 (set (reg:DF 95 [ _34 ])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S8 A64])) 111 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 2.147483647e+9 [0x0.fffffffep+31])
        (nil)))
(insn 7 6 62 7 (set (reg/v:DF 91 [ min ])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S8 A64])) "cmodules/fbgc_math.c":173:9 111 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
;;  succ:       8 [always]  count:564358866 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 0, count 955022906 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       3 [always]  count:217325345 (estimated locally) (FALLTHRU)
;;              5 [always]  count:173338695 (estimated locally) (FALLTHRU)
;;              7 [always]  count:564358866 (estimated locally) (FALLTHRU)
(code_label 62 7 63 8 8 (nil) [0 uses])
(note 63 62 64 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 64 63 65 8 (var_location:DF max (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 65 64 66 8 (var_location:DF min (reg/v:DF 91 [ min ])) -1
     (nil))
(debug_insn 66 65 67 8 (debug_marker) "cmodules/fbgc_math.c":185:2 -1
     (nil))
(debug_insn 67 66 68 8 (var_location:DF range (debug_expr:DF D#25)) "cmodules/fbgc_math.c":185:9 -1
     (nil))
(debug_insn 68 67 69 8 (debug_marker) "cmodules/fbgc_math.c":186:5 -1
     (nil))
(debug_insn 69 68 70 8 (var_location:DF div (div:DF (const_double:DF 2.147483647e+9 [0x0.fffffffep+31])
        (debug_expr:DF D#25))) "cmodules/fbgc_math.c":186:12 -1
     (nil))
(debug_insn 70 69 71 8 (debug_marker) "cmodules/fbgc_math.c":188:2 -1
     (nil))
(call_insn 71 70 72 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7f213e5e7600 rand>) [0 rand S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":188:39 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7f213e5e7600 rand>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 72 71 73 8 (set (reg:SI 87 [ _6 ])
        (reg:SI 0 ax)) "cmodules/fbgc_math.c":188:39 67 {*movsi_internal}
     (nil))
(insn 73 72 74 8 (set (reg:DF 103)
        (float:DF (reg:SI 87 [ _6 ]))) "cmodules/fbgc_math.c":188:46 172 {*floatsidf2}
     (nil))
(insn 74 73 75 8 (set (reg:DF 104)
        (div:DF (reg:DF 103)
            (reg:DF 95 [ _34 ]))) "cmodules/fbgc_math.c":188:46 822 {*fop_df_1}
     (nil))
(insn 75 74 76 8 (set (reg:DF 105)
        (plus:DF (reg:DF 104)
            (reg/v:DF 91 [ min ]))) "cmodules/fbgc_math.c":188:9 818 {*fop_df_comm}
     (nil))
(insn 76 75 77 8 (set (reg:DF 20 xmm0)
        (reg:DF 105)) "cmodules/fbgc_math.c":188:9 111 {*movdf_internal}
     (nil))
(call_insn/j 77 76 80 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f213e3e6d00 new_fbgc_double_object>) [0 new_fbgc_double_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":188:9 681 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f213e3e6d00 new_fbgc_double_object>)
        (nil))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
;;  succ:       EXIT [always]  count:955022906 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 9, loop depth 0, count 118718918 (estimated locally), maybe hot
;;  prev block 8, next block 1, flags: (RTL)
;;  pred:       6 [17.4% (guessed)]  count:118718918 (estimated locally)
(code_label 80 77 81 9 10 (nil) [1 uses])
(note 81 80 8 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 8 81 85 9 (set (reg/f:DI 96 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":183:27 66 {*movdi_internal}
     (nil))
(insn 85 8 86 9 (set (reg/i:DI 0 ax)
        (reg/f:DI 96 [ <retval> ])) "cmodules/fbgc_math.c":189:1 66 {*movdi_internal}
     (nil))
(insn 86 85 0 9 (use (reg/i:DI 0 ax)) "cmodules/fbgc_math.c":189:1 -1
     (nil))
;;  succ:       EXIT [always]  count:118718918 (estimated locally) (FALLTHRU)


;; Function fbgc_rand (fbgc_rand, funcdef_no=67, decl_uid=5745, cgraph_uid=68, symbol_order=78)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 22864923 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:22864923 (estimated locally) (FALLTHRU)
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 103 [ arg ])
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_math.c":192:1 66 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 104 [ argc ])
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_math.c":192:1 67 {*movsi_internal}
     (nil))
(note 4 3 11 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 11 4 12 2 (debug_marker) "cmodules/fbgc_math.c":193:2 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("clock") [flags 0x41]  <function_decl 0x7f213e36da00 clock>) [0 clock S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":193:14 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("clock") [flags 0x41]  <function_decl 0x7f213e36da00 clock>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 13 12 14 2 (set (reg:DI 82 [ _1 ])
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":193:14 66 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:SI 5 di)
        (subreg:SI (reg:DI 82 [ _1 ]) 0)) "cmodules/fbgc_math.c":193:2 67 {*movsi_internal}
     (nil))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref:DI ("srand") [flags 0x41]  <function_decl 0x7f213e5e7700 srand>) [0 srand S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_math.c":193:2 666 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("srand") [flags 0x41]  <function_decl 0x7f213e5e7700 srand>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(debug_insn 16 15 17 2 (debug_marker) "cmodules/fbgc_math.c":194:2 -1
     (nil))
(debug_insn 17 16 18 2 (debug_marker) "cmodules/fbgc_math.c":195:2 -1
     (nil))
(insn 18 17 19 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 104 [ argc ])
            (const_int 1 [0x1]))) "cmodules/fbgc_math.c":195:4 11 {*cmpsi_1}
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "cmodules/fbgc_math.c":195:4 659 {*jcc}
     (int_list:REG_BR_PROB 856416484 (nil))
 -> 30)
;;  succ:       3 [20.2% (guessed)]  count:4627860 (estimated locally) (FALLTHRU)
;;              4 [79.8% (guessed)]  count:18237063 (estimated locally)

;; basic block 3, loop depth 0, count 4627860 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [20.2% (guessed)]  count:4627860 (estimated locally) (FALLTHRU)
(note 20 19 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 21 20 22 3 (debug_marker) "cmodules/fbgc_math.c":196:3 -1
     (nil))
(insn 22 21 23 3 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 103 [ arg ]) [3 *arg_30(D)+0 S8 A64])) "cmodules/fbgc_math.c":196:15 66 {*movdi_internal}
     (nil))
(call_insn 23 22 24 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f213e3db600 convert_fbgc_object_to_int>) [0 convert_fbgc_object_to_int S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":196:15 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f213e3db600 convert_fbgc_object_to_int>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 24 23 25 3 (set (reg:SI 85 [ _4 ])
        (reg:SI 0 ax)) "cmodules/fbgc_math.c":196:15 67 {*movsi_internal}
     (nil))
(insn 25 24 26 3 (set (reg/v:SI 96 [ row ])
        (reg:SI 85 [ _4 ])) "cmodules/fbgc_math.c":196:13 67 {*movsi_internal}
     (nil))
(debug_insn 26 25 27 3 (var_location:SI col (reg/v:SI 96 [ row ])) "cmodules/fbgc_math.c":196:13 -1
     (nil))
(debug_insn 27 26 5 3 (var_location:SI row (reg/v:SI 96 [ row ])) "cmodules/fbgc_math.c":196:7 -1
     (nil))
(insn 5 27 30 3 (set (reg/v:SI 97 [ col ])
        (reg/v:SI 96 [ row ])) "cmodules/fbgc_math.c":196:13 67 {*movsi_internal}
     (nil))
;;  succ:       6 [always]  count:4627860 (estimated locally) (FALLTHRU)

;; basic block 4, loop depth 0, count 18237062 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [79.8% (guessed)]  count:18237063 (estimated locally)
(code_label 30 5 31 4 15 (nil) [1 uses])
(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 32 31 33 4 (debug_marker) "cmodules/fbgc_math.c":198:7 -1
     (nil))
(insn 33 32 34 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 104 [ argc ])
            (const_int 2 [0x2]))) "cmodules/fbgc_math.c":198:9 11 {*cmpsi_1}
     (nil))
(jump_insn 34 33 35 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 118)
            (pc))) "cmodules/fbgc_math.c":198:9 659 {*jcc}
     (int_list:REG_BR_PROB 486727172 (nil))
 -> 118)
;;  succ:       5 [54.7% (guessed)]  count:9970202 (estimated locally) (FALLTHRU)
;;              13 [45.3% (guessed)]  count:8266860 (estimated locally)

;; basic block 5, loop depth 0, count 9970202 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [54.7% (guessed)]  count:9970202 (estimated locally) (FALLTHRU)
(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 36 35 37 5 (debug_marker) "cmodules/fbgc_math.c":199:3 -1
     (nil))
(insn 37 36 38 5 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 103 [ arg ]) [3 *arg_30(D)+0 S8 A64])) "cmodules/fbgc_math.c":199:9 66 {*movdi_internal}
     (nil))
(call_insn 38 37 39 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f213e3db600 convert_fbgc_object_to_int>) [0 convert_fbgc_object_to_int S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":199:9 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f213e3db600 convert_fbgc_object_to_int>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 39 38 40 5 (set (reg:SI 87 [ _6 ])
        (reg:SI 0 ax)) "cmodules/fbgc_math.c":199:9 67 {*movsi_internal}
     (nil))
(insn 40 39 41 5 (set (reg/v:SI 96 [ row ])
        (reg:SI 87 [ _6 ])) "cmodules/fbgc_math.c":199:7 67 {*movsi_internal}
     (nil))
(debug_insn 41 40 42 5 (var_location:SI row (reg/v:SI 96 [ row ])) "cmodules/fbgc_math.c":199:7 -1
     (nil))
(debug_insn 42 41 43 5 (debug_marker) "cmodules/fbgc_math.c":200:3 -1
     (nil))
(insn 43 42 44 5 (set (reg:DI 105)
        (mem/f:DI (plus:DI (reg/v/f:DI 103 [ arg ])
                (const_int 8 [0x8])) [3 MEM[(struct fbgc_object * *)arg_30(D) + 8B]+0 S8 A64])) "cmodules/fbgc_math.c":200:9 66 {*movdi_internal}
     (nil))
(insn 44 43 45 5 (set (reg:DI 5 di)
        (reg:DI 105)) "cmodules/fbgc_math.c":200:9 66 {*movdi_internal}
     (nil))
(call_insn 45 44 46 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f213e3db600 convert_fbgc_object_to_int>) [0 convert_fbgc_object_to_int S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":200:9 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f213e3db600 convert_fbgc_object_to_int>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 46 45 47 5 (set (reg:SI 89 [ _8 ])
        (reg:SI 0 ax)) "cmodules/fbgc_math.c":200:9 67 {*movsi_internal}
     (nil))
(insn 47 46 48 5 (set (reg/v:SI 97 [ col ])
        (reg:SI 89 [ _8 ])) "cmodules/fbgc_math.c":200:7 67 {*movsi_internal}
     (nil))
(debug_insn 48 47 49 5 (var_location:SI col (reg/v:SI 97 [ col ])) "cmodules/fbgc_math.c":200:7 -1
     (nil))
;;  succ:       6 [always]  count:9970202 (estimated locally) (FALLTHRU)

;; basic block 6, loop depth 0, count 14598062 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       3 [always]  count:4627860 (estimated locally) (FALLTHRU)
;;              5 [always]  count:9970202 (estimated locally) (FALLTHRU)
(code_label 49 48 50 6 16 (nil) [0 uses])
(note 50 49 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 51 50 52 6 (var_location:SI col (reg/v:SI 97 [ col ])) -1
     (nil))
(debug_insn 52 51 53 6 (var_location:SI row (reg/v:SI 96 [ row ])) -1
     (nil))
(debug_insn 53 52 54 6 (debug_marker) "cmodules/fbgc_math.c":204:2 -1
     (nil))
(insn 54 53 55 6 (set (reg:SI 2 cx)
        (const_int 10 [0xa])) "cmodules/fbgc_math.c":204:27 67 {*movsi_internal}
     (nil))
(insn 55 54 56 6 (set (reg:SI 1 dx)
        (reg/v:SI 97 [ col ])) "cmodules/fbgc_math.c":204:27 67 {*movsi_internal}
     (nil))
(insn 56 55 57 6 (set (reg:SI 4 si)
        (reg/v:SI 96 [ row ])) "cmodules/fbgc_math.c":204:27 67 {*movsi_internal}
     (nil))
(insn 57 56 58 6 (set (reg:SI 5 di)
        (const_int 4 [0x4])) "cmodules/fbgc_math.c":204:27 67 {*movsi_internal}
     (nil))
(call_insn 58 57 59 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_matrix_object") [flags 0x41]  <function_decl 0x7f213e3fe100 new_fbgc_matrix_object>) [0 new_fbgc_matrix_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":204:27 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_matrix_object") [flags 0x41]  <function_decl 0x7f213e3fe100 new_fbgc_matrix_object>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 59 58 60 6 (set (reg/v/f:DI 102 [ <retval> ])
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":204:27 66 {*movdi_internal}
     (nil))
(debug_insn 60 59 61 6 (var_location:DI m (reg/v/f:DI 102 [ <retval> ])) "cmodules/fbgc_math.c":204:27 -1
     (nil))
(debug_insn 61 60 62 6 (debug_marker) "cmodules/fbgc_math.c":205:2 -1
     (nil))
(insn 62 61 63 6 (parallel [
            (set (reg/v/f:DI 98 [ mc ])
                (plus:DI (reg/v/f:DI 102 [ <retval> ])
                    (const_int 18 [0x12])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":205:11 191 {*adddi_1}
     (nil))
(debug_insn 63 62 64 6 (var_location:DI mc (reg/v/f:DI 98 [ mc ])) "cmodules/fbgc_math.c":205:11 -1
     (nil))
(debug_insn 64 63 65 6 (debug_marker) "cmodules/fbgc_math.c":206:2 -1
     (nil))
(debug_insn 65 64 66 6 (debug_marker) "cmodules/fbgc_math.c":206:6 -1
     (nil))
(debug_insn 66 65 67 6 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 67 66 68 6 (debug_marker) "cmodules/fbgc_math.c":206:20 -1
     (nil))
(insn 68 67 69 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 96 [ row ])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":206:2 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 69 68 70 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 113)
            (pc))) "cmodules/fbgc_math.c":206:2 659 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 113)
;;  succ:       7 [89.0% (guessed)]  count:12992275 (estimated locally) (FALLTHRU)
;;              14 [11.0% (guessed)]  count:1605787 (estimated locally)

;; basic block 7, loop depth 0, count 12992275 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [89.0% (guessed)]  count:12992275 (estimated locally) (FALLTHRU)
(note 70 69 71 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 97 [ col ])
            (const_int 0 [0]))) 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 72 71 90 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 123)
            (pc))) 659 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 123)
;;  succ:       11 [89.0% (guessed)]  count:11563125 (estimated locally)
;;              14 [11.0% (guessed)]  count:1429150 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 2, count 955630224 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       12 [always]  count:105119324 (estimated locally) (FALLTHRU)
;;              8 [89.0% (guessed)]  count:850510900 (estimated locally) (DFS_BACK)
(code_label 90 72 76 8 19 (nil) [1 uses])
(note 76 90 77 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 77 76 78 8 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(debug_insn 78 77 79 8 (debug_marker) "cmodules/fbgc_math.c":208:4 -1
     (nil))
(call_insn 79 78 80 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7f213e5e7600 rand>) [0 rand S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":208:18 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7f213e5e7600 rand>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 80 79 81 8 (set (reg:SI 90 [ _9 ])
        (reg:SI 0 ax)) "cmodules/fbgc_math.c":208:18 67 {*movsi_internal}
     (nil))
(insn 81 80 82 8 (set (reg:DI 106)
        (zero_extend:DI (reg:SI 100 [ ivtmp.43 ]))) "cmodules/fbgc_math.c":208:12 114 {*zero_extendsidi2}
     (nil))
(insn 82 81 83 8 (set (reg:DF 107)
        (float:DF (reg:SI 90 [ _9 ]))) "cmodules/fbgc_math.c":208:25 172 {*floatsidf2}
     (nil))
(insn 83 82 84 8 (set (reg:DF 109)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S8 A64])) "cmodules/fbgc_math.c":208:25 111 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 2.147483647e+9 [0x0.fffffffep+31])
        (nil)))
(insn 84 83 85 8 (set (reg:DF 108)
        (div:DF (reg:DF 107)
            (reg:DF 109))) "cmodules/fbgc_math.c":208:25 822 {*fop_df_1}
     (nil))
(insn 85 84 86 8 (set (mem:DF (plus:DI (mult:DI (reg:DI 106)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 98 [ mc ])) [2 *_15+0 S8 A64])
        (reg:DF 108)) "cmodules/fbgc_math.c":208:16 111 {*movdf_internal}
     (nil))
(debug_insn 86 85 87 8 (debug_marker) "cmodules/fbgc_math.c":207:28 -1
     (nil))
(debug_insn 87 86 88 8 (var_location:SI j (const_int 1 [0x1])) -1
     (nil))
(debug_insn 88 87 89 8 (debug_marker) "cmodules/fbgc_math.c":207:21 -1
     (nil))
(insn 89 88 91 8 (parallel [
            (set (reg:SI 100 [ ivtmp.43 ])
                (plus:SI (reg:SI 100 [ ivtmp.43 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 190 {*addsi_1}
     (nil))
(insn 91 89 92 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ ivtmp.49 ])
            (reg:SI 100 [ ivtmp.43 ]))) "cmodules/fbgc_math.c":207:3 11 {*cmpsi_1}
     (nil))
(jump_insn 92 91 93 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) "cmodules/fbgc_math.c":207:3 659 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 90)
;;  succ:       8 [89.0% (guessed)]  count:850510900 (estimated locally) (DFS_BACK)
;;              9 [11.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU)

;; basic block 9, loop depth 1, count 105119325 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [11.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU)
(note 93 92 94 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 94 93 95 9 (debug_marker) "cmodules/fbgc_math.c":206:27 -1
     (nil))
(insn 95 94 96 9 (parallel [
            (set (reg/v:SI 99 [ i ])
                (plus:SI (reg/v:SI 99 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":206:27 190 {*addsi_1}
     (nil))
(debug_insn 96 95 97 9 (var_location:SI i (reg/v:SI 99 [ i ])) -1
     (nil))
(debug_insn 97 96 98 9 (debug_marker) "cmodules/fbgc_math.c":206:20 -1
     (nil))
(insn 98 97 99 9 (parallel [
            (set (reg:SI 101 [ ivtmp.49 ])
                (plus:SI (reg:SI 101 [ ivtmp.49 ])
                    (reg/v:SI 97 [ col ])))
            (clobber (reg:CC 17 flags))
        ]) 190 {*addsi_1}
     (nil))
(insn 99 98 100 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 96 [ row ])
            (reg/v:SI 99 [ i ]))) "cmodules/fbgc_math.c":206:2 11 {*cmpsi_1}
     (nil))
(jump_insn 100 99 119 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 113)
            (pc))) "cmodules/fbgc_math.c":206:2 659 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 113)
;;  succ:       10 [89.0% (guessed)]  count:93556199 (estimated locally) (FALLTHRU)
;;              14 [11.0% (guessed)]  count:11563126 (estimated locally)

;; basic block 10, loop depth 1, count 93556199 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 [89.0% (guessed)]  count:93556199 (estimated locally) (FALLTHRU)
(note 119 100 123 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;;  succ:       12 [always]  count:93556199 (estimated locally) (FALLTHRU)

;; basic block 11, loop depth 0, count 11563125 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       7 [89.0% (guessed)]  count:11563125 (estimated locally)
(code_label 123 119 122 11 21 (nil) [1 uses])
(note 122 123 6 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 6 122 7 11 (set (reg:SI 101 [ ivtmp.49 ])
        (reg/v:SI 97 [ col ])) "cmodules/fbgc_math.c":206:2 67 {*movsi_internal}
     (nil))
(insn 7 6 101 11 (set (reg/v:SI 99 [ i ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":206:13 67 {*movsi_internal}
     (nil))
;;  succ:       12 [always]  count:11563125 (estimated locally) (FALLTHRU)

;; basic block 12, loop depth 1, count 105119324 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 [always]  count:11563125 (estimated locally) (FALLTHRU)
;;              10 [always]  count:93556199 (estimated locally) (FALLTHRU)
(code_label 101 7 102 12 18 (nil) [0 uses])
(note 102 101 103 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 103 102 104 12 (var_location:SI i (reg/v:SI 99 [ i ])) -1
     (nil))
(debug_insn 104 103 105 12 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(debug_insn 105 104 106 12 (debug_marker) "cmodules/fbgc_math.c":207:21 -1
     (nil))
(insn 106 105 118 12 (parallel [
            (set (reg:SI 100 [ ivtmp.43 ])
                (minus:SI (reg:SI 101 [ ivtmp.49 ])
                    (reg/v:SI 97 [ col ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":208:8 246 {*subsi_1}
     (nil))
;;  succ:       8 [always]  count:105119324 (estimated locally) (FALLTHRU)

;; basic block 13, loop depth 0, count 8266860 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       4 [45.3% (guessed)]  count:8266860 (estimated locally)
(code_label 118 106 117 13 20 (nil) [1 uses])
(note 117 118 8 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 8 117 113 13 (set (reg/v/f:DI 102 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":202:14 66 {*movdi_internal}
     (nil))
;;  succ:       14 [always]  count:8266860 (estimated locally) (FALLTHRU)

;; basic block 14, loop depth 0, count 22864923 (estimated locally), maybe hot
;;  prev block 13, next block 1, flags: (RTL)
;;  pred:       13 [always]  count:8266860 (estimated locally) (FALLTHRU)
;;              6 [11.0% (guessed)]  count:1605787 (estimated locally)
;;              7 [11.0% (guessed)]  count:1429150 (estimated locally) (FALLTHRU)
;;              9 [11.0% (guessed)]  count:11563126 (estimated locally)
(code_label 113 8 116 14 14 (nil) [2 uses])
(note 116 113 114 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 114 116 115 14 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 102 [ <retval> ])) "cmodules/fbgc_math.c":212:1 66 {*movdi_internal}
     (nil))
(insn 115 114 0 14 (use (reg/i:DI 0 ax)) "cmodules/fbgc_math.c":212:1 -1
     (nil))
;;  succ:       EXIT [always]  count:22864923 (estimated locally) (FALLTHRU)


;; Function fbgc_randint (fbgc_randint, funcdef_no=65, decl_uid=5741, cgraph_uid=66, symbol_order=74)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 93 [ arg ])
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_math.c":147:1 66 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 94 [ argc ])
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_math.c":147:1 67 {*movsi_internal}
     (nil))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 9 4 10 2 (debug_marker) "cmodules/fbgc_math.c":149:2 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("clock") [flags 0x41]  <function_decl 0x7f213e36da00 clock>) [0 clock S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":149:14 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("clock") [flags 0x41]  <function_decl 0x7f213e36da00 clock>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 11 10 12 2 (set (reg:DI 82 [ _1 ])
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":149:14 66 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 5 di)
        (subreg:SI (reg:DI 82 [ _1 ]) 0)) "cmodules/fbgc_math.c":149:2 67 {*movsi_internal}
     (nil))
(call_insn 13 12 14 2 (call (mem:QI (symbol_ref:DI ("srand") [flags 0x41]  <function_decl 0x7f213e5e7700 srand>) [0 srand S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_math.c":149:2 666 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("srand") [flags 0x41]  <function_decl 0x7f213e5e7700 srand>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(debug_insn 14 13 15 2 (debug_marker) "cmodules/fbgc_math.c":151:2 -1
     (nil))
(debug_insn 15 14 16 2 (var_location:SI min (const_int 0 [0])) "cmodules/fbgc_math.c":151:6 -1
     (nil))
(debug_insn 16 15 17 2 (debug_marker) "cmodules/fbgc_math.c":152:2 -1
     (nil))
(debug_insn 17 16 18 2 (var_location:SI max (const_int 0 [0])) "cmodules/fbgc_math.c":152:6 -1
     (nil))
(debug_insn 18 17 19 2 (debug_marker) "cmodules/fbgc_math.c":154:2 -1
     (nil))
(insn 19 18 20 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 94 [ argc ])
            (const_int 1 [0x1]))) "cmodules/fbgc_math.c":154:4 11 {*cmpsi_1}
     (nil))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) "cmodules/fbgc_math.c":154:4 659 {*jcc}
     (int_list:REG_BR_PROB 856416484 (nil))
 -> 29)
;;  succ:       3 [20.2% (guessed)]  count:217325344 (estimated locally) (FALLTHRU)
;;              4 [79.8% (guessed)]  count:856416480 (estimated locally)

;; basic block 3, loop depth 0, count 217325345 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [20.2% (guessed)]  count:217325344 (estimated locally) (FALLTHRU)
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 22 21 23 3 (debug_marker) "cmodules/fbgc_math.c":155:3 -1
     (nil))
(insn 23 22 24 3 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 93 [ arg ]) [3 *arg_20(D)+0 S8 A64])) "cmodules/fbgc_math.c":155:9 66 {*movdi_internal}
     (nil))
(call_insn 24 23 25 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f213e3db600 convert_fbgc_object_to_int>) [0 convert_fbgc_object_to_int S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":155:9 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f213e3db600 convert_fbgc_object_to_int>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 25 24 26 3 (set (reg/v:SI 91 [ max ])
        (reg:SI 0 ax)) "cmodules/fbgc_math.c":155:9 67 {*movsi_internal}
     (nil))
(debug_insn 26 25 5 3 (var_location:SI max (reg/v:SI 91 [ max ])) "cmodules/fbgc_math.c":155:9 -1
     (nil))
(insn 5 26 29 3 (set (reg/v:SI 90 [ min ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":151:6 67 {*movsi_internal}
     (nil))
;;  succ:       7 [always]  count:217325345 (estimated locally) (FALLTHRU)

;; basic block 4, loop depth 0, count 856416480 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [79.8% (guessed)]  count:856416480 (estimated locally)
(code_label 29 5 30 4 29 (nil) [1 uses])
(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 31 30 32 4 (debug_marker) "cmodules/fbgc_math.c":157:7 -1
     (nil))
(insn 32 31 33 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 94 [ argc ])
            (const_int 2 [0x2]))) "cmodules/fbgc_math.c":157:9 11 {*cmpsi_1}
     (nil))
(jump_insn 33 32 34 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) "cmodules/fbgc_math.c":157:9 659 {*jcc}
     (int_list:REG_BR_PROB 311385132 (nil))
 -> 48)
;;  succ:       5 [71.0% (guessed)]  count:608055702 (estimated locally) (FALLTHRU)
;;              6 [29.0% (guessed)]  count:248360778 (estimated locally)

;; basic block 5, loop depth 0, count 608055701 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [71.0% (guessed)]  count:608055702 (estimated locally) (FALLTHRU)
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 35 34 36 5 (debug_marker) "cmodules/fbgc_math.c":158:3 -1
     (nil))
(insn 36 35 37 5 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 93 [ arg ]) [3 *arg_20(D)+0 S8 A64])) "cmodules/fbgc_math.c":158:9 66 {*movdi_internal}
     (nil))
(call_insn 37 36 38 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f213e3db600 convert_fbgc_object_to_int>) [0 convert_fbgc_object_to_int S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":158:9 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f213e3db600 convert_fbgc_object_to_int>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 38 37 39 5 (set (reg/v:SI 90 [ min ])
        (reg:SI 0 ax)) "cmodules/fbgc_math.c":158:9 67 {*movsi_internal}
     (nil))
(debug_insn 39 38 40 5 (var_location:SI min (reg/v:SI 90 [ min ])) "cmodules/fbgc_math.c":158:9 -1
     (nil))
(debug_insn 40 39 41 5 (debug_marker) "cmodules/fbgc_math.c":159:3 -1
     (nil))
(insn 41 40 42 5 (set (reg:DI 95)
        (mem/f:DI (plus:DI (reg/v/f:DI 93 [ arg ])
                (const_int 8 [0x8])) [3 MEM[(struct fbgc_object * *)arg_20(D) + 8B]+0 S8 A64])) "cmodules/fbgc_math.c":159:9 66 {*movdi_internal}
     (nil))
(insn 42 41 43 5 (set (reg:DI 5 di)
        (reg:DI 95)) "cmodules/fbgc_math.c":159:9 66 {*movdi_internal}
     (nil))
(call_insn 43 42 44 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f213e3db600 convert_fbgc_object_to_int>) [0 convert_fbgc_object_to_int S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":159:9 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f213e3db600 convert_fbgc_object_to_int>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 44 43 45 5 (set (reg/v:SI 91 [ max ])
        (reg:SI 0 ax)) "cmodules/fbgc_math.c":159:9 67 {*movsi_internal}
     (nil))
(debug_insn 45 44 48 5 (var_location:SI max (reg/v:SI 91 [ max ])) "cmodules/fbgc_math.c":159:9 -1
     (nil))
;;  succ:       7 [always]  count:608055701 (estimated locally) (FALLTHRU)

;; basic block 6, loop depth 0, count 248360779 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4 [29.0% (guessed)]  count:248360778 (estimated locally)
(code_label 48 45 49 6 31 (nil) [1 uses])
(note 49 48 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 50 49 51 6 (var_location:DI D#7 (reg/v/f:DI 93 [ arg ])) -1
     (nil))
(debug_insn 51 50 52 6 (var_location:SI D#8 (reg/v:SI 94 [ argc ])) -1
     (nil))
(debug_insn 52 51 53 6 (debug_marker:BLK) "cmodules/fbgc_math.c":146:1 -1
     (nil))
(debug_insn 53 52 54 6 (var_location:DI D#10 (debug_expr:DI D#7)) -1
     (nil))
(debug_insn 54 53 55 6 (var_location:DI arg (debug_expr:DI D#10)) -1
     (nil))
(debug_insn 55 54 56 6 (var_location:SI D#9 (debug_expr:SI D#8)) -1
     (nil))
(debug_insn 56 55 57 6 (var_location:SI argc (debug_expr:SI D#9)) -1
     (nil))
(debug_insn 57 56 58 6 (debug_marker) "cmodules/fbgc_math.c":162:3 -1
     (nil))
(insn 58 57 59 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f213e0747e0 *.LC6>)) "cmodules/fbgc_math.c":162:3 66 {*movdi_internal}
     (nil))
(insn 59 58 60 6 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_math.c":162:3 67 {*movsi_internal}
     (nil))
(insn 60 59 61 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_math.c":162:3 69 {*movqi_internal}
     (nil))
(call_insn 61 60 62 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f213e3d6d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":162:3 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f213e3d6d00 cprintf>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(debug_insn 62 61 63 6 (debug_marker) "cmodules/fbgc_math.c":163:3 -1
     (nil))
(debug_insn 63 62 64 6 (var_location:SI min (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 64 63 65 6 (var_location:SI max (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 65 64 66 6 (var_location:DI arg (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 66 65 69 6 (var_location:SI argc (clobber (const_int 0 [0]))) -1
     (nil))
;;  succ:       8 [always]  count:248360779 (estimated locally) (FALLTHRU)

;; basic block 7, loop depth 0, count 825381046 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       3 [always]  count:217325345 (estimated locally) (FALLTHRU)
;;              5 [always]  count:608055701 (estimated locally) (FALLTHRU)
(code_label 69 66 70 7 30 (nil) [0 uses])
(note 70 69 71 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 71 70 72 7 (var_location:SI max (reg/v:SI 91 [ max ])) -1
     (nil))
(debug_insn 72 71 73 7 (var_location:SI min (reg/v:SI 90 [ min ])) -1
     (nil))
(debug_insn 73 72 74 7 (debug_marker) "cmodules/fbgc_math.c":166:2 -1
     (nil))
(call_insn 74 73 75 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7f213e5e7600 rand>) [0 rand S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":166:29 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7f213e5e7600 rand>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 75 74 76 7 (set (reg:SI 87 [ _7 ])
        (reg:SI 0 ax)) "cmodules/fbgc_math.c":166:29 67 {*movsi_internal}
     (nil))
(insn 76 75 77 7 (parallel [
            (set (reg:SI 98)
                (div:SI (reg:SI 87 [ _7 ])
                    (reg/v:SI 91 [ max ])))
            (set (reg:SI 97)
                (mod:SI (reg:SI 87 [ _7 ])
                    (reg/v:SI 91 [ max ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":166:36 351 {*divmodsi4}
     (nil))
(insn 77 76 78 7 (parallel [
            (set (reg:SI 99)
                (plus:SI (reg:SI 97)
                    (reg/v:SI 90 [ min ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":166:9 190 {*addsi_1}
     (nil))
(insn 78 77 79 7 (set (reg:SI 5 di)
        (reg:SI 99)) "cmodules/fbgc_math.c":166:9 67 {*movsi_internal}
     (nil))
(call_insn/j 79 78 83 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_int_object") [flags 0x41]  <function_decl 0x7f213e3ed500 new_fbgc_int_object>) [0 new_fbgc_int_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":166:9 681 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_int_object") [flags 0x41]  <function_decl 0x7f213e3ed500 new_fbgc_int_object>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:825381046 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 8, loop depth 0, count 248360778 (estimated locally), maybe hot
;;  prev block 7, next block 1, flags: (RTL)
;;  pred:       6 [always]  count:248360779 (estimated locally) (FALLTHRU)
(note 83 79 6 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 6 83 87 8 (set (reg/f:DI 92 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":162:3 66 {*movdi_internal}
     (nil))
(insn 87 6 88 8 (set (reg/i:DI 0 ax)
        (reg/f:DI 92 [ <retval> ])) "cmodules/fbgc_math.c":167:1 66 {*movdi_internal}
     (nil))
(insn 88 87 0 8 (use (reg/i:DI 0 ax)) "cmodules/fbgc_math.c":167:1 -1
     (nil))
;;  succ:       EXIT [always]  count:248360778 (estimated locally) (FALLTHRU)


;; Function c_cos (c_cos, funcdef_no=57, decl_uid=5753, cgraph_uid=58, symbol_order=59)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

; Splitting reg 101 -> 127 128
; Splitting reg 104 -> 129 130
; Splitting reg 105 -> 131 132
; Splitting reg 125 -> 133 134
; Splitting reg 126 -> 135 136
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg:DF 106)
        (reg:DF 20 xmm0 [ z ])) "cmodules/fbgc_math.c":31:47 111 {*movdf_internal}
     (nil))
(insn 3 2 121 2 (set (reg:DF 107)
        (reg:DF 21 xmm1 [ z+8 ])) "cmodules/fbgc_math.c":31:47 111 {*movdf_internal}
     (nil))
(insn 121 3 122 2 (set (reg:DI 131)
        (const_int 0 [0])) "cmodules/fbgc_math.c":31:47 66 {*movdi_internal}
     (nil))
(insn 122 121 5 2 (set (reg:DI 132 [+8 ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":31:47 66 {*movdi_internal}
     (nil))
(insn 5 122 6 2 (set (subreg:DF (reg:DI 131) 0)
        (reg:DF 106)) "cmodules/fbgc_math.c":31:47 111 {*movdf_internal}
     (nil))
(insn 6 5 123 2 (set (subreg:DF (reg:DI 132 [+8 ]) 0)
        (reg:DF 107)) "cmodules/fbgc_math.c":31:47 111 {*movdf_internal}
     (nil))
(insn 123 6 124 2 (set (reg:DI 129 [ z ])
        (reg:DI 131)) "cmodules/fbgc_math.c":31:47 66 {*movdi_internal}
     (nil))
(insn 124 123 8 2 (set (reg:DI 130 [ z+8 ])
        (reg:DI 132 [+8 ])) "cmodules/fbgc_math.c":31:47 66 {*movdi_internal}
     (nil))
(note 8 124 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg:DF 88 [ z$real ])
        (subreg:DF (reg:DI 129 [ z ]) 0)) 111 {*movdf_internal}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 108)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 109)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (nil))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (reg:DI 109)) 66 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg:DI 108)) 66 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:DF 20 xmm0)
        (reg:DF 88 [ z$real ])) 111 {*movdf_internal}
     (nil))
(call_insn 17 16 18 2 (call (mem:QI (symbol_ref:DI ("sincos") [flags 0x41]  <function_decl 0x7f213e4ba400 __builtin_sincos>) [0 __builtin_sincos S1 A8])
        (const_int 0 [0])) 666 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sincos") [flags 0x41]  <function_decl 0x7f213e4ba400 __builtin_sincos>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 18 17 19 2 (set (reg:DF 90 [ sincostmp_12 ])
        (mem/c:DF (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2  S8 A64])) 111 {*movdf_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DF 91 [ sincostmp_12+8 ])
        (mem/c:DF (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [2  S8 A64])) 111 {*movdf_internal}
     (nil))
(debug_insn 20 19 21 2 (var_location:DF z$real (reg:DF 88 [ z$real ])) -1
     (nil))
(insn 21 20 22 2 (set (reg:DF 89 [ z$imag ])
        (subreg:DF (reg:DI 130 [ z+8 ]) 0)) 111 {*movdf_internal}
     (nil))
(debug_insn 22 21 23 2 (var_location:DF z$imag (reg:DF 89 [ z$imag ])) -1
     (nil))
(debug_insn 23 22 24 2 (debug_marker) "cmodules/fbgc_math.c":33:2 -1
     (nil))
(debug_insn 24 23 25 2 (debug_marker) "cmodules/fbgc_math.c":35:2 -1
     (nil))
(debug_insn 25 24 26 2 (var_location:DF u1$real (neg:DF (reg:DF 89 [ z$imag ]))) "cmodules/fbgc_math.c":35:10 -1
     (nil))
(debug_insn 26 25 27 2 (debug_marker) "cmodules/fbgc_math.c":36:2 -1
     (nil))
(debug_insn 27 26 28 2 (var_location:DF u1$imag (reg:DF 88 [ z$real ])) "cmodules/fbgc_math.c":36:10 -1
     (nil))
(debug_insn 28 27 29 2 (debug_marker) "cmodules/fbgc_math.c":38:2 -1
     (nil))
(debug_insn 29 28 30 2 (var_location:DF u2$real (reg:DF 89 [ z$imag ])) "cmodules/fbgc_math.c":38:10 -1
     (nil))
(debug_insn 30 29 31 2 (debug_marker) "cmodules/fbgc_math.c":39:2 -1
     (nil))
(debug_insn 31 30 32 2 (var_location:DF u2$imag (neg:DF (reg:DF 88 [ z$real ]))) "cmodules/fbgc_math.c":39:10 -1
     (nil))
(debug_insn 32 31 33 2 (debug_marker) "cmodules/fbgc_math.c":41:2 -1
     (nil))
(debug_insn 33 32 34 2 (debug_marker:BLK) "cmodules/fbgc_math.c":22:20 -1
     (nil))
(debug_insn 34 33 35 2 (var_location:DF z$imag (reg:DF 88 [ z$real ])) -1
     (nil))
(debug_insn 35 34 36 2 (debug_marker) "cmodules/fbgc_math.c":24:2 -1
     (nil))
(debug_insn 36 35 37 2 (debug_marker) "cmodules/fbgc_math.c":25:2 -1
     (nil))
(insn 37 36 38 2 (set (reg:V2DF 111)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S16 A128])) "cmodules/fbgc_math.c":35:12 1220 {movv2df_internal}
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF -0.0 [-0x0.0p+0])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 38 37 39 2 (parallel [
            (set (reg:DF 110)
                (neg:DF (reg:DF 89 [ z$imag ])))
            (use (reg:V2DF 111))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":35:12 477 {*absnegdf2}
     (expr_list:REG_EQUAL (neg:DF (reg:DF 89 [ z$imag ]))
        (nil)))
(insn 39 38 40 2 (set (reg:DF 20 xmm0)
        (reg:DF 110)) "cmodules/fbgc_math.c":25:13 111 {*movdf_internal}
     (nil))
(call_insn 40 39 41 2 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":25:13 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 41 40 42 2 (set (reg/v:DF 96 [ r ])
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":25:13 111 {*movdf_internal}
     (nil))
(debug_insn 42 41 43 2 (var_location:DF r (reg/v:DF 96 [ r ])) "cmodules/fbgc_math.c":25:13 -1
     (nil))
(debug_insn 43 42 44 2 (debug_marker) "cmodules/fbgc_math.c":26:2 -1
     (nil))
(insn 44 43 45 2 (set (reg:DF 97 [ _36 ])
        (reg:DF 90 [ sincostmp_12 ])) "cmodules/fbgc_math.c":26:15 111 {*movdf_internal}
     (nil))
(debug_insn 45 44 46 2 (var_location:DF res$real (mult:DF (reg/v:DF 96 [ r ])
        (reg:DF 97 [ _36 ]))) "cmodules/fbgc_math.c":26:11 -1
     (nil))
(debug_insn 46 45 47 2 (debug_marker) "cmodules/fbgc_math.c":27:2 -1
     (nil))
(debug_insn 47 46 48 2 (var_location:DF res$imag (mult:DF (reg:DF 91 [ sincostmp_12+8 ])
        (reg/v:DF 96 [ r ]))) "cmodules/fbgc_math.c":27:11 -1
     (nil))
(debug_insn 48 47 49 2 (debug_marker) "cmodules/fbgc_math.c":28:2 -1
     (nil))
(debug_insn 49 48 50 2 (var_location:DF D#1 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 50 49 51 2 (var_location:DF res$real (debug_expr:DF D#1)) -1
     (nil))
(debug_insn 51 50 52 2 (var_location:DF D#2 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 52 51 53 2 (var_location:DF res$imag (debug_expr:DF D#2)) -1
     (nil))
(debug_insn 53 52 54 2 (var_location:DF r (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":41:7 -1
     (nil))
(debug_insn 54 53 55 2 (var_location:DF z$imag (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":41:7 -1
     (nil))
(debug_insn 55 54 56 2 (var_location:DF u1$real (mult:DF (reg/v:DF 96 [ r ])
        (reg:DF 97 [ _36 ]))) "cmodules/fbgc_math.c":41:7 -1
     (nil))
(debug_insn 56 55 57 2 (var_location:DF u1$imag (mult:DF (reg:DF 91 [ sincostmp_12+8 ])
        (reg/v:DF 96 [ r ]))) "cmodules/fbgc_math.c":41:7 -1
     (nil))
(debug_insn 57 56 58 2 (debug_marker) "cmodules/fbgc_math.c":42:2 -1
     (nil))
(debug_insn 58 57 59 2 (debug_marker:BLK) "cmodules/fbgc_math.c":22:20 -1
     (nil))
(debug_insn 59 58 60 2 (var_location:DF z$imag (neg:DF (reg:DF 88 [ z$real ]))) -1
     (nil))
(debug_insn 60 59 61 2 (debug_marker) "cmodules/fbgc_math.c":24:2 -1
     (nil))
(debug_insn 61 60 62 2 (debug_marker) "cmodules/fbgc_math.c":25:2 -1
     (nil))
(insn 62 61 63 2 (set (reg:DF 20 xmm0)
        (reg:DF 89 [ z$imag ])) "cmodules/fbgc_math.c":25:13 111 {*movdf_internal}
     (nil))
(call_insn 63 62 64 2 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":25:13 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 64 63 65 2 (set (reg/v:DF 92 [ r ])
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":25:13 111 {*movdf_internal}
     (nil))
(debug_insn 65 64 66 2 (var_location:DF r (reg/v:DF 92 [ r ])) "cmodules/fbgc_math.c":25:13 -1
     (nil))
(debug_insn 66 65 67 2 (debug_marker) "cmodules/fbgc_math.c":26:2 -1
     (nil))
(debug_insn 67 66 68 2 (var_location:DF res$real (mult:DF (reg/v:DF 92 [ r ])
        (reg:DF 97 [ _36 ]))) "cmodules/fbgc_math.c":26:11 -1
     (nil))
(debug_insn 68 67 69 2 (debug_marker) "cmodules/fbgc_math.c":27:2 -1
     (nil))
(insn 69 68 70 2 (set (reg:V2DF 113)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S16 A128])) "cmodules/fbgc_math.c":39:12 1220 {movv2df_internal}
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF -0.0 [-0x0.0p+0])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 70 69 71 2 (parallel [
            (set (reg:DF 112)
                (neg:DF (reg:DF 88 [ z$real ])))
            (use (reg:V2DF 113))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":39:12 477 {*absnegdf2}
     (expr_list:REG_EQUAL (neg:DF (reg:DF 88 [ z$real ]))
        (nil)))
(insn 71 70 72 2 (set (reg:DF 20 xmm0)
        (reg:DF 112)) "cmodules/fbgc_math.c":27:15 111 {*movdf_internal}
     (nil))
(call_insn/u 72 71 73 2 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7f213e4ba300 sin>) [0 __builtin_sin S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":27:15 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7f213e4ba300 sin>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 73 72 74 2 (set (reg:DF 94 [ _31 ])
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":27:15 111 {*movdf_internal}
     (nil))
(debug_insn 74 73 75 2 (var_location:DF res$imag (mult:DF (reg/v:DF 92 [ r ])
        (reg:DF 94 [ _31 ]))) "cmodules/fbgc_math.c":27:11 -1
     (nil))
(debug_insn 75 74 76 2 (debug_marker) "cmodules/fbgc_math.c":28:2 -1
     (nil))
(debug_insn 76 75 77 2 (var_location:DF D#1 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 77 76 78 2 (var_location:DF res$real (debug_expr:DF D#1)) -1
     (nil))
(debug_insn 78 77 79 2 (var_location:DF D#2 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 79 78 80 2 (var_location:DF res$imag (debug_expr:DF D#2)) -1
     (nil))
(debug_insn 80 79 81 2 (var_location:DF r (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":42:7 -1
     (nil))
(debug_insn 81 80 82 2 (var_location:DF z$imag (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":42:7 -1
     (nil))
(debug_insn 82 81 83 2 (var_location:DF u2$real (mult:DF (reg/v:DF 92 [ r ])
        (reg:DF 97 [ _36 ]))) "cmodules/fbgc_math.c":42:7 -1
     (nil))
(debug_insn 83 82 84 2 (var_location:DF u2$imag (mult:DF (reg/v:DF 92 [ r ])
        (reg:DF 94 [ _31 ]))) "cmodules/fbgc_math.c":42:7 -1
     (nil))
(debug_insn 84 83 85 2 (debug_marker) "cmodules/fbgc_math.c":44:2 -1
     (nil))
(debug_insn 85 84 86 2 (var_location:DF u1$real (mult:DF (plus:DF (mult:DF (reg/v:DF 92 [ r ])
                (reg:DF 97 [ _36 ]))
            (mult:DF (reg/v:DF 96 [ r ])
                (reg:DF 97 [ _36 ])))
        (const_double:DF 5.0e-1 [0x0.8p+0]))) "cmodules/fbgc_math.c":44:10 -1
     (nil))
(debug_insn 86 85 87 2 (debug_marker) "cmodules/fbgc_math.c":45:2 -1
     (nil))
(debug_insn 87 86 88 2 (var_location:DF u1$imag (mult:DF (plus:DF (mult:DF (reg/v:DF 92 [ r ])
                (reg:DF 94 [ _31 ]))
            (mult:DF (reg:DF 91 [ sincostmp_12+8 ])
                (reg/v:DF 96 [ r ])))
        (const_double:DF 5.0e-1 [0x0.8p+0]))) "cmodules/fbgc_math.c":45:10 -1
     (nil))
(debug_insn 88 87 89 2 (debug_marker) "cmodules/fbgc_math.c":47:2 -1
     (nil))
(insn 89 88 90 2 (set (reg:DF 114)
        (mult:DF (reg/v:DF 92 [ r ])
            (reg:DF 97 [ _36 ]))) "cmodules/fbgc_math.c":26:14 818 {*fop_df_comm}
     (nil))
(insn 90 89 91 2 (set (reg:DF 115)
        (mult:DF (reg/v:DF 96 [ r ])
            (reg:DF 97 [ _36 ]))) "cmodules/fbgc_math.c":26:14 818 {*fop_df_comm}
     (nil))
(insn 91 90 92 2 (set (reg:DF 116)
        (plus:DF (reg:DF 114)
            (reg:DF 115))) "cmodules/fbgc_math.c":44:20 818 {*fop_df_comm}
     (nil))
(insn 92 91 93 2 (set (reg:DF 118)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S8 A64])) "cmodules/fbgc_math.c":44:29 111 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 93 92 94 2 (set (reg:DF 117)
        (mult:DF (reg:DF 116)
            (reg:DF 118))) "cmodules/fbgc_math.c":44:29 818 {*fop_df_comm}
     (nil))
(insn 94 93 95 2 (set (subreg:DF (reg:DI 127 [ D.5866 ]) 0)
        (reg:DF 117)) "cmodules/fbgc_math.c":47:9 111 {*movdf_internal}
     (nil))
(insn 95 94 96 2 (set (reg:DF 119)
        (mult:DF (reg/v:DF 92 [ r ])
            (reg:DF 94 [ _31 ]))) "cmodules/fbgc_math.c":27:14 818 {*fop_df_comm}
     (nil))
(insn 96 95 97 2 (set (reg:DF 120)
        (mult:DF (reg:DF 91 [ sincostmp_12+8 ])
            (reg/v:DF 96 [ r ]))) "cmodules/fbgc_math.c":27:14 818 {*fop_df_comm}
     (nil))
(insn 97 96 98 2 (set (reg:DF 121)
        (plus:DF (reg:DF 119)
            (reg:DF 120))) "cmodules/fbgc_math.c":45:20 818 {*fop_df_comm}
     (nil))
(insn 98 97 99 2 (set (reg:DF 123)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S8 A64])) "cmodules/fbgc_math.c":45:29 111 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 99 98 100 2 (set (reg:DF 122)
        (mult:DF (reg:DF 121)
            (reg:DF 123))) "cmodules/fbgc_math.c":45:29 818 {*fop_df_comm}
     (nil))
(insn 100 99 101 2 (set (subreg:DF (reg:DI 128 [ D.5866+8 ]) 0)
        (reg:DF 122)) "cmodules/fbgc_math.c":47:9 111 {*movdf_internal}
     (nil))
(debug_insn 101 100 102 2 (var_location:DF D#3 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 102 101 103 2 (var_location:DF u1$real (debug_expr:DF D#3)) -1
     (nil))
(debug_insn 103 102 104 2 (var_location:DF D#4 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 104 103 105 2 (var_location:DF u1$imag (debug_expr:DF D#4)) -1
     (nil))
(debug_insn 105 104 106 2 (var_location:DF D#5 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 106 105 107 2 (var_location:DF u2$real (debug_expr:DF D#5)) -1
     (nil))
(debug_insn 107 106 108 2 (var_location:DF D#6 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 108 107 125 2 (var_location:DF u2$imag (debug_expr:DF D#6)) -1
     (nil))
(insn 125 108 126 2 (set (reg:DI 133)
        (reg:DI 127 [ D.5866 ])) "cmodules/fbgc_math.c":47:9 66 {*movdi_internal}
     (nil))
(insn 126 125 127 2 (set (reg:DI 134 [+8 ])
        (reg:DI 128 [ D.5866+8 ])) "cmodules/fbgc_math.c":47:9 66 {*movdi_internal}
     (nil))
(insn 127 126 128 2 (set (reg:DI 135)
        (reg:DI 127 [ D.5866 ])) "cmodules/fbgc_math.c":47:9 66 {*movdi_internal}
     (nil))
(insn 128 127 111 2 (set (reg:DI 136 [+8 ])
        (reg:DI 128 [ D.5866+8 ])) "cmodules/fbgc_math.c":47:9 66 {*movdi_internal}
     (nil))
(insn 111 128 112 2 (set (reg:DF 102 [ <retval> ])
        (subreg:DF (reg:DI 133) 0)) "cmodules/fbgc_math.c":47:9 111 {*movdf_internal}
     (nil))
(insn 112 111 116 2 (set (reg:DF 103 [ <retval>+8 ])
        (subreg:DF (reg:DI 136 [+8 ]) 0)) "cmodules/fbgc_math.c":47:9 111 {*movdf_internal}
     (nil))
(insn 116 112 117 2 (set (reg:DF 20 xmm0)
        (reg:DF 102 [ <retval> ])) "cmodules/fbgc_math.c":48:1 111 {*movdf_internal}
     (nil))
(insn 117 116 118 2 (set (reg:DF 21 xmm1)
        (reg:DF 103 [ <retval>+8 ])) "cmodules/fbgc_math.c":48:1 111 {*movdf_internal}
     (nil))
(insn 118 117 119 2 (use (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":48:1 -1
     (nil))
(insn 119 118 0 2 (use (reg:DF 21 xmm1)) "cmodules/fbgc_math.c":48:1 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function one_arg_math (one_arg_math, funcdef_no=58, decl_uid=5763, cgraph_uid=59, symbol_order=60)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

; Splitting reg 126 -> 158 159
; Splitting reg 127 -> 160 161
; Splitting reg 128 -> 162 163
; Splitting reg 136 -> 164 165
; Splitting reg 137 -> 166 167
; Splitting reg 151 -> 168 169
; Splitting reg 152 -> 170 171
;; basic block 2, loop depth 0, count 72990323 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:72990323 (estimated locally) (FALLTHRU)
(note 13 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 13 4 2 (set (reg/v/f:DI 130 [ arg ])
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_math.c":52:1 66 {*movdi_internal}
     (nil))
(insn 4 2 5 2 (set (reg/v/f:DI 132 [ fun ])
        (reg:DI 1 dx [ fun ])) "cmodules/fbgc_math.c":52:1 66 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 133 [ zfun ])
        (reg:DI 2 cx [ zfun ])) "cmodules/fbgc_math.c":52:1 66 {*movdi_internal}
     (nil))
(note 6 5 15 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 15 6 16 2 (debug_marker) "cmodules/fbgc_math.c":53:2 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (reg/v/f:DI 130 [ arg ]) [3 *arg_50(D)+0 S8 A64])) "cmodules/fbgc_math.c":53:12 66 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:QI 83 [ _2 ])
        (mem:QI (reg/f:DI 82 [ _1 ]) [0 _1->type+0 S1 A8])) "cmodules/fbgc_math.c":53:15 69 {*movqi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _2 ])
            (const_int 7 [0x7]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 160)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (int_list:REG_BR_PROB 214748374 (nil))
 -> 160)
;;  succ:       3 [80.0% (adjusted)]  count:58392258 (estimated locally) (FALLTHRU)
;;              18 [20.0% (adjusted)]  count:14598065 (estimated locally)

;; basic block 3, loop depth 0, count 72990323 (estimated locally), maybe hot
;; Invalid sum of incoming counts 58392258 (estimated locally), should be 72990323 (estimated locally)
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [80.0% (adjusted)]  count:58392258 (estimated locally) (FALLTHRU)
(note 20 19 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 23 20 24 3 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 83 [ _2 ])
            (const_int 7 [0x7]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (nil))
(jump_insn 24 23 25 3 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (int_list:REG_BR_PROB 402653190 (nil))
 -> 45)
;;  succ:       4 [62.5% (adjusted)]  count:45618952 (estimated locally) (FALLTHRU)
;;              9 [37.5% (adjusted)]  count:27371371 (estimated locally)

;; basic block 4, loop depth 0, count 72990323 (estimated locally), maybe hot
;; Invalid sum of incoming counts 45618952 (estimated locally), should be 72990323 (estimated locally)
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [62.5% (adjusted)]  count:45618952 (estimated locally) (FALLTHRU)
(note 25 24 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 25 29 4 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 83 [ _2 ])
            (const_int 4 [0x4]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (nil))
(jump_insn 29 28 30 4 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (int_list:REG_BR_PROB 536870926 (nil))
 -> 38)
;;  succ:       5 [50.0% (adjusted)]  count:36495161 (estimated locally) (FALLTHRU)
;;              7 [50.0% (adjusted)]  count:36495162 (estimated locally)

;; basic block 5, loop depth 0, count 72990323 (estimated locally), maybe hot
;; Invalid sum of incoming counts 36495161 (estimated locally), should be 72990323 (estimated locally)
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [50.0% (adjusted)]  count:36495161 (estimated locally) (FALLTHRU)
(note 30 29 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 30 34 5 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 83 [ _2 ])
            (const_int 2 [0x2]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (nil))
(jump_insn 34 33 37 5 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (int_list:REG_BR_PROB 477218590 (nil))
 -> 52)
;;  succ:       6 [55.6% (adjusted)]  count:40550180 (estimated locally) (FALLTHRU)
;;              11 [44.4% (adjusted)]  count:32440143 (estimated locally)

;; basic block 6, loop depth 0, count 40550180 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [55.6% (adjusted)]  count:40550180 (estimated locally) (FALLTHRU)
(note 37 34 12 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 12 37 38 6 (set (reg/v/f:DI 129 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":53:2 66 {*movdi_internal}
     (nil))
;;  succ:       31 [always]  count:40550180 (estimated locally) (FALLTHRU)

;; basic block 7, loop depth 0, count 72990323 (estimated locally), maybe hot
;; Invalid sum of incoming counts 36495162 (estimated locally), should be 72990323 (estimated locally)
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       4 [50.0% (adjusted)]  count:36495162 (estimated locally)
(code_label 38 12 39 7 41 (nil) [1 uses])
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _2 ])
            (const_int 5 [0x5]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (nil))
(jump_insn 41 40 44 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (int_list:REG_BR_PROB 858993454 (nil))
 -> 67)
;;  succ:       8 [20.0% (adjusted)]  count:14598065 (estimated locally) (FALLTHRU)
;;              12 [80.0% (adjusted)]  count:58392258 (estimated locally)

;; basic block 8, loop depth 0, count 14598065 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [20.0% (adjusted)]  count:14598065 (estimated locally) (FALLTHRU)
(note 44 41 11 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 11 44 45 8 (set (reg/v/f:DI 129 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":53:2 66 {*movdi_internal}
     (nil))
;;  succ:       31 [always]  count:14598065 (estimated locally) (FALLTHRU)

;; basic block 9, loop depth 0, count 72990323 (estimated locally), maybe hot
;; Invalid sum of incoming counts 27371371 (estimated locally), should be 72990323 (estimated locally)
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       3 [37.5% (adjusted)]  count:27371371 (estimated locally)
(code_label 45 11 46 9 40 (nil) [1 uses])
(note 46 45 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _2 ])
            (const_int 8 [0x8]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (nil))
(jump_insn 48 47 51 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (int_list:REG_BR_PROB 715827886 (nil))
 -> 96)
;;  succ:       10 [33.3% (adjusted)]  count:24330108 (estimated locally) (FALLTHRU)
;;              13 [66.7% (adjusted)]  count:48660215 (estimated locally)

;; basic block 10, loop depth 0, count 24330108 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 [33.3% (adjusted)]  count:24330108 (estimated locally) (FALLTHRU)
(note 51 48 10 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 10 51 52 10 (set (reg/v/f:DI 129 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":53:2 66 {*movdi_internal}
     (nil))
;;  succ:       31 [always]  count:24330108 (estimated locally) (FALLTHRU)

;; basic block 11, loop depth 0, count 14598065 (estimated locally), maybe hot
;; Invalid sum of incoming counts 32440143 (estimated locally), should be 14598065 (estimated locally)
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       5 [44.4% (adjusted)]  count:32440143 (estimated locally)
(code_label 52 10 53 11 42 (nil) [1 uses])
(note 53 52 54 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 54 53 55 11 (debug_marker) "cmodules/fbgc_math.c":58:4 -1
     (nil))
(insn 55 54 56 11 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _1 ])) "cmodules/fbgc_math.c":58:19 66 {*movdi_internal}
     (nil))
(call_insn 56 55 57 11 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f213e3db700 convert_fbgc_object_to_double>) [0 convert_fbgc_object_to_double S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":58:19 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f213e3db700 convert_fbgc_object_to_double>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 57 56 58 11 (set (reg/v:DF 119 [ dbarg ])
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":58:19 111 {*movdf_internal}
     (nil))
(debug_insn 58 57 59 11 (var_location:DF dbarg (reg/v:DF 119 [ dbarg ])) "cmodules/fbgc_math.c":58:19 -1
     (nil))
(debug_insn 59 58 60 11 (debug_marker) "cmodules/fbgc_math.c":59:4 -1
     (nil))
(insn 60 59 61 11 (set (reg:DF 20 xmm0)
        (reg/v:DF 119 [ dbarg ])) "cmodules/fbgc_math.c":59:11 111 {*movdf_internal}
     (nil))
(call_insn 61 60 62 11 (set (reg:DF 20 xmm0)
        (call (mem:QI (reg/v/f:DI 132 [ fun ]) [0 *fun_57(D) S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":59:11 677 {*call_value}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 62 61 63 11 (set (reg:DF 84 [ _3 ])
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":59:11 111 {*movdf_internal}
     (nil))
(insn 63 62 64 11 (set (reg:DF 20 xmm0)
        (reg:DF 84 [ _3 ])) "cmodules/fbgc_math.c":59:11 111 {*movdf_internal}
     (nil))
(call_insn/j 64 63 67 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f213e3e6d00 new_fbgc_double_object>) [0 new_fbgc_double_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":59:11 681 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f213e3e6d00 new_fbgc_double_object>)
        (nil))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
;;  succ:       EXIT [always]  count:14598065 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 12, loop depth 0, count 14598065 (estimated locally), maybe hot
;; Invalid sum of incoming counts 58392258 (estimated locally), should be 14598065 (estimated locally)
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       7 [80.0% (adjusted)]  count:58392258 (estimated locally)
(code_label 67 64 68 12 44 (nil) [1 uses])
(note 68 67 69 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 69 68 70 12 (debug_marker) "cmodules/fbgc_math.c":63:4 -1
     (nil))
(insn 70 69 71 12 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _1 ])) "cmodules/fbgc_math.c":63:27 66 {*movdi_internal}
     (nil))
(call_insn 71 70 72 12 (set (parallel:TI [
                (expr_list:REG_DEP_TRUE (reg:DF 20 xmm0)
                    (const_int 0 [0]))
                (expr_list:REG_DEP_TRUE (reg:DF 21 xmm1)
                    (const_int 8 [0x8]))
            ])
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_complex") [flags 0x41]  <function_decl 0x7f213e3db800 convert_fbgc_object_to_complex>) [0 convert_fbgc_object_to_complex S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":63:27 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_complex") [flags 0x41]  <function_decl 0x7f213e3db800 convert_fbgc_object_to_complex>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 72 71 73 12 (set (reg:DF 134)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":63:27 111 {*movdf_internal}
     (nil))
(insn 73 72 313 12 (set (reg:DF 135)
        (reg:DF 21 xmm1)) "cmodules/fbgc_math.c":63:27 111 {*movdf_internal}
     (nil))
(insn 313 73 314 12 (set (reg:DI 158 [ z ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":63:27 66 {*movdi_internal}
     (nil))
(insn 314 313 75 12 (set (reg:DI 159 [ z+8 ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":63:27 66 {*movdi_internal}
     (nil))
(insn 75 314 76 12 (set (subreg:DF (reg:DI 158 [ z ]) 0)
        (reg:DF 134)) "cmodules/fbgc_math.c":63:27 111 {*movdf_internal}
     (nil))
(insn 76 75 77 12 (set (subreg:DF (reg:DI 159 [ z+8 ]) 0)
        (reg:DF 135)) "cmodules/fbgc_math.c":63:27 111 {*movdf_internal}
     (nil))
(debug_insn 77 76 315 12 (debug_marker) "cmodules/fbgc_math.c":64:4 -1
     (nil))
(insn 315 77 316 12 (set (reg:DI 164)
        (reg:DI 158 [ z ])) "cmodules/fbgc_math.c":64:9 66 {*movdi_internal}
     (nil))
(insn 316 315 317 12 (set (reg:DI 165 [+8 ])
        (reg:DI 159 [ z+8 ])) "cmodules/fbgc_math.c":64:9 66 {*movdi_internal}
     (nil))
(insn 317 316 318 12 (set (reg:DI 166)
        (reg:DI 158 [ z ])) "cmodules/fbgc_math.c":64:9 66 {*movdi_internal}
     (nil))
(insn 318 317 80 12 (set (reg:DI 167 [+8 ])
        (reg:DI 159 [ z+8 ])) "cmodules/fbgc_math.c":64:9 66 {*movdi_internal}
     (nil))
(insn 80 318 81 12 (set (reg:DF 138)
        (subreg:DF (reg:DI 164) 0)) "cmodules/fbgc_math.c":64:9 111 {*movdf_internal}
     (nil))
(insn 81 80 82 12 (set (reg:DF 139)
        (subreg:DF (reg:DI 167 [+8 ]) 0)) "cmodules/fbgc_math.c":64:9 111 {*movdf_internal}
     (nil))
(insn 82 81 83 12 (set (reg:DF 20 xmm0)
        (reg:DF 138)) "cmodules/fbgc_math.c":64:9 111 {*movdf_internal}
     (nil))
(insn 83 82 84 12 (set (reg:DF 21 xmm1)
        (reg:DF 139)) "cmodules/fbgc_math.c":64:9 111 {*movdf_internal}
     (nil))
(call_insn 84 83 85 12 (set (parallel:TI [
                (expr_list:REG_DEP_TRUE (reg:DF 20 xmm0)
                    (const_int 0 [0]))
                (expr_list:REG_DEP_TRUE (reg:DF 21 xmm1)
                    (const_int 8 [0x8]))
            ])
        (call (mem:QI (reg/v/f:DI 133 [ zfun ]) [0 *zfun_58(D) S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":64:9 677 {*call_value}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list (use (reg:DF 21 xmm1))
        (expr_list (use (reg:DF 20 xmm0))
            (nil))))
(insn 85 84 86 12 (set (reg:DF 140)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":64:9 111 {*movdf_internal}
     (nil))
(insn 86 85 319 12 (set (reg:DF 141)
        (reg:DF 21 xmm1)) "cmodules/fbgc_math.c":64:9 111 {*movdf_internal}
     (nil))
(insn 319 86 320 12 (set (reg:DI 158 [ z ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":64:9 66 {*movdi_internal}
     (nil))
(insn 320 319 88 12 (set (reg:DI 159 [ z+8 ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":64:9 66 {*movdi_internal}
     (nil))
(insn 88 320 89 12 (set (subreg:DF (reg:DI 158 [ z ]) 0)
        (reg:DF 140)) "cmodules/fbgc_math.c":64:9 111 {*movdf_internal}
     (nil))
(insn 89 88 90 12 (set (subreg:DF (reg:DI 159 [ z+8 ]) 0)
        (reg:DF 141)) "cmodules/fbgc_math.c":64:9 111 {*movdf_internal}
     (nil))
(debug_insn 90 89 91 12 (debug_marker) "cmodules/fbgc_math.c":65:4 -1
     (nil))
(insn 91 90 92 12 (set (reg:DF 21 xmm1)
        (subreg:DF (reg:DI 159 [ z+8 ]) 0)) "cmodules/fbgc_math.c":65:11 111 {*movdf_internal}
     (nil))
(insn 92 91 93 12 (set (reg:DF 20 xmm0)
        (subreg:DF (reg:DI 158 [ z ]) 0)) "cmodules/fbgc_math.c":65:11 111 {*movdf_internal}
     (nil))
(call_insn/j 93 92 96 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_complex_object") [flags 0x41]  <function_decl 0x7f213e3f0300 new_fbgc_complex_object>) [0 new_fbgc_complex_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":65:11 681 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_complex_object") [flags 0x41]  <function_decl 0x7f213e3f0300 new_fbgc_complex_object>)
        (nil))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (expr_list:DF (use (reg:DF 21 xmm1))
            (nil))))
;;  succ:       EXIT [always]  count:14598065 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 13, loop depth 0, count 14598065 (estimated locally), maybe hot
;; Invalid sum of incoming counts 48660215 (estimated locally), should be 14598065 (estimated locally)
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       9 [66.7% (adjusted)]  count:48660215 (estimated locally)
(code_label 96 93 97 13 45 (nil) [1 uses])
(note 97 96 98 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 98 97 99 13 (debug_marker) "cmodules/fbgc_math.c":69:4 -1
     (nil))
(insn 99 98 100 13 (set (reg/v:SI 111 [ sz ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 13 [0xd])) [5 MEM[(struct fbgc_tuple_object *)_1].size+0 S4 A8])) "cmodules/fbgc_math.c":69:11 67 {*movsi_internal}
     (nil))
(debug_insn 100 99 101 13 (var_location:SI sz (reg/v:SI 111 [ sz ])) "cmodules/fbgc_math.c":69:11 -1
     (nil))
(debug_insn 101 100 102 13 (debug_marker) "cmodules/fbgc_math.c":70:4 -1
     (nil))
(insn 102 101 103 13 (set (reg:SI 5 di)
        (reg/v:SI 111 [ sz ])) "cmodules/fbgc_math.c":70:34 67 {*movsi_internal}
     (nil))
(call_insn 103 102 104 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f213e3fec00 new_fbgc_tuple_object>) [0 new_fbgc_tuple_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":70:34 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f213e3fec00 new_fbgc_tuple_object>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 104 103 105 13 (set (reg/v/f:DI 129 [ <retval> ])
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":70:34 66 {*movdi_internal}
     (nil))
(debug_insn 105 104 106 13 (var_location:DI res_tp (reg/v/f:DI 129 [ <retval> ])) "cmodules/fbgc_math.c":70:34 -1
     (nil))
(debug_insn 106 105 107 13 (debug_marker) "cmodules/fbgc_math.c":71:4 -1
     (nil))
(insn 107 106 108 13 (set (mem:SI (plus:DI (reg/v/f:DI 129 [ <retval> ])
                (const_int 13 [0xd])) [5 MEM[(struct fbgc_tuple_object *)res_tp_53].size+0 S4 A8])
        (reg/v:SI 111 [ sz ])) "cmodules/fbgc_math.c":71:35 67 {*movsi_internal}
     (nil))
(debug_insn 108 107 109 13 (debug_marker) "cmodules/fbgc_math.c":72:4 -1
     (nil))
(insn 109 108 110 13 (set (reg/f:DI 87 [ _6 ])
        (mem/f:DI (reg/v/f:DI 130 [ arg ]) [3 *arg_50(D)+0 S8 A64])) "cmodules/fbgc_math.c":72:39 66 {*movdi_internal}
     (nil))
(debug_insn 110 109 111 13 (var_location:DI D#28 (plus:DI (reg/f:DI 87 [ _6 ])
        (const_int 17 [0x11]))) "cmodules/fbgc_math.c":72:26 -1
     (nil))
(debug_insn 111 110 112 13 (var_location:DI tp_content (debug_expr:DI D#28)) "cmodules/fbgc_math.c":72:26 -1
     (nil))
(debug_insn 112 111 113 13 (debug_marker) "cmodules/fbgc_math.c":72:67 -1
     (nil))
(debug_insn 113 112 114 13 (debug_marker) "cmodules/fbgc_math.c":74:4 -1
     (nil))
(debug_insn 114 113 115 13 (debug_marker) "cmodules/fbgc_math.c":74:8 -1
     (nil))
(debug_insn 115 114 116 13 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 116 115 117 13 (debug_marker) "cmodules/fbgc_math.c":74:22 -1
     (nil))
(insn 117 116 118 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 111 [ sz ])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":74:4 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 118 117 119 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 304)
            (pc))) "cmodules/fbgc_math.c":74:4 659 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 304)
;;  succ:       14 [89.0% (guessed)]  count:12992278 (estimated locally) (FALLTHRU)
;;              31 [11.0% (guessed)]  count:1605787 (estimated locally)

;; basic block 14, loop depth 0, count 12992278 (estimated locally), maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 [89.0% (guessed)]  count:12992278 (estimated locally) (FALLTHRU)
(note 119 118 120 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 7 14 (parallel [
            (set (reg:DI 124 [ ivtmp.68 ])
                (plus:DI (reg/f:DI 87 [ _6 ])
                    (const_int 17 [0x11])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (nil))
(insn 7 120 154 14 (set (reg/v:SI 113 [ i ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":74:15 67 {*movsi_internal}
     (nil))
;;  succ:       15 [always]  count:12992278 (estimated locally) (FALLTHRU)

;; basic block 15, loop depth 1, count 117730595 (estimated locally), maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [always]  count:12992278 (estimated locally) (FALLTHRU)
;;              17 [89.0% (guessed)]  count:104738318 (estimated locally) (DFS_BACK)
(code_label 154 7 121 15 47 (nil) [1 uses])
(note 121 154 122 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(debug_insn 122 121 123 15 (var_location:SI i (reg/v:SI 113 [ i ])) -1
     (nil))
(debug_insn 123 122 124 15 (debug_marker) "cmodules/fbgc_math.c":76:5 -1
     (nil))
(insn 124 123 125 15 (set (reg:DI 2 cx)
        (reg/v/f:DI 133 [ zfun ])) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (nil))
(insn 125 124 126 15 (set (reg:DI 1 dx)
        (reg/v/f:DI 132 [ fun ])) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (nil))
(insn 126 125 127 15 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "cmodules/fbgc_math.c":76:35 67 {*movsi_internal}
     (nil))
(insn 127 126 128 15 (set (reg:DI 5 di)
        (reg:DI 124 [ ivtmp.68 ])) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (nil))
(call_insn 128 127 129 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("one_arg_math") [flags 0x3]  <function_decl 0x7f213dfac000 one_arg_math>) [0 one_arg_math S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":76:35 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("one_arg_math") [flags 0x3]  <function_decl 0x7f213dfac000 one_arg_math>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 129 128 130 15 (set (reg/v/f:DI 112 [ result ])
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (nil))
(debug_insn 130 129 131 15 (var_location:DI result (reg/v/f:DI 112 [ result ])) "cmodules/fbgc_math.c":76:35 -1
     (nil))
(debug_insn 131 130 132 15 (debug_marker) "cmodules/fbgc_math.c":77:5 -1
     (nil))
(insn 132 131 133 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 112 [ result ])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":77:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 133 132 134 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 142)
            (pc))) "cmodules/fbgc_math.c":77:5 659 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 142)
;;  succ:       17 [100.0% (guessed)]  count:117683503 (estimated locally)
;;              16 [0.0% (guessed)]  count:47092 (estimated locally) (FALLTHRU)

;; basic block 16, loop depth 0, count 47092 (estimated locally)
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       15 [0.0% (guessed)]  count:47092 (estimated locally) (FALLTHRU)
(note 134 133 135 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(debug_insn 135 134 136 16 (debug_marker) "cmodules/fbgc_math.c":77:5 -1
     (nil))
(insn 136 135 137 16 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.5776") [flags 0x2]  <var_decl 0x7f213dfa6990 __PRETTY_FUNCTION__>)) "cmodules/fbgc_math.c":77:5 66 {*movdi_internal}
     (nil))
(insn 137 136 138 16 (set (reg:SI 1 dx)
        (const_int 77 [0x4d])) "cmodules/fbgc_math.c":77:5 67 {*movsi_internal}
     (nil))
(insn 138 137 139 16 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f213e0b5900 *.LC9>)) "cmodules/fbgc_math.c":77:5 66 {*movdi_internal}
     (nil))
(insn 139 138 140 16 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f213e0b5990 *.LC10>)) "cmodules/fbgc_math.c":77:5 66 {*movdi_internal}
     (nil))
(call_insn 140 139 142 16 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f213e2a1c00 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_math.c":77:5 666 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f213e2a1c00 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 17, loop depth 1, count 117683503 (estimated locally), maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       15 [100.0% (guessed)]  count:117683503 (estimated locally)
(code_label 142 140 143 17 46 (nil) [1 uses])
(note 143 142 144 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(debug_insn 144 143 145 17 (debug_marker) "cmodules/fbgc_math.c":78:5 -1
     (nil))
(insn 145 144 146 17 (set (reg:SI 1 dx)
        (reg/v:SI 113 [ i ])) "cmodules/fbgc_math.c":78:5 67 {*movsi_internal}
     (nil))
(insn 146 145 147 17 (set (reg:DI 4 si)
        (reg/v/f:DI 112 [ result ])) "cmodules/fbgc_math.c":78:5 66 {*movdi_internal}
     (nil))
(insn 147 146 148 17 (set (reg:DI 5 di)
        (reg/v/f:DI 129 [ <retval> ])) "cmodules/fbgc_math.c":78:5 66 {*movdi_internal}
     (nil))
(call_insn 148 147 149 17 (call (mem:QI (symbol_ref:DI ("set_object_in_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f213e3fee00 set_object_in_fbgc_tuple_object>) [0 set_object_in_fbgc_tuple_object S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_math.c":78:5 666 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("set_object_in_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f213e3fee00 set_object_in_fbgc_tuple_object>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(debug_insn 149 148 150 17 (debug_marker) "cmodules/fbgc_math.c":74:31 -1
     (nil))
(insn 150 149 151 17 (parallel [
            (set (reg/v:SI 113 [ i ])
                (plus:SI (reg/v:SI 113 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":74:31 190 {*addsi_1}
     (nil))
(debug_insn 151 150 152 17 (var_location:SI i (reg/v:SI 113 [ i ])) -1
     (nil))
(debug_insn 152 151 153 17 (debug_marker) "cmodules/fbgc_math.c":74:22 -1
     (nil))
(insn 153 152 155 17 (parallel [
            (set (reg:DI 124 [ ivtmp.68 ])
                (plus:DI (reg:DI 124 [ ivtmp.68 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (nil))
(insn 155 153 156 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 111 [ sz ])
            (reg/v:SI 113 [ i ]))) "cmodules/fbgc_math.c":74:4 11 {*cmpsi_1}
     (nil))
(jump_insn 156 155 160 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 154)
            (pc))) "cmodules/fbgc_math.c":74:4 659 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 154)
;;  succ:       15 [89.0% (guessed)]  count:104738318 (estimated locally) (DFS_BACK)
;;              31 [11.0% (guessed)]  count:12945185 (estimated locally) (FALLTHRU)

;; basic block 18, loop depth 0, count 14598065 (estimated locally), maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       2 [20.0% (adjusted)]  count:14598065 (estimated locally)
(code_label 160 156 161 18 39 (nil) [1 uses])
(note 161 160 162 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(debug_insn 162 161 163 18 (debug_marker) "cmodules/fbgc_math.c":84:4 -1
     (nil))
(debug_insn 163 162 164 18 (var_location:DI m (reg/f:DI 82 [ _1 ])) "cmodules/fbgc_math.c":84:32 -1
     (nil))
(debug_insn 164 163 165 18 (debug_marker) "cmodules/fbgc_math.c":85:4 -1
     (nil))
(insn 165 164 166 18 (set (reg:SI 142)
        (mem:SI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 14 [0xe])) [5 MEM[(struct fbgc_matrix_object *)_1].column+0 S4 A8])) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (nil))
(insn 166 165 167 18 (set (reg:SI 143)
        (mem:SI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 10 [0xa])) [5 MEM[(struct fbgc_matrix_object *)_1].row+0 S4 A8])) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (nil))
(insn 167 166 168 18 (set (reg:SI 144)
        (zero_extend:SI (mem:QI (plus:DI (reg/f:DI 82 [ _1 ])
                    (const_int 9 [0x9])) [0 MEM[(struct fbgc_matrix_object *)_1].sub_type+0 S1 A8]))) "cmodules/fbgc_math.c":85:33 119 {*zero_extendqisi2}
     (nil))
(insn 168 167 169 18 (set (reg:SI 2 cx)
        (const_int 10 [0xa])) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (nil))
(insn 169 168 170 18 (set (reg:SI 1 dx)
        (reg:SI 142)) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (nil))
(insn 170 169 171 18 (set (reg:SI 4 si)
        (reg:SI 143)) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (nil))
(insn 171 170 172 18 (set (reg:SI 5 di)
        (reg:SI 144)) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (nil))
(call_insn 172 171 173 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_matrix_object") [flags 0x41]  <function_decl 0x7f213e3fe100 new_fbgc_matrix_object>) [0 new_fbgc_matrix_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":85:33 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_matrix_object") [flags 0x41]  <function_decl 0x7f213e3fe100 new_fbgc_matrix_object>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 173 172 174 18 (set (reg/v/f:DI 129 [ <retval> ])
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":85:33 66 {*movdi_internal}
     (nil))
(debug_insn 174 173 175 18 (var_location:DI res_m (reg/v/f:DI 129 [ <retval> ])) "cmodules/fbgc_math.c":85:33 -1
     (nil))
(debug_insn 175 174 176 18 (debug_marker) "cmodules/fbgc_math.c":87:4 -1
     (nil))
(insn 176 175 177 18 (set (reg:SI 120 [ prephitmp_109 ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 10 [0xa])) [5 MEM[(struct fbgc_matrix_object *)_1].row+0 S4 A8])) "cmodules/fbgc_math.c":87:17 67 {*movsi_internal}
     (nil))
(insn 177 176 178 18 (set (reg:SI 110 [ _38 ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 14 [0xe])) [5 MEM[(struct fbgc_matrix_object *)_1].column+0 S4 A8])) "cmodules/fbgc_math.c":87:24 67 {*movsi_internal}
     (nil))
(insn 178 177 179 18 (parallel [
            (set (reg/v:SI 114 [ rc ])
                (mult:SI (reg:SI 120 [ prephitmp_109 ])
                    (reg:SI 110 [ _38 ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":87:11 317 {*mulsi3_1}
     (nil))
(debug_insn 179 178 180 18 (var_location:SI rc (reg/v:SI 114 [ rc ])) "cmodules/fbgc_math.c":87:11 -1
     (nil))
(debug_insn 180 179 181 18 (debug_marker) "cmodules/fbgc_math.c":89:4 -1
     (nil))
(debug_insn 181 180 182 18 (debug_marker) "cmodules/fbgc_math.c":91:4 -1
     (nil))
(debug_insn 182 181 183 18 (debug_marker) "cmodules/fbgc_math.c":91:8 -1
     (nil))
(debug_insn 183 182 184 18 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 184 183 185 18 (debug_marker) "cmodules/fbgc_math.c":91:22 -1
     (nil))
(insn 185 184 186 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120 [ prephitmp_109 ])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":91:4 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 186 185 283 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 312)
            (pc))) "cmodules/fbgc_math.c":91:4 659 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 312)
;;  succ:       27 [89.0% (guessed)]  count:12992278 (estimated locally)
;;              30 [11.0% (guessed)]  count:1605787 (estimated locally) (FALLTHRU)

;; basic block 19, loop depth 1, count 105119326 (estimated locally), maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       28 [99.8% (guessed)]  count:106372132 (estimated locally)
(code_label 283 186 190 19 54 (nil) [1 uses])
(note 190 283 191 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 191 190 192 19 (parallel [
            (set (reg/f:DI 121 [ pretmp_114 ])
                (plus:DI (reg/f:DI 82 [ _1 ])
                    (const_int 14 [0xe])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (nil))
(insn 192 191 8 19 (parallel [
            (set (reg/f:DI 125 [ pretmp_139 ])
                (plus:DI (reg/v/f:DI 129 [ <retval> ])
                    (const_int 14 [0xe])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (nil))
(insn 8 192 263 19 (set (reg/v:SI 118 [ j ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":92:16 67 {*movsi_internal}
     (nil))
;;  succ:       20 [always]  count:105119326 (estimated locally) (FALLTHRU)

;; basic block 20, loop depth 2, count 955630223 (estimated locally), maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 [always]  count:105119326 (estimated locally) (FALLTHRU)
;;              23 [always]  count:850510899 (estimated locally) (FALLTHRU)
(code_label 263 8 193 20 53 (nil) [0 uses])
(note 193 263 194 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(debug_insn 194 193 195 20 (var_location:SI j (reg/v:SI 118 [ j ])) -1
     (nil))
(debug_insn 195 194 196 20 (debug_marker) "cmodules/fbgc_math.c":93:6 -1
     (nil))
(insn 196 195 197 20 (parallel [
            (set (reg:SI 145)
                (mult:SI (reg:SI 110 [ _38 ])
                    (reg/v:SI 115 [ i ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":93:23 317 {*mulsi3_1}
     (nil))
(insn 197 196 198 20 (parallel [
            (set (reg/v:SI 116 [ index ])
                (plus:SI (reg:SI 145)
                    (reg/v:SI 118 [ j ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":93:13 190 {*addsi_1}
     (nil))
(debug_insn 198 197 199 20 (var_location:SI index (reg/v:SI 116 [ index ])) "cmodules/fbgc_math.c":93:13 -1
     (nil))
(debug_insn 199 198 200 20 (debug_marker) "cmodules/fbgc_math.c":94:6 -1
     (nil))
(debug_insn 200 199 201 20 (var_location:SI c_index (plus:SI (reg/v:SI 114 [ rc ])
        (reg/v:SI 116 [ index ]))) "cmodules/fbgc_math.c":94:13 -1
     (nil))
(debug_insn 201 200 202 20 (debug_marker) "cmodules/fbgc_math.c":96:6 -1
     (nil))
(insn 202 201 203 20 (set (reg:DI 146)
        (zero_extend:DI (reg/v:SI 116 [ index ]))) "cmodules/fbgc_math.c":96:46 114 {*zero_extendsidi2}
     (nil))
(insn 203 202 204 20 (parallel [
            (set (reg:DI 147)
                (ashift:DI (reg:DI 146)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":96:46 520 {*ashldi3_1}
     (nil))
(insn 204 203 205 20 (parallel [
            (set (reg:DI 97 [ _21 ])
                (plus:DI (reg:DI 147)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":96:46 191 {*adddi_1}
     (nil))
(insn 205 204 206 20 (set (reg:DF 99 [ _23 ])
        (mem:DF (plus:DI (reg/f:DI 121 [ pretmp_114 ])
                (reg:DI 97 [ _21 ])) [2 *_22+0 S8 A64])) "cmodules/fbgc_math.c":96:15 111 {*movdf_internal}
     (nil))
(debug_insn 206 205 207 20 (var_location:DF z$real (reg:DF 99 [ _23 ])) "cmodules/fbgc_math.c":96:13 -1
     (nil))
(debug_insn 207 206 208 20 (debug_marker) "cmodules/fbgc_math.c":97:6 -1
     (nil))
(insn 208 207 209 20 (parallel [
            (set (reg/f:DI 122 [ _123 ])
                (plus:DI (reg/f:DI 125 [ pretmp_139 ])
                    (reg:DI 97 [ _21 ])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (nil))
(insn 209 208 210 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 82 [ _1 ])
                    (const_int 9 [0x9])) [0 MEM[(struct fbgc_matrix_object *)_1].sub_type+0 S1 A8])
            (const_int 5 [0x5]))) "cmodules/fbgc_math.c":97:8 9 {*cmpqi_1}
     (nil))
(jump_insn 210 209 211 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 247)
            (pc))) "cmodules/fbgc_math.c":97:8 659 {*jcc}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 247)
;;  succ:       21 [34.0% (guessed)]  count:324914279 (estimated locally) (FALLTHRU)
;;              22 [66.0% (guessed)]  count:630715944 (estimated locally)

;; basic block 21, loop depth 2, count 324914276 (estimated locally), maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       20 [34.0% (guessed)]  count:324914279 (estimated locally) (FALLTHRU)
(note 211 210 212 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(debug_insn 212 211 213 21 (debug_marker) "cmodules/fbgc_math.c":98:7 -1
     (nil))
(insn 213 212 214 21 (parallel [
            (set (reg:SI 148 [ c_index ])
                (plus:SI (reg/v:SI 114 [ rc ])
                    (reg/v:SI 116 [ index ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":94:13 190 {*addsi_1}
     (nil))
(insn 214 213 215 21 (set (reg:DI 149)
        (zero_extend:DI (reg:SI 148 [ c_index ]))) "cmodules/fbgc_math.c":98:47 114 {*zero_extendsidi2}
     (nil))
(insn 215 214 216 21 (parallel [
            (set (reg:DI 150)
                (ashift:DI (reg:DI 149)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":98:47 520 {*ashldi3_1}
     (nil))
(insn 216 215 217 21 (parallel [
            (set (reg:DI 103 [ _27 ])
                (plus:DI (reg:DI 150)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":98:47 191 {*adddi_1}
     (nil))
(insn 217 216 218 21 (set (subreg:DF (reg:DI 161 [ z+8 ]) 0)
        (mem:DF (plus:DI (reg/f:DI 121 [ pretmp_114 ])
                (reg:DI 103 [ _27 ])) [2 *_28+0 S8 A64])) "cmodules/fbgc_math.c":98:14 111 {*movdf_internal}
     (nil))
(debug_insn 218 217 219 21 (debug_marker) "cmodules/fbgc_math.c":99:7 -1
     (nil))
(insn 219 218 321 21 (set (subreg:DF (reg:DI 160 [ z ]) 0)
        (reg:DF 99 [ _23 ])) "cmodules/fbgc_math.c":99:36 111 {*movdf_internal}
     (nil))
(insn 321 219 322 21 (set (reg:DI 168)
        (reg:DI 160 [ z ])) "cmodules/fbgc_math.c":99:36 66 {*movdi_internal}
     (nil))
(insn 322 321 323 21 (set (reg:DI 169 [+8 ])
        (reg:DI 161 [ z+8 ])) "cmodules/fbgc_math.c":99:36 66 {*movdi_internal}
     (nil))
(insn 323 322 324 21 (set (reg:DI 170)
        (reg:DI 160 [ z ])) "cmodules/fbgc_math.c":99:36 66 {*movdi_internal}
     (nil))
(insn 324 323 222 21 (set (reg:DI 171 [+8 ])
        (reg:DI 161 [ z+8 ])) "cmodules/fbgc_math.c":99:36 66 {*movdi_internal}
     (nil))
(insn 222 324 223 21 (set (reg:DF 153)
        (subreg:DF (reg:DI 168) 0)) "cmodules/fbgc_math.c":99:36 111 {*movdf_internal}
     (nil))
(insn 223 222 224 21 (set (reg:DF 154)
        (subreg:DF (reg:DI 171 [+8 ]) 0)) "cmodules/fbgc_math.c":99:36 111 {*movdf_internal}
     (nil))
(insn 224 223 225 21 (set (reg:DF 20 xmm0)
        (reg:DF 153)) "cmodules/fbgc_math.c":99:36 111 {*movdf_internal}
     (nil))
(insn 225 224 226 21 (set (reg:DF 21 xmm1)
        (reg:DF 154)) "cmodules/fbgc_math.c":99:36 111 {*movdf_internal}
     (nil))
(call_insn 226 225 227 21 (set (parallel:TI [
                (expr_list:REG_DEP_TRUE (reg:DF 20 xmm0)
                    (const_int 0 [0]))
                (expr_list:REG_DEP_TRUE (reg:DF 21 xmm1)
                    (const_int 8 [0x8]))
            ])
        (call (mem:QI (reg/v/f:DI 133 [ zfun ]) [0 *zfun_58(D) S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":99:36 677 {*call_value}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list (use (reg:DF 21 xmm1))
        (expr_list (use (reg:DF 20 xmm0))
            (nil))))
(insn 227 226 228 21 (set (reg:DF 155)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":99:36 111 {*movdf_internal}
     (nil))
(insn 228 227 325 21 (set (reg:DF 156)
        (reg:DF 21 xmm1)) "cmodules/fbgc_math.c":99:36 111 {*movdf_internal}
     (nil))
(insn 325 228 326 21 (set (reg:DI 162 [ result ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":99:36 66 {*movdi_internal}
     (nil))
(insn 326 325 230 21 (set (reg:DI 163 [ result+8 ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":99:36 66 {*movdi_internal}
     (nil))
(insn 230 326 231 21 (set (subreg:DF (reg:DI 162 [ result ]) 0)
        (reg:DF 155)) "cmodules/fbgc_math.c":99:36 111 {*movdf_internal}
     (nil))
(insn 231 230 232 21 (set (subreg:DF (reg:DI 163 [ result+8 ]) 0)
        (reg:DF 156)) "cmodules/fbgc_math.c":99:36 111 {*movdf_internal}
     (nil))
(debug_insn 232 231 233 21 (debug_marker) "cmodules/fbgc_math.c":100:7 -1
     (nil))
(insn 233 232 234 21 (set (mem:DF (reg/f:DI 122 [ _123 ]) [2 MEM[(double *)_123]+0 S8 A64])
        (subreg:DF (reg:DI 162 [ result ]) 0)) "cmodules/fbgc_math.c":100:50 111 {*movdf_internal}
     (nil))
(debug_insn 234 233 235 21 (debug_marker) "cmodules/fbgc_math.c":101:7 -1
     (nil))
(insn 235 234 236 21 (set (mem:DF (plus:DI (reg/f:DI 125 [ pretmp_139 ])
                (reg:DI 103 [ _27 ])) [2 *_33+0 S8 A64])
        (subreg:DF (reg:DI 163 [ result+8 ]) 0)) "cmodules/fbgc_math.c":101:52 111 {*movdf_internal}
     (nil))
(insn 236 235 327 21 (clobber (reg:DI 162 [ result ])) -1
     (nil))
(insn 327 236 237 21 (clobber (reg:DI 163 [ result+8 ])) -1
     (nil))
(debug_insn 237 327 238 21 (debug_marker) "cmodules/fbgc_math.c":92:36 -1
     (nil))
(insn 238 237 239 21 (parallel [
            (set (reg/v:SI 118 [ j ])
                (plus:SI (reg/v:SI 118 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":92:36 190 {*addsi_1}
     (nil))
(debug_insn 239 238 240 21 (var_location:SI j (reg/v:SI 118 [ j ])) -1
     (nil))
(debug_insn 240 239 241 21 (debug_marker) "cmodules/fbgc_math.c":92:23 -1
     (nil))
(insn 241 240 242 21 (set (reg:SI 110 [ _38 ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 14 [0xe])) [5 MEM[(struct fbgc_matrix_object *)_1].column+0 S4 A8])) "cmodules/fbgc_math.c":92:26 67 {*movsi_internal}
     (nil))
(insn 242 241 243 21 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 118 [ j ])
            (reg:SI 110 [ _38 ]))) "cmodules/fbgc_math.c":92:5 11 {*cmpsi_1}
     (nil))
(jump_insn 243 242 247 21 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 261)
            (pc))) "cmodules/fbgc_math.c":92:5 659 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 261)
;;  succ:       23 [89.0% (guessed)]  count:289173706 (estimated locally)
;;              24 [11.0% (guessed)]  count:35740570 (estimated locally) (FALLTHRU)

;; basic block 22, loop depth 2, count 630715947 (estimated locally), maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       20 [66.0% (guessed)]  count:630715944 (estimated locally)
(code_label 247 243 248 22 50 (nil) [1 uses])
(note 248 247 249 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(debug_insn 249 248 250 22 (debug_marker) "cmodules/fbgc_math.c":103:11 -1
     (nil))
(insn 250 249 251 22 (set (reg:DF 20 xmm0)
        (reg:DF 99 [ _23 ])) "cmodules/fbgc_math.c":103:57 111 {*movdf_internal}
     (nil))
(call_insn 251 250 252 22 (set (reg:DF 20 xmm0)
        (call (mem:QI (reg/v/f:DI 132 [ fun ]) [0 *fun_57(D) S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":103:57 677 {*call_value}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 252 251 253 22 (set (reg:DF 109 [ _37 ])
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":103:57 111 {*movdf_internal}
     (nil))
(insn 253 252 254 22 (set (mem:DF (reg/f:DI 122 [ _123 ]) [2 MEM[(double *)_123]+0 S8 A64])
        (reg:DF 109 [ _37 ])) "cmodules/fbgc_math.c":103:54 111 {*movdf_internal}
     (nil))
(debug_insn 254 253 255 22 (debug_marker) "cmodules/fbgc_math.c":92:36 -1
     (nil))
(insn 255 254 256 22 (parallel [
            (set (reg/v:SI 118 [ j ])
                (plus:SI (reg/v:SI 118 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":92:36 190 {*addsi_1}
     (nil))
(debug_insn 256 255 257 22 (var_location:SI j (reg/v:SI 118 [ j ])) -1
     (nil))
(debug_insn 257 256 258 22 (debug_marker) "cmodules/fbgc_math.c":92:23 -1
     (nil))
(insn 258 257 259 22 (set (reg:SI 110 [ _38 ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 14 [0xe])) [5 MEM[(struct fbgc_matrix_object *)_1].column+0 S4 A8])) "cmodules/fbgc_math.c":92:26 67 {*movsi_internal}
     (nil))
(insn 259 258 260 22 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 110 [ _38 ])
            (reg/v:SI 118 [ j ]))) "cmodules/fbgc_math.c":92:5 11 {*cmpsi_1}
     (nil))
(jump_insn 260 259 261 22 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 266)
            (pc))) "cmodules/fbgc_math.c":92:5 659 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 266)
;;  succ:       23 [89.0% (guessed)]  count:561337193 (estimated locally) (FALLTHRU)
;;              24 [11.0% (guessed)]  count:69378754 (estimated locally)

;; basic block 23, loop depth 2, count 850510899 (estimated locally), maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       21 [89.0% (guessed)]  count:289173706 (estimated locally)
;;              22 [89.0% (guessed)]  count:561337193 (estimated locally) (FALLTHRU)
(code_label 261 260 262 23 51 (nil) [1 uses])
(note 262 261 266 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
;;  succ:       20 [always]  count:850510899 (estimated locally) (FALLTHRU)

;; basic block 24, loop depth 1, count 105119324 (estimated locally), maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       22 [11.0% (guessed)]  count:69378754 (estimated locally)
;;              21 [11.0% (guessed)]  count:35740570 (estimated locally) (FALLTHRU)
(code_label 266 262 267 24 52 (nil) [1 uses])
(note 267 266 268 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 291 24 (set (reg:SI 120 [ prephitmp_109 ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 10 [0xa])) [5 MEM[(struct fbgc_matrix_object *)_1].row+0 S4 A8])) 67 {*movsi_internal}
     (nil))
;;  succ:       25 [always]  count:105119324 (estimated locally) (FALLTHRU)

;; basic block 25, loop depth 1, count 105119325 (estimated locally), maybe hot
;; Invalid sum of incoming counts 116682450 (estimated locally), should be 105119325 (estimated locally)
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       24 [always]  count:105119324 (estimated locally) (FALLTHRU)
;;              29 [89.0% (guessed)]  count:11563126 (estimated locally)
(code_label 291 268 269 25 55 (nil) [1 uses])
(note 269 291 270 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(debug_insn 270 269 271 25 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 271 270 272 25 (var_location:SI j (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 272 271 273 25 (debug_marker) "cmodules/fbgc_math.c":91:32 -1
     (nil))
(insn 273 272 274 25 (parallel [
            (set (reg/v:SI 115 [ i ])
                (plus:SI (reg/v:SI 115 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":91:32 190 {*addsi_1}
     (nil))
(debug_insn 274 273 275 25 (var_location:SI i (reg/v:SI 115 [ i ])) -1
     (nil))
(debug_insn 275 274 276 25 (debug_marker) "cmodules/fbgc_math.c":91:22 -1
     (nil))
(insn 276 275 277 25 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 115 [ i ])
            (reg:SI 120 [ prephitmp_109 ]))) "cmodules/fbgc_math.c":91:4 11 {*cmpsi_1}
     (nil))
(jump_insn 277 276 308 25 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 294)
            (pc))) "cmodules/fbgc_math.c":91:4 659 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 294)
;;  succ:       26 [89.0% (guessed)]  count:93556199 (estimated locally) (FALLTHRU)
;;              30 [11.0% (guessed)]  count:11563126 (estimated locally)

;; basic block 26, loop depth 1, count 93556199 (estimated locally), maybe hot
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       25 [89.0% (guessed)]  count:93556199 (estimated locally) (FALLTHRU)
(note 308 277 312 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
;;  succ:       28 [always]  count:93556199 (estimated locally) (FALLTHRU)

;; basic block 27, loop depth 0, count 12992278 (estimated locally), maybe hot
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       18 [89.0% (guessed)]  count:12992278 (estimated locally)
(code_label 312 308 311 27 56 (nil) [1 uses])
(note 311 312 9 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 9 311 278 27 (set (reg/v:SI 115 [ i ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":91:15 67 {*movsi_internal}
     (nil))
;;  succ:       28 [always]  count:12992278 (estimated locally) (FALLTHRU)

;; basic block 28, loop depth 1, count 106548476 (estimated locally), maybe hot
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       27 [always]  count:12992278 (estimated locally) (FALLTHRU)
;;              26 [always]  count:93556199 (estimated locally) (FALLTHRU)
(code_label 278 9 279 28 48 (nil) [0 uses])
(note 279 278 280 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(debug_insn 280 279 281 28 (var_location:SI i (reg/v:SI 115 [ i ])) -1
     (nil))
(debug_insn 281 280 282 28 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(debug_insn 282 281 284 28 (debug_marker) "cmodules/fbgc_math.c":92:23 -1
     (nil))
(insn 284 282 285 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 110 [ _38 ])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":92:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 285 284 286 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 283)
            (pc))) "cmodules/fbgc_math.c":92:5 659 {*jcc}
     (int_list:REG_BR_PROB 1071964724 (nil))
 -> 283)
;;  succ:       19 [99.8% (guessed)]  count:106372132 (estimated locally)
;;              29 [0.2% (guessed)]  count:176344 (estimated locally) (FALLTHRU)

;; basic block 29, loop depth 1, count 12992276 (estimated locally), maybe hot
;; Invalid sum of incoming counts 176344 (estimated locally), should be 12992276 (estimated locally)
;;  prev block 28, next block 30, flags: (RTL)
;;  pred:       28 [0.2% (guessed)]  count:176344 (estimated locally) (FALLTHRU)
(note 286 285 287 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(debug_insn 287 286 288 29 (debug_marker) "cmodules/fbgc_math.c":91:32 -1
     (nil))
(insn 288 287 289 29 (parallel [
            (set (reg/v:SI 115 [ i ])
                (plus:SI (reg/v:SI 115 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":91:32 190 {*addsi_1}
     (nil))
(debug_insn 289 288 290 29 (var_location:SI i (reg/v:SI 115 [ i ])) -1
     (nil))
(debug_insn 290 289 292 29 (debug_marker) "cmodules/fbgc_math.c":91:22 -1
     (nil))
(insn 292 290 293 29 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 120 [ prephitmp_109 ])
            (reg/v:SI 115 [ i ]))) "cmodules/fbgc_math.c":91:4 11 {*cmpsi_1}
     (nil))
(jump_insn 293 292 294 29 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) "cmodules/fbgc_math.c":91:4 659 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 291)
;;  succ:       25 [89.0% (guessed)]  count:11563126 (estimated locally)
;;              30 [11.0% (guessed)]  count:1429150 (estimated locally) (FALLTHRU)

;; basic block 30, loop depth 0, count 14598063 (estimated locally), maybe hot
;;  prev block 29, next block 31, flags: (RTL)
;;  pred:       25 [11.0% (guessed)]  count:11563126 (estimated locally)
;;              29 [11.0% (guessed)]  count:1429150 (estimated locally) (FALLTHRU)
;;              18 [11.0% (guessed)]  count:1605787 (estimated locally) (FALLTHRU)
(code_label 294 293 295 30 49 (nil) [1 uses])
(note 295 294 296 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(debug_insn 296 295 297 30 (debug_marker) "cmodules/fbgc_math.c":106:4 -1
     (nil))
(insn 297 296 328 30 (clobber (reg:DI 160 [ z ])) -1
     (nil))
(insn 328 297 298 30 (clobber (reg:DI 161 [ z+8 ])) -1
     (nil))
(debug_insn 298 328 299 30 (var_location:DF D#11 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 299 298 304 30 (var_location:DF z$real (debug_expr:DF D#11)) -1
     (nil))
;;  succ:       31 [always]  count:14598063 (estimated locally) (FALLTHRU)

;; basic block 31, loop depth 0, count 43747099 (estimated locally), maybe hot
;; Invalid sum of incoming counts 108627388 (estimated locally), should be 43747099 (estimated locally)
;;  prev block 30, next block 1, flags: (RTL)
;;  pred:       30 [always]  count:14598063 (estimated locally) (FALLTHRU)
;;              6 [always]  count:40550180 (estimated locally) (FALLTHRU)
;;              8 [always]  count:14598065 (estimated locally) (FALLTHRU)
;;              10 [always]  count:24330108 (estimated locally) (FALLTHRU)
;;              13 [11.0% (guessed)]  count:1605787 (estimated locally)
;;              17 [11.0% (guessed)]  count:12945185 (estimated locally) (FALLTHRU)
(code_label 304 299 307 31 38 (nil) [1 uses])
(note 307 304 305 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 305 307 306 31 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 129 [ <retval> ])) "cmodules/fbgc_math.c":111:1 66 {*movdi_internal}
     (nil))
(insn 306 305 0 31 (use (reg/i:DI 0 ax)) "cmodules/fbgc_math.c":111:1 -1
     (nil))
;;  succ:       EXIT [always]  count:43747099 (estimated locally) (FALLTHRU)


;; Function fbgc_sin (fbgc_sin, funcdef_no=59, decl_uid=5689, cgraph_uid=60, symbol_order=62)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 83 [ arg ])
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_math.c":120:1 66 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 84 [ argc ])
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_math.c":120:1 67 {*movsi_internal}
     (nil))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 4 9 2 (debug_marker) "cmodules/fbgc_math.c":120:1 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 84 [ argc ])
            (const_int 1 [0x1]))) "cmodules/fbgc_math.c":120:1 11 {*cmpsi_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "cmodules/fbgc_math.c":120:1 659 {*jcc}
     (int_list:REG_BR_PROB 662283964 (nil))
 -> 25)
;;  succ:       3 [38.3% (guessed)]  count:411457864 (estimated locally) (FALLTHRU)
;;              4 [61.7% (guessed)]  count:662283960 (estimated locally)

;; basic block 3, loop depth 0, count 411457867 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [38.3% (guessed)]  count:411457864 (estimated locally) (FALLTHRU)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 12 11 13 3 (var_location:SI D#12 (const_int 1 [0x1])) -1
     (nil))
(debug_insn 13 12 14 3 (var_location:DI arg (reg/v/f:DI 83 [ arg ])) -1
     (nil))
(debug_insn 14 13 15 3 (debug_marker:BLK) "cmodules/fbgc_math.c":120:1 -1
     (nil))
(debug_insn 15 14 16 3 (var_location:SI D#13 (debug_expr:SI D#12)) -1
     (nil))
(debug_insn 16 15 17 3 (var_location:SI argc (debug_expr:SI D#13)) -1
     (nil))
(insn 17 16 18 3 (set (reg:DI 2 cx)
        (const_int 0 [0])) "cmodules/fbgc_math.c":120:1 66 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 85)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7f213e4ba300 sin>)
                    ] UNSPEC_GOTPCREL)) [11  S8 A8])) "cmodules/fbgc_math.c":120:1 66 {*movdi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:DI 1 dx)
        (reg:DI 85)) "cmodules/fbgc_math.c":120:1 66 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7f213e4ba300 sin>)
        (nil)))
(insn 20 19 21 3 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "cmodules/fbgc_math.c":120:1 67 {*movsi_internal}
     (nil))
(insn 21 20 22 3 (set (reg:DI 5 di)
        (reg/v/f:DI 83 [ arg ])) "cmodules/fbgc_math.c":120:1 66 {*movdi_internal}
     (nil))
(call_insn/j 22 21 25 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("one_arg_math") [flags 0x3]  <function_decl 0x7f213dfac000 one_arg_math>) [0 one_arg_math S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":120:1 681 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("one_arg_math") [flags 0x3]  <function_decl 0x7f213dfac000 one_arg_math>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       EXIT [always]  count:411457867 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 4, loop depth 0, count 662283957 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2 [61.7% (guessed)]  count:662283960 (estimated locally)
(code_label 25 22 26 4 69 (nil) [1 uses])
(note 26 25 5 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 5 26 30 4 (set (reg/f:DI 82 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":120:1 66 {*movdi_internal}
     (nil))
(insn 30 5 31 4 (set (reg/i:DI 0 ax)
        (reg/f:DI 82 [ <retval> ])) "cmodules/fbgc_math.c":120:1 66 {*movdi_internal}
     (nil))
(insn 31 30 0 4 (use (reg/i:DI 0 ax)) "cmodules/fbgc_math.c":120:1 -1
     (nil))
;;  succ:       EXIT [always]  count:662283957 (estimated locally) (FALLTHRU)


;; Function fbgc_tan (fbgc_tan, funcdef_no=61, decl_uid=5697, cgraph_uid=62, symbol_order=66)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 83 [ arg ])
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_math.c":122:1 66 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 84 [ argc ])
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_math.c":122:1 67 {*movsi_internal}
     (nil))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 4 9 2 (debug_marker) "cmodules/fbgc_math.c":122:1 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 84 [ argc ])
            (const_int 1 [0x1]))) "cmodules/fbgc_math.c":122:1 11 {*cmpsi_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "cmodules/fbgc_math.c":122:1 659 {*jcc}
     (int_list:REG_BR_PROB 662283964 (nil))
 -> 25)
;;  succ:       3 [38.3% (guessed)]  count:411457864 (estimated locally) (FALLTHRU)
;;              4 [61.7% (guessed)]  count:662283960 (estimated locally)

;; basic block 3, loop depth 0, count 411457867 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [38.3% (guessed)]  count:411457864 (estimated locally) (FALLTHRU)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 12 11 13 3 (var_location:SI D#16 (const_int 1 [0x1])) -1
     (nil))
(debug_insn 13 12 14 3 (var_location:DI arg (reg/v/f:DI 83 [ arg ])) -1
     (nil))
(debug_insn 14 13 15 3 (debug_marker:BLK) "cmodules/fbgc_math.c":122:1 -1
     (nil))
(debug_insn 15 14 16 3 (var_location:SI D#17 (debug_expr:SI D#16)) -1
     (nil))
(debug_insn 16 15 17 3 (var_location:SI argc (debug_expr:SI D#17)) -1
     (nil))
(insn 17 16 18 3 (set (reg:DI 2 cx)
        (const_int 0 [0])) "cmodules/fbgc_math.c":122:1 66 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 85)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tan") [flags 0x41]  <function_decl 0x7f213e4bd500 tan>)
                    ] UNSPEC_GOTPCREL)) [11  S8 A8])) "cmodules/fbgc_math.c":122:1 66 {*movdi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:DI 1 dx)
        (reg:DI 85)) "cmodules/fbgc_math.c":122:1 66 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("tan") [flags 0x41]  <function_decl 0x7f213e4bd500 tan>)
        (nil)))
(insn 20 19 21 3 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "cmodules/fbgc_math.c":122:1 67 {*movsi_internal}
     (nil))
(insn 21 20 22 3 (set (reg:DI 5 di)
        (reg/v/f:DI 83 [ arg ])) "cmodules/fbgc_math.c":122:1 66 {*movdi_internal}
     (nil))
(call_insn/j 22 21 25 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("one_arg_math") [flags 0x3]  <function_decl 0x7f213dfac000 one_arg_math>) [0 one_arg_math S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":122:1 681 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("one_arg_math") [flags 0x3]  <function_decl 0x7f213dfac000 one_arg_math>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       EXIT [always]  count:411457867 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 4, loop depth 0, count 662283957 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2 [61.7% (guessed)]  count:662283960 (estimated locally)
(code_label 25 22 26 4 72 (nil) [1 uses])
(note 26 25 5 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 5 26 30 4 (set (reg/f:DI 82 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":122:1 66 {*movdi_internal}
     (nil))
(insn 30 5 31 4 (set (reg/i:DI 0 ax)
        (reg/f:DI 82 [ <retval> ])) "cmodules/fbgc_math.c":122:1 66 {*movdi_internal}
     (nil))
(insn 31 30 0 4 (use (reg/i:DI 0 ax)) "cmodules/fbgc_math.c":122:1 -1
     (nil))
;;  succ:       EXIT [always]  count:662283957 (estimated locally) (FALLTHRU)


;; Function fbgc_sqrt (fbgc_sqrt, funcdef_no=63, decl_uid=5729, cgraph_uid=64, symbol_order=70)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 83 [ arg ])
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_math.c":124:1 66 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 84 [ argc ])
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_math.c":124:1 67 {*movsi_internal}
     (nil))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 4 9 2 (debug_marker) "cmodules/fbgc_math.c":124:1 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 84 [ argc ])
            (const_int 1 [0x1]))) "cmodules/fbgc_math.c":124:1 11 {*cmpsi_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "cmodules/fbgc_math.c":124:1 659 {*jcc}
     (int_list:REG_BR_PROB 662283964 (nil))
 -> 25)
;;  succ:       3 [38.3% (guessed)]  count:411457864 (estimated locally) (FALLTHRU)
;;              4 [61.7% (guessed)]  count:662283960 (estimated locally)

;; basic block 3, loop depth 0, count 411457867 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [38.3% (guessed)]  count:411457864 (estimated locally) (FALLTHRU)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 12 11 13 3 (var_location:SI D#20 (const_int 1 [0x1])) -1
     (nil))
(debug_insn 13 12 14 3 (var_location:DI arg (reg/v/f:DI 83 [ arg ])) -1
     (nil))
(debug_insn 14 13 15 3 (debug_marker:BLK) "cmodules/fbgc_math.c":124:1 -1
     (nil))
(debug_insn 15 14 16 3 (var_location:SI D#21 (debug_expr:SI D#20)) -1
     (nil))
(debug_insn 16 15 17 3 (var_location:SI argc (debug_expr:SI D#21)) -1
     (nil))
(insn 17 16 18 3 (set (reg:DI 2 cx)
        (const_int 0 [0])) "cmodules/fbgc_math.c":124:1 66 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 85)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7f213e4bc500 sqrt>)
                    ] UNSPEC_GOTPCREL)) [11  S8 A8])) "cmodules/fbgc_math.c":124:1 66 {*movdi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:DI 1 dx)
        (reg:DI 85)) "cmodules/fbgc_math.c":124:1 66 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7f213e4bc500 sqrt>)
        (nil)))
(insn 20 19 21 3 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "cmodules/fbgc_math.c":124:1 67 {*movsi_internal}
     (nil))
(insn 21 20 22 3 (set (reg:DI 5 di)
        (reg/v/f:DI 83 [ arg ])) "cmodules/fbgc_math.c":124:1 66 {*movdi_internal}
     (nil))
(call_insn/j 22 21 25 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("one_arg_math") [flags 0x3]  <function_decl 0x7f213dfac000 one_arg_math>) [0 one_arg_math S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":124:1 681 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("one_arg_math") [flags 0x3]  <function_decl 0x7f213dfac000 one_arg_math>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       EXIT [always]  count:411457867 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 4, loop depth 0, count 662283957 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2 [61.7% (guessed)]  count:662283960 (estimated locally)
(code_label 25 22 26 4 75 (nil) [1 uses])
(note 26 25 5 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 5 26 30 4 (set (reg/f:DI 82 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":124:1 66 {*movdi_internal}
     (nil))
(insn 30 5 31 4 (set (reg/i:DI 0 ax)
        (reg/f:DI 82 [ <retval> ])) "cmodules/fbgc_math.c":124:1 66 {*movdi_internal}
     (nil))
(insn 31 30 0 4 (use (reg/i:DI 0 ax)) "cmodules/fbgc_math.c":124:1 -1
     (nil))
;;  succ:       EXIT [always]  count:662283957 (estimated locally) (FALLTHRU)


;; Function fbgc_exp (fbgc_exp, funcdef_no=62, decl_uid=5733, cgraph_uid=63, symbol_order=68)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

; Splitting reg 138 -> 164 165
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 12 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 12 3 2 (set (reg/v/f:DI 140 [ arg ])
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_math.c":123:1 66 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 141 [ argc ])
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_math.c":123:1 67 {*movsi_internal}
     (nil))
(note 4 3 14 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 14 4 15 2 (debug_marker) "cmodules/fbgc_math.c":123:1 -1
     (nil))
(insn 15 14 16 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 141 [ argc ])
            (const_int 1 [0x1]))) "cmodules/fbgc_math.c":123:1 11 {*cmpsi_1}
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 382)
            (pc))) "cmodules/fbgc_math.c":123:1 659 {*jcc}
     (int_list:REG_BR_PROB 662283964 (nil))
 -> 382)
;;  succ:       3 [38.3% (guessed)]  count:411457864 (estimated locally) (FALLTHRU)
;;              31 [61.7% (guessed)]  count:662283960 (estimated locally)

;; basic block 3, loop depth 0, count 411457868 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [38.3% (guessed)]  count:411457864 (estimated locally) (FALLTHRU)
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 18 17 19 3 (var_location:SI D#18 (const_int 1 [0x1])) -1
     (nil))
(debug_insn 19 18 20 3 (var_location:DI arg (reg/v/f:DI 140 [ arg ])) -1
     (nil))
(debug_insn 20 19 21 3 (debug_marker:BLK) "cmodules/fbgc_math.c":123:1 -1
     (nil))
(debug_insn 21 20 22 3 (var_location:SI D#19 (debug_expr:SI D#18)) -1
     (nil))
(debug_insn 22 21 23 3 (var_location:SI argc (debug_expr:SI D#19)) -1
     (nil))
(debug_insn 23 22 24 3 (var_location:DI arg (reg/v/f:DI 140 [ arg ])) -1
     (nil))
(debug_insn 24 23 25 3 (var_location:SI argc (const_int 1 [0x1])) -1
     (nil))
(debug_insn 25 24 26 3 (var_location:DI fun (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>)) -1
     (nil))
(debug_insn 26 25 27 3 (var_location:DI zfun (symbol_ref:DI ("c_exp") [flags 0x3]  <function_decl 0x7f213dfa5c00 c_exp>)) -1
     (nil))
(debug_insn 27 26 28 3 (debug_marker:BLK) "cmodules/fbgc_math.c":50:22 -1
     (nil))
(debug_insn 28 27 29 3 (debug_marker) "cmodules/fbgc_math.c":53:2 -1
     (nil))
(insn 29 28 30 3 (set (reg/f:DI 83 [ _10 ])
        (mem/f:DI (reg/v/f:DI 140 [ arg ]) [3 *arg_5(D)+0 S8 A64])) "cmodules/fbgc_math.c":53:12 66 {*movdi_internal}
     (nil))
(insn 30 29 31 3 (set (reg:QI 84 [ _11 ])
        (mem:QI (reg/f:DI 83 [ _10 ]) [0 _10->type+0 S1 A8])) "cmodules/fbgc_math.c":53:15 69 {*movqi_internal}
     (nil))
(insn 31 30 32 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 84 [ _11 ])
            (const_int 7 [0x7]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (nil))
(jump_insn 32 31 33 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 198)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (int_list:REG_BR_PROB 214748374 (nil))
 -> 198)
;;  succ:       4 [80.0% (adjusted)]  count:329166293 (estimated locally) (FALLTHRU)
;;              19 [20.0% (adjusted)]  count:82291575 (estimated locally)

;; basic block 4, loop depth 0, count 411457868 (estimated locally), maybe hot
;; Invalid sum of incoming counts 329166293 (estimated locally), should be 411457868 (estimated locally)
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [80.0% (adjusted)]  count:329166293 (estimated locally) (FALLTHRU)
(note 33 32 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 36 33 37 4 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 84 [ _11 ])
            (const_int 7 [0x7]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (nil))
(jump_insn 37 36 38 4 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (int_list:REG_BR_PROB 402653190 (nil))
 -> 58)
;;  succ:       5 [62.5% (adjusted)]  count:257161168 (estimated locally) (FALLTHRU)
;;              10 [37.5% (adjusted)]  count:154296701 (estimated locally)

;; basic block 5, loop depth 0, count 411457868 (estimated locally), maybe hot
;; Invalid sum of incoming counts 257161168 (estimated locally), should be 411457868 (estimated locally)
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [62.5% (adjusted)]  count:257161168 (estimated locally) (FALLTHRU)
(note 38 37 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 41 38 42 5 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 84 [ _11 ])
            (const_int 4 [0x4]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (nil))
(jump_insn 42 41 43 5 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (int_list:REG_BR_PROB 536870926 (nil))
 -> 51)
;;  succ:       6 [50.0% (adjusted)]  count:205728931 (estimated locally) (FALLTHRU)
;;              8 [50.0% (adjusted)]  count:205728937 (estimated locally)

;; basic block 6, loop depth 0, count 411457868 (estimated locally), maybe hot
;; Invalid sum of incoming counts 205728931 (estimated locally), should be 411457868 (estimated locally)
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [50.0% (adjusted)]  count:205728931 (estimated locally) (FALLTHRU)
(note 43 42 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 46 43 47 6 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 84 [ _11 ])
            (const_int 2 [0x2]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (nil))
(jump_insn 47 46 50 6 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (int_list:REG_BR_PROB 477218590 (nil))
 -> 65)
;;  succ:       7 [55.6% (adjusted)]  count:228587706 (estimated locally) (FALLTHRU)
;;              12 [44.4% (adjusted)]  count:182870162 (estimated locally)

;; basic block 7, loop depth 0, count 228587706 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [55.6% (adjusted)]  count:228587706 (estimated locally) (FALLTHRU)
(note 50 47 10 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 10 50 51 7 (set (reg/v/f:DI 139 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":53:2 66 {*movdi_internal}
     (nil))
;;  succ:       32 [always]  count:228587706 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 0, count 411457868 (estimated locally), maybe hot
;; Invalid sum of incoming counts 205728937 (estimated locally), should be 411457868 (estimated locally)
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       5 [50.0% (adjusted)]  count:205728937 (estimated locally)
(code_label 51 10 52 8 81 (nil) [1 uses])
(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 84 [ _11 ])
            (const_int 5 [0x5]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (nil))
(jump_insn 54 53 57 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (int_list:REG_BR_PROB 858993454 (nil))
 -> 80)
;;  succ:       9 [20.0% (adjusted)]  count:82291578 (estimated locally) (FALLTHRU)
;;              13 [80.0% (adjusted)]  count:329166290 (estimated locally)

;; basic block 9, loop depth 0, count 82291578 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [20.0% (adjusted)]  count:82291578 (estimated locally) (FALLTHRU)
(note 57 54 9 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 9 57 58 9 (set (reg/v/f:DI 139 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":53:2 66 {*movdi_internal}
     (nil))
;;  succ:       32 [always]  count:82291578 (estimated locally) (FALLTHRU)

;; basic block 10, loop depth 0, count 411457868 (estimated locally), maybe hot
;; Invalid sum of incoming counts 154296701 (estimated locally), should be 411457868 (estimated locally)
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       4 [37.5% (adjusted)]  count:154296701 (estimated locally)
(code_label 58 9 59 10 80 (nil) [1 uses])
(note 59 58 60 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 84 [ _11 ])
            (const_int 8 [0x8]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (nil))
(jump_insn 61 60 64 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 133)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (int_list:REG_BR_PROB 715827886 (nil))
 -> 133)
;;  succ:       11 [33.3% (adjusted)]  count:137152624 (estimated locally) (FALLTHRU)
;;              14 [66.7% (adjusted)]  count:274305244 (estimated locally)

;; basic block 11, loop depth 0, count 137152624 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [33.3% (adjusted)]  count:137152624 (estimated locally) (FALLTHRU)
(note 64 61 8 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 8 64 65 11 (set (reg/v/f:DI 139 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":53:2 66 {*movdi_internal}
     (nil))
;;  succ:       32 [always]  count:137152624 (estimated locally) (FALLTHRU)

;; basic block 12, loop depth 0, count 82291576 (estimated locally), maybe hot
;; Invalid sum of incoming counts 182870162 (estimated locally), should be 82291576 (estimated locally)
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       6 [44.4% (adjusted)]  count:182870162 (estimated locally)
(code_label 65 8 66 12 82 (nil) [1 uses])
(note 66 65 67 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 67 66 68 12 (debug_marker) "cmodules/fbgc_math.c":58:4 -1
     (nil))
(insn 68 67 69 12 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _10 ])) "cmodules/fbgc_math.c":58:19 66 {*movdi_internal}
     (nil))
(call_insn 69 68 70 12 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f213e3db700 convert_fbgc_object_to_double>) [0 convert_fbgc_object_to_double S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":58:19 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f213e3db700 convert_fbgc_object_to_double>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 70 69 71 12 (set (reg/v:DF 85 [ dbarg ])
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":58:19 111 {*movdf_internal}
     (nil))
(debug_insn 71 70 72 12 (var_location:DF dbarg (reg/v:DF 85 [ dbarg ])) "cmodules/fbgc_math.c":58:19 -1
     (nil))
(debug_insn 72 71 73 12 (debug_marker) "cmodules/fbgc_math.c":59:4 -1
     (nil))
(insn 73 72 74 12 (set (reg:DF 20 xmm0)
        (reg/v:DF 85 [ dbarg ])) "cmodules/fbgc_math.c":59:11 111 {*movdf_internal}
     (nil))
(call_insn 74 73 75 12 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":59:11 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 75 74 76 12 (set (reg:DF 86 [ _13 ])
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":59:11 111 {*movdf_internal}
     (nil))
(insn 76 75 77 12 (set (reg:DF 20 xmm0)
        (reg:DF 86 [ _13 ])) "cmodules/fbgc_math.c":59:11 111 {*movdf_internal}
     (nil))
(call_insn/j 77 76 80 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f213e3e6d00 new_fbgc_double_object>) [0 new_fbgc_double_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":59:11 681 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f213e3e6d00 new_fbgc_double_object>)
        (nil))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
;;  succ:       EXIT [always]  count:82291576 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 13, loop depth 0, count 82291576 (estimated locally), maybe hot
;; Invalid sum of incoming counts 329166290 (estimated locally), should be 82291576 (estimated locally)
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       8 [80.0% (adjusted)]  count:329166290 (estimated locally)
(code_label 80 77 81 13 83 (nil) [1 uses])
(note 81 80 82 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 82 81 83 13 (debug_marker) "cmodules/fbgc_math.c":63:4 -1
     (nil))
(insn 83 82 84 13 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _10 ])) "cmodules/fbgc_math.c":63:27 66 {*movdi_internal}
     (nil))
(call_insn 84 83 85 13 (set (parallel:TI [
                (expr_list:REG_DEP_TRUE (reg:DF 20 xmm0)
                    (const_int 0 [0]))
                (expr_list:REG_DEP_TRUE (reg:DF 21 xmm1)
                    (const_int 8 [0x8]))
            ])
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_complex") [flags 0x41]  <function_decl 0x7f213e3db800 convert_fbgc_object_to_complex>) [0 convert_fbgc_object_to_complex S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":63:27 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_complex") [flags 0x41]  <function_decl 0x7f213e3db800 convert_fbgc_object_to_complex>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 85 84 86 13 (set (reg:DF 142)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":63:27 111 {*movdf_internal}
     (nil))
(insn 86 85 388 13 (set (reg:DF 143)
        (reg:DF 21 xmm1)) "cmodules/fbgc_math.c":63:27 111 {*movdf_internal}
     (nil))
(insn 388 86 389 13 (set (reg:DI 164 [ z ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":63:27 66 {*movdi_internal}
     (nil))
(insn 389 388 88 13 (set (reg:DI 165 [ z+8 ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":63:27 66 {*movdi_internal}
     (nil))
(insn 88 389 89 13 (set (subreg:DF (reg:DI 164 [ z ]) 0)
        (reg:DF 142)) "cmodules/fbgc_math.c":63:27 111 {*movdf_internal}
     (nil))
(insn 89 88 90 13 (set (subreg:DF (reg:DI 165 [ z+8 ]) 0)
        (reg:DF 143)) "cmodules/fbgc_math.c":63:27 111 {*movdf_internal}
     (nil))
(debug_insn 90 89 91 13 (debug_marker) "cmodules/fbgc_math.c":64:4 -1
     (nil))
(debug_insn 91 90 92 13 (var_location:DF z$real (subreg:DF (reg:DI 164 [ z ]) 0)) -1
     (nil))
(debug_insn 92 91 93 13 (var_location:DF D#32 (subreg:DF (reg:DI 165 [ z+8 ]) 0)) -1
     (nil))
(insn 93 92 94 13 (parallel [
            (set (reg:DI 144)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (nil))
(insn 94 93 95 13 (parallel [
            (set (reg:DI 145)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (nil))
(insn 95 94 96 13 (set (reg:DI 4 si)
        (reg:DI 145)) 66 {*movdi_internal}
     (nil))
(insn 96 95 97 13 (set (reg:DI 5 di)
        (reg:DI 144)) 66 {*movdi_internal}
     (nil))
(insn 97 96 98 13 (set (reg:DF 20 xmm0)
        (subreg:DF (reg:DI 165 [ z+8 ]) 0)) 111 {*movdf_internal}
     (nil))
(call_insn 98 97 99 13 (call (mem:QI (symbol_ref:DI ("sincos") [flags 0x41]  <function_decl 0x7f213e4ba400 __builtin_sincos>) [0 __builtin_sincos S1 A8])
        (const_int 0 [0])) 666 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sincos") [flags 0x41]  <function_decl 0x7f213e4ba400 __builtin_sincos>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 99 98 100 13 (set (reg:DF 128 [ sincostmp_107 ])
        (mem/c:DF (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2  S8 A64])) 111 {*movdf_internal}
     (nil))
(insn 100 99 101 13 (set (reg:DF 129 [ sincostmp_107+8 ])
        (mem/c:DF (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [2  S8 A64])) 111 {*movdf_internal}
     (nil))
(debug_insn 101 100 102 13 (var_location:DF z$8 (debug_expr:DF D#32)) -1
     (nil))
(debug_insn 102 101 103 13 (debug_marker:BLK) "cmodules/fbgc_math.c":22:20 -1
     (nil))
(debug_insn 103 102 104 13 (var_location:DF z$imag (debug_expr:DF D#32)) -1
     (nil))
(debug_insn 104 103 105 13 (debug_marker) "cmodules/fbgc_math.c":24:2 -1
     (nil))
(debug_insn 105 104 106 13 (debug_marker) "cmodules/fbgc_math.c":25:2 -1
     (nil))
(insn 106 105 107 13 (set (reg:DF 20 xmm0)
        (subreg:DF (reg:DI 164 [ z ]) 0)) "cmodules/fbgc_math.c":25:13 111 {*movdf_internal}
     (nil))
(call_insn 107 106 108 13 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":25:13 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 108 107 109 13 (set (reg/v:DF 116 [ r ])
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":25:13 111 {*movdf_internal}
     (nil))
(debug_insn 109 108 110 13 (var_location:DF r (reg/v:DF 116 [ r ])) "cmodules/fbgc_math.c":25:13 -1
     (nil))
(debug_insn 110 109 111 13 (debug_marker) "cmodules/fbgc_math.c":26:2 -1
     (nil))
(debug_insn 111 110 112 13 (var_location:DF res$real (mult:DF (reg:DF 128 [ sincostmp_107 ])
        (reg/v:DF 116 [ r ]))) "cmodules/fbgc_math.c":26:11 -1
     (nil))
(debug_insn 112 111 113 13 (debug_marker) "cmodules/fbgc_math.c":27:2 -1
     (nil))
(debug_insn 113 112 114 13 (var_location:DF res$imag (mult:DF (reg:DF 129 [ sincostmp_107+8 ])
        (reg/v:DF 116 [ r ]))) "cmodules/fbgc_math.c":27:11 -1
     (nil))
(debug_insn 114 113 115 13 (debug_marker) "cmodules/fbgc_math.c":28:2 -1
     (nil))
(debug_insn 115 114 116 13 (var_location:DF D#1 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 116 115 117 13 (var_location:DF res$real (debug_expr:DF D#1)) -1
     (nil))
(debug_insn 117 116 118 13 (var_location:DF D#2 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 118 117 119 13 (var_location:DF res$imag (debug_expr:DF D#2)) -1
     (nil))
(debug_insn 119 118 120 13 (var_location:DF r (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":64:9 -1
     (nil))
(debug_insn 120 119 121 13 (var_location:DF z$imag (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":64:9 -1
     (nil))
(debug_insn 121 120 122 13 (var_location:DF D#29 (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":64:9 -1
     (nil))
(debug_insn 122 121 123 13 (var_location:DF z$real (debug_expr:DF D#29)) "cmodules/fbgc_math.c":64:9 -1
     (nil))
(debug_insn 123 122 124 13 (var_location:DF D#30 (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":64:9 -1
     (nil))
(debug_insn 124 123 125 13 (var_location:DF z$8 (debug_expr:DF D#30)) "cmodules/fbgc_math.c":64:9 -1
     (nil))
(debug_insn 125 124 126 13 (debug_marker) "cmodules/fbgc_math.c":65:4 -1
     (nil))
(insn 126 125 127 13 (set (reg:DF 146)
        (mult:DF (reg:DF 129 [ sincostmp_107+8 ])
            (reg/v:DF 116 [ r ]))) "cmodules/fbgc_math.c":27:14 818 {*fop_df_comm}
     (nil))
(insn 127 126 128 13 (set (reg:DF 147)
        (mult:DF (reg:DF 128 [ sincostmp_107 ])
            (reg/v:DF 116 [ r ]))) "cmodules/fbgc_math.c":26:14 818 {*fop_df_comm}
     (nil))
(insn 128 127 129 13 (set (reg:DF 21 xmm1)
        (reg:DF 146)) "cmodules/fbgc_math.c":65:11 111 {*movdf_internal}
     (nil))
(insn 129 128 130 13 (set (reg:DF 20 xmm0)
        (reg:DF 147)) "cmodules/fbgc_math.c":65:11 111 {*movdf_internal}
     (nil))
(call_insn/j 130 129 133 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_complex_object") [flags 0x41]  <function_decl 0x7f213e3f0300 new_fbgc_complex_object>) [0 new_fbgc_complex_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":65:11 681 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_complex_object") [flags 0x41]  <function_decl 0x7f213e3f0300 new_fbgc_complex_object>)
        (nil))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (expr_list:DF (use (reg:DF 21 xmm1))
            (nil))))
;;  succ:       EXIT [always]  count:82291576 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 14, loop depth 0, count 82291576 (estimated locally), maybe hot
;; Invalid sum of incoming counts 274305244 (estimated locally), should be 82291576 (estimated locally)
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       10 [66.7% (adjusted)]  count:274305244 (estimated locally)
(code_label 133 130 134 14 84 (nil) [1 uses])
(note 134 133 135 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 135 134 136 14 (debug_marker) "cmodules/fbgc_math.c":69:4 -1
     (nil))
(insn 136 135 137 14 (set (reg/v:SI 88 [ sz ])
        (mem:SI (plus:DI (reg/f:DI 83 [ _10 ])
                (const_int 13 [0xd])) [5 MEM[(struct fbgc_tuple_object *)_10].size+0 S4 A8])) "cmodules/fbgc_math.c":69:11 67 {*movsi_internal}
     (nil))
(debug_insn 137 136 138 14 (var_location:SI sz (reg/v:SI 88 [ sz ])) "cmodules/fbgc_math.c":69:11 -1
     (nil))
(debug_insn 138 137 139 14 (debug_marker) "cmodules/fbgc_math.c":70:4 -1
     (nil))
(insn 139 138 140 14 (set (reg:SI 5 di)
        (reg/v:SI 88 [ sz ])) "cmodules/fbgc_math.c":70:34 67 {*movsi_internal}
     (nil))
(call_insn 140 139 141 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f213e3fec00 new_fbgc_tuple_object>) [0 new_fbgc_tuple_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":70:34 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f213e3fec00 new_fbgc_tuple_object>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 141 140 142 14 (set (reg/v/f:DI 139 [ <retval> ])
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":70:34 66 {*movdi_internal}
     (nil))
(debug_insn 142 141 143 14 (var_location:DI res_tp (reg/v/f:DI 139 [ <retval> ])) "cmodules/fbgc_math.c":70:34 -1
     (nil))
(debug_insn 143 142 144 14 (debug_marker) "cmodules/fbgc_math.c":71:4 -1
     (nil))
(insn 144 143 145 14 (set (mem:SI (plus:DI (reg/v/f:DI 139 [ <retval> ])
                (const_int 13 [0xd])) [5 MEM[(struct fbgc_tuple_object *)res_tp_19].size+0 S4 A8])
        (reg/v:SI 88 [ sz ])) "cmodules/fbgc_math.c":71:35 67 {*movsi_internal}
     (nil))
(debug_insn 145 144 146 14 (debug_marker) "cmodules/fbgc_math.c":72:4 -1
     (nil))
(insn 146 145 147 14 (set (reg/f:DI 89 [ _20 ])
        (mem/f:DI (reg/v/f:DI 140 [ arg ]) [3 *arg_5(D)+0 S8 A64])) "cmodules/fbgc_math.c":72:39 66 {*movdi_internal}
     (nil))
(debug_insn 147 146 148 14 (var_location:DI D#31 (plus:DI (reg/f:DI 89 [ _20 ])
        (const_int 17 [0x11]))) "cmodules/fbgc_math.c":72:26 -1
     (nil))
(debug_insn 148 147 149 14 (var_location:DI tp_content (debug_expr:DI D#31)) "cmodules/fbgc_math.c":72:26 -1
     (nil))
(debug_insn 149 148 150 14 (debug_marker) "cmodules/fbgc_math.c":72:67 -1
     (nil))
(debug_insn 150 149 151 14 (debug_marker) "cmodules/fbgc_math.c":74:4 -1
     (nil))
(debug_insn 151 150 152 14 (debug_marker) "cmodules/fbgc_math.c":74:8 -1
     (nil))
(debug_insn 152 151 153 14 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 153 152 154 14 (debug_marker) "cmodules/fbgc_math.c":74:22 -1
     (nil))
(insn 154 153 155 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 88 [ sz ])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":74:4 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 155 154 156 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 375)
            (pc))) "cmodules/fbgc_math.c":74:4 659 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 375)
;;  succ:       15 [89.0% (guessed)]  count:73239503 (estimated locally) (FALLTHRU)
;;              32 [11.0% (guessed)]  count:9052073 (estimated locally)

;; basic block 15, loop depth 0, count 73239503 (estimated locally), maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [89.0% (guessed)]  count:73239503 (estimated locally) (FALLTHRU)
(note 156 155 157 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 157 156 5 15 (parallel [
            (set (reg:DI 136 [ ivtmp.93 ])
                (plus:DI (reg/f:DI 89 [ _20 ])
                    (const_int 17 [0x11])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (nil))
(insn 5 157 192 15 (set (reg/v:SI 94 [ i ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":74:15 67 {*movsi_internal}
     (nil))
;;  succ:       16 [always]  count:73239503 (estimated locally) (FALLTHRU)

;; basic block 16, loop depth 1, count 663665780 (estimated locally), maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       15 [always]  count:73239503 (estimated locally) (FALLTHRU)
;;              18 [89.0% (guessed)]  count:590426281 (estimated locally) (DFS_BACK)
(code_label 192 5 158 16 86 (nil) [1 uses])
(note 158 192 159 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(debug_insn 159 158 160 16 (var_location:SI i (reg/v:SI 94 [ i ])) -1
     (nil))
(debug_insn 160 159 161 16 (debug_marker) "cmodules/fbgc_math.c":76:5 -1
     (nil))
(insn 161 160 162 16 (set (reg:DI 2 cx)
        (symbol_ref:DI ("c_exp") [flags 0x3]  <function_decl 0x7f213dfa5c00 c_exp>)) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (nil))
(insn 162 161 163 16 (set (reg:DI 148)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>)
                    ] UNSPEC_GOTPCREL)) [11  S8 A8])) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (nil))
(insn 163 162 164 16 (set (reg:DI 1 dx)
        (reg:DI 148)) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>)
        (nil)))
(insn 164 163 165 16 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "cmodules/fbgc_math.c":76:35 67 {*movsi_internal}
     (nil))
(insn 165 164 166 16 (set (reg:DI 5 di)
        (reg:DI 136 [ ivtmp.93 ])) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (nil))
(call_insn 166 165 167 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("one_arg_math") [flags 0x3]  <function_decl 0x7f213dfac000 one_arg_math>) [0 one_arg_math S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":76:35 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("one_arg_math") [flags 0x3]  <function_decl 0x7f213dfac000 one_arg_math>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 167 166 168 16 (set (reg/v/f:DI 92 [ result ])
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (nil))
(debug_insn 168 167 169 16 (var_location:DI result (reg/v/f:DI 92 [ result ])) "cmodules/fbgc_math.c":76:35 -1
     (nil))
(debug_insn 169 168 170 16 (debug_marker) "cmodules/fbgc_math.c":77:5 -1
     (nil))
(insn 170 169 171 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 92 [ result ])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":77:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 171 170 172 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 180)
            (pc))) "cmodules/fbgc_math.c":77:5 659 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 180)
;;  succ:       18 [100.0% (guessed)]  count:663400314 (estimated locally)
;;              17 [0.0% (guessed)]  count:265466 (estimated locally) (FALLTHRU)

;; basic block 17, loop depth 0, count 265465 (estimated locally)
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       16 [0.0% (guessed)]  count:265466 (estimated locally) (FALLTHRU)
(note 172 171 173 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(debug_insn 173 172 174 17 (debug_marker) "cmodules/fbgc_math.c":77:5 -1
     (nil))
(insn 174 173 175 17 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.5776") [flags 0x2]  <var_decl 0x7f213dfa6990 __PRETTY_FUNCTION__>)) "cmodules/fbgc_math.c":77:5 66 {*movdi_internal}
     (nil))
(insn 175 174 176 17 (set (reg:SI 1 dx)
        (const_int 77 [0x4d])) "cmodules/fbgc_math.c":77:5 67 {*movsi_internal}
     (nil))
(insn 176 175 177 17 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f213e0b5900 *.LC9>)) "cmodules/fbgc_math.c":77:5 66 {*movdi_internal}
     (nil))
(insn 177 176 178 17 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f213e0b5990 *.LC10>)) "cmodules/fbgc_math.c":77:5 66 {*movdi_internal}
     (nil))
(call_insn 178 177 180 17 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f213e2a1c00 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_math.c":77:5 666 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f213e2a1c00 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 18, loop depth 1, count 663400315 (estimated locally), maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       16 [100.0% (guessed)]  count:663400314 (estimated locally)
(code_label 180 178 181 18 85 (nil) [1 uses])
(note 181 180 182 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(debug_insn 182 181 183 18 (debug_marker) "cmodules/fbgc_math.c":78:5 -1
     (nil))
(insn 183 182 184 18 (set (reg:SI 1 dx)
        (reg/v:SI 94 [ i ])) "cmodules/fbgc_math.c":78:5 67 {*movsi_internal}
     (nil))
(insn 184 183 185 18 (set (reg:DI 4 si)
        (reg/v/f:DI 92 [ result ])) "cmodules/fbgc_math.c":78:5 66 {*movdi_internal}
     (nil))
(insn 185 184 186 18 (set (reg:DI 5 di)
        (reg/v/f:DI 139 [ <retval> ])) "cmodules/fbgc_math.c":78:5 66 {*movdi_internal}
     (nil))
(call_insn 186 185 187 18 (call (mem:QI (symbol_ref:DI ("set_object_in_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f213e3fee00 set_object_in_fbgc_tuple_object>) [0 set_object_in_fbgc_tuple_object S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_math.c":78:5 666 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("set_object_in_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f213e3fee00 set_object_in_fbgc_tuple_object>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(debug_insn 187 186 188 18 (debug_marker) "cmodules/fbgc_math.c":74:31 -1
     (nil))
(insn 188 187 189 18 (parallel [
            (set (reg/v:SI 94 [ i ])
                (plus:SI (reg/v:SI 94 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":74:31 190 {*addsi_1}
     (nil))
(debug_insn 189 188 190 18 (var_location:SI i (reg/v:SI 94 [ i ])) -1
     (nil))
(debug_insn 190 189 191 18 (debug_marker) "cmodules/fbgc_math.c":74:22 -1
     (nil))
(insn 191 190 193 18 (parallel [
            (set (reg:DI 136 [ ivtmp.93 ])
                (plus:DI (reg:DI 136 [ ivtmp.93 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (nil))
(insn 193 191 194 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 88 [ sz ])
            (reg/v:SI 94 [ i ]))) "cmodules/fbgc_math.c":74:4 11 {*cmpsi_1}
     (nil))
(jump_insn 194 193 198 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 192)
            (pc))) "cmodules/fbgc_math.c":74:4 659 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 192)
;;  succ:       16 [89.0% (guessed)]  count:590426281 (estimated locally) (DFS_BACK)
;;              32 [11.0% (guessed)]  count:72974034 (estimated locally) (FALLTHRU)

;; basic block 19, loop depth 0, count 82291576 (estimated locally), maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       3 [20.0% (adjusted)]  count:82291575 (estimated locally)
(code_label 198 194 199 19 79 (nil) [1 uses])
(note 199 198 200 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(debug_insn 200 199 201 19 (debug_marker) "cmodules/fbgc_math.c":84:4 -1
     (nil))
(debug_insn 201 200 202 19 (var_location:DI m (reg/f:DI 83 [ _10 ])) "cmodules/fbgc_math.c":84:32 -1
     (nil))
(debug_insn 202 201 203 19 (debug_marker) "cmodules/fbgc_math.c":85:4 -1
     (nil))
(insn 203 202 204 19 (set (reg:SI 149)
        (mem:SI (plus:DI (reg/f:DI 83 [ _10 ])
                (const_int 14 [0xe])) [5 MEM[(struct fbgc_matrix_object *)_10].column+0 S4 A8])) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (nil))
(insn 204 203 205 19 (set (reg:SI 150)
        (mem:SI (plus:DI (reg/f:DI 83 [ _10 ])
                (const_int 10 [0xa])) [5 MEM[(struct fbgc_matrix_object *)_10].row+0 S4 A8])) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (nil))
(insn 205 204 206 19 (set (reg:SI 151)
        (zero_extend:SI (mem:QI (plus:DI (reg/f:DI 83 [ _10 ])
                    (const_int 9 [0x9])) [0 MEM[(struct fbgc_matrix_object *)_10].sub_type+0 S1 A8]))) "cmodules/fbgc_math.c":85:33 119 {*zero_extendqisi2}
     (nil))
(insn 206 205 207 19 (set (reg:SI 2 cx)
        (const_int 10 [0xa])) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (nil))
(insn 207 206 208 19 (set (reg:SI 1 dx)
        (reg:SI 149)) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (nil))
(insn 208 207 209 19 (set (reg:SI 4 si)
        (reg:SI 150)) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (nil))
(insn 209 208 210 19 (set (reg:SI 5 di)
        (reg:SI 151)) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (nil))
(call_insn 210 209 211 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_matrix_object") [flags 0x41]  <function_decl 0x7f213e3fe100 new_fbgc_matrix_object>) [0 new_fbgc_matrix_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":85:33 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_matrix_object") [flags 0x41]  <function_decl 0x7f213e3fe100 new_fbgc_matrix_object>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 211 210 212 19 (set (reg/v/f:DI 139 [ <retval> ])
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":85:33 66 {*movdi_internal}
     (nil))
(debug_insn 212 211 213 19 (var_location:DI res_m (reg/v/f:DI 139 [ <retval> ])) "cmodules/fbgc_math.c":85:33 -1
     (nil))
(debug_insn 213 212 214 19 (debug_marker) "cmodules/fbgc_math.c":87:4 -1
     (nil))
(insn 214 213 215 19 (set (reg:SI 82 [ prephitmp_7 ])
        (mem:SI (plus:DI (reg/f:DI 83 [ _10 ])
                (const_int 10 [0xa])) [5 MEM[(struct fbgc_matrix_object *)_10].row+0 S4 A8])) "cmodules/fbgc_math.c":87:17 67 {*movsi_internal}
     (nil))
(insn 215 214 216 19 (set (reg:SI 134 [ _139 ])
        (mem:SI (plus:DI (reg/f:DI 83 [ _10 ])
                (const_int 14 [0xe])) [5 MEM[(struct fbgc_matrix_object *)_10].column+0 S4 A8])) "cmodules/fbgc_math.c":87:24 67 {*movsi_internal}
     (nil))
(insn 216 215 217 19 (parallel [
            (set (reg/v:SI 99 [ rc ])
                (mult:SI (reg:SI 82 [ prephitmp_7 ])
                    (reg:SI 134 [ _139 ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":87:11 317 {*mulsi3_1}
     (nil))
(debug_insn 217 216 218 19 (var_location:SI rc (reg/v:SI 99 [ rc ])) "cmodules/fbgc_math.c":87:11 -1
     (nil))
(debug_insn 218 217 219 19 (debug_marker) "cmodules/fbgc_math.c":89:4 -1
     (nil))
(debug_insn 219 218 220 19 (debug_marker) "cmodules/fbgc_math.c":91:4 -1
     (nil))
(debug_insn 220 219 221 19 (debug_marker) "cmodules/fbgc_math.c":91:8 -1
     (nil))
(debug_insn 221 220 222 19 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 222 221 223 19 (debug_marker) "cmodules/fbgc_math.c":91:22 -1
     (nil))
(insn 223 222 224 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 82 [ prephitmp_7 ])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":91:4 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 224 223 337 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 387)
            (pc))) "cmodules/fbgc_math.c":91:4 659 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 387)
;;  succ:       28 [89.0% (guessed)]  count:73239503 (estimated locally)
;;              32 [11.0% (guessed)]  count:9052073 (estimated locally) (FALLTHRU)

;; basic block 20, loop depth 1, count 592574083 (estimated locally), maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       29 [99.8% (guessed)]  count:599636349 (estimated locally)
(code_label 337 224 228 20 93 (nil) [1 uses])
(note 228 337 229 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 229 228 230 20 (parallel [
            (set (reg/f:DI 132 [ pretmp_124 ])
                (plus:DI (reg/f:DI 83 [ _10 ])
                    (const_int 14 [0xe])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (nil))
(insn 230 229 6 20 (parallel [
            (set (reg/f:DI 137 [ pretmp_151 ])
                (plus:DI (reg/v/f:DI 139 [ <retval> ])
                    (const_int 14 [0xe])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (nil))
(insn 6 230 317 20 (set (reg/v:SI 90 [ j ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":92:16 67 {*movsi_internal}
     (nil))
;;  succ:       21 [always]  count:592574083 (estimated locally) (FALLTHRU)

;; basic block 21, loop depth 2, count 5387037060 (estimated locally), maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       20 [always]  count:592574083 (estimated locally) (FALLTHRU)
;;              24 [always]  count:4794462996 (estimated locally) (FALLTHRU)
(code_label 317 6 231 21 92 (nil) [0 uses])
(note 231 317 232 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(debug_insn 232 231 233 21 (var_location:SI j (reg/v:SI 90 [ j ])) -1
     (nil))
(debug_insn 233 232 234 21 (debug_marker) "cmodules/fbgc_math.c":93:6 -1
     (nil))
(insn 234 233 235 21 (parallel [
            (set (reg:SI 152)
                (mult:SI (reg:SI 134 [ _139 ])
                    (reg/v:SI 87 [ i ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":93:23 317 {*mulsi3_1}
     (nil))
(insn 235 234 236 21 (parallel [
            (set (reg/v:SI 101 [ index ])
                (plus:SI (reg:SI 152)
                    (reg/v:SI 90 [ j ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":93:13 190 {*addsi_1}
     (nil))
(debug_insn 236 235 237 21 (var_location:SI index (reg/v:SI 101 [ index ])) "cmodules/fbgc_math.c":93:13 -1
     (nil))
(debug_insn 237 236 238 21 (debug_marker) "cmodules/fbgc_math.c":94:6 -1
     (nil))
(debug_insn 238 237 239 21 (var_location:SI c_index (plus:SI (reg/v:SI 99 [ rc ])
        (reg/v:SI 101 [ index ]))) "cmodules/fbgc_math.c":94:13 -1
     (nil))
(debug_insn 239 238 240 21 (debug_marker) "cmodules/fbgc_math.c":96:6 -1
     (nil))
(insn 240 239 241 21 (set (reg:DI 153)
        (zero_extend:DI (reg/v:SI 101 [ index ]))) "cmodules/fbgc_math.c":96:46 114 {*zero_extendsidi2}
     (nil))
(insn 241 240 242 21 (parallel [
            (set (reg:DI 154)
                (ashift:DI (reg:DI 153)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":96:46 520 {*ashldi3_1}
     (nil))
(insn 242 241 243 21 (parallel [
            (set (reg:DI 105 [ _46 ])
                (plus:DI (reg:DI 154)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":96:46 191 {*adddi_1}
     (nil))
(insn 243 242 244 21 (set (reg:DF 107 [ _48 ])
        (mem:DF (plus:DI (reg/f:DI 132 [ pretmp_124 ])
                (reg:DI 105 [ _46 ])) [2 *_47+0 S8 A64])) "cmodules/fbgc_math.c":96:15 111 {*movdf_internal}
     (nil))
(debug_insn 244 243 245 21 (var_location:DF z$real (reg:DF 107 [ _48 ])) "cmodules/fbgc_math.c":96:13 -1
     (nil))
(debug_insn 245 244 246 21 (debug_marker) "cmodules/fbgc_math.c":97:6 -1
     (nil))
(insn 246 245 247 21 (parallel [
            (set (reg/f:DI 133 [ _135 ])
                (plus:DI (reg/f:DI 137 [ pretmp_151 ])
                    (reg:DI 105 [ _46 ])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (nil))
(insn 247 246 248 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 83 [ _10 ])
                    (const_int 9 [0x9])) [0 MEM[(struct fbgc_matrix_object *)_10].sub_type+0 S1 A8])
            (const_int 5 [0x5]))) "cmodules/fbgc_math.c":97:8 9 {*cmpqi_1}
     (nil))
(jump_insn 248 247 249 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 301)
            (pc))) "cmodules/fbgc_math.c":97:8 659 {*jcc}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 301)
;;  succ:       22 [34.0% (guessed)]  count:1831592620 (estimated locally) (FALLTHRU)
;;              23 [66.0% (guessed)]  count:3555444440 (estimated locally)

;; basic block 22, loop depth 2, count 1831592600 (estimated locally), maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       21 [34.0% (guessed)]  count:1831592620 (estimated locally) (FALLTHRU)
(note 249 248 250 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(debug_insn 250 249 251 22 (debug_marker) "cmodules/fbgc_math.c":98:7 -1
     (nil))
(insn 251 250 252 22 (parallel [
            (set (reg:SI 155 [ c_index ])
                (plus:SI (reg/v:SI 99 [ rc ])
                    (reg/v:SI 101 [ index ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":94:13 190 {*addsi_1}
     (nil))
(insn 252 251 253 22 (set (reg:DI 156)
        (zero_extend:DI (reg:SI 155 [ c_index ]))) "cmodules/fbgc_math.c":98:47 114 {*zero_extendsidi2}
     (nil))
(insn 253 252 254 22 (parallel [
            (set (reg:DI 157)
                (ashift:DI (reg:DI 156)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":98:47 520 {*ashldi3_1}
     (nil))
(insn 254 253 255 22 (parallel [
            (set (reg:DI 111 [ _52 ])
                (plus:DI (reg:DI 157)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":98:47 191 {*adddi_1}
     (nil))
(debug_insn 255 254 256 22 (var_location:DF D#33 (mem:DF (plus:DI (reg/f:DI 132 [ pretmp_124 ])
            (reg:DI 111 [ _52 ])) [2 *_53+0 S8 A64])) "cmodules/fbgc_math.c":98:16 -1
     (nil))
(insn 256 255 257 22 (parallel [
            (set (reg:DI 158)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (nil))
(insn 257 256 258 22 (parallel [
            (set (reg:DI 159)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (nil))
(insn 258 257 259 22 (set (reg:DF 160)
        (mem:DF (plus:DI (reg/f:DI 132 [ pretmp_124 ])
                (reg:DI 111 [ _52 ])) [2 *_53+0 S8 A64])) 111 {*movdf_internal}
     (nil))
(insn 259 258 260 22 (set (reg:DI 4 si)
        (reg:DI 159)) 66 {*movdi_internal}
     (nil))
(insn 260 259 261 22 (set (reg:DI 5 di)
        (reg:DI 158)) 66 {*movdi_internal}
     (nil))
(insn 261 260 262 22 (set (reg:DF 20 xmm0)
        (reg:DF 160)) 111 {*movdf_internal}
     (nil))
(call_insn 262 261 263 22 (call (mem:QI (symbol_ref:DI ("sincos") [flags 0x41]  <function_decl 0x7f213e4ba400 __builtin_sincos>) [0 __builtin_sincos S1 A8])
        (const_int 0 [0])) 666 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sincos") [flags 0x41]  <function_decl 0x7f213e4ba400 __builtin_sincos>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 263 262 264 22 (set (reg:DF 130 [ sincostmp_111 ])
        (mem/c:DF (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2  S8 A64])) 111 {*movdf_internal}
     (nil))
(insn 264 263 265 22 (set (reg:DF 131 [ sincostmp_111+8 ])
        (mem/c:DF (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [2  S8 A64])) 111 {*movdf_internal}
     (nil))
(debug_insn 265 264 266 22 (debug_marker) "cmodules/fbgc_math.c":99:7 -1
     (nil))
(debug_insn 266 265 267 22 (debug_marker:BLK) "cmodules/fbgc_math.c":22:20 -1
     (nil))
(debug_insn 267 266 268 22 (var_location:DF z$imag (debug_expr:DF D#33)) -1
     (nil))
(debug_insn 268 267 269 22 (debug_marker) "cmodules/fbgc_math.c":24:2 -1
     (nil))
(debug_insn 269 268 270 22 (debug_marker) "cmodules/fbgc_math.c":25:2 -1
     (nil))
(insn 270 269 271 22 (set (reg:DF 20 xmm0)
        (reg:DF 107 [ _48 ])) "cmodules/fbgc_math.c":25:13 111 {*movdf_internal}
     (nil))
(call_insn 271 270 272 22 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":25:13 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 272 271 273 22 (set (reg/v:DF 121 [ r ])
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":25:13 111 {*movdf_internal}
     (nil))
(debug_insn 273 272 274 22 (var_location:DF r (reg/v:DF 121 [ r ])) "cmodules/fbgc_math.c":25:13 -1
     (nil))
(debug_insn 274 273 275 22 (debug_marker) "cmodules/fbgc_math.c":26:2 -1
     (nil))
(debug_insn 275 274 276 22 (var_location:DF res$real (mult:DF (reg:DF 130 [ sincostmp_111 ])
        (reg/v:DF 121 [ r ]))) "cmodules/fbgc_math.c":26:11 -1
     (nil))
(debug_insn 276 275 277 22 (debug_marker) "cmodules/fbgc_math.c":27:2 -1
     (nil))
(debug_insn 277 276 278 22 (var_location:DF res$imag (mult:DF (reg:DF 131 [ sincostmp_111+8 ])
        (reg/v:DF 121 [ r ]))) "cmodules/fbgc_math.c":27:11 -1
     (nil))
(debug_insn 278 277 279 22 (debug_marker) "cmodules/fbgc_math.c":28:2 -1
     (nil))
(debug_insn 279 278 280 22 (var_location:DF D#1 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 280 279 281 22 (var_location:DF res$real (debug_expr:DF D#1)) -1
     (nil))
(debug_insn 281 280 282 22 (var_location:DF D#2 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 282 281 283 22 (var_location:DF res$imag (debug_expr:DF D#2)) -1
     (nil))
(debug_insn 283 282 284 22 (var_location:DF r (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":99:36 -1
     (nil))
(debug_insn 284 283 285 22 (var_location:DF z$imag (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":99:36 -1
     (nil))
(debug_insn 285 284 286 22 (debug_marker) "cmodules/fbgc_math.c":100:7 -1
     (nil))
(insn 286 285 287 22 (set (reg:DF 161)
        (mult:DF (reg:DF 130 [ sincostmp_111 ])
            (reg/v:DF 121 [ r ]))) "cmodules/fbgc_math.c":26:14 818 {*fop_df_comm}
     (nil))
(insn 287 286 288 22 (set (mem:DF (reg/f:DI 133 [ _135 ]) [2 MEM[(double *)_135]+0 S8 A64])
        (reg:DF 161)) "cmodules/fbgc_math.c":100:50 111 {*movdf_internal}
     (nil))
(debug_insn 288 287 289 22 (debug_marker) "cmodules/fbgc_math.c":101:7 -1
     (nil))
(insn 289 288 290 22 (set (reg:DF 162)
        (mult:DF (reg:DF 131 [ sincostmp_111+8 ])
            (reg/v:DF 121 [ r ]))) "cmodules/fbgc_math.c":27:14 818 {*fop_df_comm}
     (nil))
(insn 290 289 291 22 (set (mem:DF (plus:DI (reg/f:DI 137 [ pretmp_151 ])
                (reg:DI 111 [ _52 ])) [2 *_58+0 S8 A64])
        (reg:DF 162)) "cmodules/fbgc_math.c":101:52 111 {*movdf_internal}
     (nil))
(debug_insn 291 290 292 22 (debug_marker) "cmodules/fbgc_math.c":92:36 -1
     (nil))
(insn 292 291 293 22 (parallel [
            (set (reg/v:SI 90 [ j ])
                (plus:SI (reg/v:SI 90 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":92:36 190 {*addsi_1}
     (nil))
(debug_insn 293 292 294 22 (var_location:SI j (reg/v:SI 90 [ j ])) -1
     (nil))
(debug_insn 294 293 295 22 (debug_marker) "cmodules/fbgc_math.c":92:23 -1
     (nil))
(insn 295 294 296 22 (set (reg:SI 134 [ _139 ])
        (mem:SI (plus:DI (reg/f:DI 83 [ _10 ])
                (const_int 14 [0xe])) [5 MEM[(struct fbgc_matrix_object *)_10].column+0 S4 A8])) "cmodules/fbgc_math.c":92:26 67 {*movsi_internal}
     (nil))
(insn 296 295 297 22 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 90 [ j ])
            (reg:SI 134 [ _139 ]))) "cmodules/fbgc_math.c":92:5 11 {*cmpsi_1}
     (nil))
(jump_insn 297 296 301 22 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 315)
            (pc))) "cmodules/fbgc_math.c":92:5 659 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 315)
;;  succ:       24 [89.0% (guessed)]  count:1630117415 (estimated locally)
;;              25 [11.0% (guessed)]  count:201475185 (estimated locally) (FALLTHRU)

;; basic block 23, loop depth 2, count 3555444471 (estimated locally), maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       21 [66.0% (guessed)]  count:3555444440 (estimated locally)
(code_label 301 297 302 23 89 (nil) [1 uses])
(note 302 301 303 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(debug_insn 303 302 304 23 (debug_marker) "cmodules/fbgc_math.c":103:11 -1
     (nil))
(insn 304 303 305 23 (set (reg:DF 20 xmm0)
        (reg:DF 107 [ _48 ])) "cmodules/fbgc_math.c":103:57 111 {*movdf_internal}
     (nil))
(call_insn 305 304 306 23 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":103:57 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 306 305 307 23 (set (reg:DF 115 [ _62 ])
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":103:57 111 {*movdf_internal}
     (nil))
(insn 307 306 308 23 (set (mem:DF (reg/f:DI 133 [ _135 ]) [2 MEM[(double *)_135]+0 S8 A64])
        (reg:DF 115 [ _62 ])) "cmodules/fbgc_math.c":103:54 111 {*movdf_internal}
     (nil))
(debug_insn 308 307 309 23 (debug_marker) "cmodules/fbgc_math.c":92:36 -1
     (nil))
(insn 309 308 310 23 (parallel [
            (set (reg/v:SI 90 [ j ])
                (plus:SI (reg/v:SI 90 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":92:36 190 {*addsi_1}
     (nil))
(debug_insn 310 309 311 23 (var_location:SI j (reg/v:SI 90 [ j ])) -1
     (nil))
(debug_insn 311 310 312 23 (debug_marker) "cmodules/fbgc_math.c":92:23 -1
     (nil))
(insn 312 311 313 23 (set (reg:SI 134 [ _139 ])
        (mem:SI (plus:DI (reg/f:DI 83 [ _10 ])
                (const_int 14 [0xe])) [5 MEM[(struct fbgc_matrix_object *)_10].column+0 S4 A8])) "cmodules/fbgc_math.c":92:26 67 {*movsi_internal}
     (nil))
(insn 313 312 314 23 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 134 [ _139 ])
            (reg/v:SI 90 [ j ]))) "cmodules/fbgc_math.c":92:5 11 {*cmpsi_1}
     (nil))
(jump_insn 314 313 315 23 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 320)
            (pc))) "cmodules/fbgc_math.c":92:5 659 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 320)
;;  succ:       24 [89.0% (guessed)]  count:3164345581 (estimated locally) (FALLTHRU)
;;              25 [11.0% (guessed)]  count:391098890 (estimated locally)

;; basic block 24, loop depth 2, count 4794462996 (estimated locally), maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       22 [89.0% (guessed)]  count:1630117415 (estimated locally)
;;              23 [89.0% (guessed)]  count:3164345581 (estimated locally) (FALLTHRU)
(code_label 315 314 316 24 90 (nil) [1 uses])
(note 316 315 320 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
;;  succ:       21 [always]  count:4794462996 (estimated locally) (FALLTHRU)

;; basic block 25, loop depth 1, count 592574075 (estimated locally), maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       23 [11.0% (guessed)]  count:391098890 (estimated locally)
;;              22 [11.0% (guessed)]  count:201475185 (estimated locally) (FALLTHRU)
(code_label 320 316 321 25 91 (nil) [1 uses])
(note 321 320 322 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 322 321 345 25 (set (reg:SI 82 [ prephitmp_7 ])
        (mem:SI (plus:DI (reg/f:DI 83 [ _10 ])
                (const_int 10 [0xa])) [5 MEM[(struct fbgc_matrix_object *)_10].row+0 S4 A8])) 67 {*movsi_internal}
     (nil))
;;  succ:       26 [always]  count:592574075 (estimated locally) (FALLTHRU)

;; basic block 26, loop depth 1, count 592574078 (estimated locally), maybe hot
;; Invalid sum of incoming counts 657757224 (estimated locally), should be 592574078 (estimated locally)
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       25 [always]  count:592574075 (estimated locally) (FALLTHRU)
;;              30 [89.0% (guessed)]  count:65183149 (estimated locally)
(code_label 345 322 323 26 94 (nil) [1 uses])
(note 323 345 324 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(debug_insn 324 323 325 26 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 325 324 326 26 (var_location:SI j (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 326 325 327 26 (debug_marker) "cmodules/fbgc_math.c":91:32 -1
     (nil))
(insn 327 326 328 26 (parallel [
            (set (reg/v:SI 87 [ i ])
                (plus:SI (reg/v:SI 87 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":91:32 190 {*addsi_1}
     (nil))
(debug_insn 328 327 329 26 (var_location:SI i (reg/v:SI 87 [ i ])) -1
     (nil))
(debug_insn 329 328 330 26 (debug_marker) "cmodules/fbgc_math.c":91:22 -1
     (nil))
(insn 330 329 331 26 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 87 [ i ])
            (reg:SI 82 [ prephitmp_7 ]))) "cmodules/fbgc_math.c":91:4 11 {*cmpsi_1}
     (nil))
(jump_insn 331 330 383 26 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 375)
            (pc))) "cmodules/fbgc_math.c":91:4 659 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 375)
;;  succ:       27 [89.0% (guessed)]  count:527390930 (estimated locally) (FALLTHRU)
;;              32 [11.0% (guessed)]  count:65183148 (estimated locally)

;; basic block 27, loop depth 1, count 527390930 (estimated locally), maybe hot
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       26 [89.0% (guessed)]  count:527390930 (estimated locally) (FALLTHRU)
(note 383 331 387 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
;;  succ:       29 [always]  count:527390930 (estimated locally) (FALLTHRU)

;; basic block 28, loop depth 0, count 73239503 (estimated locally), maybe hot
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       19 [89.0% (guessed)]  count:73239503 (estimated locally)
(code_label 387 383 386 28 96 (nil) [1 uses])
(note 386 387 7 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 7 386 332 28 (set (reg/v:SI 87 [ i ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":91:15 67 {*movsi_internal}
     (nil))
;;  succ:       29 [always]  count:73239503 (estimated locally) (FALLTHRU)

;; basic block 29, loop depth 1, count 600630427 (estimated locally), maybe hot
;;  prev block 28, next block 30, flags: (RTL)
;;  pred:       28 [always]  count:73239503 (estimated locally) (FALLTHRU)
;;              27 [always]  count:527390930 (estimated locally) (FALLTHRU)
(code_label 332 7 333 29 87 (nil) [0 uses])
(note 333 332 334 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(debug_insn 334 333 335 29 (var_location:SI i (reg/v:SI 87 [ i ])) -1
     (nil))
(debug_insn 335 334 336 29 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(debug_insn 336 335 338 29 (debug_marker) "cmodules/fbgc_math.c":92:23 -1
     (nil))
(insn 338 336 339 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 134 [ _139 ])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":92:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 339 338 340 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 337)
            (pc))) "cmodules/fbgc_math.c":92:5 659 {*jcc}
     (int_list:REG_BR_PROB 1071964724 (nil))
 -> 337)
;;  succ:       20 [99.8% (guessed)]  count:599636349 (estimated locally)
;;              30 [0.2% (guessed)]  count:994078 (estimated locally) (FALLTHRU)

;; basic block 30, loop depth 1, count 73239493 (estimated locally), maybe hot
;; Invalid sum of incoming counts 994078 (estimated locally), should be 73239493 (estimated locally)
;;  prev block 29, next block 31, flags: (RTL)
;;  pred:       29 [0.2% (guessed)]  count:994078 (estimated locally) (FALLTHRU)
(note 340 339 341 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(debug_insn 341 340 342 30 (debug_marker) "cmodules/fbgc_math.c":91:32 -1
     (nil))
(insn 342 341 343 30 (parallel [
            (set (reg/v:SI 87 [ i ])
                (plus:SI (reg/v:SI 87 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":91:32 190 {*addsi_1}
     (nil))
(debug_insn 343 342 344 30 (var_location:SI i (reg/v:SI 87 [ i ])) -1
     (nil))
(debug_insn 344 343 346 30 (debug_marker) "cmodules/fbgc_math.c":91:22 -1
     (nil))
(insn 346 344 347 30 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 82 [ prephitmp_7 ])
            (reg/v:SI 87 [ i ]))) "cmodules/fbgc_math.c":91:4 11 {*cmpsi_1}
     (nil))
(jump_insn 347 346 382 30 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 345)
            (pc))) "cmodules/fbgc_math.c":91:4 659 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 345)
;;  succ:       26 [89.0% (guessed)]  count:65183149 (estimated locally)
;;              32 [11.0% (guessed)]  count:8056344 (estimated locally) (FALLTHRU)

;; basic block 31, loop depth 0, count 662283960 (estimated locally), maybe hot
;;  prev block 30, next block 32, flags: (RTL)
;;  pred:       2 [61.7% (guessed)]  count:662283960 (estimated locally)
(code_label 382 347 381 31 95 (nil) [1 uses])
(note 381 382 11 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 11 381 355 31 (set (reg/v/f:DI 139 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":123:1 66 {*movdi_internal}
     (nil))
(debug_insn 355 11 356 31 (var_location:DI arg (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":123:1 -1
     (nil))
(debug_insn 356 355 357 31 (var_location:SI argc (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":123:1 -1
     (nil))
(debug_insn 357 356 358 31 (var_location:DI fun (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":123:1 -1
     (nil))
(debug_insn 358 357 359 31 (var_location:DI zfun (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":123:1 -1
     (nil))
(debug_insn 359 358 360 31 (var_location:DF dbarg (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":123:1 -1
     (nil))
(debug_insn 360 359 361 31 (var_location:SI sz (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":123:1 -1
     (nil))
(debug_insn 361 360 362 31 (var_location:DI res_tp (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":123:1 -1
     (nil))
(debug_insn 362 361 363 31 (var_location:DI tp_content (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":123:1 -1
     (nil))
(debug_insn 363 362 364 31 (var_location:SI i (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":123:1 -1
     (nil))
(debug_insn 364 363 365 31 (var_location:DI result (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":123:1 -1
     (nil))
(debug_insn 365 364 366 31 (var_location:DI res_m (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":123:1 -1
     (nil))
(debug_insn 366 365 367 31 (var_location:SI rc (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":123:1 -1
     (nil))
(debug_insn 367 366 368 31 (var_location:SI i (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":123:1 -1
     (nil))
(debug_insn 368 367 369 31 (var_location:SI j (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":123:1 -1
     (nil))
(debug_insn 369 368 370 31 (var_location:SI index (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":123:1 -1
     (nil))
(debug_insn 370 369 371 31 (var_location:SI c_index (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":123:1 -1
     (nil))
(debug_insn 371 370 372 31 (var_location:DI arg (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 372 371 375 31 (var_location:SI argc (clobber (const_int 0 [0]))) -1
     (nil))
;;  succ:       32 [always]  count:662283960 (estimated locally) (FALLTHRU)

;; basic block 32, loop depth 0, count 908893201 (estimated locally), maybe hot
;; Invalid sum of incoming counts 1274633540 (estimated locally), should be 908893201 (estimated locally)
;;  prev block 31, next block 1, flags: (RTL)
;;  pred:       31 [always]  count:662283960 (estimated locally) (FALLTHRU)
;;              7 [always]  count:228587706 (estimated locally) (FALLTHRU)
;;              9 [always]  count:82291578 (estimated locally) (FALLTHRU)
;;              11 [always]  count:137152624 (estimated locally) (FALLTHRU)
;;              14 [11.0% (guessed)]  count:9052073 (estimated locally)
;;              18 [11.0% (guessed)]  count:72974034 (estimated locally) (FALLTHRU)
;;              19 [11.0% (guessed)]  count:9052073 (estimated locally) (FALLTHRU)
;;              26 [11.0% (guessed)]  count:65183148 (estimated locally)
;;              30 [11.0% (guessed)]  count:8056344 (estimated locally) (FALLTHRU)
(code_label 375 372 378 32 77 (nil) [2 uses])
(note 378 375 376 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 376 378 377 32 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 139 [ <retval> ])) "cmodules/fbgc_math.c":123:1 66 {*movdi_internal}
     (nil))
(insn 377 376 0 32 (use (reg/i:DI 0 ax)) "cmodules/fbgc_math.c":123:1 -1
     (nil))
;;  succ:       EXIT [always]  count:908893201 (estimated locally) (FALLTHRU)


;; Function fbgc_cos (fbgc_cos, funcdef_no=60, decl_uid=5693, cgraph_uid=61, symbol_order=64)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

; Splitting reg 126 -> 157 158
; Splitting reg 127 -> 159 160
; Splitting reg 128 -> 161 162
; Splitting reg 134 -> 163 164
; Splitting reg 135 -> 165 166
; Splitting reg 150 -> 167 168
; Splitting reg 151 -> 169 170
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 12 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 12 3 2 (set (reg/v/f:DI 130 [ arg ])
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_math.c":121:1 66 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 131 [ argc ])
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_math.c":121:1 67 {*movsi_internal}
     (nil))
(note 4 3 14 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 14 4 15 2 (debug_marker) "cmodules/fbgc_math.c":121:1 -1
     (nil))
(insn 15 14 16 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 131 [ argc ])
            (const_int 1 [0x1]))) "cmodules/fbgc_math.c":121:1 11 {*cmpsi_1}
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 343)
            (pc))) "cmodules/fbgc_math.c":121:1 659 {*jcc}
     (int_list:REG_BR_PROB 662283964 (nil))
 -> 343)
;;  succ:       3 [38.3% (guessed)]  count:411457864 (estimated locally) (FALLTHRU)
;;              32 [61.7% (guessed)]  count:662283960 (estimated locally)

;; basic block 3, loop depth 0, count 411457868 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [38.3% (guessed)]  count:411457864 (estimated locally) (FALLTHRU)
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 18 17 19 3 (var_location:SI D#14 (const_int 1 [0x1])) -1
     (nil))
(debug_insn 19 18 20 3 (var_location:DI arg (reg/v/f:DI 130 [ arg ])) -1
     (nil))
(debug_insn 20 19 21 3 (debug_marker:BLK) "cmodules/fbgc_math.c":121:1 -1
     (nil))
(debug_insn 21 20 22 3 (var_location:SI D#15 (debug_expr:SI D#14)) -1
     (nil))
(debug_insn 22 21 23 3 (var_location:SI argc (debug_expr:SI D#15)) -1
     (nil))
(debug_insn 23 22 24 3 (var_location:DI arg (reg/v/f:DI 130 [ arg ])) -1
     (nil))
(debug_insn 24 23 25 3 (var_location:SI argc (const_int 1 [0x1])) -1
     (nil))
(debug_insn 25 24 26 3 (var_location:DI fun (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7f213e47d900 cos>)) -1
     (nil))
(debug_insn 26 25 27 3 (var_location:DI zfun (symbol_ref:DI ("c_cos") [flags 0x3]  <function_decl 0x7f213dfa5e00 c_cos>)) -1
     (nil))
(debug_insn 27 26 28 3 (debug_marker:BLK) "cmodules/fbgc_math.c":50:22 -1
     (nil))
(debug_insn 28 27 29 3 (debug_marker) "cmodules/fbgc_math.c":53:2 -1
     (nil))
(insn 29 28 30 3 (set (reg/f:DI 82 [ _10 ])
        (mem/f:DI (reg/v/f:DI 130 [ arg ]) [3 *arg_5(D)+0 S8 A64])) "cmodules/fbgc_math.c":53:12 66 {*movdi_internal}
     (nil))
(insn 30 29 31 3 (set (reg:QI 83 [ _11 ])
        (mem:QI (reg/f:DI 82 [ _10 ]) [0 _10->type+0 S1 A8])) "cmodules/fbgc_math.c":53:15 69 {*movqi_internal}
     (nil))
(insn 31 30 32 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _11 ])
            (const_int 7 [0x7]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (nil))
(jump_insn 32 31 33 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 174)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (int_list:REG_BR_PROB 214748374 (nil))
 -> 174)
;;  succ:       4 [80.0% (adjusted)]  count:329166293 (estimated locally) (FALLTHRU)
;;              19 [20.0% (adjusted)]  count:82291575 (estimated locally)

;; basic block 4, loop depth 0, count 411457868 (estimated locally), maybe hot
;; Invalid sum of incoming counts 329166293 (estimated locally), should be 411457868 (estimated locally)
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [80.0% (adjusted)]  count:329166293 (estimated locally) (FALLTHRU)
(note 33 32 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 36 33 37 4 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 83 [ _11 ])
            (const_int 7 [0x7]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (nil))
(jump_insn 37 36 38 4 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (int_list:REG_BR_PROB 402653190 (nil))
 -> 58)
;;  succ:       5 [62.5% (adjusted)]  count:257161168 (estimated locally) (FALLTHRU)
;;              10 [37.5% (adjusted)]  count:154296701 (estimated locally)

;; basic block 5, loop depth 0, count 411457868 (estimated locally), maybe hot
;; Invalid sum of incoming counts 257161168 (estimated locally), should be 411457868 (estimated locally)
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [62.5% (adjusted)]  count:257161168 (estimated locally) (FALLTHRU)
(note 38 37 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 41 38 42 5 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 83 [ _11 ])
            (const_int 4 [0x4]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (nil))
(jump_insn 42 41 43 5 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (int_list:REG_BR_PROB 536870926 (nil))
 -> 51)
;;  succ:       6 [50.0% (adjusted)]  count:205728931 (estimated locally) (FALLTHRU)
;;              8 [50.0% (adjusted)]  count:205728937 (estimated locally)

;; basic block 6, loop depth 0, count 411457868 (estimated locally), maybe hot
;; Invalid sum of incoming counts 205728931 (estimated locally), should be 411457868 (estimated locally)
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [50.0% (adjusted)]  count:205728931 (estimated locally) (FALLTHRU)
(note 43 42 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 46 43 47 6 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 83 [ _11 ])
            (const_int 2 [0x2]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (nil))
(jump_insn 47 46 50 6 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (int_list:REG_BR_PROB 477218590 (nil))
 -> 65)
;;  succ:       7 [55.6% (adjusted)]  count:228587706 (estimated locally) (FALLTHRU)
;;              12 [44.4% (adjusted)]  count:182870162 (estimated locally)

;; basic block 7, loop depth 0, count 228587706 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [55.6% (adjusted)]  count:228587706 (estimated locally) (FALLTHRU)
(note 50 47 10 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 10 50 51 7 (set (reg/v/f:DI 129 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":53:2 66 {*movdi_internal}
     (nil))
;;  succ:       33 [always]  count:228587706 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 0, count 411457868 (estimated locally), maybe hot
;; Invalid sum of incoming counts 205728937 (estimated locally), should be 411457868 (estimated locally)
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       5 [50.0% (adjusted)]  count:205728937 (estimated locally)
(code_label 51 10 52 8 111 (nil) [1 uses])
(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _11 ])
            (const_int 5 [0x5]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (nil))
(jump_insn 54 53 57 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (int_list:REG_BR_PROB 858993454 (nil))
 -> 80)
;;  succ:       9 [20.0% (adjusted)]  count:82291578 (estimated locally) (FALLTHRU)
;;              13 [80.0% (adjusted)]  count:329166290 (estimated locally)

;; basic block 9, loop depth 0, count 82291578 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [20.0% (adjusted)]  count:82291578 (estimated locally) (FALLTHRU)
(note 57 54 9 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 9 57 58 9 (set (reg/v/f:DI 129 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":53:2 66 {*movdi_internal}
     (nil))
;;  succ:       33 [always]  count:82291578 (estimated locally) (FALLTHRU)

;; basic block 10, loop depth 0, count 411457868 (estimated locally), maybe hot
;; Invalid sum of incoming counts 154296701 (estimated locally), should be 411457868 (estimated locally)
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       4 [37.5% (adjusted)]  count:154296701 (estimated locally)
(code_label 58 9 59 10 110 (nil) [1 uses])
(note 59 58 60 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _11 ])
            (const_int 8 [0x8]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (nil))
(jump_insn 61 60 64 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (int_list:REG_BR_PROB 715827886 (nil))
 -> 109)
;;  succ:       11 [33.3% (adjusted)]  count:137152624 (estimated locally) (FALLTHRU)
;;              14 [66.7% (adjusted)]  count:274305244 (estimated locally)

;; basic block 11, loop depth 0, count 137152624 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [33.3% (adjusted)]  count:137152624 (estimated locally) (FALLTHRU)
(note 64 61 8 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 8 64 65 11 (set (reg/v/f:DI 129 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":53:2 66 {*movdi_internal}
     (nil))
;;  succ:       33 [always]  count:137152624 (estimated locally) (FALLTHRU)

;; basic block 12, loop depth 0, count 82291576 (estimated locally), maybe hot
;; Invalid sum of incoming counts 182870162 (estimated locally), should be 82291576 (estimated locally)
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       6 [44.4% (adjusted)]  count:182870162 (estimated locally)
(code_label 65 8 66 12 112 (nil) [1 uses])
(note 66 65 67 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 67 66 68 12 (debug_marker) "cmodules/fbgc_math.c":58:4 -1
     (nil))
(insn 68 67 69 12 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _10 ])) "cmodules/fbgc_math.c":58:19 66 {*movdi_internal}
     (nil))
(call_insn 69 68 70 12 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f213e3db700 convert_fbgc_object_to_double>) [0 convert_fbgc_object_to_double S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":58:19 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f213e3db700 convert_fbgc_object_to_double>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 70 69 71 12 (set (reg/v:DF 84 [ dbarg ])
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":58:19 111 {*movdf_internal}
     (nil))
(debug_insn 71 70 72 12 (var_location:DF dbarg (reg/v:DF 84 [ dbarg ])) "cmodules/fbgc_math.c":58:19 -1
     (nil))
(debug_insn 72 71 73 12 (debug_marker) "cmodules/fbgc_math.c":59:4 -1
     (nil))
(insn 73 72 74 12 (set (reg:DF 20 xmm0)
        (reg/v:DF 84 [ dbarg ])) "cmodules/fbgc_math.c":59:11 111 {*movdf_internal}
     (nil))
(call_insn/u 74 73 75 12 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7f213e47d900 cos>) [0 __builtin_cos S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":59:11 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7f213e47d900 cos>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 75 74 76 12 (set (reg:DF 85 [ _13 ])
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":59:11 111 {*movdf_internal}
     (nil))
(insn 76 75 77 12 (set (reg:DF 20 xmm0)
        (reg:DF 85 [ _13 ])) "cmodules/fbgc_math.c":59:11 111 {*movdf_internal}
     (nil))
(call_insn/j 77 76 80 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f213e3e6d00 new_fbgc_double_object>) [0 new_fbgc_double_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":59:11 681 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f213e3e6d00 new_fbgc_double_object>)
        (nil))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
;;  succ:       EXIT [always]  count:82291576 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 13, loop depth 0, count 82291576 (estimated locally), maybe hot
;; Invalid sum of incoming counts 329166290 (estimated locally), should be 82291576 (estimated locally)
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       8 [80.0% (adjusted)]  count:329166290 (estimated locally)
(code_label 80 77 81 13 113 (nil) [1 uses])
(note 81 80 82 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 82 81 83 13 (debug_marker) "cmodules/fbgc_math.c":63:4 -1
     (nil))
(insn 83 82 84 13 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _10 ])) "cmodules/fbgc_math.c":63:27 66 {*movdi_internal}
     (nil))
(call_insn 84 83 85 13 (set (parallel:TI [
                (expr_list:REG_DEP_TRUE (reg:DF 20 xmm0)
                    (const_int 0 [0]))
                (expr_list:REG_DEP_TRUE (reg:DF 21 xmm1)
                    (const_int 8 [0x8]))
            ])
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_complex") [flags 0x41]  <function_decl 0x7f213e3db800 convert_fbgc_object_to_complex>) [0 convert_fbgc_object_to_complex S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":63:27 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_complex") [flags 0x41]  <function_decl 0x7f213e3db800 convert_fbgc_object_to_complex>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 85 84 86 13 (set (reg:DF 132)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":63:27 111 {*movdf_internal}
     (nil))
(insn 86 85 349 13 (set (reg:DF 133)
        (reg:DF 21 xmm1)) "cmodules/fbgc_math.c":63:27 111 {*movdf_internal}
     (nil))
(insn 349 86 350 13 (set (reg:DI 157 [ z ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":63:27 66 {*movdi_internal}
     (nil))
(insn 350 349 88 13 (set (reg:DI 158 [ z+8 ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":63:27 66 {*movdi_internal}
     (nil))
(insn 88 350 89 13 (set (subreg:DF (reg:DI 157 [ z ]) 0)
        (reg:DF 132)) "cmodules/fbgc_math.c":63:27 111 {*movdf_internal}
     (nil))
(insn 89 88 90 13 (set (subreg:DF (reg:DI 158 [ z+8 ]) 0)
        (reg:DF 133)) "cmodules/fbgc_math.c":63:27 111 {*movdf_internal}
     (nil))
(debug_insn 90 89 351 13 (debug_marker) "cmodules/fbgc_math.c":64:4 -1
     (nil))
(insn 351 90 352 13 (set (reg:DI 163)
        (reg:DI 157 [ z ])) "cmodules/fbgc_math.c":64:9 66 {*movdi_internal}
     (nil))
(insn 352 351 353 13 (set (reg:DI 164 [+8 ])
        (reg:DI 158 [ z+8 ])) "cmodules/fbgc_math.c":64:9 66 {*movdi_internal}
     (nil))
(insn 353 352 354 13 (set (reg:DI 165)
        (reg:DI 157 [ z ])) "cmodules/fbgc_math.c":64:9 66 {*movdi_internal}
     (nil))
(insn 354 353 93 13 (set (reg:DI 166 [+8 ])
        (reg:DI 158 [ z+8 ])) "cmodules/fbgc_math.c":64:9 66 {*movdi_internal}
     (nil))
(insn 93 354 94 13 (set (reg:DF 136)
        (subreg:DF (reg:DI 163) 0)) "cmodules/fbgc_math.c":64:9 111 {*movdf_internal}
     (nil))
(insn 94 93 95 13 (set (reg:DF 137)
        (subreg:DF (reg:DI 166 [+8 ]) 0)) "cmodules/fbgc_math.c":64:9 111 {*movdf_internal}
     (nil))
(insn 95 94 96 13 (set (reg:DF 20 xmm0)
        (reg:DF 136)) "cmodules/fbgc_math.c":64:9 111 {*movdf_internal}
     (nil))
(insn 96 95 97 13 (set (reg:DF 21 xmm1)
        (reg:DF 137)) "cmodules/fbgc_math.c":64:9 111 {*movdf_internal}
     (nil))
(call_insn 97 96 98 13 (set (parallel:TI [
                (expr_list:REG_DEP_TRUE (reg:DF 20 xmm0)
                    (const_int 0 [0]))
                (expr_list:REG_DEP_TRUE (reg:DF 21 xmm1)
                    (const_int 8 [0x8]))
            ])
        (call (mem:QI (symbol_ref:DI ("c_cos") [flags 0x3]  <function_decl 0x7f213dfa5e00 c_cos>) [0 c_cos S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":64:9 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("c_cos") [flags 0x3]  <function_decl 0x7f213dfa5e00 c_cos>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:DF 21 xmm1))
        (expr_list (use (reg:DF 20 xmm0))
            (nil))))
(insn 98 97 99 13 (set (reg:DF 138)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":64:9 111 {*movdf_internal}
     (nil))
(insn 99 98 355 13 (set (reg:DF 139)
        (reg:DF 21 xmm1)) "cmodules/fbgc_math.c":64:9 111 {*movdf_internal}
     (nil))
(insn 355 99 356 13 (set (reg:DI 157 [ z ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":64:9 66 {*movdi_internal}
     (nil))
(insn 356 355 101 13 (set (reg:DI 158 [ z+8 ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":64:9 66 {*movdi_internal}
     (nil))
(insn 101 356 102 13 (set (subreg:DF (reg:DI 157 [ z ]) 0)
        (reg:DF 138)) "cmodules/fbgc_math.c":64:9 111 {*movdf_internal}
     (nil))
(insn 102 101 103 13 (set (subreg:DF (reg:DI 158 [ z+8 ]) 0)
        (reg:DF 139)) "cmodules/fbgc_math.c":64:9 111 {*movdf_internal}
     (nil))
(debug_insn 103 102 104 13 (debug_marker) "cmodules/fbgc_math.c":65:4 -1
     (nil))
(insn 104 103 105 13 (set (reg:DF 21 xmm1)
        (subreg:DF (reg:DI 158 [ z+8 ]) 0)) "cmodules/fbgc_math.c":65:11 111 {*movdf_internal}
     (nil))
(insn 105 104 106 13 (set (reg:DF 20 xmm0)
        (subreg:DF (reg:DI 157 [ z ]) 0)) "cmodules/fbgc_math.c":65:11 111 {*movdf_internal}
     (nil))
(call_insn/j 106 105 109 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_complex_object") [flags 0x41]  <function_decl 0x7f213e3f0300 new_fbgc_complex_object>) [0 new_fbgc_complex_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":65:11 681 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_complex_object") [flags 0x41]  <function_decl 0x7f213e3f0300 new_fbgc_complex_object>)
        (nil))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (expr_list:DF (use (reg:DF 21 xmm1))
            (nil))))
;;  succ:       EXIT [always]  count:82291576 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 14, loop depth 0, count 82291576 (estimated locally), maybe hot
;; Invalid sum of incoming counts 274305244 (estimated locally), should be 82291576 (estimated locally)
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       10 [66.7% (adjusted)]  count:274305244 (estimated locally)
(code_label 109 106 110 14 114 (nil) [1 uses])
(note 110 109 111 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 111 110 112 14 (debug_marker) "cmodules/fbgc_math.c":69:4 -1
     (nil))
(insn 112 111 113 14 (set (reg/v:SI 88 [ sz ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _10 ])
                (const_int 13 [0xd])) [5 MEM[(struct fbgc_tuple_object *)_10].size+0 S4 A8])) "cmodules/fbgc_math.c":69:11 67 {*movsi_internal}
     (nil))
(debug_insn 113 112 114 14 (var_location:SI sz (reg/v:SI 88 [ sz ])) "cmodules/fbgc_math.c":69:11 -1
     (nil))
(debug_insn 114 113 115 14 (debug_marker) "cmodules/fbgc_math.c":70:4 -1
     (nil))
(insn 115 114 116 14 (set (reg:SI 5 di)
        (reg/v:SI 88 [ sz ])) "cmodules/fbgc_math.c":70:34 67 {*movsi_internal}
     (nil))
(call_insn 116 115 117 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f213e3fec00 new_fbgc_tuple_object>) [0 new_fbgc_tuple_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":70:34 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f213e3fec00 new_fbgc_tuple_object>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 117 116 118 14 (set (reg/v/f:DI 129 [ <retval> ])
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":70:34 66 {*movdi_internal}
     (nil))
(debug_insn 118 117 119 14 (var_location:DI res_tp (reg/v/f:DI 129 [ <retval> ])) "cmodules/fbgc_math.c":70:34 -1
     (nil))
(debug_insn 119 118 120 14 (debug_marker) "cmodules/fbgc_math.c":71:4 -1
     (nil))
(insn 120 119 121 14 (set (mem:SI (plus:DI (reg/v/f:DI 129 [ <retval> ])
                (const_int 13 [0xd])) [5 MEM[(struct fbgc_tuple_object *)res_tp_19].size+0 S4 A8])
        (reg/v:SI 88 [ sz ])) "cmodules/fbgc_math.c":71:35 67 {*movsi_internal}
     (nil))
(debug_insn 121 120 122 14 (debug_marker) "cmodules/fbgc_math.c":72:4 -1
     (nil))
(insn 122 121 123 14 (set (reg/f:DI 89 [ _20 ])
        (mem/f:DI (reg/v/f:DI 130 [ arg ]) [3 *arg_5(D)+0 S8 A64])) "cmodules/fbgc_math.c":72:39 66 {*movdi_internal}
     (nil))
(debug_insn 123 122 124 14 (var_location:DI D#38 (plus:DI (reg/f:DI 89 [ _20 ])
        (const_int 17 [0x11]))) "cmodules/fbgc_math.c":72:26 -1
     (nil))
(debug_insn 124 123 125 14 (var_location:DI tp_content (debug_expr:DI D#38)) "cmodules/fbgc_math.c":72:26 -1
     (nil))
(debug_insn 125 124 126 14 (debug_marker) "cmodules/fbgc_math.c":72:67 -1
     (nil))
(debug_insn 126 125 127 14 (debug_marker) "cmodules/fbgc_math.c":74:4 -1
     (nil))
(debug_insn 127 126 128 14 (debug_marker) "cmodules/fbgc_math.c":74:8 -1
     (nil))
(debug_insn 128 127 129 14 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 129 128 130 14 (debug_marker) "cmodules/fbgc_math.c":74:22 -1
     (nil))
(insn 130 129 131 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 88 [ sz ])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":74:4 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 131 130 132 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 336)
            (pc))) "cmodules/fbgc_math.c":74:4 659 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 336)
;;  succ:       15 [89.0% (guessed)]  count:73239503 (estimated locally) (FALLTHRU)
;;              33 [11.0% (guessed)]  count:9052073 (estimated locally)

;; basic block 15, loop depth 0, count 73239503 (estimated locally), maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [89.0% (guessed)]  count:73239503 (estimated locally) (FALLTHRU)
(note 132 131 133 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 5 15 (parallel [
            (set (reg:DI 124 [ ivtmp.110 ])
                (plus:DI (reg/f:DI 89 [ _20 ])
                    (const_int 17 [0x11])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (nil))
(insn 5 133 168 15 (set (reg/v:SI 94 [ i ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":74:15 67 {*movsi_internal}
     (nil))
;;  succ:       16 [always]  count:73239503 (estimated locally) (FALLTHRU)

;; basic block 16, loop depth 1, count 663665780 (estimated locally), maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       15 [always]  count:73239503 (estimated locally) (FALLTHRU)
;;              18 [89.0% (guessed)]  count:590426281 (estimated locally) (DFS_BACK)
(code_label 168 5 134 16 116 (nil) [1 uses])
(note 134 168 135 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(debug_insn 135 134 136 16 (var_location:SI i (reg/v:SI 94 [ i ])) -1
     (nil))
(debug_insn 136 135 137 16 (debug_marker) "cmodules/fbgc_math.c":76:5 -1
     (nil))
(insn 137 136 138 16 (set (reg:DI 2 cx)
        (symbol_ref:DI ("c_cos") [flags 0x3]  <function_decl 0x7f213dfa5e00 c_cos>)) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (nil))
(insn 138 137 139 16 (set (reg:DI 140)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7f213e47d900 cos>)
                    ] UNSPEC_GOTPCREL)) [11  S8 A8])) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (nil))
(insn 139 138 140 16 (set (reg:DI 1 dx)
        (reg:DI 140)) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7f213e47d900 cos>)
        (nil)))
(insn 140 139 141 16 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "cmodules/fbgc_math.c":76:35 67 {*movsi_internal}
     (nil))
(insn 141 140 142 16 (set (reg:DI 5 di)
        (reg:DI 124 [ ivtmp.110 ])) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (nil))
(call_insn 142 141 143 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("one_arg_math") [flags 0x3]  <function_decl 0x7f213dfac000 one_arg_math>) [0 one_arg_math S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":76:35 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("one_arg_math") [flags 0x3]  <function_decl 0x7f213dfac000 one_arg_math>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 143 142 144 16 (set (reg/v/f:DI 92 [ result ])
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (nil))
(debug_insn 144 143 145 16 (var_location:DI result (reg/v/f:DI 92 [ result ])) "cmodules/fbgc_math.c":76:35 -1
     (nil))
(debug_insn 145 144 146 16 (debug_marker) "cmodules/fbgc_math.c":77:5 -1
     (nil))
(insn 146 145 147 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 92 [ result ])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":77:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 147 146 148 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 156)
            (pc))) "cmodules/fbgc_math.c":77:5 659 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 156)
;;  succ:       18 [100.0% (guessed)]  count:663400314 (estimated locally)
;;              17 [0.0% (guessed)]  count:265466 (estimated locally) (FALLTHRU)

;; basic block 17, loop depth 0, count 265465 (estimated locally)
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       16 [0.0% (guessed)]  count:265466 (estimated locally) (FALLTHRU)
(note 148 147 149 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(debug_insn 149 148 150 17 (debug_marker) "cmodules/fbgc_math.c":77:5 -1
     (nil))
(insn 150 149 151 17 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.5776") [flags 0x2]  <var_decl 0x7f213dfa6990 __PRETTY_FUNCTION__>)) "cmodules/fbgc_math.c":77:5 66 {*movdi_internal}
     (nil))
(insn 151 150 152 17 (set (reg:SI 1 dx)
        (const_int 77 [0x4d])) "cmodules/fbgc_math.c":77:5 67 {*movsi_internal}
     (nil))
(insn 152 151 153 17 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f213e0b5900 *.LC9>)) "cmodules/fbgc_math.c":77:5 66 {*movdi_internal}
     (nil))
(insn 153 152 154 17 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f213e0b5990 *.LC10>)) "cmodules/fbgc_math.c":77:5 66 {*movdi_internal}
     (nil))
(call_insn 154 153 156 17 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f213e2a1c00 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_math.c":77:5 666 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f213e2a1c00 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 18, loop depth 1, count 663400315 (estimated locally), maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       16 [100.0% (guessed)]  count:663400314 (estimated locally)
(code_label 156 154 157 18 115 (nil) [1 uses])
(note 157 156 158 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(debug_insn 158 157 159 18 (debug_marker) "cmodules/fbgc_math.c":78:5 -1
     (nil))
(insn 159 158 160 18 (set (reg:SI 1 dx)
        (reg/v:SI 94 [ i ])) "cmodules/fbgc_math.c":78:5 67 {*movsi_internal}
     (nil))
(insn 160 159 161 18 (set (reg:DI 4 si)
        (reg/v/f:DI 92 [ result ])) "cmodules/fbgc_math.c":78:5 66 {*movdi_internal}
     (nil))
(insn 161 160 162 18 (set (reg:DI 5 di)
        (reg/v/f:DI 129 [ <retval> ])) "cmodules/fbgc_math.c":78:5 66 {*movdi_internal}
     (nil))
(call_insn 162 161 163 18 (call (mem:QI (symbol_ref:DI ("set_object_in_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f213e3fee00 set_object_in_fbgc_tuple_object>) [0 set_object_in_fbgc_tuple_object S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_math.c":78:5 666 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("set_object_in_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f213e3fee00 set_object_in_fbgc_tuple_object>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(debug_insn 163 162 164 18 (debug_marker) "cmodules/fbgc_math.c":74:31 -1
     (nil))
(insn 164 163 165 18 (parallel [
            (set (reg/v:SI 94 [ i ])
                (plus:SI (reg/v:SI 94 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":74:31 190 {*addsi_1}
     (nil))
(debug_insn 165 164 166 18 (var_location:SI i (reg/v:SI 94 [ i ])) -1
     (nil))
(debug_insn 166 165 167 18 (debug_marker) "cmodules/fbgc_math.c":74:22 -1
     (nil))
(insn 167 166 169 18 (parallel [
            (set (reg:DI 124 [ ivtmp.110 ])
                (plus:DI (reg:DI 124 [ ivtmp.110 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (nil))
(insn 169 167 170 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 88 [ sz ])
            (reg/v:SI 94 [ i ]))) "cmodules/fbgc_math.c":74:4 11 {*cmpsi_1}
     (nil))
(jump_insn 170 169 174 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 168)
            (pc))) "cmodules/fbgc_math.c":74:4 659 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 168)
;;  succ:       16 [89.0% (guessed)]  count:590426281 (estimated locally) (DFS_BACK)
;;              33 [11.0% (guessed)]  count:72974034 (estimated locally) (FALLTHRU)

;; basic block 19, loop depth 0, count 82291576 (estimated locally), maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       3 [20.0% (adjusted)]  count:82291575 (estimated locally)
(code_label 174 170 175 19 109 (nil) [1 uses])
(note 175 174 176 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(debug_insn 176 175 177 19 (debug_marker) "cmodules/fbgc_math.c":84:4 -1
     (nil))
(debug_insn 177 176 178 19 (var_location:DI m (reg/f:DI 82 [ _10 ])) "cmodules/fbgc_math.c":84:32 -1
     (nil))
(debug_insn 178 177 179 19 (debug_marker) "cmodules/fbgc_math.c":85:4 -1
     (nil))
(insn 179 178 180 19 (set (reg:SI 141)
        (mem:SI (plus:DI (reg/f:DI 82 [ _10 ])
                (const_int 14 [0xe])) [5 MEM[(struct fbgc_matrix_object *)_10].column+0 S4 A8])) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (nil))
(insn 180 179 181 19 (set (reg:SI 142)
        (mem:SI (plus:DI (reg/f:DI 82 [ _10 ])
                (const_int 10 [0xa])) [5 MEM[(struct fbgc_matrix_object *)_10].row+0 S4 A8])) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (nil))
(insn 181 180 182 19 (set (reg:SI 143)
        (zero_extend:SI (mem:QI (plus:DI (reg/f:DI 82 [ _10 ])
                    (const_int 9 [0x9])) [0 MEM[(struct fbgc_matrix_object *)_10].sub_type+0 S1 A8]))) "cmodules/fbgc_math.c":85:33 119 {*zero_extendqisi2}
     (nil))
(insn 182 181 183 19 (set (reg:SI 2 cx)
        (const_int 10 [0xa])) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (nil))
(insn 183 182 184 19 (set (reg:SI 1 dx)
        (reg:SI 141)) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (nil))
(insn 184 183 185 19 (set (reg:SI 4 si)
        (reg:SI 142)) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (nil))
(insn 185 184 186 19 (set (reg:SI 5 di)
        (reg:SI 143)) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (nil))
(call_insn 186 185 187 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_matrix_object") [flags 0x41]  <function_decl 0x7f213e3fe100 new_fbgc_matrix_object>) [0 new_fbgc_matrix_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":85:33 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_matrix_object") [flags 0x41]  <function_decl 0x7f213e3fe100 new_fbgc_matrix_object>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 187 186 188 19 (set (reg/v/f:DI 129 [ <retval> ])
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":85:33 66 {*movdi_internal}
     (nil))
(debug_insn 188 187 189 19 (var_location:DI res_m (reg/v/f:DI 129 [ <retval> ])) "cmodules/fbgc_math.c":85:33 -1
     (nil))
(debug_insn 189 188 190 19 (debug_marker) "cmodules/fbgc_math.c":87:4 -1
     (nil))
(insn 190 189 191 19 (set (reg:SI 119 [ prephitmp_106 ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _10 ])
                (const_int 10 [0xa])) [5 MEM[(struct fbgc_matrix_object *)_10].row+0 S4 A8])) "cmodules/fbgc_math.c":87:17 67 {*movsi_internal}
     (nil))
(insn 191 190 192 19 (set (reg:SI 122 [ _125 ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _10 ])
                (const_int 14 [0xe])) [5 MEM[(struct fbgc_matrix_object *)_10].column+0 S4 A8])) "cmodules/fbgc_math.c":87:24 67 {*movsi_internal}
     (nil))
(insn 192 191 193 19 (parallel [
            (set (reg/v:SI 99 [ rc ])
                (mult:SI (reg:SI 119 [ prephitmp_106 ])
                    (reg:SI 122 [ _125 ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":87:11 317 {*mulsi3_1}
     (nil))
(debug_insn 193 192 194 19 (var_location:SI rc (reg/v:SI 99 [ rc ])) "cmodules/fbgc_math.c":87:11 -1
     (nil))
(debug_insn 194 193 195 19 (debug_marker) "cmodules/fbgc_math.c":89:4 -1
     (nil))
(debug_insn 195 194 196 19 (debug_marker) "cmodules/fbgc_math.c":91:4 -1
     (nil))
(debug_insn 196 195 197 19 (debug_marker) "cmodules/fbgc_math.c":91:8 -1
     (nil))
(debug_insn 197 196 198 19 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 198 197 199 19 (debug_marker) "cmodules/fbgc_math.c":91:22 -1
     (nil))
(insn 199 198 200 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 119 [ prephitmp_106 ])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":91:4 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 200 199 297 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 348)
            (pc))) "cmodules/fbgc_math.c":91:4 659 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 348)
;;  succ:       28 [89.0% (guessed)]  count:73239503 (estimated locally)
;;              31 [11.0% (guessed)]  count:9052073 (estimated locally) (FALLTHRU)

;; basic block 20, loop depth 1, count 592574083 (estimated locally), maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       29 [99.8% (guessed)]  count:599636349 (estimated locally)
(code_label 297 200 204 20 123 (nil) [1 uses])
(note 204 297 205 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 205 204 206 20 (parallel [
            (set (reg/f:DI 120 [ pretmp_111 ])
                (plus:DI (reg/f:DI 82 [ _10 ])
                    (const_int 14 [0xe])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (nil))
(insn 206 205 6 20 (parallel [
            (set (reg/f:DI 125 [ pretmp_137 ])
                (plus:DI (reg/v/f:DI 129 [ <retval> ])
                    (const_int 14 [0xe])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (nil))
(insn 6 206 277 20 (set (reg/v:SI 90 [ j ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":92:16 67 {*movsi_internal}
     (nil))
;;  succ:       21 [always]  count:592574083 (estimated locally) (FALLTHRU)

;; basic block 21, loop depth 2, count 5387037060 (estimated locally), maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       20 [always]  count:592574083 (estimated locally) (FALLTHRU)
;;              24 [always]  count:4794462996 (estimated locally) (FALLTHRU)
(code_label 277 6 207 21 122 (nil) [0 uses])
(note 207 277 208 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(debug_insn 208 207 209 21 (var_location:SI j (reg/v:SI 90 [ j ])) -1
     (nil))
(debug_insn 209 208 210 21 (debug_marker) "cmodules/fbgc_math.c":93:6 -1
     (nil))
(insn 210 209 211 21 (parallel [
            (set (reg:SI 144)
                (mult:SI (reg:SI 122 [ _125 ])
                    (reg/v:SI 118 [ i ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":93:23 317 {*mulsi3_1}
     (nil))
(insn 211 210 212 21 (parallel [
            (set (reg/v:SI 101 [ index ])
                (plus:SI (reg:SI 144)
                    (reg/v:SI 90 [ j ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":93:13 190 {*addsi_1}
     (nil))
(debug_insn 212 211 213 21 (var_location:SI index (reg/v:SI 101 [ index ])) "cmodules/fbgc_math.c":93:13 -1
     (nil))
(debug_insn 213 212 214 21 (debug_marker) "cmodules/fbgc_math.c":94:6 -1
     (nil))
(debug_insn 214 213 215 21 (var_location:SI c_index (plus:SI (reg/v:SI 99 [ rc ])
        (reg/v:SI 101 [ index ]))) "cmodules/fbgc_math.c":94:13 -1
     (nil))
(debug_insn 215 214 216 21 (debug_marker) "cmodules/fbgc_math.c":96:6 -1
     (nil))
(insn 216 215 217 21 (set (reg:DI 145)
        (zero_extend:DI (reg/v:SI 101 [ index ]))) "cmodules/fbgc_math.c":96:46 114 {*zero_extendsidi2}
     (nil))
(insn 217 216 218 21 (parallel [
            (set (reg:DI 146)
                (ashift:DI (reg:DI 145)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":96:46 520 {*ashldi3_1}
     (nil))
(insn 218 217 219 21 (parallel [
            (set (reg:DI 105 [ _46 ])
                (plus:DI (reg:DI 146)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":96:46 191 {*adddi_1}
     (nil))
(insn 219 218 220 21 (set (reg:DF 107 [ _48 ])
        (mem:DF (plus:DI (reg/f:DI 120 [ pretmp_111 ])
                (reg:DI 105 [ _46 ])) [2 *_47+0 S8 A64])) "cmodules/fbgc_math.c":96:15 111 {*movdf_internal}
     (nil))
(debug_insn 220 219 221 21 (var_location:DF z$real (reg:DF 107 [ _48 ])) "cmodules/fbgc_math.c":96:13 -1
     (nil))
(debug_insn 221 220 222 21 (debug_marker) "cmodules/fbgc_math.c":97:6 -1
     (nil))
(insn 222 221 223 21 (parallel [
            (set (reg/f:DI 121 [ _121 ])
                (plus:DI (reg/f:DI 125 [ pretmp_137 ])
                    (reg:DI 105 [ _46 ])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (nil))
(insn 223 222 224 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 82 [ _10 ])
                    (const_int 9 [0x9])) [0 MEM[(struct fbgc_matrix_object *)_10].sub_type+0 S1 A8])
            (const_int 5 [0x5]))) "cmodules/fbgc_math.c":97:8 9 {*cmpqi_1}
     (nil))
(jump_insn 224 223 225 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 261)
            (pc))) "cmodules/fbgc_math.c":97:8 659 {*jcc}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 261)
;;  succ:       22 [34.0% (guessed)]  count:1831592620 (estimated locally) (FALLTHRU)
;;              23 [66.0% (guessed)]  count:3555444440 (estimated locally)

;; basic block 22, loop depth 2, count 1831592600 (estimated locally), maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       21 [34.0% (guessed)]  count:1831592620 (estimated locally) (FALLTHRU)
(note 225 224 226 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(debug_insn 226 225 227 22 (debug_marker) "cmodules/fbgc_math.c":98:7 -1
     (nil))
(insn 227 226 228 22 (parallel [
            (set (reg:SI 147 [ c_index ])
                (plus:SI (reg/v:SI 99 [ rc ])
                    (reg/v:SI 101 [ index ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":94:13 190 {*addsi_1}
     (nil))
(insn 228 227 229 22 (set (reg:DI 148)
        (zero_extend:DI (reg:SI 147 [ c_index ]))) "cmodules/fbgc_math.c":98:47 114 {*zero_extendsidi2}
     (nil))
(insn 229 228 230 22 (parallel [
            (set (reg:DI 149)
                (ashift:DI (reg:DI 148)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":98:47 520 {*ashldi3_1}
     (nil))
(insn 230 229 231 22 (parallel [
            (set (reg:DI 111 [ _52 ])
                (plus:DI (reg:DI 149)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":98:47 191 {*adddi_1}
     (nil))
(insn 231 230 232 22 (set (subreg:DF (reg:DI 160 [ z+8 ]) 0)
        (mem:DF (plus:DI (reg/f:DI 120 [ pretmp_111 ])
                (reg:DI 111 [ _52 ])) [2 *_53+0 S8 A64])) "cmodules/fbgc_math.c":98:14 111 {*movdf_internal}
     (nil))
(debug_insn 232 231 233 22 (debug_marker) "cmodules/fbgc_math.c":99:7 -1
     (nil))
(insn 233 232 357 22 (set (subreg:DF (reg:DI 159 [ z ]) 0)
        (reg:DF 107 [ _48 ])) "cmodules/fbgc_math.c":99:36 111 {*movdf_internal}
     (nil))
(insn 357 233 358 22 (set (reg:DI 167)
        (reg:DI 159 [ z ])) "cmodules/fbgc_math.c":99:36 66 {*movdi_internal}
     (nil))
(insn 358 357 359 22 (set (reg:DI 168 [+8 ])
        (reg:DI 160 [ z+8 ])) "cmodules/fbgc_math.c":99:36 66 {*movdi_internal}
     (nil))
(insn 359 358 360 22 (set (reg:DI 169)
        (reg:DI 159 [ z ])) "cmodules/fbgc_math.c":99:36 66 {*movdi_internal}
     (nil))
(insn 360 359 236 22 (set (reg:DI 170 [+8 ])
        (reg:DI 160 [ z+8 ])) "cmodules/fbgc_math.c":99:36 66 {*movdi_internal}
     (nil))
(insn 236 360 237 22 (set (reg:DF 152)
        (subreg:DF (reg:DI 167) 0)) "cmodules/fbgc_math.c":99:36 111 {*movdf_internal}
     (nil))
(insn 237 236 238 22 (set (reg:DF 153)
        (subreg:DF (reg:DI 170 [+8 ]) 0)) "cmodules/fbgc_math.c":99:36 111 {*movdf_internal}
     (nil))
(insn 238 237 239 22 (set (reg:DF 20 xmm0)
        (reg:DF 152)) "cmodules/fbgc_math.c":99:36 111 {*movdf_internal}
     (nil))
(insn 239 238 240 22 (set (reg:DF 21 xmm1)
        (reg:DF 153)) "cmodules/fbgc_math.c":99:36 111 {*movdf_internal}
     (nil))
(call_insn 240 239 241 22 (set (parallel:TI [
                (expr_list:REG_DEP_TRUE (reg:DF 20 xmm0)
                    (const_int 0 [0]))
                (expr_list:REG_DEP_TRUE (reg:DF 21 xmm1)
                    (const_int 8 [0x8]))
            ])
        (call (mem:QI (symbol_ref:DI ("c_cos") [flags 0x3]  <function_decl 0x7f213dfa5e00 c_cos>) [0 c_cos S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":99:36 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("c_cos") [flags 0x3]  <function_decl 0x7f213dfa5e00 c_cos>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:DF 21 xmm1))
        (expr_list (use (reg:DF 20 xmm0))
            (nil))))
(insn 241 240 242 22 (set (reg:DF 154)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":99:36 111 {*movdf_internal}
     (nil))
(insn 242 241 361 22 (set (reg:DF 155)
        (reg:DF 21 xmm1)) "cmodules/fbgc_math.c":99:36 111 {*movdf_internal}
     (nil))
(insn 361 242 362 22 (set (reg:DI 161 [ result ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":99:36 66 {*movdi_internal}
     (nil))
(insn 362 361 244 22 (set (reg:DI 162 [ result+8 ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":99:36 66 {*movdi_internal}
     (nil))
(insn 244 362 245 22 (set (subreg:DF (reg:DI 161 [ result ]) 0)
        (reg:DF 154)) "cmodules/fbgc_math.c":99:36 111 {*movdf_internal}
     (nil))
(insn 245 244 246 22 (set (subreg:DF (reg:DI 162 [ result+8 ]) 0)
        (reg:DF 155)) "cmodules/fbgc_math.c":99:36 111 {*movdf_internal}
     (nil))
(debug_insn 246 245 247 22 (debug_marker) "cmodules/fbgc_math.c":100:7 -1
     (nil))
(insn 247 246 248 22 (set (mem:DF (reg/f:DI 121 [ _121 ]) [2 MEM[(double *)_121]+0 S8 A64])
        (subreg:DF (reg:DI 161 [ result ]) 0)) "cmodules/fbgc_math.c":100:50 111 {*movdf_internal}
     (nil))
(debug_insn 248 247 249 22 (debug_marker) "cmodules/fbgc_math.c":101:7 -1
     (nil))
(insn 249 248 250 22 (set (mem:DF (plus:DI (reg/f:DI 125 [ pretmp_137 ])
                (reg:DI 111 [ _52 ])) [2 *_58+0 S8 A64])
        (subreg:DF (reg:DI 162 [ result+8 ]) 0)) "cmodules/fbgc_math.c":101:52 111 {*movdf_internal}
     (nil))
(insn 250 249 363 22 (clobber (reg:DI 161 [ result ])) -1
     (nil))
(insn 363 250 251 22 (clobber (reg:DI 162 [ result+8 ])) -1
     (nil))
(debug_insn 251 363 252 22 (debug_marker) "cmodules/fbgc_math.c":92:36 -1
     (nil))
(insn 252 251 253 22 (parallel [
            (set (reg/v:SI 90 [ j ])
                (plus:SI (reg/v:SI 90 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":92:36 190 {*addsi_1}
     (nil))
(debug_insn 253 252 254 22 (var_location:SI j (reg/v:SI 90 [ j ])) -1
     (nil))
(debug_insn 254 253 255 22 (debug_marker) "cmodules/fbgc_math.c":92:23 -1
     (nil))
(insn 255 254 256 22 (set (reg:SI 122 [ _125 ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _10 ])
                (const_int 14 [0xe])) [5 MEM[(struct fbgc_matrix_object *)_10].column+0 S4 A8])) "cmodules/fbgc_math.c":92:26 67 {*movsi_internal}
     (nil))
(insn 256 255 257 22 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 90 [ j ])
            (reg:SI 122 [ _125 ]))) "cmodules/fbgc_math.c":92:5 11 {*cmpsi_1}
     (nil))
(jump_insn 257 256 261 22 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 275)
            (pc))) "cmodules/fbgc_math.c":92:5 659 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 275)
;;  succ:       24 [89.0% (guessed)]  count:1630117415 (estimated locally)
;;              25 [11.0% (guessed)]  count:201475185 (estimated locally) (FALLTHRU)

;; basic block 23, loop depth 2, count 3555444471 (estimated locally), maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       21 [66.0% (guessed)]  count:3555444440 (estimated locally)
(code_label 261 257 262 23 119 (nil) [1 uses])
(note 262 261 263 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(debug_insn 263 262 264 23 (debug_marker) "cmodules/fbgc_math.c":103:11 -1
     (nil))
(insn 264 263 265 23 (set (reg:DF 20 xmm0)
        (reg:DF 107 [ _48 ])) "cmodules/fbgc_math.c":103:57 111 {*movdf_internal}
     (nil))
(call_insn/u 265 264 266 23 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7f213e47d900 cos>) [0 __builtin_cos S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":103:57 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7f213e47d900 cos>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 266 265 267 23 (set (reg:DF 117 [ _62 ])
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":103:57 111 {*movdf_internal}
     (nil))
(insn 267 266 268 23 (set (mem:DF (reg/f:DI 121 [ _121 ]) [2 MEM[(double *)_121]+0 S8 A64])
        (reg:DF 117 [ _62 ])) "cmodules/fbgc_math.c":103:54 111 {*movdf_internal}
     (nil))
(debug_insn 268 267 269 23 (debug_marker) "cmodules/fbgc_math.c":92:36 -1
     (nil))
(insn 269 268 270 23 (parallel [
            (set (reg/v:SI 90 [ j ])
                (plus:SI (reg/v:SI 90 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":92:36 190 {*addsi_1}
     (nil))
(debug_insn 270 269 271 23 (var_location:SI j (reg/v:SI 90 [ j ])) -1
     (nil))
(debug_insn 271 270 272 23 (debug_marker) "cmodules/fbgc_math.c":92:23 -1
     (nil))
(insn 272 271 273 23 (set (reg:SI 122 [ _125 ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _10 ])
                (const_int 14 [0xe])) [5 MEM[(struct fbgc_matrix_object *)_10].column+0 S4 A8])) "cmodules/fbgc_math.c":92:26 67 {*movsi_internal}
     (nil))
(insn 273 272 274 23 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 122 [ _125 ])
            (reg/v:SI 90 [ j ]))) "cmodules/fbgc_math.c":92:5 11 {*cmpsi_1}
     (nil))
(jump_insn 274 273 275 23 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 280)
            (pc))) "cmodules/fbgc_math.c":92:5 659 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 280)
;;  succ:       24 [89.0% (guessed)]  count:3164345581 (estimated locally) (FALLTHRU)
;;              25 [11.0% (guessed)]  count:391098890 (estimated locally)

;; basic block 24, loop depth 2, count 4794462996 (estimated locally), maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       22 [89.0% (guessed)]  count:1630117415 (estimated locally)
;;              23 [89.0% (guessed)]  count:3164345581 (estimated locally) (FALLTHRU)
(code_label 275 274 276 24 120 (nil) [1 uses])
(note 276 275 280 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
;;  succ:       21 [always]  count:4794462996 (estimated locally) (FALLTHRU)

;; basic block 25, loop depth 1, count 592574075 (estimated locally), maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       23 [11.0% (guessed)]  count:391098890 (estimated locally)
;;              22 [11.0% (guessed)]  count:201475185 (estimated locally) (FALLTHRU)
(code_label 280 276 281 25 121 (nil) [1 uses])
(note 281 280 282 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 282 281 305 25 (set (reg:SI 119 [ prephitmp_106 ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _10 ])
                (const_int 10 [0xa])) [5 MEM[(struct fbgc_matrix_object *)_10].row+0 S4 A8])) 67 {*movsi_internal}
     (nil))
;;  succ:       26 [always]  count:592574075 (estimated locally) (FALLTHRU)

;; basic block 26, loop depth 1, count 592574078 (estimated locally), maybe hot
;; Invalid sum of incoming counts 657757224 (estimated locally), should be 592574078 (estimated locally)
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       25 [always]  count:592574075 (estimated locally) (FALLTHRU)
;;              30 [89.0% (guessed)]  count:65183149 (estimated locally)
(code_label 305 282 283 26 124 (nil) [1 uses])
(note 283 305 284 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(debug_insn 284 283 285 26 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 285 284 286 26 (var_location:SI j (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 286 285 287 26 (debug_marker) "cmodules/fbgc_math.c":91:32 -1
     (nil))
(insn 287 286 288 26 (parallel [
            (set (reg/v:SI 118 [ i ])
                (plus:SI (reg/v:SI 118 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":91:32 190 {*addsi_1}
     (nil))
(debug_insn 288 287 289 26 (var_location:SI i (reg/v:SI 118 [ i ])) -1
     (nil))
(debug_insn 289 288 290 26 (debug_marker) "cmodules/fbgc_math.c":91:22 -1
     (nil))
(insn 290 289 291 26 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 118 [ i ])
            (reg:SI 119 [ prephitmp_106 ]))) "cmodules/fbgc_math.c":91:4 11 {*cmpsi_1}
     (nil))
(jump_insn 291 290 344 26 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 308)
            (pc))) "cmodules/fbgc_math.c":91:4 659 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 308)
;;  succ:       27 [89.0% (guessed)]  count:527390930 (estimated locally) (FALLTHRU)
;;              31 [11.0% (guessed)]  count:65183148 (estimated locally)

;; basic block 27, loop depth 1, count 527390930 (estimated locally), maybe hot
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       26 [89.0% (guessed)]  count:527390930 (estimated locally) (FALLTHRU)
(note 344 291 348 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
;;  succ:       29 [always]  count:527390930 (estimated locally) (FALLTHRU)

;; basic block 28, loop depth 0, count 73239503 (estimated locally), maybe hot
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       19 [89.0% (guessed)]  count:73239503 (estimated locally)
(code_label 348 344 347 28 126 (nil) [1 uses])
(note 347 348 7 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 7 347 292 28 (set (reg/v:SI 118 [ i ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":91:15 67 {*movsi_internal}
     (nil))
;;  succ:       29 [always]  count:73239503 (estimated locally) (FALLTHRU)

;; basic block 29, loop depth 1, count 600630427 (estimated locally), maybe hot
;;  prev block 28, next block 30, flags: (RTL)
;;  pred:       28 [always]  count:73239503 (estimated locally) (FALLTHRU)
;;              27 [always]  count:527390930 (estimated locally) (FALLTHRU)
(code_label 292 7 293 29 117 (nil) [0 uses])
(note 293 292 294 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(debug_insn 294 293 295 29 (var_location:SI i (reg/v:SI 118 [ i ])) -1
     (nil))
(debug_insn 295 294 296 29 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(debug_insn 296 295 298 29 (debug_marker) "cmodules/fbgc_math.c":92:23 -1
     (nil))
(insn 298 296 299 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ _125 ])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":92:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 299 298 300 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 297)
            (pc))) "cmodules/fbgc_math.c":92:5 659 {*jcc}
     (int_list:REG_BR_PROB 1071964724 (nil))
 -> 297)
;;  succ:       20 [99.8% (guessed)]  count:599636349 (estimated locally)
;;              30 [0.2% (guessed)]  count:994078 (estimated locally) (FALLTHRU)

;; basic block 30, loop depth 1, count 73239493 (estimated locally), maybe hot
;; Invalid sum of incoming counts 994078 (estimated locally), should be 73239493 (estimated locally)
;;  prev block 29, next block 31, flags: (RTL)
;;  pred:       29 [0.2% (guessed)]  count:994078 (estimated locally) (FALLTHRU)
(note 300 299 301 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(debug_insn 301 300 302 30 (debug_marker) "cmodules/fbgc_math.c":91:32 -1
     (nil))
(insn 302 301 303 30 (parallel [
            (set (reg/v:SI 118 [ i ])
                (plus:SI (reg/v:SI 118 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":91:32 190 {*addsi_1}
     (nil))
(debug_insn 303 302 304 30 (var_location:SI i (reg/v:SI 118 [ i ])) -1
     (nil))
(debug_insn 304 303 306 30 (debug_marker) "cmodules/fbgc_math.c":91:22 -1
     (nil))
(insn 306 304 307 30 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 119 [ prephitmp_106 ])
            (reg/v:SI 118 [ i ]))) "cmodules/fbgc_math.c":91:4 11 {*cmpsi_1}
     (nil))
(jump_insn 307 306 308 30 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 305)
            (pc))) "cmodules/fbgc_math.c":91:4 659 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 305)
;;  succ:       26 [89.0% (guessed)]  count:65183149 (estimated locally)
;;              31 [11.0% (guessed)]  count:8056344 (estimated locally) (FALLTHRU)

;; basic block 31, loop depth 0, count 82291565 (estimated locally), maybe hot
;;  prev block 30, next block 32, flags: (RTL)
;;  pred:       26 [11.0% (guessed)]  count:65183148 (estimated locally)
;;              30 [11.0% (guessed)]  count:8056344 (estimated locally) (FALLTHRU)
;;              19 [11.0% (guessed)]  count:9052073 (estimated locally) (FALLTHRU)
(code_label 308 307 309 31 118 (nil) [1 uses])
(note 309 308 310 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(debug_insn 310 309 311 31 (debug_marker) "cmodules/fbgc_math.c":106:4 -1
     (nil))
(insn 311 310 364 31 (clobber (reg:DI 159 [ z ])) -1
     (nil))
(insn 364 311 312 31 (clobber (reg:DI 160 [ z+8 ])) -1
     (nil))
(debug_insn 312 364 313 31 (var_location:DF D#11 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 313 312 343 31 (var_location:DF z$real (debug_expr:DF D#11)) -1
     (nil))
;;  succ:       33 [always]  count:82291565 (estimated locally) (FALLTHRU)

;; basic block 32, loop depth 0, count 662283960 (estimated locally), maybe hot
;;  prev block 31, next block 33, flags: (RTL)
;;  pred:       2 [61.7% (guessed)]  count:662283960 (estimated locally)
(code_label 343 313 342 32 125 (nil) [1 uses])
(note 342 343 11 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 11 342 316 32 (set (reg/v/f:DI 129 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":121:1 66 {*movdi_internal}
     (nil))
(debug_insn 316 11 317 32 (var_location:DI arg (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":121:1 -1
     (nil))
(debug_insn 317 316 318 32 (var_location:SI argc (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":121:1 -1
     (nil))
(debug_insn 318 317 319 32 (var_location:DI fun (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":121:1 -1
     (nil))
(debug_insn 319 318 320 32 (var_location:DI zfun (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":121:1 -1
     (nil))
(debug_insn 320 319 321 32 (var_location:DF dbarg (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":121:1 -1
     (nil))
(debug_insn 321 320 322 32 (var_location:SI sz (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":121:1 -1
     (nil))
(debug_insn 322 321 323 32 (var_location:DI res_tp (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":121:1 -1
     (nil))
(debug_insn 323 322 324 32 (var_location:DI tp_content (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":121:1 -1
     (nil))
(debug_insn 324 323 325 32 (var_location:SI i (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":121:1 -1
     (nil))
(debug_insn 325 324 326 32 (var_location:DI result (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":121:1 -1
     (nil))
(debug_insn 326 325 327 32 (var_location:DI res_m (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":121:1 -1
     (nil))
(debug_insn 327 326 328 32 (var_location:SI rc (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":121:1 -1
     (nil))
(debug_insn 328 327 329 32 (var_location:SI i (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":121:1 -1
     (nil))
(debug_insn 329 328 330 32 (var_location:SI j (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":121:1 -1
     (nil))
(debug_insn 330 329 331 32 (var_location:SI index (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":121:1 -1
     (nil))
(debug_insn 331 330 332 32 (var_location:SI c_index (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":121:1 -1
     (nil))
(debug_insn 332 331 333 32 (var_location:DI arg (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 333 332 336 32 (var_location:SI argc (clobber (const_int 0 [0]))) -1
     (nil))
;;  succ:       33 [always]  count:662283960 (estimated locally) (FALLTHRU)

;; basic block 33, loop depth 0, count 908893201 (estimated locally), maybe hot
;; Invalid sum of incoming counts 1274633540 (estimated locally), should be 908893201 (estimated locally)
;;  prev block 32, next block 1, flags: (RTL)
;;  pred:       32 [always]  count:662283960 (estimated locally) (FALLTHRU)
;;              7 [always]  count:228587706 (estimated locally) (FALLTHRU)
;;              9 [always]  count:82291578 (estimated locally) (FALLTHRU)
;;              11 [always]  count:137152624 (estimated locally) (FALLTHRU)
;;              14 [11.0% (guessed)]  count:9052073 (estimated locally)
;;              18 [11.0% (guessed)]  count:72974034 (estimated locally) (FALLTHRU)
;;              31 [always]  count:82291565 (estimated locally) (FALLTHRU)
(code_label 336 333 339 33 107 (nil) [1 uses])
(note 339 336 337 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 337 339 338 33 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 129 [ <retval> ])) "cmodules/fbgc_math.c":121:1 66 {*movdi_internal}
     (nil))
(insn 338 337 0 33 (use (reg/i:DI 0 ax)) "cmodules/fbgc_math.c":121:1 -1
     (nil))
;;  succ:       EXIT [always]  count:908893201 (estimated locally) (FALLTHRU)

