
;; Function fbgc_time_initializer (fbgc_time_initializer, funcdef_no=58, decl_uid=5687, cgraph_uid=59, symbol_order=63)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs




Pass 1 for finding pseudo/allocno costs



   Insn 13(l0): point = 0
   Insn 12(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_time_initializer

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r19={1d,2u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} 
;;    total ref usage 29{20d,9u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax]
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 5 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 12 2 (debug_marker) "cmodules/fbgc_time.c":44:2 -1
     (nil))
(insn 12 7 13 2 (set (reg/i:DI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_time.c":45:1 66 {*movdi_internal}
     (nil))
(insn 13 12 0 2 (use (reg/i:DI 0 ax)) "cmodules/fbgc_time.c":45:1 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function fbgc_tic (fbgc_tic, funcdef_no=56, decl_uid=5691, cgraph_uid=57, symbol_order=59)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Will split live ranges of parameters at BB 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Adding REG_EQUIV to insn 40 for source of insn 24
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 88: local to bb 2 def dominates all uses has unique first use
Reg 89 uninteresting
Ignoring reg 90, has equiv memory
Found def insn 38 for 88 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 90: (insn_list:REG_DEP_TRUE 24 (nil))

Pass 0 for finding pseudo/allocno costs

    a2 (r90,l0) best AREG, allocno AREG
    a3 (r89,l0) best AREG, allocno AREG
    a4 (r88,l0) best SIREG, allocno SIREG
    a0 (r84,l0) best AREG, allocno AREG
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:-1000,-1000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:23800,23800 NO_REX_SSE_REGS:23800,23800 SSE_REGS:23800,23800 MMX_REGS:32300,32300 INT_SSE_REGS:32300,32300 ALL_REGS:530400,530400 MEM:11900,11900
  a1(r83,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11200,11200 NO_REX_SSE_REGS:11200,11200 SSE_REGS:11200,11200 MMX_REGS:17500,17500 INT_SSE_REGS:17500,17500 ALL_REGS:222600,222600 MEM:8400,8400
  a2(r90,l0) costs: AREG:-700,-700 DREG:1400,1400 CREG:1400,1400 BREG:1400,1400 SIREG:1400,1400 DIREG:1400,1400 AD_REGS:1400,1400 CLOBBERED_REGS:1400,1400 Q_REGS:1400,1400 NON_Q_REGS:1400,1400 TLS_GOTBASE_REGS:1400,1400 GENERAL_REGS:1400,1400 SSE_FIRST_REG:5600,5600 NO_REX_SSE_REGS:5600,5600 SSE_REGS:5600,5600 MMX_REGS:18200,18200 INT_SSE_REGS:18200,18200 ALL_REGS:296800,296800 MEM:8400,8400
  a3(r89,l0) costs: AREG:-700,-700 DREG:1400,1400 CREG:1400,1400 BREG:1400,1400 SIREG:1400,1400 DIREG:1400,1400 AD_REGS:1400,1400 CLOBBERED_REGS:1400,1400 Q_REGS:1400,1400 NON_Q_REGS:1400,1400 TLS_GOTBASE_REGS:1400,1400 GENERAL_REGS:1400,1400 SSE_FIRST_REG:5600,5600 NO_REX_SSE_REGS:5600,5600 SSE_REGS:5600,5600 MMX_REGS:18200,18200 INT_SSE_REGS:18200,18200 ALL_REGS:296800,296800 MEM:7700,7700
  a4(r88,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:-1000,-1000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:12000,12000


Pass 1 for finding pseudo/allocno costs

    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:2000,-1000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:4000,4000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:4000,4000 TLS_GOTBASE_REGS:4000,4000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:35200,35200 NO_REX_SSE_REGS:35200,35200 SSE_REGS:35200,35200 MMX_REGS:55500,55500 INT_SSE_REGS:42500,42500 ALL_REGS:540600,540600 MEM:26400,26400
  a1(r83,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11200,11200 NO_REX_SSE_REGS:11200,11200 SSE_REGS:11200,11200 MMX_REGS:18200,18200 INT_SSE_REGS:18200,18200 ALL_REGS:226800,226800 MEM:8400,8400
  a2(r90,l0) costs: AREG:1400,-700 DREG:2800,2800 CREG:2800,2800 BREG:2800,2800 SIREG:2800,2800 DIREG:2800,2800 AD_REGS:1400,1400 CLOBBERED_REGS:1400,1400 Q_REGS:1400,1400 NON_Q_REGS:2800,2800 TLS_GOTBASE_REGS:2800,2800 GENERAL_REGS:1400,1400 SSE_FIRST_REG:16800,16800 NO_REX_SSE_REGS:16800,16800 SSE_REGS:16800,16800 MMX_REGS:27300,27300 INT_SSE_REGS:18200,18200 ALL_REGS:296800,296800 MEM:12600,12600
  a3(r89,l0) costs: AREG:1400,-700 DREG:2800,2800 CREG:2800,2800 BREG:2800,2800 SIREG:2800,2800 DIREG:2800,2800 AD_REGS:1400,1400 CLOBBERED_REGS:1400,1400 Q_REGS:1400,1400 NON_Q_REGS:2800,2800 TLS_GOTBASE_REGS:2800,2800 GENERAL_REGS:1400,1400 SSE_FIRST_REG:16800,16800 NO_REX_SSE_REGS:16800,16800 SSE_REGS:16800,16800 MMX_REGS:27300,27300 INT_SSE_REGS:18200,18200 ALL_REGS:296800,296800 MEM:11900,11900
  a4(r88,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:2000,-1000 DIREG:4000,4000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:18000,18000

   Insn 32(l0): point = 0
   Insn 31(l0): point = 2
   Insn 24(l0): point = 5
   Insn 40(l0): point = 7
   Insn 22(l0): point = 9
   Insn 19(l0): point = 11
   Insn 16(l0): point = 13
   Insn 39(l0): point = 15
   Insn 15(l0): point = 17
   Insn 14(l0): point = 19
   Insn 13(l0): point = 21
   Insn 10(l0): point = 24
   Insn 9(l0): point = 26
   Insn 5(l0): point = 28
   Insn 38(l0): point = 30
 a0(r84): [24..28] [3..13]
 a1(r83): [6..11]
 a2(r90): [6..7]
 a3(r89): [14..15]
 a4(r88): [27..30]
Compressing live ranges: from 33 to 6 - 18%
Ranges after the compression:
 a0(r84): [4..5] [0..1]
 a1(r83): [0..1]
 a2(r90): [0..1]
 a3(r89): [2..3]
 a4(r88): [4..5]
+++Allocating 40 bytes for conflict table (uncompressed size 40)
;; a0(r84,l0) conflicts: a1(r83,l0) a2(r90,l0) a4(r88,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

;; a1(r83,l0) conflicts: a2(r90,l0) a0(r84,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

;; a2(r90,l0) conflicts: a1(r83,l0) a0(r84,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r89,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r88,l0) conflicts: a0(r84,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a0(r84)<->a3(r89)@700:move
  pref0:a2(r90)<-hr0@1050
  pref1:a3(r89)<-hr0@1050
  pref2:a4(r88)<-hr4@1500
  pref3:a0(r84)<-hr0@1500
  regions=1, blocks=5, points=6
    allocnos=5 (big 0), copies=1, conflicts=0, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r84 1r83 2r90 3r89 4r88
    modified regnos: 83 84 88 89 90
    border:
    Pressure: GENERAL_REGS=3
 Removing pref3:hr0@1500
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@89800
          2:( 1-6 36-43)@65600
      Allocno a0r84 of GENERAL_REGS(15) has 14 avail. regs  1-6 36-43, node:  1-6 36-43 (confl regs =  0 7-35 44-74)
      Allocno a1r83 of GENERAL_REGS(15) has 14 avail. regs  1-6 36-43, node:  1-6 36-43 (confl regs =  0 7-35 44-74)
      Allocno a2r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a3r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a4r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Forming thread by copy 0:a0r84-a3r89 (freq=700):
        Result (freq=4800): a0r84(3400) a3r89(1400)
      Pushing a2(r90,l0)(cost 0)
      Pushing a1(r83,l0)(cost 0)
      Pushing a4(r88,l0)(cost 0)
      Pushing a3(r89,l0)(cost 0)
      Pushing a0(r84,l0)(cost 0)
      Popping a0(r84,l0)  -- assign reg 40
      Popping a3(r89,l0)  -- assign reg 0
      Popping a4(r88,l0)  -- assign reg 4
      Popping a1(r83,l0)  -- assign reg 3
      Popping a2(r90,l0)  -- assign reg 0
Disposition:
    1:r83  l0     3    0:r84  l0    40    4:r88  l0     4    3:r89  l0     0
    2:r90  l0     0
New iteration of spill/restore move
+++Costs: overall -400, reg -400, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_tic

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r4={4d,2u} r5={4d,1u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={3d,1u} r18={2d} r19={1d,4u} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r83={1d,2u,1e} r84={2d,3u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 197{163d,33u,1e} in 22{20 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 84 88
(note 6 1 38 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 38 6 3 2 (set (reg:SI 88)
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_time.c":8:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ argc ])
        (nil)))
(note 3 38 4 2 NOTE_INSN_DELETED)
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 4 5 2 (debug_marker) "cmodules/fbgc_time.c":9:2 -1
     (nil))
(insn 5 8 9 2 (set (reg/v/f:DI 84 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_time.c":9:23 66 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 9 5 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88)
            (const_int 0 [0]))) "cmodules/fbgc_time.c":9:4 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 88)
        (nil)))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 30)
            (pc))) "cmodules/fbgc_time.c":9:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 321370932 (nil)))
 -> 30)
;;  succ:       4 [29.9% (guessed)]  count:321370928 (estimated locally)
;;              3 [70.1% (guessed)]  count:752370896 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84

;; basic block 3, loop depth 0, count 752370897 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [70.1% (guessed)]  count:752370896 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(6){ }u8(7){ }u9(16){ }u10(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 83 84 89 90
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 12 11 13 3 (debug_marker) "cmodules/fbgc_time.c":11:2 -1
     (nil))
(insn 13 12 14 3 (set (reg:DI 4 si)
        (symbol_ref:DI ("fbgc_time_module") [flags 0x2]  <var_decl 0x7f0f19661990 fbgc_time_module>)) "cmodules/fbgc_time.c":11:66 66 {*movdi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:SI 5 di)
        (const_int 8 [0x8])) "cmodules/fbgc_time.c":11:66 67 {*movsi_internal}
     (nil))
(call_insn 15 14 39 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_cstruct_object") [flags 0x41]  <function_decl 0x7f0f1968ca00 new_fbgc_cstruct_object>) [0 new_fbgc_cstruct_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_time.c":11:66 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_cstruct_object") [flags 0x41]  <function_decl 0x7f0f1968ca00 new_fbgc_cstruct_object>)
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 39 15 16 3 (set (reg:DI 89)
        (reg:DI 0 ax)) "cmodules/fbgc_time.c":11:66 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 16 39 17 3 (set (reg/v/f:DI 84 [ <retval> ])
        (reg:DI 89)) "cmodules/fbgc_time.c":11:66 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(debug_insn 17 16 18 3 (var_location:DI so (reg/v/f:DI 84 [ <retval> ])) "cmodules/fbgc_time.c":11:66 -1
     (nil))
(debug_insn 18 17 19 3 (debug_marker) "cmodules/fbgc_time.c":12:2 -1
     (nil))
(insn 19 18 20 3 (set (reg/v/f:DI 83 [ ts ])
        (mem/f:DI (plus:DI (reg/v/f:DI 84 [ <retval> ])
                (const_int 21 [0x15])) [1 so_7->cstruct+0 S8 A8])) "cmodules/fbgc_time.c":12:23 66 {*movdi_internal}
     (nil))
(debug_insn 20 19 21 3 (var_location:DI ts (reg/v/f:DI 83 [ ts ])) "cmodules/fbgc_time.c":12:23 -1
     (nil))
(debug_insn 21 20 22 3 (debug_marker) "cmodules/fbgc_time.c":14:2 -1
     (nil))
(call_insn 22 21 40 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("clock") [flags 0x41]  <function_decl 0x7f0f195eda00 clock>) [0 clock S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_time.c":14:12 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("clock") [flags 0x41]  <function_decl 0x7f0f195eda00 clock>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 40 22 23 3 (set (reg:DI 90)
        (reg:DI 0 ax)) "cmodules/fbgc_time.c":14:12 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_EQUIV (mem:DI (reg/v/f:DI 83 [ ts ]) [2 ts_8->clk+0 S8 A8])
            (nil))))
(note 23 40 24 3 NOTE_INSN_DELETED)
(insn 24 23 25 3 (set (mem:DI (reg/v/f:DI 83 [ ts ]) [2 ts_8->clk+0 S8 A8])
        (reg:DI 90)) "cmodules/fbgc_time.c":14:10 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (expr_list:REG_DEAD (reg/v/f:DI 83 [ ts ])
            (nil))))
(debug_insn 25 24 30 3 (debug_marker) "cmodules/fbgc_time.c":16:2 -1
     (nil))
;;  succ:       4 [always]  count:752370897 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84

;; basic block 4, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [29.9% (guessed)]  count:321370928 (estimated locally)
;;              3 [always]  count:752370897 (estimated locally) (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u22(6){ }u23(7){ }u24(16){ }u25(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; lr  def 	 0 [ax]
(code_label 30 25 33 4 3 (nil) [1 uses])
(note 33 30 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 31 33 32 4 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 84 [ <retval> ])) "cmodules/fbgc_time.c":17:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 84 [ <retval> ])
        (nil)))
(insn 32 31 0 4 (use (reg/i:DI 0 ax)) "cmodules/fbgc_time.c":17:1 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function fbgc_toc (fbgc_toc, funcdef_no=57, decl_uid=5695, cgraph_uid=58, symbol_order=61)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 6 3 }
;; 3 succs { 5 4 }
;; 4 succs { }
;; 5 succs { 1 }
;; 6 succs { 1 }
Will split live ranges of parameters at BB 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 6 3 }
;; 3 succs { 5 4 }
;; 4 succs { }
;; 5 succs { 1 }
;; 6 succs { 1 }
rescanning insn with uid = 52.
deleting insn with uid = 51.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 7 count 7 (    1)
Reg 100 uninteresting
Reg 91: def dominates all uses has unique first use
Reg 101 uninteresting
Reg 93 uninteresting
Reg 94 uninteresting
Reg 87: local to bb 5 def dominates all uses has unique first use
Reg 102 uninteresting
Reg 96 uninteresting
Reg 97 uninteresting
Found def insn 40 for 87 to be not moveable
Reg 91 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 6 3 }
;; 3 succs { 5 4 }
;; 4 succs { }
;; 5 succs { 1 }
;; 6 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 93: (insn_list:REG_DEP_TRUE 16 (nil))

Pass 0 for finding pseudo/allocno costs

    a4 (r102,l0) best AREG, allocno AREG
    a9 (r101,l0) best SIREG, allocno SIREG
    a10 (r100,l0) best DIREG, allocno DIREG
    a0 (r97,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a1 (r96,l0) best SSE_REGS, allocno SSE_REGS
    a2 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a5 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a7 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a8 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r97,l0) costs: AREG:11344,11344 DREG:11344,11344 CREG:11344,11344 BREG:11344,11344 SIREG:11344,11344 DIREG:11344,11344 AD_REGS:11344,11344 CLOBBERED_REGS:11344,11344 Q_REGS:11344,11344 NON_Q_REGS:11344,11344 TLS_GOTBASE_REGS:11344,11344 GENERAL_REGS:11344,11344 FP_TOP_REG:18434,18434 FP_SECOND_REG:18434,18434 FLOAT_REGS:18434,18434 SSE_FIRST_REG:-709,-709 NO_REX_SSE_REGS:1418,1418 SSE_REGS:1418,1418 FLOAT_SSE_REGS:18434,18434 FLOAT_INT_REGS:18434,18434 INT_SSE_REGS:18434,18434 FLOAT_INT_SSE_REGS:18434,18434 MEM:8508,8508
  a1(r96,l0) costs: AREG:11344,11344 DREG:11344,11344 CREG:11344,11344 BREG:11344,11344 SIREG:11344,11344 DIREG:11344,11344 AD_REGS:11344,11344 CLOBBERED_REGS:11344,11344 Q_REGS:11344,11344 NON_Q_REGS:11344,11344 TLS_GOTBASE_REGS:11344,11344 GENERAL_REGS:11344,11344 FP_TOP_REG:18434,18434 FP_SECOND_REG:18434,18434 FLOAT_REGS:18434,18434 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:18434,18434 FLOAT_INT_REGS:18434,18434 INT_SSE_REGS:18434,18434 FLOAT_INT_SSE_REGS:18434,18434 MEM:8508,8508
  a2(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:9926,9926 NO_REX_SSE_REGS:9926,9926 SSE_REGS:9926,9926 MMX_REGS:13471,13471 INT_SSE_REGS:13471,13471 ALL_REGS:221208,221208 MEM:4254,4254
  a3(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11344,11344 NO_REX_SSE_REGS:11344,11344 SSE_REGS:11344,11344 MMX_REGS:17725,17725 INT_SSE_REGS:17725,17725 ALL_REGS:225462,225462 MEM:7799,7799
  a4(r102,l0) costs: AREG:-709,-709 DREG:1418,1418 CREG:1418,1418 BREG:1418,1418 SIREG:1418,1418 DIREG:1418,1418 AD_REGS:1418,1418 CLOBBERED_REGS:1418,1418 Q_REGS:1418,1418 NON_Q_REGS:1418,1418 TLS_GOTBASE_REGS:1418,1418 GENERAL_REGS:1418,1418 SSE_FIRST_REG:11344,11344 NO_REX_SSE_REGS:11344,11344 SSE_REGS:11344,11344 MMX_REGS:18434,18434 INT_SSE_REGS:18434,18434 ALL_REGS:300616,300616 MEM:7799,7799
  a5(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11344,11344 NO_REX_SSE_REGS:11344,11344 SSE_REGS:11344,11344 MMX_REGS:17725,17725 INT_SSE_REGS:17725,17725 ALL_REGS:225462,225462 MEM:8508,8508
  a6(r85,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:17032,17032 NO_REX_SSE_REGS:17032,17032 SSE_REGS:17032,17032 MMX_REGS:26967,26967 INT_SSE_REGS:26967,26967 ALL_REGS:376088,376088 MEM:12774,12774
  a7(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11360,11360 NO_REX_SSE_REGS:11360,11360 SSE_REGS:11360,11360 MMX_REGS:16330,16330 INT_SSE_REGS:16330,16330 ALL_REGS:224360,224360 MEM:7810,7810
  a8(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11680,11680 NO_REX_SSE_REGS:11680,11680 SSE_REGS:11680,11680 MMX_REGS:15230,15230 INT_SSE_REGS:15230,15230 ALL_REGS:250520,250520 MEM:5260,5260
  a9(r101,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:-1000,-1000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a10(r100,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:-1000,-1000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000


Pass 1 for finding pseudo/allocno costs

    r102: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r96: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r97,l0) costs: AREG:17016,17016 DREG:17016,17016 CREG:17016,17016 BREG:17016,17016 SIREG:17016,17016 DIREG:17016,17016 AD_REGS:17016,17016 CLOBBERED_REGS:17016,17016 Q_REGS:17016,17016 NON_Q_REGS:17016,17016 TLS_GOTBASE_REGS:17016,17016 GENERAL_REGS:17016,17016 FP_TOP_REG:27651,27651 FP_SECOND_REG:27651,27651 FLOAT_REGS:27651,27651 SSE_FIRST_REG:1418,-709 NO_REX_SSE_REGS:1418,1418 SSE_REGS:1418,1418 FLOAT_SSE_REGS:18434,18434 FLOAT_INT_REGS:27651,27651 INT_SSE_REGS:18434,18434 FLOAT_INT_SSE_REGS:18434,18434 MEM:12762,12762
  a1(r96,l0) costs: AREG:11344,11344 DREG:11344,11344 CREG:11344,11344 BREG:11344,11344 SIREG:11344,11344 DIREG:11344,11344 AD_REGS:11344,11344 CLOBBERED_REGS:11344,11344 Q_REGS:11344,11344 NON_Q_REGS:11344,11344 TLS_GOTBASE_REGS:11344,11344 GENERAL_REGS:11344,11344 FP_TOP_REG:18434,18434 FP_SECOND_REG:18434,18434 FLOAT_REGS:18434,18434 SSE_REGS:0,0 FLOAT_SSE_REGS:18434,18434 FLOAT_INT_REGS:18434,18434 INT_SSE_REGS:18434,18434 FLOAT_INT_SSE_REGS:18434,18434 MEM:8508,8508
  a2(r95,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11344,11344 NO_REX_SSE_REGS:11344,11344 SSE_REGS:11344,11344 MMX_REGS:17725,17725 INT_SSE_REGS:17725,17725 ALL_REGS:225462,225462 MEM:7799,7799
  a3(r87,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11344,11344 NO_REX_SSE_REGS:11344,11344 SSE_REGS:11344,11344 MMX_REGS:18434,18434 INT_SSE_REGS:18434,18434 ALL_REGS:229716,229716 MEM:7799,7799
  a4(r102,l0) costs: AREG:1418,-709 DREG:2836,2836 CREG:2836,2836 BREG:2836,2836 SIREG:2836,2836 DIREG:2836,2836 AD_REGS:1418,1418 CLOBBERED_REGS:1418,1418 Q_REGS:1418,1418 NON_Q_REGS:2836,2836 TLS_GOTBASE_REGS:2836,2836 GENERAL_REGS:1418,1418 SSE_FIRST_REG:17016,17016 NO_REX_SSE_REGS:17016,17016 SSE_REGS:17016,17016 MMX_REGS:27651,27651 INT_SSE_REGS:18434,18434 ALL_REGS:300616,300616 MEM:12053,12053
  a5(r94,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11344,11344 NO_REX_SSE_REGS:11344,11344 SSE_REGS:11344,11344 MMX_REGS:18434,18434 INT_SSE_REGS:18434,18434 ALL_REGS:229716,229716 MEM:8508,8508
  a6(r85,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:17032,17032 NO_REX_SSE_REGS:17032,17032 SSE_REGS:17032,17032 MMX_REGS:27677,27677 INT_SSE_REGS:27677,27677 ALL_REGS:380348,380348 MEM:12774,12774
  a7(r93,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11360,11360 NO_REX_SSE_REGS:11360,11360 SSE_REGS:11360,11360 MMX_REGS:18460,18460 INT_SSE_REGS:18460,18460 ALL_REGS:228620,228620 MEM:8520,8520
  a8(r91,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:13680,13680 NO_REX_SSE_REGS:13680,13680 SSE_REGS:13680,13680 MMX_REGS:21230,21230 INT_SSE_REGS:21230,21230 ALL_REGS:256520,256520 MEM:10260,10260
  a9(r101,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:2000,-1000 DIREG:4000,4000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000
  a10(r100,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:2000,-1000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000

   Insn 63(l0): point = 0
   Insn 62(l0): point = 2
   Insn 54(l0): point = 5
   Insn 53(l0): point = 7
   Insn 52(l0): point = 9
   Insn 50(l0): point = 11
   Insn 49(l0): point = 13
   Insn 69(l0): point = 15
   Insn 43(l0): point = 17
   Insn 40(l0): point = 19
   Insn 39(l0): point = 21
   Insn 32(l0): point = 24
   Insn 31(l0): point = 26
   Insn 30(l0): point = 28
   Insn 29(l0): point = 30
   Insn 28(l0): point = 32
   Insn 18(l0): point = 35
   Insn 17(l0): point = 37
   Insn 16(l0): point = 39
   Insn 13(l0): point = 41
   Insn 10(l0): point = 44
   Insn 9(l0): point = 46
   Insn 68(l0): point = 48
   Insn 2(l0): point = 50
   Insn 67(l0): point = 52
 a0(r97): [8..9]
 a1(r96): [10..11]
 a2(r95): [12..13]
 a3(r87): [14..19]
 a4(r102): [14..15]
 a5(r94): [20..21]
 a6(r85): [35..41] [22..23]
 a7(r93): [38..39]
 a8(r91): [42..50]
 a9(r101): [47..48]
 a10(r100): [51..52]
Compressing live ranges: from 55 to 18 - 32%
Ranges after the compression:
 a0(r97): [0..1]
 a1(r96): [2..3]
 a2(r95): [4..5]
 a3(r87): [6..7]
 a4(r102): [6..7]
 a5(r94): [8..9]
 a6(r85): [10..13]
 a7(r93): [12..13]
 a8(r91): [14..15]
 a9(r101): [14..15]
 a10(r100): [16..17]
+++Allocating 48 bytes for conflict table (uncompressed size 88)
;; a0(r97,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r96,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r95,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r87,l0) conflicts: a4(r102,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

;; a4(r102,l0) conflicts: a3(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r94,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r85,l0) conflicts: a7(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r93,l0) conflicts: a6(r85,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r91,l0) conflicts: a9(r101,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a9(r101,l0) conflicts: a8(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r100,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a2(r95)<->a4(r102)@709:constraint
  cp1:a1(r96)<->a2(r95)@88:shuffle
  cp2:a0(r97)<->a1(r96)@709:constraint
  cp3:a8(r91)<->a10(r100)@1000:move
  pref0:a4(r102)<-hr0@1063
  pref1:a9(r101)<-hr4@1500
  pref2:a10(r100)<-hr5@1500
  pref3:a0(r97)<-hr20@1063
  regions=1, blocks=7, points=18
    allocnos=11 (big 0), copies=4, conflicts=0, ranges=11

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 6 5 4 3 2
    all: 0r97 1r96 2r95 3r87 4r102 5r94 6r85 7r93 8r91 9r101 10r100
    modified regnos: 85 87 91 93 94 95 96 97 100 101 102
    border:
    Pressure: GENERAL_REGS=4 SSE_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 20-27 44-51)@43958
        2:( 0-6 36-43)@136726
          3:( 0-3 5 6 36-43)@56520
            4:( 3 6 40-43)@15598
      Allocno a0r97 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a1r96 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a2r95 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a3r87 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 7-35 44-74)
      Allocno a4r102 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a5r94 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a6r85 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a7r93 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a8r91 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Allocno a9r101 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a10r100 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Forming thread by copy 3:a8r91-a10r100 (freq=1000):
        Result (freq=3710): a8r91(1710) a10r100(2000)
      Forming thread by copy 0:a2r95-a4r102 (freq=709):
        Result (freq=2836): a2r95(1418) a4r102(1418)
      Forming thread by copy 2:a0r97-a1r96 (freq=709):
        Result (freq=2836): a0r97(1418) a1r96(1418)
      Forming thread by copy 1:a1r96-a2r95 (freq=88):
        Result (freq=5672): a0r97(1418) a2r95(1418) a4r102(1418) a1r96(1418)
      Pushing a5(r94,l0)(cost 0)
      Pushing a3(r87,l0)(cost 0)
      Pushing a7(r93,l0)(cost 0)
      Pushing a9(r101,l0)(cost 0)
      Pushing a6(r85,l0)(cost 0)
      Pushing a8(r91,l0)(cost 0)
      Pushing a10(r100,l0)(cost 0)
      Pushing a1(r96,l0)(cost 0)
      Pushing a0(r97,l0)(cost 0)
      Pushing a4(r102,l0)(cost 0)
      Pushing a2(r95,l0)(cost 0)
      Popping a2(r95,l0)  -- assign reg 0
      Popping a4(r102,l0)  -- assign reg 0
      Popping a0(r97,l0)  -- assign reg 20
      Popping a1(r96,l0)  -- assign reg 20
      Popping a10(r100,l0)  -- assign reg 5
      Popping a8(r91,l0)  -- assign reg 5
      Popping a6(r85,l0)  -- assign reg 0
      Popping a9(r101,l0)  -- assign reg 4
      Popping a7(r93,l0)  -- assign reg 1
      Popping a3(r87,l0)  -- assign reg 3
      Popping a5(r94,l0)  -- assign reg 0
Disposition:
    6:r85  l0     0    3:r87  l0     3    8:r91  l0     5    7:r93  l0     1
    5:r94  l0     0    2:r95  l0     0    1:r96  l0    20    0:r97  l0    20
   10:r100 l0     5    9:r101 l0     4    4:r102 l0     0
New iteration of spill/restore move
+++Costs: overall -3418, reg -3418, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_toc

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags] 20 [xmm0]
;;  ref usage 	r0={5d,3u} r1={5d,1u} r2={5d,1u} r4={5d,2u} r5={5d,3u} r6={1d,6u} r7={1d,9u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,5u} r17={6d,2u} r18={3d} r19={1d,6u} r20={5d,1u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r85={1d,4u,1e} r87={1d,3u} r91={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,3u} 
;;    total ref usage 298{240d,57u,1e} in 47{44 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 91 100 101
(note 6 1 65 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(debug_insn 65 6 67 2 (var_location:DI D#5 (reg:DI 5 di [ arg ])) -1
     (nil))
(insn 67 65 2 2 (set (reg:DI 100)
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_time.c":20:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ arg ])
        (nil)))
(insn 2 67 68 2 (set (reg/v/f:DI 91 [ arg ])
        (reg:DI 100)) "cmodules/fbgc_time.c":20:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(insn 68 2 3 2 (set (reg:SI 101)
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_time.c":20:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ argc ])
        (nil)))
(note 3 68 4 2 NOTE_INSN_DELETED)
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 4 9 2 (debug_marker) "cmodules/fbgc_time.c":21:2 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101)
            (const_int 1 [0x1]))) "cmodules/fbgc_time.c":21:4 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 101)
        (nil)))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "cmodules/fbgc_time.c":21:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 311385132 (nil)))
 -> 57)
;;  succ:       6 [29.0% (guessed)]  count:311385128 (estimated locally)
;;              3 [71.0% (guessed)]  count:762356696 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 91

;; basic block 3, loop depth 0, count 762356696 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [71.0% (guessed)]  count:762356696 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 91
;; lr  def 	 17 [flags] 85 93
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 12 11 13 3 (debug_marker) "cmodules/fbgc_time.c":23:2 -1
     (nil))
(insn 13 12 14 3 (set (reg/v/f:DI 85 [ so ])
        (mem/f:DI (reg/v/f:DI 91 [ arg ]) [3 *arg_7(D)+0 S8 A64])) "cmodules/fbgc_time.c":23:31 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 91 [ arg ])
        (nil)))
(debug_insn 14 13 15 3 (var_location:DI so (reg/v/f:DI 85 [ so ])) "cmodules/fbgc_time.c":23:31 -1
     (nil))
(debug_insn 15 14 16 3 (debug_marker) "cmodules/fbgc_time.c":24:2 -1
     (nil))
(insn 16 15 17 3 (set (reg/f:DI 93)
        (symbol_ref:DI ("fbgc_time_module") [flags 0x2]  <var_decl 0x7f0f19661990 fbgc_time_module>)) "cmodules/fbgc_time.c":24:2 66 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref:DI ("fbgc_time_module") [flags 0x2]  <var_decl 0x7f0f19661990 fbgc_time_module>)
        (nil)))
(insn 17 16 18 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 85 [ so ])
                    (const_int 13 [0xd])) [4 so_8->parent+0 S8 A8])
            (reg/f:DI 93))) "cmodules/fbgc_time.c":24:2 12 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (expr_list:REG_EQUAL (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 85 [ so ])
                        (const_int 13 [0xd])) [4 so_8->parent+0 S8 A8])
                (symbol_ref:DI ("fbgc_time_module") [flags 0x2]  <var_decl 0x7f0f19661990 fbgc_time_module>))
            (nil))))
(jump_insn 18 17 19 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) "cmodules/fbgc_time.c":24:2 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 34)
;;  succ:       5 [100.0% (guessed)]  count:762051754 (estimated locally)
;;              4 [0.0% (guessed)]  count:304942 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85

;; basic block 4, loop depth 0, count 304943 (estimated locally)
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [0.0% (guessed)]  count:304942 (estimated locally) (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(6){ }u20(7){ }u21(16){ }u22(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 20 19 21 4 (var_location:DI D#1 (debug_expr:DI D#5)) -1
     (nil))
(debug_insn 21 20 22 4 (var_location:SI D#2 (const_int 1 [0x1])) -1
     (nil))
(debug_insn 22 21 23 4 (debug_marker:BLK) "cmodules/fbgc_time.c":19:1 -1
     (nil))
(debug_insn 23 22 24 4 (var_location:DI D#4 (debug_expr:DI D#1)) -1
     (nil))
(debug_insn 24 23 25 4 (var_location:DI arg (debug_expr:DI D#4)) -1
     (nil))
(debug_insn 25 24 26 4 (var_location:SI D#3 (debug_expr:SI D#2)) -1
     (nil))
(debug_insn 26 25 27 4 (var_location:SI argc (debug_expr:SI D#3)) -1
     (nil))
(debug_insn 27 26 28 4 (debug_marker) "cmodules/fbgc_time.c":24:2 -1
     (nil))
(insn 28 27 29 4 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.5710") [flags 0x2]  <var_decl 0x7f0f19661ea0 __PRETTY_FUNCTION__>)) "cmodules/fbgc_time.c":24:2 66 {*movdi_internal}
     (nil))
(insn 29 28 30 4 (set (reg:SI 1 dx)
        (const_int 24 [0x18])) "cmodules/fbgc_time.c":24:2 67 {*movsi_internal}
     (nil))
(insn 30 29 31 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f0f19240bd0 *.LC0>)) "cmodules/fbgc_time.c":24:2 66 {*movdi_internal}
     (nil))
(insn 31 30 32 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f0f19240c60 *.LC1>)) "cmodules/fbgc_time.c":24:2 66 {*movdi_internal}
     (nil))
(call_insn 32 31 33 4 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f0f19521c00 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_time.c":24:2 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f0f19521c00 __assert_fail>)
                        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                            (expr_list:REG_NORETURN (const_int 0 [0])
                                (expr_list:REG_EH_REGION (const_int 0 [0])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 33 32 34)
;; basic block 5, loop depth 0, count 762051753 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [100.0% (guessed)]  count:762051754 (estimated locally)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(6){ }u29(7){ }u30(16){ }u31(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 87 94 95 96 97 102
(code_label 34 33 35 5 10 (nil) [1 uses])
(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 36 35 37 5 (debug_marker) "cmodules/fbgc_time.c":26:2 -1
     (nil))
(debug_insn 37 36 38 5 (var_location:DI ts (mem/f:DI (plus:DI (reg/v/f:DI 85 [ so ])
            (const_int 21 [0x15])) [1 so_8->cstruct+0 S8 A8])) "cmodules/fbgc_time.c":26:23 -1
     (nil))
(debug_insn 38 37 39 5 (debug_marker) "cmodules/fbgc_time.c":28:2 -1
     (nil))
(insn 39 38 40 5 (set (reg/f:DI 94 [ so_8->cstruct ])
        (mem/f:DI (plus:DI (reg/v/f:DI 85 [ so ])
                (const_int 21 [0x15])) [1 so_8->cstruct+0 S8 A8])) "cmodules/fbgc_time.c":28:10 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 85 [ so ])
        (nil)))
(insn 40 39 41 5 (set (reg/v:DI 87 [ begin ])
        (mem:DI (reg/f:DI 94 [ so_8->cstruct ]) [2 ts_9->clk+0 S8 A8])) "cmodules/fbgc_time.c":28:10 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ so_8->cstruct ])
        (nil)))
(debug_insn 41 40 42 5 (var_location:DI begin (reg/v:DI 87 [ begin ])) "cmodules/fbgc_time.c":28:10 -1
     (nil))
(debug_insn 42 41 43 5 (debug_marker) "cmodules/fbgc_time.c":29:2 -1
     (nil))
(call_insn 43 42 69 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("clock") [flags 0x41]  <function_decl 0x7f0f195eda00 clock>) [0 clock S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_time.c":29:16 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("clock") [flags 0x41]  <function_decl 0x7f0f195eda00 clock>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 69 43 44 5 (set (reg:DI 102)
        (reg:DI 0 ax)) "cmodules/fbgc_time.c":29:16 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(note 44 69 45 5 NOTE_INSN_DELETED)
(debug_insn 45 44 46 5 (var_location:DI end (reg:DI 102)) "cmodules/fbgc_time.c":29:16 -1
     (nil))
(debug_insn 46 45 47 5 (debug_marker) "cmodules/fbgc_time.c":31:2 -1
     (nil))
(debug_insn 47 46 48 5 (var_location:DF tm (div:DF (float:DF (minus:DI (reg:DI 102)
                (reg/v:DI 87 [ begin ])))
        (const_double:DF 1.0e+6 [0x0.f424p+20]))) "cmodules/fbgc_time.c":31:9 -1
     (nil))
(debug_insn 48 47 49 5 (debug_marker) "cmodules/fbgc_time.c":33:2 -1
     (nil))
(insn 49 48 50 5 (parallel [
            (set (reg:DI 95)
                (minus:DI (reg:DI 102)
                    (reg/v:DI 87 [ begin ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_time.c":31:27 247 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 102)
        (expr_list:REG_DEAD (reg/v:DI 87 [ begin ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 50 49 52 5 (set (reg:DF 96)
        (float:DF (reg:DI 95))) "cmodules/fbgc_time.c":31:14 173 {*floatdidf2}
     (expr_list:REG_DEAD (reg:DI 95)
        (nil)))
(insn 52 50 53 5 (set (reg:DF 97 [ tm ])
        (div:DF (reg:DF 96)
            (mem/u/c:DF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S8 A64]))) "cmodules/fbgc_time.c":31:9 822 {*fop_df_1}
     (expr_list:REG_DEAD (reg:DF 96)
        (nil)))
(insn 53 52 54 5 (set (reg:DF 20 xmm0)
        (reg:DF 97 [ tm ])) "cmodules/fbgc_time.c":33:9 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 97 [ tm ])
        (nil)))
(call_insn/j 54 53 55 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f0f19666d00 new_fbgc_double_object>) [0 new_fbgc_double_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_time.c":33:9 681 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f0f19666d00 new_fbgc_double_object>)
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
;;  succ:       EXIT [always]  count:762051753 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 55 54 57)
;; basic block 6, loop depth 0, count 311385129 (estimated locally), maybe hot
;;  prev block 5, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [29.0% (guessed)]  count:311385128 (estimated locally)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u49(6){ }u50(7){ }u51(16){ }u52(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax]
(code_label 57 55 58 6 9 (nil) [1 uses])
(note 58 57 62 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 62 58 63 6 (set (reg/i:DI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_time.c":34:1 66 {*movdi_internal}
     (nil))
(insn 63 62 0 6 (use (reg/i:DI 0 ax)) "cmodules/fbgc_time.c":34:1 -1
     (nil))
;;  succ:       EXIT [always]  count:311385129 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

