
;; Function c_exp (c_exp, funcdef_no=56, decl_uid=5748, cgraph_uid=57, symbol_order=58)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 115 uninteresting
Reg 97: local to bb 2 def dominates all uses has unique first use
Reg 116 uninteresting
Reg 98: local to bb 2 def dominates all uses has unique first use
Reg 89: local to bb 2 def dominates all uses has unique first use
Reg 90: local to bb 2 def dominates all uses has unique first use
Reg 117 uninteresting
Reg 87 uninteresting
Reg 102 uninteresting
Found def insn 18 for 89 to be not moveable
Found def insn 19 for 90 to be not moveable
Examining insn 2, def for 97
  all ok
Examining insn 3, def for 98
  all ok
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 99 had equivalence, but can't be eliminated
Reg 100 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a4 (r117,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a9 (r116,l0) best SSE_REGS, allocno SSE_REGS
    a10 (r115,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a2 (r102,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a8 (r100,l0) best SIREG, allocno SIREG
    a7 (r99,l0) best DIREG, allocno DIREG
    a6 (r98,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a5 (r97,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a1 (r90,l0) best SSE_REGS, allocno SSE_REGS
    a3 (r89,l0) best SSE_REGS, allocno SSE_REGS
    a0 (r87,l0) best SSE_REGS, allocno SSE_REGS

  a0(r87,l0) costs: AREG:18000,18000 DREG:18000,18000 CREG:18000,18000 BREG:18000,18000 SIREG:18000,18000 DIREG:18000,18000 AD_REGS:18000,18000 CLOBBERED_REGS:18000,18000 Q_REGS:18000,18000 NON_Q_REGS:18000,18000 TLS_GOTBASE_REGS:18000,18000 GENERAL_REGS:18000,18000 FP_TOP_REG:34000,34000 FP_SECOND_REG:34000,34000 FLOAT_REGS:34000,34000 SSE_FIRST_REG:2000,2000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:34000,34000 FLOAT_INT_REGS:34000,34000 INT_SSE_REGS:34000,34000 FLOAT_INT_SSE_REGS:34000,34000 MEM:13000,13000
  a1(r90,l0) costs: AREG:12000,12000 DREG:12000,12000 CREG:12000,12000 BREG:12000,12000 SIREG:12000,12000 DIREG:12000,12000 AD_REGS:12000,12000 CLOBBERED_REGS:12000,12000 Q_REGS:12000,12000 NON_Q_REGS:12000,12000 TLS_GOTBASE_REGS:12000,12000 GENERAL_REGS:12000,12000 FP_TOP_REG:27000,27000 FP_SECOND_REG:27000,27000 FLOAT_REGS:27000,27000 SSE_FIRST_REG:2000,2000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:27000,27000 FLOAT_INT_REGS:27000,27000 INT_SSE_REGS:27000,27000 FLOAT_INT_SSE_REGS:27000,27000 MEM:13000,13000
  a2(r102,l0) costs: AREG:16000,16000 DREG:16000,16000 CREG:16000,16000 BREG:16000,16000 SIREG:16000,16000 DIREG:16000,16000 AD_REGS:16000,16000 CLOBBERED_REGS:16000,16000 Q_REGS:16000,16000 NON_Q_REGS:16000,16000 TLS_GOTBASE_REGS:16000,16000 GENERAL_REGS:16000,16000 FP_TOP_REG:26000,26000 FP_SECOND_REG:26000,26000 FLOAT_REGS:26000,26000 SSE_FIRST_REG:-1000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:26000,26000 FLOAT_INT_REGS:26000,26000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:26000,26000 MEM:12000,12000
  a3(r89,l0) costs: AREG:10000,10000 DREG:10000,10000 CREG:10000,10000 BREG:10000,10000 SIREG:10000,10000 DIREG:10000,10000 AD_REGS:10000,10000 CLOBBERED_REGS:10000,10000 Q_REGS:10000,10000 NON_Q_REGS:10000,10000 TLS_GOTBASE_REGS:10000,10000 GENERAL_REGS:10000,10000 FP_TOP_REG:25000,25000 FP_SECOND_REG:25000,25000 FLOAT_REGS:25000,25000 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:25000,25000 FLOAT_INT_REGS:25000,25000 INT_SSE_REGS:25000,25000 FLOAT_INT_SSE_REGS:25000,25000 MEM:12000,12000
  a4(r117,l0) costs: AREG:8000,8000 DREG:8000,8000 CREG:8000,8000 BREG:8000,8000 SIREG:8000,8000 DIREG:8000,8000 AD_REGS:8000,8000 CLOBBERED_REGS:8000,8000 Q_REGS:8000,8000 NON_Q_REGS:8000,8000 TLS_GOTBASE_REGS:8000,8000 GENERAL_REGS:8000,8000 FP_TOP_REG:19000,19000 FP_SECOND_REG:19000,19000 FLOAT_REGS:19000,19000 SSE_FIRST_REG:-1000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:19000,19000 FLOAT_INT_REGS:19000,19000 INT_SSE_REGS:19000,19000 FLOAT_INT_SSE_REGS:19000,19000 MEM:7000,7000
  a5(r97,l0) costs: AREG:8000,8000 DREG:8000,8000 CREG:8000,8000 BREG:8000,8000 SIREG:8000,8000 DIREG:8000,8000 AD_REGS:8000,8000 CLOBBERED_REGS:8000,8000 Q_REGS:8000,8000 NON_Q_REGS:8000,8000 TLS_GOTBASE_REGS:8000,8000 GENERAL_REGS:8000,8000 FP_TOP_REG:19000,19000 FP_SECOND_REG:19000,19000 FLOAT_REGS:19000,19000 SSE_FIRST_REG:-1000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:19000,19000 FLOAT_INT_REGS:19000,19000 INT_SSE_REGS:19000,19000 FLOAT_INT_SSE_REGS:19000,19000 MEM:7000,7000
  a6(r98,l0) costs: AREG:8000,8000 DREG:8000,8000 CREG:8000,8000 BREG:8000,8000 SIREG:8000,8000 DIREG:8000,8000 AD_REGS:8000,8000 CLOBBERED_REGS:8000,8000 Q_REGS:8000,8000 NON_Q_REGS:8000,8000 TLS_GOTBASE_REGS:8000,8000 GENERAL_REGS:8000,8000 FP_TOP_REG:19000,19000 FP_SECOND_REG:19000,19000 FLOAT_REGS:19000,19000 SSE_FIRST_REG:-1000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:19000,19000 FLOAT_INT_REGS:19000,19000 INT_SSE_REGS:19000,19000 FLOAT_INT_SSE_REGS:19000,19000 MEM:7000,7000
  a7(r99,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:-1000,-1000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:12000,12000
  a8(r100,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:-1000,-1000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:12000,12000
  a9(r116,l0) costs: AREG:8000,8000 DREG:8000,8000 CREG:8000,8000 BREG:8000,8000 SIREG:8000,8000 DIREG:8000,8000 AD_REGS:8000,8000 CLOBBERED_REGS:8000,8000 Q_REGS:8000,8000 NON_Q_REGS:8000,8000 TLS_GOTBASE_REGS:8000,8000 GENERAL_REGS:8000,8000 FP_TOP_REG:19000,19000 FP_SECOND_REG:19000,19000 FLOAT_REGS:19000,19000 SSE_FIRST_REG:2000,2000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:19000,19000 FLOAT_INT_REGS:19000,19000 INT_SSE_REGS:19000,19000 FLOAT_INT_SSE_REGS:19000,19000 MEM:7000,7000
  a10(r115,l0) costs: AREG:8000,8000 DREG:8000,8000 CREG:8000,8000 BREG:8000,8000 SIREG:8000,8000 DIREG:8000,8000 AD_REGS:8000,8000 CLOBBERED_REGS:8000,8000 Q_REGS:8000,8000 NON_Q_REGS:8000,8000 TLS_GOTBASE_REGS:8000,8000 GENERAL_REGS:8000,8000 FP_TOP_REG:19000,19000 FP_SECOND_REG:19000,19000 FLOAT_REGS:19000,19000 SSE_FIRST_REG:-1000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:19000,19000 FLOAT_INT_REGS:19000,19000 INT_SSE_REGS:19000,19000 FLOAT_INT_SSE_REGS:19000,19000 MEM:7000,7000


Pass 1 for finding pseudo/allocno costs

    r117: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r116: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r115: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r102: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r100: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r97: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r90: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r89: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r87: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS

  a0(r87,l0) costs: AREG:26000,26000 DREG:26000,26000 CREG:26000,26000 BREG:26000,26000 SIREG:26000,26000 DIREG:26000,26000 AD_REGS:26000,26000 CLOBBERED_REGS:26000,26000 Q_REGS:26000,26000 NON_Q_REGS:26000,26000 TLS_GOTBASE_REGS:26000,26000 GENERAL_REGS:26000,26000 FP_TOP_REG:40000,40000 FP_SECOND_REG:40000,40000 FLOAT_REGS:40000,40000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:40000,40000 FLOAT_INT_REGS:40000,40000 INT_SSE_REGS:40000,40000 FLOAT_INT_SSE_REGS:40000,40000 MEM:18000,18000
  a1(r90,l0) costs: AREG:18000,18000 DREG:18000,18000 CREG:18000,18000 BREG:18000,18000 SIREG:18000,18000 DIREG:18000,18000 AD_REGS:18000,18000 CLOBBERED_REGS:18000,18000 Q_REGS:18000,18000 NON_Q_REGS:18000,18000 TLS_GOTBASE_REGS:18000,18000 GENERAL_REGS:18000,18000 FP_TOP_REG:28000,28000 FP_SECOND_REG:28000,28000 FLOAT_REGS:28000,28000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:28000,28000 FLOAT_INT_REGS:28000,28000 INT_SSE_REGS:28000,28000 FLOAT_INT_SSE_REGS:28000,28000 MEM:13000,13000
  a2(r102,l0) costs: AREG:24000,24000 DREG:24000,24000 CREG:24000,24000 BREG:24000,24000 SIREG:24000,24000 DIREG:24000,24000 AD_REGS:24000,24000 CLOBBERED_REGS:24000,24000 Q_REGS:24000,24000 NON_Q_REGS:24000,24000 TLS_GOTBASE_REGS:24000,24000 GENERAL_REGS:24000,24000 FP_TOP_REG:39000,39000 FP_SECOND_REG:39000,39000 FLOAT_REGS:39000,39000 SSE_FIRST_REG:2000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:26000,26000 FLOAT_INT_REGS:39000,39000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:26000,26000 MEM:18000,18000
  a3(r89,l0) costs: AREG:16000,16000 DREG:16000,16000 CREG:16000,16000 BREG:16000,16000 SIREG:16000,16000 DIREG:16000,16000 AD_REGS:16000,16000 CLOBBERED_REGS:16000,16000 Q_REGS:16000,16000 NON_Q_REGS:16000,16000 TLS_GOTBASE_REGS:16000,16000 GENERAL_REGS:16000,16000 FP_TOP_REG:26000,26000 FP_SECOND_REG:26000,26000 FLOAT_REGS:26000,26000 SSE_REGS:0,0 FLOAT_SSE_REGS:26000,26000 FLOAT_INT_REGS:26000,26000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:26000,26000 MEM:12000,12000
  a4(r117,l0) costs: AREG:24000,24000 DREG:24000,24000 CREG:24000,24000 BREG:24000,24000 SIREG:24000,24000 DIREG:24000,24000 AD_REGS:24000,24000 CLOBBERED_REGS:24000,24000 Q_REGS:24000,24000 NON_Q_REGS:24000,24000 TLS_GOTBASE_REGS:24000,24000 GENERAL_REGS:24000,24000 FP_TOP_REG:38000,38000 FP_SECOND_REG:38000,38000 FLOAT_REGS:38000,38000 SSE_FIRST_REG:2000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:25000,25000 FLOAT_INT_REGS:38000,38000 INT_SSE_REGS:25000,25000 FLOAT_INT_SSE_REGS:25000,25000 MEM:18000,18000
  a5(r97,l0) costs: AREG:24000,24000 DREG:24000,24000 CREG:24000,24000 BREG:24000,24000 SIREG:24000,24000 DIREG:24000,24000 AD_REGS:24000,24000 CLOBBERED_REGS:24000,24000 Q_REGS:24000,24000 NON_Q_REGS:24000,24000 TLS_GOTBASE_REGS:24000,24000 GENERAL_REGS:24000,24000 FP_TOP_REG:38000,38000 FP_SECOND_REG:38000,38000 FLOAT_REGS:38000,38000 SSE_FIRST_REG:2000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:25000,25000 FLOAT_INT_REGS:38000,38000 INT_SSE_REGS:25000,25000 FLOAT_INT_SSE_REGS:25000,25000 MEM:18000,18000
  a6(r98,l0) costs: AREG:24000,24000 DREG:24000,24000 CREG:24000,24000 BREG:24000,24000 SIREG:24000,24000 DIREG:24000,24000 AD_REGS:24000,24000 CLOBBERED_REGS:24000,24000 Q_REGS:24000,24000 NON_Q_REGS:24000,24000 TLS_GOTBASE_REGS:24000,24000 GENERAL_REGS:24000,24000 FP_TOP_REG:38000,38000 FP_SECOND_REG:38000,38000 FLOAT_REGS:38000,38000 SSE_FIRST_REG:2000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:25000,25000 FLOAT_INT_REGS:38000,38000 INT_SSE_REGS:25000,25000 FLOAT_INT_SSE_REGS:25000,25000 MEM:18000,18000
  a7(r99,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:2000,-1000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:18000,18000
  a8(r100,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:2000,-1000 DIREG:4000,4000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:18000,18000
  a9(r116,l0) costs: AREG:24000,24000 DREG:24000,24000 CREG:24000,24000 BREG:24000,24000 SIREG:24000,24000 DIREG:24000,24000 AD_REGS:24000,24000 CLOBBERED_REGS:24000,24000 Q_REGS:24000,24000 NON_Q_REGS:24000,24000 TLS_GOTBASE_REGS:24000,24000 GENERAL_REGS:24000,24000 FP_TOP_REG:38000,38000 FP_SECOND_REG:38000,38000 FLOAT_REGS:38000,38000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:25000,25000 FLOAT_INT_REGS:38000,38000 INT_SSE_REGS:25000,25000 FLOAT_INT_SSE_REGS:25000,25000 MEM:18000,18000
  a10(r115,l0) costs: AREG:24000,24000 DREG:24000,24000 CREG:24000,24000 BREG:24000,24000 SIREG:24000,24000 DIREG:24000,24000 AD_REGS:24000,24000 CLOBBERED_REGS:24000,24000 Q_REGS:24000,24000 NON_Q_REGS:24000,24000 TLS_GOTBASE_REGS:24000,24000 GENERAL_REGS:24000,24000 FP_TOP_REG:38000,38000 FP_SECOND_REG:38000,38000 FLOAT_REGS:38000,38000 SSE_FIRST_REG:2000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:25000,25000 FLOAT_INT_REGS:38000,38000 INT_SSE_REGS:25000,25000 FLOAT_INT_SSE_REGS:25000,25000 MEM:18000,18000

   Insn 50(l0): point = 0
   Insn 49(l0): point = 2
   Insn 48(l0): point = 4
   Insn 47(l0): point = 6
   Insn 32(l0): point = 8
   Insn 25(l0): point = 10
   Insn 64(l0): point = 12
   Insn 24(l0): point = 14
   Insn 23(l0): point = 16
   Insn 19(l0): point = 18
   Insn 18(l0): point = 20
   Insn 17(l0): point = 22
   Insn 16(l0): point = 24
   Insn 15(l0): point = 26
   Insn 14(l0): point = 28
   Insn 13(l0): point = 30
   Insn 12(l0): point = 32
   Insn 3(l0): point = 34
   Insn 63(l0): point = 36
   Insn 2(l0): point = 38
   Insn 62(l0): point = 40
 a0(r87): [5..10]
 a1(r90): [5..18]
 a2(r102): [7..8]
 a3(r89): [9..20]
 a4(r117): [11..12]
 a5(r97): [17..38]
 a6(r98): [25..34]
 a7(r99): [27..32]
 a8(r100): [29..30]
 a9(r116): [35..36]
 a10(r115): [39..40]
Compressing live ranges: from 43 to 14 - 32%
Ranges after the compression:
 a0(r87): [0..3]
 a1(r90): [0..7]
 a2(r102): [0..1]
 a3(r89): [2..7]
 a4(r117): [4..5]
 a5(r97): [6..11]
 a6(r98): [8..9]
 a7(r99): [8..9]
 a8(r100): [8..9]
 a9(r116): [10..11]
 a10(r115): [12..13]
+++Allocating 80 bytes for conflict table (uncompressed size 88)
;; a0(r87,l0) conflicts: a2(r102,l0) a1(r90,l0) a3(r89,l0)
;;     total conflict hard regs: 20
;;     conflict hard regs: 20

;; a1(r90,l0) conflicts: a2(r102,l0) a0(r87,l0) a3(r89,l0) a4(r117,l0) a5(r97,l0)
;;     total conflict hard regs: 20
;;     conflict hard regs: 20

;; a2(r102,l0) conflicts: a0(r87,l0) a1(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r89,l0) conflicts: a0(r87,l0) a1(r90,l0) a4(r117,l0) a5(r97,l0)
;;     total conflict hard regs: 20
;;     conflict hard regs: 20

;; a4(r117,l0) conflicts: a1(r90,l0) a3(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r97,l0) conflicts: a1(r90,l0) a3(r89,l0) a6(r98,l0) a9(r116,l0)
;;     total conflict hard regs: 20 21
;;     conflict hard regs: 20 21

;; a6(r98,l0) conflicts: a5(r97,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r99,l0) conflicts: a8(r100,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a8(r100,l0) conflicts: a7(r99,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r116,l0) conflicts: a5(r97,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r115,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a5(r97)<->a10(r115)@1000:move
  cp1:a6(r98)<->a9(r116)@1000:move
  cp2:a0(r87)<->a4(r117)@1000:move
  cp3:a2(r102)<->a3(r89)@1000:constraint
  pref0:a4(r117)<-hr20@1500
  pref1:a10(r115)<-hr20@1500
  pref2:a2(r102)<-hr20@1500
  pref3:a8(r100)<-hr4@1500
  pref4:a7(r99)<-hr5@1500
  pref5:a6(r98)<-hr20@1500
  pref6:a5(r97)<-hr20@1500
  pref7:a9(r116)<-hr21@2000
  pref8:a1(r90)<-hr21@1000
  pref9:a0(r87)<-hr21@1000
  regions=1, blocks=3, points=14
    allocnos=11 (big 0), copies=4, conflicts=0, ranges=11

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r87 1r90 2r102 3r89 4r117 5r97 6r98 7r99 8r100 9r116 10r115
    modified regnos: 87 89 90 97 98 99 100 102 115 116 117
    border:
    Pressure: GENERAL_REGS=2 SSE_REGS=3
 Removing pref6:hr20@1500
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@38000
          2:( 0-3 5 6 36-43)@38000
        3:( 20-27 44-51)@154000
          4:( 20 22-27 44-51)@38000
            5:( 22-27 44-51)@44000
          6:( 21)@1000
      Allocno a0r87 of SSE_REGS(16) has 15 avail. regs  21-27 44-51, ^node:  20-27 44-51 (confl regs =  0-20 28-43 52-74)
      Allocno a1r90 of SSE_REGS(16) has 1 avail. regs  21, node:  21 (confl regs =  0-20 28-43 52-74)
      Allocno a2r102 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a3r89 of SSE_REGS(16) has 15 avail. regs  21-27 44-51, ^node:  20-27 44-51 (confl regs =  0-20 28-43 52-74)
      Allocno a4r117 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a5r97 of SSE_REGS(16) has 14 avail. regs  22-27 44-51, node:  22-27 44-51 (confl regs =  0-21 28-43 52-74)
      Allocno a6r98 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a7r99 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Allocno a8r100 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a9r116 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a10r115 of SSE_REGS(16) has 15 avail. regs  20 22-27 44-51, node:  20 22-27 44-51 (confl regs =  0-19 21 28-43 52-74)
      Forming thread by copy 0:a5r97-a10r115 (freq=1000):
        Result (freq=4000): a5r97(2000) a10r115(2000)
      Forming thread by copy 1:a6r98-a9r116 (freq=1000):
        Result (freq=4000): a6r98(2000) a9r116(2000)
      Forming thread by copy 2:a0r87-a4r117 (freq=1000):
        Result (freq=5000): a0r87(3000) a4r117(2000)
      Forming thread by copy 3:a2r102-a3r89 (freq=1000):
        Result (freq=4000): a2r102(2000) a3r89(2000)
      Pushing a8(r100,l0)(cost 0)
      Pushing a7(r99,l0)(cost 0)
      Pushing a9(r116,l0)(cost 0)
      Pushing a6(r98,l0)(cost 0)
      Pushing a10(r115,l0)(cost 0)
      Pushing a5(r97,l0)(cost 0)
      Pushing a2(r102,l0)(cost 0)
      Pushing a3(r89,l0)(cost 0)
      Pushing a4(r117,l0)(cost 0)
      Pushing a0(r87,l0)(cost 0)
        Making a1(r90,l0) colorable
      Pushing a1(r90,l0)(cost 1000)
      Popping a1(r90,l0)  -- (memory is more profitable 13000 vs 14306) spill!
      Popping a0(r87,l0)  -- assign reg 21
      Popping a4(r117,l0)  -- assign reg 20
      Popping a3(r89,l0)  -- assign reg 22
      Popping a2(r102,l0)  -- assign reg 20
      Popping a5(r97,l0)  -- assign reg 23
      Popping a10(r115,l0)  -- assign reg 20
      Popping a6(r98,l0)  -- assign reg 20
      Popping a9(r116,l0)  -- assign reg 21
      Popping a7(r99,l0)  -- assign reg 5
      Popping a8(r100,l0)  -- assign reg 4
Disposition:
    0:r87  l0    21    3:r89  l0    22    1:r90  l0   mem    5:r97  l0    23
    6:r98  l0    20    7:r99  l0     5    8:r100 l0     4    2:r102 l0    20
   10:r115 l0    20    9:r116 l0    21    4:r117 l0    20
New iteration of spill/restore move
+++Costs: overall 31000, reg 18000, mem 13000, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


c_exp

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1]
;;  regs ever live 	 4 [si] 5 [di] 7 [sp] 17 [flags] 20 [xmm0] 21 [xmm1]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={4d,1u} r5={4d,1u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={4d} r18={2d} r19={1d,6u,4e} r20={6d,6u} r21={4d,3u} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r87={1d,5u} r89={1d,2u} r90={1d,2u} r97={1d,1u} r98={1d,2u} r99={1d,1u} r100={1d,1u} r102={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} 
;;    total ref usage 218{172d,42u,4e} in 37{35 regular + 2 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 87 89 90 97 98 99 100 102 115 116 117
(note 9 1 62 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 62 9 2 2 (set (reg:DF 115)
        (reg:DF 20 xmm0 [ z ])) "cmodules/fbgc_math.c":22:47 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0 [ z ])
        (nil)))
(insn 2 62 63 2 (set (reg:DF 97 [ z ])
        (reg:DF 115)) "cmodules/fbgc_math.c":22:47 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 115)
        (nil)))
(insn 63 2 3 2 (set (reg:DF 116)
        (reg:DF 21 xmm1 [ z+8 ])) "cmodules/fbgc_math.c":22:47 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm1 [ z+8 ])
        (nil)))
(insn 3 63 61 2 (set (reg:DF 98 [ z+8 ])
        (reg:DF 116)) "cmodules/fbgc_math.c":22:47 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 116)
        (nil)))
(debug_insn 61 3 60 2 (var_location:DI D#24 (subreg:DI (reg:DF 98 [ z+8 ]) 0)) -1
     (nil))
(debug_insn 60 61 8 2 (var_location:DI D#23 (debug_expr:DI D#24)) -1
     (nil))
(note 8 60 11 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 11 8 12 2 (var_location:DF D#22 (subreg:DF (debug_expr:DI D#23) 0)) -1
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg/f:DI 99)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))
(insn 13 12 14 2 (parallel [
            (set (reg/f:DI 100)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (reg/f:DI 100)) 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/f:DI 99)) 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))
(insn 16 15 17 2 (set (reg:DF 20 xmm0)
        (reg:DF 98 [ z+8 ])) 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 98 [ z+8 ])
        (nil)))
(call_insn 17 16 18 2 (call (mem:QI (symbol_ref:DI ("sincos") [flags 0x41]  <function_decl 0x7f213e4ba400 __builtin_sincos>) [0 __builtin_sincos S1 A8])
        (const_int 0 [0])) 666 {*call}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("sincos") [flags 0x41]  <function_decl 0x7f213e4ba400 __builtin_sincos>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 18 17 19 2 (set (reg:DF 89 [ sincostmp_12 ])
        (mem/c:DF (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2  S8 A64])) 111 {*movdf_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DF 90 [ sincostmp_12+8 ])
        (mem/c:DF (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [2  S8 A64])) 111 {*movdf_internal}
     (nil))
(debug_insn 20 19 21 2 (var_location:DF z$imag (debug_expr:DF D#22)) -1
     (nil))
(debug_insn 21 20 22 2 (debug_marker) "cmodules/fbgc_math.c":24:2 -1
     (nil))
(debug_insn 22 21 23 2 (debug_marker) "cmodules/fbgc_math.c":25:2 -1
     (nil))
(insn 23 22 24 2 (set (reg:DF 20 xmm0)
        (reg:DF 97 [ z ])) "cmodules/fbgc_math.c":25:13 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 97 [ z ])
        (nil)))
(call_insn 24 23 64 2 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":25:13 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 64 24 25 2 (set (reg:DF 117)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":25:13 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (nil)))
(insn 25 64 26 2 (set (reg/v:DF 87 [ r ])
        (reg:DF 117)) "cmodules/fbgc_math.c":25:13 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 117)
        (nil)))
(debug_insn 26 25 27 2 (var_location:DF r (reg/v:DF 87 [ r ])) "cmodules/fbgc_math.c":25:13 -1
     (nil))
(debug_insn 27 26 28 2 (debug_marker) "cmodules/fbgc_math.c":26:2 -1
     (nil))
(debug_insn 28 27 29 2 (var_location:DF res$real (mult:DF (reg:DF 89 [ sincostmp_12 ])
        (reg/v:DF 87 [ r ]))) "cmodules/fbgc_math.c":26:11 -1
     (nil))
(debug_insn 29 28 30 2 (debug_marker) "cmodules/fbgc_math.c":27:2 -1
     (nil))
(debug_insn 30 29 31 2 (var_location:DF res$imag (mult:DF (reg:DF 90 [ sincostmp_12+8 ])
        (reg/v:DF 87 [ r ]))) "cmodules/fbgc_math.c":27:11 -1
     (nil))
(debug_insn 31 30 32 2 (debug_marker) "cmodules/fbgc_math.c":28:2 -1
     (nil))
(insn 32 31 33 2 (set (reg:DF 102)
        (mult:DF (reg:DF 89 [ sincostmp_12 ])
            (reg/v:DF 87 [ r ]))) "cmodules/fbgc_math.c":26:14 818 {*fop_df_comm}
     (expr_list:REG_DEAD (reg:DF 89 [ sincostmp_12 ])
        (nil)))
(note 33 32 36 2 NOTE_INSN_DELETED)
(debug_insn 36 33 37 2 (var_location:DF D#1 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 37 36 38 2 (var_location:DF res$real (debug_expr:DF D#1)) -1
     (nil))
(debug_insn 38 37 39 2 (var_location:DF D#2 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 39 38 47 2 (var_location:DF res$imag (debug_expr:DF D#2)) -1
     (nil))
(insn 47 39 48 2 (set (reg:DF 20 xmm0)
        (reg:DF 102)) "cmodules/fbgc_math.c":29:1 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 102)
        (nil)))
(insn 48 47 49 2 (set (reg:DF 21 xmm1)
        (mult:DF (reg:DF 90 [ sincostmp_12+8 ])
            (reg/v:DF 87 [ r ]))) "cmodules/fbgc_math.c":29:1 818 {*fop_df_comm}
     (expr_list:REG_DEAD (reg:DF 90 [ sincostmp_12+8 ])
        (expr_list:REG_DEAD (reg/v:DF 87 [ r ])
            (nil))))
(insn 49 48 50 2 (use (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":29:1 -1
     (nil))
(insn 50 49 0 2 (use (reg:DF 21 xmm1)) "cmodules/fbgc_math.c":29:1 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1]


;; Function fbgc_math_initializer (fbgc_math_initializer, funcdef_no=64, decl_uid=5685, cgraph_uid=65, symbol_order=72)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
rescanning insn with uid = 9.
deleting insn with uid = 8.
rescanning insn with uid = 18.
deleting insn with uid = 17.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
Reg 92 uninteresting
Reg 87: local to bb 2 def dominates all uses has unique first use
Reg 93 uninteresting
Reg 82 uninteresting
Reg 94 uninteresting
Reg 84 uninteresting
Examining insn 2, def for 87
  all ok
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a2 (r94,l0) best AREG, allocno AREG
    a4 (r93,l0) best AREG, allocno AREG
    a5 (r92,l0) best DIREG, allocno DIREG
    a0 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best DREG, allocno DREG
    a3 (r82,l0) best DREG, allocno DREG

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:22000,22000 NO_REX_SSE_REGS:22000,22000 SSE_REGS:22000,22000 MMX_REGS:32000,32000 INT_SSE_REGS:32000,32000 ALL_REGS:524000,524000 MEM:13000,13000
  a1(r84,l0) costs: AREG:2000,2000 DREG:-1000,-1000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:14000,14000 NO_REX_SSE_REGS:14000,14000 SSE_REGS:14000,14000 MMX_REGS:19000,19000 INT_SSE_REGS:19000,19000 ALL_REGS:312000,312000 MEM:7000,7000
  a2(r94,l0) costs: AREG:-1000,-1000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a3(r82,l0) costs: AREG:2000,2000 DREG:-1000,-1000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:14000,14000 NO_REX_SSE_REGS:14000,14000 SSE_REGS:14000,14000 MMX_REGS:19000,19000 INT_SSE_REGS:19000,19000 ALL_REGS:312000,312000 MEM:7000,7000
  a4(r93,l0) costs: AREG:-1000,-1000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a5(r92,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:-1000,-1000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000


Pass 1 for finding pseudo/allocno costs

    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r84: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:38000,38000 INT_SSE_REGS:38000,38000 ALL_REGS:530000,530000 MEM:18000,18000
  a1(r84,l0) costs: AREG:4000,4000 DREG:2000,-1000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:4000,4000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:4000,4000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:38000,38000 INT_SSE_REGS:25000,25000 ALL_REGS:318000,318000 MEM:18000,18000
  a2(r94,l0) costs: AREG:2000,-1000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:4000,4000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:4000,4000 TLS_GOTBASE_REGS:4000,4000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000
  a3(r82,l0) costs: AREG:4000,4000 DREG:2000,-1000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:4000,4000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:4000,4000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:38000,38000 INT_SSE_REGS:25000,25000 ALL_REGS:318000,318000 MEM:18000,18000
  a4(r93,l0) costs: AREG:2000,-1000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:4000,4000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:4000,4000 TLS_GOTBASE_REGS:4000,4000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000
  a5(r92,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:2000,-1000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000

   Insn 31(l0): point = 0
   Insn 30(l0): point = 2
   Insn 24(l0): point = 4
   Insn 23(l0): point = 6
   Insn 22(l0): point = 8
   Insn 21(l0): point = 10
   Insn 20(l0): point = 12
   Insn 35(l0): point = 14
   Insn 19(l0): point = 16
   Insn 18(l0): point = 18
   Insn 15(l0): point = 20
   Insn 14(l0): point = 22
   Insn 13(l0): point = 24
   Insn 12(l0): point = 26
   Insn 11(l0): point = 28
   Insn 34(l0): point = 30
   Insn 10(l0): point = 32
   Insn 9(l0): point = 34
   Insn 2(l0): point = 36
   Insn 33(l0): point = 38
 a0(r87): [7..36]
 a1(r84): [11..12]
 a2(r94): [13..14]
 a3(r82): [27..28]
 a4(r93): [29..30]
 a5(r92): [37..38]
Compressing live ranges: from 41 to 10 - 24%
Ranges after the compression:
 a0(r87): [0..7]
 a1(r84): [0..1]
 a2(r94): [2..3]
 a3(r82): [4..5]
 a4(r93): [6..7]
 a5(r92): [8..9]
+++Allocating 40 bytes for conflict table (uncompressed size 48)
;; a0(r87,l0) conflicts: a1(r84,l0) a2(r94,l0) a3(r82,l0) a4(r93,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a1(r84,l0) conflicts: a0(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r94,l0) conflicts: a0(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r82,l0) conflicts: a0(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r93,l0) conflicts: a0(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r92,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a0(r87)<->a5(r92)@1000:move
  cp1:a3(r82)<->a4(r93)@1000:move
  cp2:a1(r84)<->a2(r94)@1000:move
  pref0:a2(r94)<-hr0@1500
  pref1:a4(r93)<-hr0@1500
  pref2:a5(r92)<-hr5@1500
  pref3:a1(r84)<-hr1@1500
  pref4:a3(r82)<-hr1@1500
  regions=1, blocks=3, points=10
    allocnos=6 (big 0), copies=3, conflicts=0, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r87 1r84 2r94 3r82 4r93 5r92
    modified regnos: 82 84 87 92 93 94
    border:
    Pressure: GENERAL_REGS=4 SSE_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@184000
          2:( 3 6 40-43)@36000
      Allocno a0r87 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 1 4 5 7-35 44-74)
      Allocno a1r84 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a2r94 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a3r82 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a4r93 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a5r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Forming thread by copy 0:a0r87-a5r92 (freq=1000):
        Result (freq=5000): a0r87(3000) a5r92(2000)
      Forming thread by copy 1:a3r82-a4r93 (freq=1000):
        Result (freq=4000): a3r82(2000) a4r93(2000)
      Forming thread by copy 2:a1r84-a2r94 (freq=1000):
        Result (freq=4000): a1r84(2000) a2r94(2000)
      Pushing a4(r93,l0)(cost 0)
      Pushing a3(r82,l0)(cost 0)
      Pushing a2(r94,l0)(cost 0)
      Pushing a1(r84,l0)(cost 0)
      Pushing a5(r92,l0)(cost 0)
      Pushing a0(r87,l0)(cost 0)
      Popping a0(r87,l0)  -- assign reg 3
      Popping a5(r92,l0)  -- assign reg 5
      Popping a1(r84,l0)  -- assign reg 1
      Popping a2(r94,l0)  -- assign reg 0
      Popping a3(r82,l0)  -- assign reg 1
      Popping a4(r93,l0)  -- assign reg 0
Disposition:
    3:r82  l0     1    1:r84  l0     1    0:r87  l0     3    5:r92  l0     5
    4:r93  l0     0    2:r94  l0     0
New iteration of spill/restore move
+++Costs: overall -5000, reg -5000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_math_initializer

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 20 [xmm0]
;;  ref usage 	r0={6d,4u} r1={7d,2u} r2={5d} r4={7d,2u} r5={7d,3u} r6={1d,2u} r7={1d,6u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,1u} r17={4d} r18={4d} r19={1d,2u} r20={7d,2u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={5d} r37={5d} r38={4d} r39={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r82={1d,1u} r84={1d,1u} r87={1d,2u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 333{302d,31u,0e} in 23{19 regular + 4 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 82 84 87 92 93 94
(note 5 1 33 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 33 5 2 2 (set (reg:DI 92)
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_math.c":137:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ arg ])
        (nil)))
(insn 2 33 4 2 (set (reg/v/f:DI 87 [ arg ])
        (reg:DI 92)) "cmodules/fbgc_math.c":137:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(note 4 2 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 9 2 (debug_marker) "cmodules/fbgc_math.c":139:2 -1
     (nil))
(insn 9 7 10 2 (set (reg:DF 20 xmm0)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S8 A64])) "cmodules/fbgc_math.c":139:2 111 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 3.141592653589793115997963468544185161590576171875e+0 [0x0.c90fdaa22168cp+2])
        (nil)))
(call_insn 10 9 34 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f213e3e6d00 new_fbgc_double_object>) [0 new_fbgc_double_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":139:2 677 {*call_value}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f213e3e6d00 new_fbgc_double_object>)
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 34 10 11 2 (set (reg:DI 93)
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":139:2 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 11 34 12 2 (set (reg/f:DI 82 [ _1 ])
        (reg:DI 93)) "cmodules/fbgc_math.c":139:2 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (reg/f:DI 82 [ _1 ])) "cmodules/fbgc_math.c":139:2 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 82 [ _1 ])
        (nil)))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f213e0382d0 *.LC1>)) "cmodules/fbgc_math.c":139:2 66 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 87 [ arg ]) [3 *arg_7(D)+0 S8 A64])) "cmodules/fbgc_math.c":139:2 66 {*movdi_internal}
     (nil))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("add_variable_in_field_object") [flags 0x41]  <function_decl 0x7f213e412700 add_variable_in_field_object>) [0 add_variable_in_field_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":139:2 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("add_variable_in_field_object") [flags 0x41]  <function_decl 0x7f213e412700 add_variable_in_field_object>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(debug_insn 16 15 18 2 (debug_marker) "cmodules/fbgc_math.c":140:2 -1
     (nil))
(insn 18 16 19 2 (set (reg:DF 20 xmm0)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S8 A64])) "cmodules/fbgc_math.c":140:2 111 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 2.718281828459045090795598298427648842334747314453125e+0 [0x0.adf85458a2bb48p+2])
        (nil)))
(call_insn 19 18 35 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f213e3e6d00 new_fbgc_double_object>) [0 new_fbgc_double_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":140:2 677 {*call_value}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f213e3e6d00 new_fbgc_double_object>)
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 35 19 20 2 (set (reg:DI 94)
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":140:2 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 20 35 21 2 (set (reg/f:DI 84 [ _3 ])
        (reg:DI 94)) "cmodules/fbgc_math.c":140:2 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(insn 21 20 22 2 (set (reg:DI 1 dx)
        (reg/f:DI 84 [ _3 ])) "cmodules/fbgc_math.c":140:2 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ _3 ])
        (nil)))
(insn 22 21 23 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f213e038360 *.LC3>)) "cmodules/fbgc_math.c":140:2 66 {*movdi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 87 [ arg ]) [3 *arg_7(D)+0 S8 A64])) "cmodules/fbgc_math.c":140:2 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 87 [ arg ])
        (nil)))
(call_insn 24 23 25 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("add_variable_in_field_object") [flags 0x41]  <function_decl 0x7f213e412700 add_variable_in_field_object>) [0 add_variable_in_field_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":140:2 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("add_variable_in_field_object") [flags 0x41]  <function_decl 0x7f213e412700 add_variable_in_field_object>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(debug_insn 25 24 30 2 (debug_marker) "cmodules/fbgc_math.c":142:2 -1
     (nil))
(insn 30 25 31 2 (set (reg/i:DI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_math.c":143:1 66 {*movdi_internal}
     (nil))
(insn 31 30 0 2 (use (reg/i:DI 0 ax)) "cmodules/fbgc_math.c":143:1 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function fbgc_random (fbgc_random, funcdef_no=66, decl_uid=5737, cgraph_uid=67, symbol_order=76)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 12 count 10 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { 8 }
;; 4 succs { 5 6 }
;; 5 succs { 8 }
;; 6 succs { 9 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
;; 9 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 107 uninteresting
Reg 97 uninteresting (no unique first use)
Reg 108 uninteresting
Reg 98: def dominates all uses has unique first use
Reg 109 uninteresting
Reg 82 uninteresting
Reg 110: local to bb 3 def dominates all uses has unique first use
Reg 99 uninteresting
Reg 111 uninteresting
Reg 100 uninteresting
Reg 112 uninteresting
Reg 101: local to bb 5 def dominates all uses has unique first use
Reg 102 uninteresting
Reg 113 uninteresting
Reg 103 uninteresting
Reg 104 uninteresting
Reg 105 uninteresting
Reg 98 not local to one basic block
Examining insn 50, def for 101
  all ok
Found def insn 93 for 110 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { 8 }
;; 4 succs { 5 6 }
;; 5 succs { 8 }
;; 6 succs { 9 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
;; 9 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 99: (insn_list:REG_DEP_TRUE 29 (nil))
init_insns for 102: (insn_list:REG_DEP_TRUE 51 (nil))

Pass 0 for finding pseudo/allocno costs

    a5 (r113,l0) best AREG, allocno AREG
    a8 (r112,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a11 (r111,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a13 (r110,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a16 (r109,l0) best AREG, allocno AREG
    a17 (r108,l0) best SIREG, allocno SIREG
    a18 (r107,l0) best DIREG, allocno DIREG
    a0 (r105,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a2 (r104,l0) best SSE_REGS, allocno SSE_REGS
    a4 (r103,l0) best SSE_REGS, allocno SSE_REGS
    a7 (r102,l0) best SSE_REGS, allocno SSE_REGS
    a6 (r101,l0) best SSE_REGS, allocno SSE_REGS
    a9 (r100,l0) best DIREG, allocno DIREG
    a14 (r99,l0) best SSE_REGS, allocno SSE_REGS
    a12 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r95,l0) best SSE_REGS, allocno SSE_REGS
    a1 (r91,l0) best SSE_REGS, allocno SSE_REGS
    a15 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r105,l0) costs: AREG:14224,14224 DREG:14224,14224 CREG:14224,14224 BREG:14224,14224 SIREG:14224,14224 DIREG:14224,14224 AD_REGS:14224,14224 CLOBBERED_REGS:14224,14224 Q_REGS:14224,14224 NON_Q_REGS:14224,14224 TLS_GOTBASE_REGS:14224,14224 GENERAL_REGS:14224,14224 FP_TOP_REG:23114,23114 FP_SECOND_REG:23114,23114 FLOAT_REGS:23114,23114 SSE_FIRST_REG:-889,-889 NO_REX_SSE_REGS:1778,1778 SSE_REGS:1778,1778 FLOAT_SSE_REGS:23114,23114 FLOAT_INT_REGS:23114,23114 INT_SSE_REGS:23114,23114 FLOAT_INT_SSE_REGS:23114,23114 MEM:10668,10668
  a1(r91,l0) costs: AREG:9854,9854 DREG:9854,9854 CREG:9854,9854 BREG:9854,9854 SIREG:9854,9854 DIREG:9854,9854 AD_REGS:9854,9854 CLOBBERED_REGS:9854,9854 Q_REGS:9854,9854 NON_Q_REGS:9854,9854 TLS_GOTBASE_REGS:9854,9854 GENERAL_REGS:9854,9854 FP_TOP_REG:23340,23340 FP_SECOND_REG:23340,23340 FLOAT_REGS:23340,23340 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:23340,23340 FLOAT_INT_REGS:23340,23340 INT_SSE_REGS:23340,23340 FLOAT_INT_SSE_REGS:23340,23340 MEM:9773,9773
  a2(r104,l0) costs: AREG:14224,14224 DREG:14224,14224 CREG:14224,14224 BREG:14224,14224 SIREG:14224,14224 DIREG:14224,14224 AD_REGS:14224,14224 CLOBBERED_REGS:14224,14224 Q_REGS:14224,14224 NON_Q_REGS:14224,14224 TLS_GOTBASE_REGS:14224,14224 GENERAL_REGS:14224,14224 FP_TOP_REG:23114,23114 FP_SECOND_REG:23114,23114 FLOAT_REGS:23114,23114 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:23114,23114 FLOAT_INT_REGS:23114,23114 INT_SSE_REGS:23114,23114 FLOAT_INT_SSE_REGS:23114,23114 MEM:9779,9779
  a3(r95,l0) costs: AREG:11066,11066 DREG:11066,11066 CREG:11066,11066 BREG:11066,11066 SIREG:11066,11066 DIREG:11066,11066 AD_REGS:11066,11066 CLOBBERED_REGS:11066,11066 Q_REGS:11066,11066 NON_Q_REGS:11066,11066 TLS_GOTBASE_REGS:11066,11066 GENERAL_REGS:11066,11066 FP_TOP_REG:22576,22576 FP_SECOND_REG:22576,22576 FLOAT_REGS:22576,22576 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:22576,22576 FLOAT_INT_REGS:22576,22576 INT_SSE_REGS:22576,22576 FLOAT_INT_SSE_REGS:22576,22576 MEM:9773,9773
  a4(r103,l0) costs: AREG:14224,14224 DREG:14224,14224 CREG:14224,14224 BREG:14224,14224 SIREG:14224,14224 DIREG:14224,14224 AD_REGS:14224,14224 CLOBBERED_REGS:14224,14224 Q_REGS:14224,14224 NON_Q_REGS:14224,14224 TLS_GOTBASE_REGS:14224,14224 GENERAL_REGS:14224,14224 FP_TOP_REG:23114,23114 FP_SECOND_REG:23114,23114 FLOAT_REGS:23114,23114 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:23114,23114 FLOAT_INT_REGS:23114,23114 INT_SSE_REGS:23114,23114 FLOAT_INT_SSE_REGS:23114,23114 MEM:10668,10668
  a5(r113,l0) costs: AREG:-889,-889 DREG:1778,1778 CREG:1778,1778 BREG:1778,1778 SIREG:1778,1778 DIREG:1778,1778 AD_REGS:1778,1778 CLOBBERED_REGS:1778,1778 Q_REGS:1778,1778 NON_Q_REGS:1778,1778 TLS_GOTBASE_REGS:1778,1778 GENERAL_REGS:1778,1778 SSE_FIRST_REG:12446,12446 NO_REX_SSE_REGS:12446,12446 SSE_REGS:12446,12446 MMX_REGS:16891,16891 INT_SSE_REGS:16891,16891 ALL_REGS:277368,277368 MEM:6223,6223
  a6(r101,l0) costs: AREG:2576,2576 DREG:2576,2576 CREG:2576,2576 BREG:2576,2576 SIREG:2576,2576 DIREG:2576,2576 AD_REGS:2576,2576 CLOBBERED_REGS:2576,2576 Q_REGS:2576,2576 NON_Q_REGS:2576,2576 TLS_GOTBASE_REGS:2576,2576 GENERAL_REGS:2576,2576 FP_TOP_REG:4186,4186 FP_SECOND_REG:4186,4186 FLOAT_REGS:4186,4186 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:4186,4186 FLOAT_INT_REGS:4186,4186 INT_SSE_REGS:4186,4186 FLOAT_INT_SSE_REGS:4186,4186 MEM:1771,1771
  a7(r102,l0) costs: AREG:1610,1610 DREG:1610,1610 CREG:1610,1610 BREG:1610,1610 SIREG:1610,1610 DIREG:1610,1610 AD_REGS:1610,1610 CLOBBERED_REGS:1610,1610 Q_REGS:1610,1610 NON_Q_REGS:1610,1610 TLS_GOTBASE_REGS:1610,1610 GENERAL_REGS:1610,1610 FP_TOP_REG:4025,4025 FP_SECOND_REG:4025,4025 FLOAT_REGS:4025,4025 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:4025,4025 FLOAT_INT_REGS:4025,4025 INT_SSE_REGS:4025,4025 FLOAT_INT_SSE_REGS:4025,4025 MEM:0,0
  a8(r112,l0) costs: AREG:2576,2576 DREG:2576,2576 CREG:2576,2576 BREG:2576,2576 SIREG:2576,2576 DIREG:2576,2576 AD_REGS:2576,2576 CLOBBERED_REGS:2576,2576 Q_REGS:2576,2576 NON_Q_REGS:2576,2576 TLS_GOTBASE_REGS:2576,2576 GENERAL_REGS:2576,2576 FP_TOP_REG:4186,4186 FP_SECOND_REG:4186,4186 FLOAT_REGS:4186,4186 SSE_FIRST_REG:-161,-161 NO_REX_SSE_REGS:322,322 SSE_REGS:322,322 FLOAT_SSE_REGS:4186,4186 FLOAT_INT_REGS:4186,4186 INT_SSE_REGS:4186,4186 FLOAT_INT_SSE_REGS:4186,4186 MEM:1932,1932
  a9(r100,l0) costs: AREG:322,322 DREG:322,322 CREG:322,322 BREG:322,322 SIREG:322,322 DIREG:-161,-161 AD_REGS:322,322 CLOBBERED_REGS:322,322 Q_REGS:322,322 NON_Q_REGS:322,322 TLS_GOTBASE_REGS:322,322 GENERAL_REGS:322,322 SSE_FIRST_REG:2576,2576 NO_REX_SSE_REGS:2576,2576 SSE_REGS:2576,2576 MMX_REGS:4025,4025 INT_SSE_REGS:4025,4025 ALL_REGS:51198,51198 MEM:1932,1932
  a10(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:10192,10192 NO_REX_SSE_REGS:10192,10192 SSE_REGS:10192,10192 MMX_REGS:12812,12812 INT_SSE_REGS:12812,12812 ALL_REGS:211088,211088 MEM:4144,4144
  a11(r111,l0) costs: AREG:1288,1288 DREG:1288,1288 CREG:1288,1288 BREG:1288,1288 SIREG:1288,1288 DIREG:1288,1288 AD_REGS:1288,1288 CLOBBERED_REGS:1288,1288 Q_REGS:1288,1288 NON_Q_REGS:1288,1288 TLS_GOTBASE_REGS:1288,1288 GENERAL_REGS:1288,1288 FP_TOP_REG:3059,3059 FP_SECOND_REG:3059,3059 FLOAT_REGS:3059,3059 SSE_FIRST_REG:-161,-161 NO_REX_SSE_REGS:322,322 SSE_REGS:322,322 FLOAT_SSE_REGS:3059,3059 FLOAT_INT_REGS:3059,3059 INT_SSE_REGS:3059,3059 FLOAT_INT_SSE_REGS:3059,3059 MEM:1127,1127
  a12(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20376,20376 NO_REX_SSE_REGS:20376,20376 SSE_REGS:20376,20376 MMX_REGS:29361,29361 INT_SSE_REGS:29361,29361 ALL_REGS:480964,480964 MEM:9985,9985
  a13(r110,l0) costs: AREG:3232,3232 DREG:3232,3232 CREG:3232,3232 BREG:3232,3232 SIREG:3232,3232 DIREG:3232,3232 AD_REGS:3232,3232 CLOBBERED_REGS:3232,3232 Q_REGS:3232,3232 NON_Q_REGS:3232,3232 TLS_GOTBASE_REGS:3232,3232 GENERAL_REGS:3232,3232 FP_TOP_REG:5252,5252 FP_SECOND_REG:5252,5252 FLOAT_REGS:5252,5252 SSE_FIRST_REG:-202,-202 NO_REX_SSE_REGS:404,404 SSE_REGS:404,404 FLOAT_SSE_REGS:5252,5252 FLOAT_INT_REGS:5252,5252 INT_SSE_REGS:5252,5252 FLOAT_INT_SSE_REGS:5252,5252 MEM:2222,2222
  a14(r99,l0) costs: AREG:2020,2020 DREG:2020,2020 CREG:2020,2020 BREG:2020,2020 SIREG:2020,2020 DIREG:2020,2020 AD_REGS:2020,2020 CLOBBERED_REGS:2020,2020 Q_REGS:2020,2020 NON_Q_REGS:2020,2020 TLS_GOTBASE_REGS:2020,2020 GENERAL_REGS:2020,2020 FP_TOP_REG:5050,5050 FP_SECOND_REG:5050,5050 FLOAT_REGS:5050,5050 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:5050,5050 FLOAT_INT_REGS:5050,5050 INT_SSE_REGS:5050,5050 FLOAT_INT_SSE_REGS:5050,5050 MEM:0,0
  a15(r82,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:14000,14000 NO_REX_SSE_REGS:14000,14000 SSE_REGS:14000,14000 MMX_REGS:19000,19000 INT_SSE_REGS:19000,19000 ALL_REGS:312000,312000 MEM:6000,6000
  a16(r109,l0) costs: AREG:-1000,-1000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a17(r108,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:-1000,-1000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a18(r107,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:-1000,-1000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000


Pass 1 for finding pseudo/allocno costs

    r113: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r111: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r110: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r109: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r104: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r103: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r102: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r101: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r95: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r91: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r105,l0) costs: AREG:21336,21336 DREG:21336,21336 CREG:21336,21336 BREG:21336,21336 SIREG:21336,21336 DIREG:21336,21336 AD_REGS:21336,21336 CLOBBERED_REGS:21336,21336 Q_REGS:21336,21336 NON_Q_REGS:21336,21336 TLS_GOTBASE_REGS:21336,21336 GENERAL_REGS:21336,21336 FP_TOP_REG:34671,34671 FP_SECOND_REG:34671,34671 FLOAT_REGS:34671,34671 SSE_FIRST_REG:1778,-889 NO_REX_SSE_REGS:1778,1778 SSE_REGS:1778,1778 FLOAT_SSE_REGS:23114,23114 FLOAT_INT_REGS:34671,34671 INT_SSE_REGS:23114,23114 FLOAT_INT_SSE_REGS:23114,23114 MEM:16002,16002
  a1(r91,l0) costs: AREG:15504,15504 DREG:15504,15504 CREG:15504,15504 BREG:15504,15504 SIREG:15504,15504 DIREG:15504,15504 AD_REGS:15504,15504 CLOBBERED_REGS:15504,15504 Q_REGS:15504,15504 NON_Q_REGS:15504,15504 TLS_GOTBASE_REGS:15504,15504 GENERAL_REGS:15504,15504 FP_TOP_REG:25033,25033 FP_SECOND_REG:25033,25033 FLOAT_REGS:25033,25033 SSE_REGS:0,0 FLOAT_SSE_REGS:25033,25033 FLOAT_INT_REGS:25033,25033 INT_SSE_REGS:25033,25033 FLOAT_INT_SSE_REGS:25033,25033 MEM:10578,10578
  a2(r104,l0) costs: AREG:14224,14224 DREG:14224,14224 CREG:14224,14224 BREG:14224,14224 SIREG:14224,14224 DIREG:14224,14224 AD_REGS:14224,14224 CLOBBERED_REGS:14224,14224 Q_REGS:14224,14224 NON_Q_REGS:14224,14224 TLS_GOTBASE_REGS:14224,14224 GENERAL_REGS:14224,14224 FP_TOP_REG:23114,23114 FP_SECOND_REG:23114,23114 FLOAT_REGS:23114,23114 SSE_REGS:0,0 FLOAT_SSE_REGS:23114,23114 FLOAT_INT_REGS:23114,23114 INT_SSE_REGS:23114,23114 FLOAT_INT_SSE_REGS:23114,23114 MEM:9779,9779
  a3(r95,l0) costs: AREG:14216,14216 DREG:14216,14216 CREG:14216,14216 BREG:14216,14216 SIREG:14216,14216 DIREG:14216,14216 AD_REGS:14216,14216 CLOBBERED_REGS:14216,14216 Q_REGS:14216,14216 NON_Q_REGS:14216,14216 TLS_GOTBASE_REGS:14216,14216 GENERAL_REGS:14216,14216 FP_TOP_REG:23101,23101 FP_SECOND_REG:23101,23101 FLOAT_REGS:23101,23101 SSE_REGS:0,0 FLOAT_SSE_REGS:23101,23101 FLOAT_INT_REGS:23101,23101 INT_SSE_REGS:23101,23101 FLOAT_INT_SSE_REGS:23101,23101 MEM:9773,9773
  a4(r103,l0) costs: AREG:14224,14224 DREG:14224,14224 CREG:14224,14224 BREG:14224,14224 SIREG:14224,14224 DIREG:14224,14224 AD_REGS:14224,14224 CLOBBERED_REGS:14224,14224 Q_REGS:14224,14224 NON_Q_REGS:14224,14224 TLS_GOTBASE_REGS:14224,14224 GENERAL_REGS:14224,14224 FP_TOP_REG:23114,23114 FP_SECOND_REG:23114,23114 FLOAT_REGS:23114,23114 SSE_REGS:0,0 FLOAT_SSE_REGS:23114,23114 FLOAT_INT_REGS:23114,23114 INT_SSE_REGS:23114,23114 FLOAT_INT_SSE_REGS:23114,23114 MEM:10668,10668
  a5(r113,l0) costs: AREG:1778,-889 DREG:3556,3556 CREG:3556,3556 BREG:3556,3556 SIREG:3556,3556 DIREG:3556,3556 AD_REGS:1778,1778 CLOBBERED_REGS:1778,1778 Q_REGS:1778,1778 NON_Q_REGS:3556,3556 TLS_GOTBASE_REGS:3556,3556 GENERAL_REGS:1778,1778 SSE_FIRST_REG:21336,21336 NO_REX_SSE_REGS:21336,21336 SSE_REGS:21336,21336 MMX_REGS:33782,33782 INT_SSE_REGS:22225,22225 ALL_REGS:282702,282702 MEM:16002,16002
  a6(r101,l0) costs: AREG:2576,2576 DREG:2576,2576 CREG:2576,2576 BREG:2576,2576 SIREG:2576,2576 DIREG:2576,2576 AD_REGS:2576,2576 CLOBBERED_REGS:2576,2576 Q_REGS:2576,2576 NON_Q_REGS:2576,2576 TLS_GOTBASE_REGS:2576,2576 GENERAL_REGS:2576,2576 FP_TOP_REG:4186,4186 FP_SECOND_REG:4186,4186 FLOAT_REGS:4186,4186 SSE_REGS:0,0 FLOAT_SSE_REGS:4186,4186 FLOAT_INT_REGS:4186,4186 INT_SSE_REGS:4186,4186 FLOAT_INT_SSE_REGS:4186,4186 MEM:1771,1771
  a7(r102,l0) costs: AREG:2576,2576 DREG:2576,2576 CREG:2576,2576 BREG:2576,2576 SIREG:2576,2576 DIREG:2576,2576 AD_REGS:2576,2576 CLOBBERED_REGS:2576,2576 Q_REGS:2576,2576 NON_Q_REGS:2576,2576 TLS_GOTBASE_REGS:2576,2576 GENERAL_REGS:2576,2576 FP_TOP_REG:4186,4186 FP_SECOND_REG:4186,4186 FLOAT_REGS:4186,4186 SSE_REGS:0,0 FLOAT_SSE_REGS:4186,4186 FLOAT_INT_REGS:4186,4186 INT_SSE_REGS:4186,4186 FLOAT_INT_SSE_REGS:4186,4186 MEM:0,0
  a8(r112,l0) costs: AREG:3864,3864 DREG:3864,3864 CREG:3864,3864 BREG:3864,3864 SIREG:3864,3864 DIREG:3864,3864 AD_REGS:3864,3864 CLOBBERED_REGS:3864,3864 Q_REGS:3864,3864 NON_Q_REGS:3864,3864 TLS_GOTBASE_REGS:3864,3864 GENERAL_REGS:3864,3864 FP_TOP_REG:6279,6279 FP_SECOND_REG:6279,6279 FLOAT_REGS:6279,6279 SSE_FIRST_REG:322,-161 NO_REX_SSE_REGS:322,322 SSE_REGS:322,322 FLOAT_SSE_REGS:4186,4186 FLOAT_INT_REGS:6279,6279 INT_SSE_REGS:4186,4186 FLOAT_INT_SSE_REGS:4186,4186 MEM:2898,2898
  a9(r100,l0) costs: AREG:644,644 DREG:644,644 CREG:644,644 BREG:644,644 SIREG:644,644 DIREG:322,-161 AD_REGS:644,644 CLOBBERED_REGS:322,322 Q_REGS:644,644 NON_Q_REGS:322,322 TLS_GOTBASE_REGS:322,322 GENERAL_REGS:322,322 SSE_FIRST_REG:3864,3864 NO_REX_SSE_REGS:3864,3864 SSE_REGS:3864,3864 MMX_REGS:6279,6279 INT_SSE_REGS:4186,4186 ALL_REGS:52164,52164 MEM:2898,2898
  a10(r97,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:12192,12192 NO_REX_SSE_REGS:12192,12192 SSE_REGS:12192,12192 MMX_REGS:18812,18812 INT_SSE_REGS:18812,18812 ALL_REGS:217088,217088 MEM:9144,9144
  a11(r111,l0) costs: AREG:3864,3864 DREG:3864,3864 CREG:3864,3864 BREG:3864,3864 SIREG:3864,3864 DIREG:3864,3864 AD_REGS:3864,3864 CLOBBERED_REGS:3864,3864 Q_REGS:3864,3864 NON_Q_REGS:3864,3864 TLS_GOTBASE_REGS:3864,3864 GENERAL_REGS:3864,3864 FP_TOP_REG:6118,6118 FP_SECOND_REG:6118,6118 FLOAT_REGS:6118,6118 SSE_FIRST_REG:322,-161 NO_REX_SSE_REGS:322,322 SSE_REGS:322,322 FLOAT_SSE_REGS:4025,4025 FLOAT_INT_REGS:6118,6118 INT_SSE_REGS:4025,4025 FLOAT_INT_SSE_REGS:4025,4025 MEM:2898,2898
  a12(r98,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:22376,22376 NO_REX_SSE_REGS:22376,22376 SSE_REGS:22376,22376 MMX_REGS:35361,35361 INT_SSE_REGS:35361,35361 ALL_REGS:486964,486964 MEM:14985,14985
  a13(r110,l0) costs: AREG:4848,4848 DREG:4848,4848 CREG:4848,4848 BREG:4848,4848 SIREG:4848,4848 DIREG:4848,4848 AD_REGS:4848,4848 CLOBBERED_REGS:4848,4848 Q_REGS:4848,4848 NON_Q_REGS:4848,4848 TLS_GOTBASE_REGS:4848,4848 GENERAL_REGS:4848,4848 FP_TOP_REG:7878,7878 FP_SECOND_REG:7878,7878 FLOAT_REGS:7878,7878 SSE_FIRST_REG:404,-202 NO_REX_SSE_REGS:404,404 SSE_REGS:404,404 FLOAT_SSE_REGS:5252,5252 FLOAT_INT_REGS:7878,7878 INT_SSE_REGS:5252,5252 FLOAT_INT_SSE_REGS:5252,5252 MEM:3434,3434
  a14(r99,l0) costs: AREG:3232,3232 DREG:3232,3232 CREG:3232,3232 BREG:3232,3232 SIREG:3232,3232 DIREG:3232,3232 AD_REGS:3232,3232 CLOBBERED_REGS:3232,3232 Q_REGS:3232,3232 NON_Q_REGS:3232,3232 TLS_GOTBASE_REGS:3232,3232 GENERAL_REGS:3232,3232 FP_TOP_REG:5252,5252 FP_SECOND_REG:5252,5252 FLOAT_REGS:5252,5252 SSE_REGS:0,0 FLOAT_SSE_REGS:5252,5252 FLOAT_INT_REGS:5252,5252 INT_SSE_REGS:5252,5252 FLOAT_INT_SSE_REGS:5252,5252 MEM:0,0
  a15(r82,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:25000,25000 INT_SSE_REGS:25000,25000 ALL_REGS:318000,318000 MEM:11000,11000
  a16(r109,l0) costs: AREG:2000,-1000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:4000,4000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:4000,4000 TLS_GOTBASE_REGS:4000,4000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000
  a17(r108,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:2000,-1000 DIREG:4000,4000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000
  a18(r107,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:2000,-1000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000

   Insn 86(l0): point = 0
   Insn 85(l0): point = 2
   Insn 77(l0): point = 5
   Insn 76(l0): point = 7
   Insn 75(l0): point = 9
   Insn 74(l0): point = 11
   Insn 73(l0): point = 13
   Insn 96(l0): point = 15
   Insn 71(l0): point = 17
   Insn 7(l0): point = 20
   Insn 6(l0): point = 22
   Insn 61(l0): point = 25
   Insn 99(l0): point = 28
   Insn 52(l0): point = 30
   Insn 51(l0): point = 32
   Insn 50(l0): point = 34
   Insn 95(l0): point = 36
   Insn 47(l0): point = 38
   Insn 46(l0): point = 40
   Insn 45(l0): point = 42
   Insn 42(l0): point = 44
   Insn 94(l0): point = 46
   Insn 41(l0): point = 48
   Insn 40(l0): point = 50
   Insn 37(l0): point = 53
   Insn 36(l0): point = 55
   Insn 97(l0): point = 58
   Insn 5(l0): point = 60
   Insn 30(l0): point = 62
   Insn 29(l0): point = 64
   Insn 93(l0): point = 66
   Insn 26(l0): point = 68
   Insn 25(l0): point = 70
   Insn 22(l0): point = 73
   Insn 21(l0): point = 75
   Insn 15(l0): point = 77
   Insn 14(l0): point = 79
   Insn 13(l0): point = 81
   Insn 92(l0): point = 83
   Insn 12(l0): point = 85
   Insn 3(l0): point = 87
   Insn 91(l0): point = 89
   Insn 2(l0): point = 91
   Insn 90(l0): point = 93
 a0(r105): [8..9]
 a1(r91): [58..60] [28..44] [10..20]
 a2(r104): [10..11]
 a3(r95): [58..62] [28..30] [12..22]
 a4(r103): [12..13]
 a5(r113): [14..15]
 a6(r101): [31..34]
 a7(r102): [31..32]
 a8(r112): [35..36]
 a9(r100): [41..42]
 a10(r97): [71..91] [43..57]
 a11(r111): [45..46]
 a12(r98): [73..87] [56..57]
 a13(r110): [63..66]
 a14(r99): [63..64]
 a15(r82): [80..81]
 a16(r109): [82..83]
 a17(r108): [88..89]
 a18(r107): [92..93]
Compressing live ranges: from 96 to 34 - 35%
Ranges after the compression:
 a0(r105): [0..1]
 a1(r91): [22..23] [2..17]
 a2(r104): [2..3]
 a3(r95): [22..23] [4..9]
 a4(r103): [4..5]
 a5(r113): [6..7]
 a6(r101): [10..11]
 a7(r102): [10..11]
 a8(r112): [12..13]
 a9(r100): [14..15]
 a10(r97): [26..31] [16..21]
 a11(r111): [18..19]
 a12(r98): [26..29] [20..21]
 a13(r110): [24..25]
 a14(r99): [24..25]
 a15(r82): [26..27]
 a16(r109): [28..29]
 a17(r108): [30..31]
 a18(r107): [32..33]
+++Allocating 136 bytes for conflict table (uncompressed size 152)
;; a0(r105,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r91,l0) conflicts: a2(r104,l0) a4(r103,l0) a3(r95,l0) a6(r101,l0) a7(r102,l0) a8(r112,l0)
;;     total conflict hard regs: 20
;;     conflict hard regs: 20

;; a2(r104,l0) conflicts: a1(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r95,l0) conflicts: a1(r91,l0) a4(r103,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r103,l0) conflicts: a1(r91,l0) a3(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r113,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r101,l0) conflicts: a1(r91,l0) a7(r102,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r102,l0) conflicts: a1(r91,l0) a6(r101,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r112,l0) conflicts: a1(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r100,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r97,l0) conflicts: a12(r98,l0) a15(r82,l0) a16(r109,l0) a17(r108,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a11(r111,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r98,l0) conflicts: a10(r97,l0) a15(r82,l0) a16(r109,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a13(r110,l0) conflicts: a14(r99,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r99,l0) conflicts: a13(r110,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r82,l0) conflicts: a10(r97,l0) a12(r98,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r109,l0) conflicts: a10(r97,l0) a12(r98,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r108,l0) conflicts: a10(r97,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r107,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a4(r103)<->a5(r113)@111:shuffle
  cp1:a2(r104)<->a4(r103)@889:constraint
  cp2:a0(r105)<->a2(r104)@889:constraint
  cp3:a0(r105)<->a1(r91)@889:constraint
  cp4:a1(r91)<->a11(r111)@161:move
  cp5:a6(r101)<->a8(r112)@161:constraint
  cp6:a3(r95)<->a7(r102)@161:constraint
  cp7:a3(r95)<->a14(r99)@202:constraint
  cp8:a10(r97)<->a18(r107)@1000:move
  cp9:a12(r98)<->a17(r108)@1000:move
  cp10:a15(r82)<->a16(r109)@1000:move
  pref0:a5(r113)<-hr0@1333
  pref1:a8(r112)<-hr20@241
  pref2:a11(r111)<-hr20@241
  pref3:a13(r110)<-hr20@303
  pref4:a16(r109)<-hr0@1500
  pref5:a17(r108)<-hr4@1500
  pref6:a18(r107)<-hr5@1500
  pref7:a0(r105)<-hr20@1333
  pref8:a9(r100)<-hr5@241
  pref9:a15(r82)<-hr5@1000
  regions=1, blocks=10, points=34
    allocnos=19 (big 0), copies=11, conflicts=0, ranges=23

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 9 8 7 6 5 4 3 2
    all: 0r105 1r91 2r104 3r95 4r103 5r113 6r101 7r102 8r112 9r100 10r97 11r111 12r98 13r110 14r99 15r82 16r109 17r108 18r107
    modified regnos: 82 91 95 97 98 99 100 101 102 103 104 105 107 108 109 110 111 112 113
    border:
    Pressure: GENERAL_REGS=3 SSE_REGS=3
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 20-27 44-51)@97726
        2:( 0-6 36-43)@137900
          3:( 0-3 5 6 36-43)@36000
            4:( 3 6 40-43)@18288
      Spill a1(r91,l0)
      Spill a3(r95,l0)
      Allocno a0r105 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a2r104 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a4r103 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a5r113 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a6r101 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a7r102 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a8r112 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a9r100 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a10r97 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 4 5 7-35 44-74)
      Allocno a11r111 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a12r98 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 36-43, ^node:  0-6 36-43 (confl regs =  0 5 7-35 44-74)
      Allocno a13r110 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a14r99 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a15r82 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a16r109 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a17r108 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a18r107 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Forming thread by copy 8:a10r97-a18r107 (freq=1000):
        Result (freq=3524): a10r97(1524) a18r107(2000)
      Forming thread by copy 9:a12r98-a17r108 (freq=1000):
        Result (freq=4797): a12r98(2797) a17r108(2000)
      Forming thread by copy 10:a15r82-a16r109 (freq=1000):
        Result (freq=4000): a15r82(2000) a16r109(2000)
      Forming thread by copy 1:a2r104-a4r103 (freq=889):
        Result (freq=3556): a2r104(1778) a4r103(1778)
      Forming thread by copy 2:a0r105-a2r104 (freq=889):
        Result (freq=5334): a0r105(1778) a2r104(1778) a4r103(1778)
      Forming thread by copy 5:a6r101-a8r112 (freq=161):
        Result (freq=644): a6r101(322) a8r112(322)
      Forming thread by copy 0:a4r103-a5r113 (freq=111):
        Result (freq=7112): a0r105(1778) a5r113(1778) a2r104(1778) a4r103(1778)
      Pushing a11(r111,l0)(cost 0)
      Pushing a9(r100,l0)(cost 0)
      Pushing a7(r102,l0)(cost 0)
      Pushing a14(r99,l0)(cost 0)
      Pushing a13(r110,l0)(cost 0)
      Pushing a8(r112,l0)(cost 0)
      Pushing a6(r101,l0)(cost 0)
      Pushing a10(r97,l0)(cost 0)
      Pushing a18(r107,l0)(cost 0)
      Pushing a16(r109,l0)(cost 0)
      Pushing a15(r82,l0)(cost 0)
      Pushing a17(r108,l0)(cost 0)
      Pushing a12(r98,l0)(cost 0)
      Pushing a4(r103,l0)(cost 0)
      Pushing a2(r104,l0)(cost 0)
      Pushing a0(r105,l0)(cost 0)
      Pushing a5(r113,l0)(cost 0)
      Popping a5(r113,l0)  -- assign reg 0
      Popping a0(r105,l0)  -- assign reg 20
      Popping a2(r104,l0)  -- assign reg 20
      Popping a4(r103,l0)  -- assign reg 20
      Popping a12(r98,l0)  -- assign reg 3
      Popping a17(r108,l0)  -- assign reg 4
      Popping a15(r82,l0)  -- assign reg 5
      Popping a16(r109,l0)  -- assign reg 0
      Popping a18(r107,l0)  -- assign reg 5
      Popping a10(r97,l0)  -- assign reg 6
      Popping a6(r101,l0)  -- assign reg 20
      Popping a8(r112,l0)  -- assign reg 20
      Popping a13(r110,l0)  -- assign reg 20
      Popping a14(r99,l0)  -- assign reg 21
      Popping a7(r102,l0)  -- assign reg 21
      Popping a9(r100,l0)  -- assign reg 5
      Popping a11(r111,l0)  -- assign reg 20
Disposition:
   15:r82  l0     5    1:r91  l0   mem    3:r95  l0   mem   10:r97  l0     6
   12:r98  l0     3   14:r99  l0    21    9:r100 l0     5    6:r101 l0    20
    7:r102 l0    21    4:r103 l0    20    2:r104 l0    20    0:r105 l0    20
   18:r107 l0     5   17:r108 l0     4   16:r109 l0     0   13:r110 l0    20
   11:r111 l0    20    8:r112 l0    20    5:r113 l0     0
New iteration of spill/restore move
+++Costs: overall 12888, reg -7463, mem 20351, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_random

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 7 [sp] 17 [flags] 20 [xmm0]
;;  ref usage 	r0={9d,4u} r1={8d} r2={8d} r4={8d,1u} r5={12d,5u} r6={1d,9u} r7={1d,16u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r16={1d,8u} r17={9d,3u} r18={7d} r19={1d,9u} r20={9d,4u} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={8d} r37={8d} r38={7d} r39={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r82={1d,1u} r91={3d,4u} r95={3d,1u} r97={1d,3u} r98={1d,2u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,2u} r111={1d,1u} r112={1d,2u} r113={1d,1u} 
;;    total ref usage 605{519d,86u,0e} in 65{58 regular + 7 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 82 97 98 107 108 109
(note 9 1 90 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 90 9 2 2 (set (reg:DI 107)
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_math.c":170:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ arg ])
        (nil)))
(insn 2 90 91 2 (set (reg/v/f:DI 97 [ arg ])
        (reg:DI 107)) "cmodules/fbgc_math.c":170:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 107)
        (nil)))
(insn 91 2 3 2 (set (reg:SI 108)
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_math.c":170:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ argc ])
        (nil)))
(insn 3 91 4 2 (set (reg/v:SI 98 [ argc ])
        (reg:SI 108)) "cmodules/fbgc_math.c":170:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 108)
        (nil)))
(note 4 3 11 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 11 4 12 2 (debug_marker) "cmodules/fbgc_math.c":171:2 -1
     (nil))
(call_insn 12 11 92 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("clock") [flags 0x41]  <function_decl 0x7f213e36da00 clock>) [0 clock S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":171:14 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("clock") [flags 0x41]  <function_decl 0x7f213e36da00 clock>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 92 12 13 2 (set (reg:DI 109)
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":171:14 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 13 92 14 2 (set (reg:DI 82 [ _1 ])
        (reg:DI 109)) "cmodules/fbgc_math.c":171:14 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 109)
        (nil)))
(insn 14 13 15 2 (set (reg:SI 5 di)
        (subreg:SI (reg:DI 82 [ _1 ]) 0)) "cmodules/fbgc_math.c":171:2 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 82 [ _1 ])
        (nil)))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref:DI ("srand") [flags 0x41]  <function_decl 0x7f213e5e7700 srand>) [0 srand S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_math.c":171:2 666 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("srand") [flags 0x41]  <function_decl 0x7f213e5e7700 srand>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(debug_insn 16 15 17 2 (debug_marker) "cmodules/fbgc_math.c":173:2 -1
     (nil))
(debug_insn 17 16 18 2 (var_location:DF min (const_double:DF 0.0 [0x0.0p+0])) "cmodules/fbgc_math.c":173:9 -1
     (nil))
(debug_insn 18 17 19 2 (debug_marker) "cmodules/fbgc_math.c":174:2 -1
     (nil))
(debug_insn 19 18 20 2 (var_location:DF max (const_double:DF 1.0e+0 [0x0.8p+1])) "cmodules/fbgc_math.c":174:9 -1
     (nil))
(debug_insn 20 19 21 2 (debug_marker) "cmodules/fbgc_math.c":176:2 -1
     (nil))
(insn 21 20 22 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 98 [ argc ])
            (const_int 1 [0x1]))) "cmodules/fbgc_math.c":176:4 11 {*cmpsi_1}
     (nil))
(jump_insn 22 21 23 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "cmodules/fbgc_math.c":176:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 856416484 (nil)))
 -> 33)
;;  succ:       3 [20.2% (guessed)]  count:217325344 (estimated locally) (FALLTHRU)
;;              4 [79.8% (guessed)]  count:856416480 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 97 98

;; basic block 3, loop depth 0, count 217325345 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [20.2% (guessed)]  count:217325344 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(6){ }u14(7){ }u15(16){ }u16(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 97
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 97
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 91 95 99 110
(note 23 22 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 24 23 25 3 (debug_marker) "cmodules/fbgc_math.c":177:3 -1
     (nil))
(insn 25 24 26 3 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 97 [ arg ]) [3 *arg_19(D)+0 S8 A64])) "cmodules/fbgc_math.c":177:9 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 97 [ arg ])
        (nil)))
(call_insn 26 25 93 3 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f213e3db700 convert_fbgc_object_to_double>) [0 convert_fbgc_object_to_double S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":177:9 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f213e3db700 convert_fbgc_object_to_double>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 93 26 27 3 (set (reg:DF 110)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":177:9 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (nil)))
(note 27 93 28 3 NOTE_INSN_DELETED)
(debug_insn 28 27 29 3 (var_location:DF max (reg:DF 110)) "cmodules/fbgc_math.c":177:9 -1
     (nil))
(insn 29 28 30 3 (set (reg:DF 99)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S8 A64])) 111 {*movdf_internal}
     (expr_list:REG_EQUIV (const_double:DF 2.147483647e+9 [0x0.fffffffep+31])
        (nil)))
(insn 30 29 5 3 (set (reg:DF 95 [ _34 ])
        (div:DF (reg:DF 99)
            (reg:DF 110))) 822 {*fop_df_1}
     (expr_list:REG_DEAD (reg:DF 110)
        (expr_list:REG_DEAD (reg:DF 99)
            (nil))))
(insn 5 30 97 3 (set (reg/v:DF 91 [ min ])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S8 A64])) "cmodules/fbgc_math.c":173:9 111 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(jump_insn 97 5 98 3 (set (pc)
        (label_ref 62)) 660 {jump}
     (nil)
 -> 62)
;;  succ:       8 [always]  count:217325345 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 91 95

(barrier 98 97 33)
;; basic block 4, loop depth 0, count 856416480 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [79.8% (guessed)]  count:856416480 (estimated locally)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u24(6){ }u25(7){ }u26(16){ }u27(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 97 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 98
;; lr  def 	 17 [flags]
(code_label 33 98 34 4 7 (nil) [1 uses])
(note 34 33 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 35 34 36 4 (debug_marker) "cmodules/fbgc_math.c":179:7 -1
     (nil))
(insn 36 35 37 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 98 [ argc ])
            (const_int 2 [0x2]))) "cmodules/fbgc_math.c":179:9 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/v:SI 98 [ argc ])
        (nil)))
(jump_insn 37 36 38 4 (set (pc)
        (if_then_else (ne (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) "cmodules/fbgc_math.c":179:9 659 {*jcc}
     (int_list:REG_BR_PROB 856416484 (nil))
 -> 55)
;;  succ:       5 [20.2% (guessed)]  count:173338695 (estimated locally) (FALLTHRU)
;;              6 [79.8% (guessed)]  count:683077785 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 17 [flags] 19 [frame] 97

;; basic block 5, loop depth 0, count 173338695 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [20.2% (guessed)]  count:173338695 (estimated locally) (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u30(6){ }u31(7){ }u32(16){ }u33(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 97
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 97
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 91 95 100 101 102 111 112
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 39 38 40 5 (debug_marker) "cmodules/fbgc_math.c":180:3 -1
     (nil))
(insn 40 39 41 5 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 97 [ arg ]) [3 *arg_19(D)+0 S8 A64])) "cmodules/fbgc_math.c":180:9 66 {*movdi_internal}
     (nil))
(call_insn 41 40 94 5 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f213e3db700 convert_fbgc_object_to_double>) [0 convert_fbgc_object_to_double S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":180:9 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f213e3db700 convert_fbgc_object_to_double>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 94 41 42 5 (set (reg:DF 111)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":180:9 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (nil)))
(insn 42 94 43 5 (set (reg/v:DF 91 [ min ])
        (reg:DF 111)) "cmodules/fbgc_math.c":180:9 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 111)
        (nil)))
(debug_insn 43 42 44 5 (var_location:DF min (reg/v:DF 91 [ min ])) "cmodules/fbgc_math.c":180:9 -1
     (nil))
(debug_insn 44 43 45 5 (debug_marker) "cmodules/fbgc_math.c":181:3 -1
     (nil))
(insn 45 44 46 5 (set (reg/f:DI 100 [ MEM[(struct fbgc_object * *)arg_19(D) + 8B] ])
        (mem/f:DI (plus:DI (reg/v/f:DI 97 [ arg ])
                (const_int 8 [0x8])) [3 MEM[(struct fbgc_object * *)arg_19(D) + 8B]+0 S8 A64])) "cmodules/fbgc_math.c":181:9 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 97 [ arg ])
        (nil)))
(insn 46 45 47 5 (set (reg:DI 5 di)
        (reg/f:DI 100 [ MEM[(struct fbgc_object * *)arg_19(D) + 8B] ])) "cmodules/fbgc_math.c":181:9 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100 [ MEM[(struct fbgc_object * *)arg_19(D) + 8B] ])
        (nil)))
(call_insn 47 46 95 5 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f213e3db700 convert_fbgc_object_to_double>) [0 convert_fbgc_object_to_double S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":181:9 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f213e3db700 convert_fbgc_object_to_double>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 95 47 48 5 (set (reg:DF 112)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":181:9 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (nil)))
(note 48 95 49 5 NOTE_INSN_DELETED)
(debug_insn 49 48 50 5 (var_location:DF max (reg:DF 112)) "cmodules/fbgc_math.c":181:9 -1
     (nil))
(insn 50 49 51 5 (set (reg:DF 101)
        (minus:DF (reg:DF 112)
            (reg/v:DF 91 [ min ]))) 822 {*fop_df_1}
     (expr_list:REG_DEAD (reg:DF 112)
        (nil)))
(insn 51 50 52 5 (set (reg:DF 102)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S8 A64])) 111 {*movdf_internal}
     (expr_list:REG_EQUIV (const_double:DF 2.147483647e+9 [0x0.fffffffep+31])
        (nil)))
(insn 52 51 99 5 (set (reg:DF 95 [ _34 ])
        (div:DF (reg:DF 102)
            (reg:DF 101))) 822 {*fop_df_1}
     (expr_list:REG_DEAD (reg:DF 102)
        (expr_list:REG_DEAD (reg:DF 101)
            (nil))))
(jump_insn 99 52 100 5 (set (pc)
        (label_ref 62)) 660 {jump}
     (nil)
 -> 62)
;;  succ:       8 [always]  count:173338695 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 91 95

(barrier 100 99 55)
;; basic block 6, loop depth 0, count 683077784 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [79.8% (guessed)]  count:683077785 (estimated locally)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u49(6){ }u50(7){ }u51(16){ }u52(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 17 [flags] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 17 [flags] 19 [frame]
;; lr  def 	
(code_label 55 100 56 6 9 (nil) [1 uses])
(note 56 55 57 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 57 56 61 6 (debug_marker) "cmodules/fbgc_math.c":183:7 -1
     (nil))
(jump_insn 61 57 88 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "cmodules/fbgc_math.c":183:9 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 186616332 (nil)))
 -> 80)
;;  succ:       9 [17.4% (guessed)]  count:118718918 (estimated locally)
;;              7 [82.6% (guessed)]  count:564358866 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, count 564358866 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL)
;;  pred:       6 [82.6% (guessed)]  count:564358866 (estimated locally) (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u54(6){ }u55(7){ }u56(16){ }u57(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 91 95
(note 88 61 6 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 6 88 7 7 (set (reg:DF 95 [ _34 ])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S8 A64])) 111 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 2.147483647e+9 [0x0.fffffffep+31])
        (nil)))
(insn 7 6 62 7 (set (reg/v:DF 91 [ min ])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S8 A64])) "cmodules/fbgc_math.c":173:9 111 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
;;  succ:       8 [always]  count:564358866 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 91 95

;; basic block 8, loop depth 0, count 955022906 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [always]  count:564358866 (estimated locally) (FALLTHRU)
;;              3 [always]  count:217325345 (estimated locally)
;;              5 [always]  count:173338695 (estimated locally)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u58(6){ }u59(7){ }u60(16){ }u61(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 91 95
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 91 95
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 103 104 105 113
(code_label 62 7 63 8 8 (nil) [2 uses])
(note 63 62 64 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 64 63 65 8 (var_location:DF max (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 65 64 66 8 (var_location:DF min (reg/v:DF 91 [ min ])) -1
     (nil))
(debug_insn 66 65 67 8 (debug_marker) "cmodules/fbgc_math.c":185:2 -1
     (nil))
(debug_insn 67 66 68 8 (var_location:DF range (debug_expr:DF D#25)) "cmodules/fbgc_math.c":185:9 -1
     (nil))
(debug_insn 68 67 69 8 (debug_marker) "cmodules/fbgc_math.c":186:5 -1
     (nil))
(debug_insn 69 68 70 8 (var_location:DF div (div:DF (const_double:DF 2.147483647e+9 [0x0.fffffffep+31])
        (debug_expr:DF D#25))) "cmodules/fbgc_math.c":186:12 -1
     (nil))
(debug_insn 70 69 71 8 (debug_marker) "cmodules/fbgc_math.c":188:2 -1
     (nil))
(call_insn 71 70 96 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7f213e5e7600 rand>) [0 rand S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":188:39 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7f213e5e7600 rand>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 96 71 72 8 (set (reg:SI 113)
        (reg:SI 0 ax)) "cmodules/fbgc_math.c":188:39 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(note 72 96 73 8 NOTE_INSN_DELETED)
(insn 73 72 74 8 (set (reg:DF 103)
        (float:DF (reg:SI 113))) "cmodules/fbgc_math.c":188:46 172 {*floatsidf2}
     (expr_list:REG_DEAD (reg:SI 113)
        (nil)))
(insn 74 73 75 8 (set (reg:DF 104)
        (div:DF (reg:DF 103)
            (reg:DF 95 [ _34 ]))) "cmodules/fbgc_math.c":188:46 822 {*fop_df_1}
     (expr_list:REG_DEAD (reg:DF 103)
        (expr_list:REG_DEAD (reg:DF 95 [ _34 ])
            (nil))))
(insn 75 74 76 8 (set (reg:DF 105)
        (plus:DF (reg:DF 104)
            (reg/v:DF 91 [ min ]))) "cmodules/fbgc_math.c":188:9 818 {*fop_df_comm}
     (expr_list:REG_DEAD (reg:DF 104)
        (expr_list:REG_DEAD (reg/v:DF 91 [ min ])
            (nil))))
(insn 76 75 77 8 (set (reg:DF 20 xmm0)
        (reg:DF 105)) "cmodules/fbgc_math.c":188:9 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 105)
        (nil)))
(call_insn/j 77 76 78 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f213e3e6d00 new_fbgc_double_object>) [0 new_fbgc_double_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":188:9 681 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f213e3e6d00 new_fbgc_double_object>)
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
;;  succ:       EXIT [always]  count:955022906 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 78 77 80)
;; basic block 9, loop depth 0, count 118718918 (estimated locally), maybe hot
;;  prev block 8, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       6 [17.4% (guessed)]  count:118718918 (estimated locally)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u73(6){ }u74(7){ }u75(16){ }u76(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax]
(code_label 80 78 81 9 10 (nil) [1 uses])
(note 81 80 85 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 85 81 86 9 (set (reg/i:DI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_math.c":189:1 66 {*movdi_internal}
     (nil))
(insn 86 85 0 9 (use (reg/i:DI 0 ax)) "cmodules/fbgc_math.c":189:1 -1
     (nil))
;;  succ:       EXIT [always]  count:118718918 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function fbgc_rand (fbgc_rand, funcdef_no=67, decl_uid=5745, cgraph_uid=68, symbol_order=78)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 20 count 17 (  1.1)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 13, latch 10
;;  depth 1, outer 0
;;  nodes: 13 10 9
;;
;; Loop 2
;;  header 9, latch 9
;;  depth 2, outer 1
;;  nodes: 9
;; 2 succs { 3 4 }
;; 3 succs { 6 }
;; 4 succs { 5 14 }
;; 5 succs { 6 }
;; 6 succs { 7 14 }
;; 7 succs { 12 8 }
;; 8 succs { 14 }
;; 9 succs { 9 10 }
;; 10 succs { 13 11 }
;; 11 succs { 14 }
;; 12 succs { 13 }
;; 13 succs { 9 }
;; 14 succs { 1 }
Adding REG_EQUIV to insn 84 for source of insn 85
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 112 uninteresting
Reg 103 uninteresting (no unique first use)
Reg 113 uninteresting
Reg 104: def dominates all uses has unique first use
Reg 114 uninteresting
Reg 82 uninteresting
Reg 115 uninteresting
Reg 116 uninteresting
Reg 105 uninteresting
Reg 117 uninteresting
Reg 118 uninteresting
Reg 119: local to bb 9 def dominates all uses has unique first use
Reg 107 uninteresting
Ignoring reg 108, has equiv memory
Reg 111: def dominates all uses has unique first use
Reg 104 not local to one basic block
Reg 111 not local to one basic block
Found def insn 144 for 119 to be not moveable
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 13, latch 10
;;  depth 1, outer 0
;;  nodes: 13 10 9
;;
;; Loop 2
;;  header 9, latch 9
;;  depth 2, outer 1
;;  nodes: 9
;; 2 succs { 3 4 }
;; 3 succs { 6 }
;; 4 succs { 5 14 }
;; 5 succs { 6 }
;; 6 succs { 7 14 }
;; 7 succs { 12 8 }
;; 8 succs { 14 }
;; 9 succs { 9 10 }
;; 10 succs { 13 11 }
;; 11 succs { 14 }
;; 12 succs { 13 }
;; 13 succs { 9 }
;; 14 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 108: (insn_list:REG_DEP_TRUE 85 (nil))
init_insns for 111: (insn_list:REG_DEP_TRUE 128 (nil))

Pass 0 for finding pseudo/allocno costs

    a37 (r119,l2) best AREG, allocno AREG
    a7 (r118,l0) best AREG, allocno AREG
    a8 (r117,l0) best AREG, allocno AREG
    a11 (r116,l0) best AREG, allocno AREG
    a13 (r115,l0) best AREG, allocno AREG
    a15 (r114,l0) best AREG, allocno AREG
    a16 (r113,l0) best SIREG, allocno SIREG
    a17 (r112,l0) best DIREG, allocno DIREG
    a33 (r111,l2) best SSE_REGS, allocno SSE_REGS
    a24 (r111,l1) best SSE_REGS, allocno SSE_REGS
    a1 (r111,l0) best SSE_REGS, allocno SSE_REGS
    a35 (r108,l2) best SSE_REGS, allocno SSE_REGS
    a36 (r107,l2) best SSE_REGS, allocno SSE_REGS
    a34 (r106,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a9 (r105,l0) best DIREG, allocno DIREG
    a12 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a32 (r102,l2) best AREG, allocno AREG
    a23 (r102,l1) best AREG, allocno AREG
    a0 (r102,l0) best AREG, allocno AREG
    a31 (r101,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a22 (r101,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a30 (r100,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a25 (r100,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a29 (r99,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a21 (r99,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a28 (r98,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a20 (r98,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a27 (r97,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a19 (r97,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a26 (r96,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a18 (r96,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a5 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a14 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r102,l0) costs: AREG:-21,-21 DREG:42,42 CREG:42,42 BREG:42,42 SIREG:42,42 DIREG:42,42 AD_REGS:42,42 CLOBBERED_REGS:42,42 Q_REGS:42,42 NON_Q_REGS:42,42 TLS_GOTBASE_REGS:42,42 GENERAL_REGS:42,42 SSE_FIRST_REG:452,452 NO_REX_SSE_REGS:452,452 SSE_REGS:452,452 MMX_REGS:622,622 INT_SSE_REGS:622,622 ALL_REGS:10208,10208 MEM:234,234
  a1(r111,l0) costs: AREG:20,7140 DREG:20,7140 CREG:20,7140 BREG:20,7140 SIREG:20,7140 DIREG:20,7140 AD_REGS:20,7140 CLOBBERED_REGS:20,7140 Q_REGS:20,7140 NON_Q_REGS:20,7140 TLS_GOTBASE_REGS:20,7140 GENERAL_REGS:20,7140 FP_TOP_REG:120,11690 FP_SECOND_REG:120,11690 FLOAT_REGS:120,11690 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:120,11690 FLOAT_INT_REGS:120,11690 INT_SSE_REGS:120,11690 FLOAT_INT_SSE_REGS:120,11690 MEM:-60,4390
  a2(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:60,2388 NO_REX_SSE_REGS:60,2388 SSE_REGS:60,2388 MMX_REGS:60,3843 INT_SSE_REGS:60,3843 ALL_REGS:1000,62692 MEM:10,1465
  a3(r101,l0) costs: AREG:0,194 DREG:0,194 CREG:0,194 BREG:0,194 SIREG:0,194 DIREG:0,194 AD_REGS:0,194 CLOBBERED_REGS:0,194 Q_REGS:0,194 NON_Q_REGS:0,194 TLS_GOTBASE_REGS:0,194 GENERAL_REGS:0,194 SSE_FIRST_REG:60,9702 NO_REX_SSE_REGS:60,9702 SSE_REGS:60,9702 MMX_REGS:60,15607 INT_SSE_REGS:60,15607 ALL_REGS:1000,251566 MEM:10,6109
  a4(r97,l0) costs: AREG:26,220 DREG:26,220 CREG:26,220 BREG:26,220 SIREG:26,220 DIREG:26,220 AD_REGS:26,220 CLOBBERED_REGS:26,220 Q_REGS:26,220 NON_Q_REGS:26,220 TLS_GOTBASE_REGS:26,220 GENERAL_REGS:26,220 SSE_FIRST_REG:358,2104 NO_REX_SSE_REGS:358,2104 SSE_REGS:358,2104 MMX_REGS:533,3249 INT_SSE_REGS:533,3249 ALL_REGS:8720,50042 MEM:213,1377
  a5(r96,l0) costs: AREG:26,26 DREG:26,26 CREG:26,26 BREG:26,26 SIREG:26,26 DIREG:26,26 AD_REGS:26,26 CLOBBERED_REGS:26,26 Q_REGS:26,26 NON_Q_REGS:26,26 TLS_GOTBASE_REGS:26,26 GENERAL_REGS:26,26 SSE_FIRST_REG:318,1094 NO_REX_SSE_REGS:318,1094 SSE_REGS:318,1094 MMX_REGS:468,1729 INT_SSE_REGS:468,1729 ALL_REGS:7660,28224 MEM:189,674
  a6(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:104,7224 NO_REX_SSE_REGS:104,7224 SSE_REGS:104,7224 MMX_REGS:169,11739 INT_SSE_REGS:169,11739 ALL_REGS:2756,191436 MEM:78,5418
  a7(r118,l0) costs: AREG:-13,-13 DREG:26,26 CREG:26,26 BREG:26,26 SIREG:26,26 DIREG:26,26 AD_REGS:26,26 CLOBBERED_REGS:26,26 Q_REGS:26,26 NON_Q_REGS:26,26 TLS_GOTBASE_REGS:26,26 GENERAL_REGS:26,26 SSE_FIRST_REG:104,104 NO_REX_SSE_REGS:104,104 SSE_REGS:104,104 MMX_REGS:338,338 INT_SSE_REGS:338,338 ALL_REGS:5512,5512 MEM:143,143
  a8(r117,l0) costs: AREG:-9,-9 DREG:18,18 CREG:18,18 BREG:18,18 SIREG:18,18 DIREG:18,18 AD_REGS:18,18 CLOBBERED_REGS:18,18 Q_REGS:18,18 NON_Q_REGS:18,18 TLS_GOTBASE_REGS:18,18 GENERAL_REGS:18,18 SSE_FIRST_REG:144,144 NO_REX_SSE_REGS:144,144 SSE_REGS:144,144 MMX_REGS:234,234 INT_SSE_REGS:234,234 ALL_REGS:3816,3816 MEM:99,99
  a9(r105,l0) costs: AREG:18,18 DREG:18,18 CREG:18,18 BREG:18,18 SIREG:18,18 DIREG:-9,-9 AD_REGS:18,18 CLOBBERED_REGS:18,18 Q_REGS:18,18 NON_Q_REGS:18,18 TLS_GOTBASE_REGS:18,18 GENERAL_REGS:18,18 SSE_FIRST_REG:144,144 NO_REX_SSE_REGS:144,144 SSE_REGS:144,144 MMX_REGS:225,225 INT_SSE_REGS:225,225 ALL_REGS:2862,2862 MEM:108,108
  a10(r103,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:302,302 NO_REX_SSE_REGS:302,302 SSE_REGS:302,302 MMX_REGS:412,412 INT_SSE_REGS:412,412 ALL_REGS:6764,6764 MEM:153,153
  a11(r116,l0) costs: AREG:-9,-9 DREG:18,18 CREG:18,18 BREG:18,18 SIREG:18,18 DIREG:18,18 AD_REGS:18,18 CLOBBERED_REGS:18,18 Q_REGS:18,18 NON_Q_REGS:18,18 TLS_GOTBASE_REGS:18,18 GENERAL_REGS:18,18 SSE_FIRST_REG:144,144 NO_REX_SSE_REGS:144,144 SSE_REGS:144,144 MMX_REGS:234,234 INT_SSE_REGS:234,234 ALL_REGS:3816,3816 MEM:99,99
  a12(r104,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:430,430 NO_REX_SSE_REGS:430,430 SSE_REGS:430,430 MMX_REGS:620,620 INT_SSE_REGS:620,620 ALL_REGS:10156,10156 MEM:211,211
  a13(r115,l0) costs: AREG:-4,-4 DREG:8,8 CREG:8,8 BREG:8,8 SIREG:8,8 DIREG:8,8 AD_REGS:8,8 CLOBBERED_REGS:8,8 Q_REGS:8,8 NON_Q_REGS:8,8 TLS_GOTBASE_REGS:8,8 GENERAL_REGS:8,8 SSE_FIRST_REG:64,64 NO_REX_SSE_REGS:64,64 SSE_REGS:64,64 MMX_REGS:104,104 INT_SSE_REGS:104,104 ALL_REGS:1696,1696 MEM:44,44
  a14(r82,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:294,294 NO_REX_SSE_REGS:294,294 SSE_REGS:294,294 MMX_REGS:399,399 INT_SSE_REGS:399,399 ALL_REGS:6552,6552 MEM:126,126
  a15(r114,l0) costs: AREG:-21,-21 DREG:42,42 CREG:42,42 BREG:42,42 SIREG:42,42 DIREG:42,42 AD_REGS:42,42 CLOBBERED_REGS:42,42 Q_REGS:42,42 NON_Q_REGS:42,42 TLS_GOTBASE_REGS:42,42 GENERAL_REGS:42,42 SSE_FIRST_REG:168,168 NO_REX_SSE_REGS:168,168 SSE_REGS:168,168 MMX_REGS:546,546 INT_SSE_REGS:546,546 ALL_REGS:8904,8904 MEM:231,231
  a16(r113,l0) costs: AREG:42,42 DREG:42,42 CREG:42,42 BREG:42,42 SIREG:-21,-21 DIREG:42,42 AD_REGS:42,42 CLOBBERED_REGS:42,42 Q_REGS:42,42 NON_Q_REGS:42,42 TLS_GOTBASE_REGS:42,42 GENERAL_REGS:42,42 SSE_FIRST_REG:336,336 NO_REX_SSE_REGS:336,336 SSE_REGS:336,336 MMX_REGS:546,546 INT_SSE_REGS:546,546 ALL_REGS:8904,8904 MEM:231,231
  a17(r112,l0) costs: AREG:42,42 DREG:42,42 CREG:42,42 BREG:42,42 SIREG:42,42 DIREG:-21,-21 AD_REGS:42,42 CLOBBERED_REGS:42,42 Q_REGS:42,42 NON_Q_REGS:42,42 TLS_GOTBASE_REGS:42,42 GENERAL_REGS:42,42 SSE_FIRST_REG:168,168 NO_REX_SSE_REGS:168,168 SSE_REGS:168,168 MMX_REGS:546,546 INT_SSE_REGS:546,546 ALL_REGS:8904,8904 MEM:231,231
  a18(r96,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:776,776 NO_REX_SSE_REGS:776,776 SSE_REGS:776,776 MMX_REGS:1261,1261 INT_SSE_REGS:1261,1261 ALL_REGS:20564,20564 MEM:485,485
  a19(r97,l1) costs: AREG:194,194 DREG:194,194 CREG:194,194 BREG:194,194 SIREG:194,194 DIREG:194,194 AD_REGS:194,194 CLOBBERED_REGS:194,194 Q_REGS:194,194 NON_Q_REGS:194,194 TLS_GOTBASE_REGS:194,194 GENERAL_REGS:194,194 SSE_FIRST_REG:1746,1746 NO_REX_SSE_REGS:1746,1746 SSE_REGS:1746,1746 MMX_REGS:2716,2716 INT_SSE_REGS:2716,2716 ALL_REGS:41322,41322 MEM:1164,1164
  a20(r98,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,7120 NO_REX_SSE_REGS:0,7120 SSE_REGS:0,7120 MMX_REGS:0,11570 INT_SSE_REGS:0,11570 ALL_REGS:0,188680 MEM:0,5340
  a21(r99,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2328,2328 NO_REX_SSE_REGS:2328,2328 SSE_REGS:2328,2328 MMX_REGS:3783,3783 INT_SSE_REGS:3783,3783 ALL_REGS:61692,61692 MEM:1455,1455
  a22(r101,l1) costs: AREG:194,194 DREG:194,194 CREG:194,194 BREG:194,194 SIREG:194,194 DIREG:194,194 AD_REGS:194,194 CLOBBERED_REGS:194,194 Q_REGS:194,194 NON_Q_REGS:194,194 TLS_GOTBASE_REGS:194,194 GENERAL_REGS:194,194 SSE_FIRST_REG:2522,9642 NO_REX_SSE_REGS:2522,9642 SSE_REGS:2522,9642 MMX_REGS:3977,15547 INT_SSE_REGS:3977,15547 ALL_REGS:61886,250566 MEM:1649,6099
  a23(r102,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a24(r111,l1) costs: AREG:0,7120 DREG:0,7120 CREG:0,7120 BREG:0,7120 SIREG:0,7120 DIREG:0,7120 AD_REGS:0,7120 CLOBBERED_REGS:0,7120 Q_REGS:0,7120 NON_Q_REGS:0,7120 TLS_GOTBASE_REGS:0,7120 GENERAL_REGS:0,7120 FP_TOP_REG:0,11570 FP_SECOND_REG:0,11570 FLOAT_REGS:0,11570 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:0,11570 FLOAT_INT_REGS:0,11570 INT_SSE_REGS:0,11570 FLOAT_INT_SSE_REGS:0,11570 MEM:0,4450
  a25(r100,l1) costs: AREG:194,194 DREG:194,194 CREG:194,194 BREG:194,194 SIREG:194,194 DIREG:194,194 AD_REGS:194,194 CLOBBERED_REGS:194,194 Q_REGS:194,194 NON_Q_REGS:194,194 TLS_GOTBASE_REGS:194,194 GENERAL_REGS:194,194 SSE_FIRST_REG:970,22330 NO_REX_SSE_REGS:970,22330 SSE_REGS:970,22330 MMX_REGS:1455,41505 INT_SSE_REGS:1455,41505 ALL_REGS:20758,675798 MEM:679,14919
  a26(r96,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a27(r97,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a28(r98,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7120,7120 NO_REX_SSE_REGS:7120,7120 SSE_REGS:7120,7120 MMX_REGS:11570,11570 INT_SSE_REGS:11570,11570 ALL_REGS:188680,188680 MEM:5340,5340
  a29(r99,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a30(r100,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21360,21360 NO_REX_SSE_REGS:21360,21360 SSE_REGS:21360,21360 MMX_REGS:40050,40050 INT_SSE_REGS:40050,40050 ALL_REGS:655040,655040 MEM:14240,14240
  a31(r101,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7120,7120 NO_REX_SSE_REGS:7120,7120 SSE_REGS:7120,7120 MMX_REGS:11570,11570 INT_SSE_REGS:11570,11570 ALL_REGS:188680,188680 MEM:4450,4450
  a32(r102,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a33(r111,l2) costs: AREG:7120,7120 DREG:7120,7120 CREG:7120,7120 BREG:7120,7120 SIREG:7120,7120 DIREG:7120,7120 AD_REGS:7120,7120 CLOBBERED_REGS:7120,7120 Q_REGS:7120,7120 NON_Q_REGS:7120,7120 TLS_GOTBASE_REGS:7120,7120 GENERAL_REGS:7120,7120 FP_TOP_REG:11570,11570 FP_SECOND_REG:11570,11570 FLOAT_REGS:11570,11570 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:11570,11570 FLOAT_INT_REGS:11570,11570 INT_SSE_REGS:11570,11570 FLOAT_INT_SSE_REGS:11570,11570 MEM:4450,4450
  a34(r106,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7120,7120 NO_REX_SSE_REGS:7120,7120 SSE_REGS:7120,7120 MMX_REGS:18690,18690 INT_SSE_REGS:18690,18690 ALL_REGS:279460,279460 MEM:8010,8010
  a35(r108,l2) costs: AREG:8900,8900 DREG:8900,8900 CREG:8900,8900 BREG:8900,8900 SIREG:8900,8900 DIREG:8900,8900 AD_REGS:8900,8900 CLOBBERED_REGS:8900,8900 Q_REGS:8900,8900 NON_Q_REGS:8900,8900 TLS_GOTBASE_REGS:8900,8900 GENERAL_REGS:8900,8900 FP_TOP_REG:22250,22250 FP_SECOND_REG:22250,22250 FLOAT_REGS:22250,22250 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:22250,22250 FLOAT_INT_REGS:22250,22250 INT_SSE_REGS:22250,22250 FLOAT_INT_SSE_REGS:22250,22250 MEM:10680,10680
  a36(r107,l2) costs: AREG:14240,14240 DREG:14240,14240 CREG:14240,14240 BREG:14240,14240 SIREG:14240,14240 DIREG:14240,14240 AD_REGS:14240,14240 CLOBBERED_REGS:14240,14240 Q_REGS:14240,14240 NON_Q_REGS:14240,14240 TLS_GOTBASE_REGS:14240,14240 GENERAL_REGS:14240,14240 FP_TOP_REG:23140,23140 FP_SECOND_REG:23140,23140 FLOAT_REGS:23140,23140 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:23140,23140 FLOAT_INT_REGS:23140,23140 INT_SSE_REGS:23140,23140 FLOAT_INT_SSE_REGS:23140,23140 MEM:10680,10680
  a37(r119,l2) costs: AREG:-890,-890 DREG:1780,1780 CREG:1780,1780 BREG:1780,1780 SIREG:1780,1780 DIREG:1780,1780 AD_REGS:1780,1780 CLOBBERED_REGS:1780,1780 Q_REGS:1780,1780 NON_Q_REGS:1780,1780 TLS_GOTBASE_REGS:1780,1780 GENERAL_REGS:1780,1780 SSE_FIRST_REG:12460,12460 NO_REX_SSE_REGS:12460,12460 SSE_REGS:12460,12460 MMX_REGS:16910,16910 INT_SSE_REGS:16910,16910 ALL_REGS:277680,277680 MEM:6230,6230


Pass 1 for finding pseudo/allocno costs

    r119: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r108: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r107: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r105: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r102: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r102,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a23 (r102,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r102,l0) costs: AREG:42,-21 DREG:84,84 CREG:84,84 BREG:84,84 SIREG:84,84 DIREG:84,84 AD_REGS:42,42 CLOBBERED_REGS:42,42 Q_REGS:42,42 NON_Q_REGS:84,84 TLS_GOTBASE_REGS:84,84 GENERAL_REGS:42,42 SSE_FIRST_REG:680,680 NO_REX_SSE_REGS:680,680 SSE_REGS:680,680 MMX_REGS:1075,1075 INT_SSE_REGS:802,802 ALL_REGS:10388,10388 MEM:510,510
  a1(r111,l0) costs: AREG:80,7200 DREG:80,7200 CREG:80,7200 BREG:80,7200 SIREG:80,7200 DIREG:80,7200 AD_REGS:80,7200 CLOBBERED_REGS:80,7200 Q_REGS:80,7200 NON_Q_REGS:80,7200 TLS_GOTBASE_REGS:80,7200 GENERAL_REGS:80,7200 FP_TOP_REG:130,11700 FP_SECOND_REG:130,11700 FLOAT_REGS:130,11700 SSE_REGS:0,0 FLOAT_SSE_REGS:130,11700 FLOAT_INT_REGS:130,11700 INT_SSE_REGS:130,11700 FLOAT_INT_SSE_REGS:130,11700 MEM:-60,4390
  a2(r99,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:80,2408 NO_REX_SSE_REGS:80,2408 SSE_REGS:80,2408 MMX_REGS:120,3903 INT_SSE_REGS:120,3903 ALL_REGS:1060,62752 MEM:60,1515
  a3(r101,l0) costs: GENERAL_REGS:0,194 SSE_FIRST_REG:80,9722 NO_REX_SSE_REGS:80,9722 SSE_REGS:80,9722 MMX_REGS:120,15667 INT_SSE_REGS:120,15667 ALL_REGS:1060,251626 MEM:60,6159
  a4(r97,l0) costs: GENERAL_REGS:26,220 SSE_FIRST_REG:488,2234 NO_REX_SSE_REGS:488,2234 SSE_REGS:488,2234 MMX_REGS:780,3496 INT_SSE_REGS:611,3327 ALL_REGS:8798,50120 MEM:356,1520
  a5(r96,l0) costs: GENERAL_REGS:26,26 SSE_FIRST_REG:448,1224 NO_REX_SSE_REGS:448,1224 SSE_REGS:448,1224 MMX_REGS:715,1976 INT_SSE_REGS:546,1807 ALL_REGS:7738,28302 MEM:332,817
  a6(r98,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:104,7224 NO_REX_SSE_REGS:104,7224 SSE_REGS:104,7224 MMX_REGS:169,11739 INT_SSE_REGS:169,11739 ALL_REGS:2756,191436 MEM:78,5418
  a7(r118,l0) costs: AREG:26,-13 DREG:52,52 CREG:52,52 BREG:52,52 SIREG:52,52 DIREG:52,52 AD_REGS:26,26 CLOBBERED_REGS:26,26 Q_REGS:26,26 NON_Q_REGS:52,52 TLS_GOTBASE_REGS:52,52 GENERAL_REGS:26,26 SSE_FIRST_REG:312,312 NO_REX_SSE_REGS:312,312 SSE_REGS:312,312 MMX_REGS:507,507 INT_SSE_REGS:338,338 ALL_REGS:5512,5512 MEM:221,221
  a8(r117,l0) costs: AREG:18,-9 DREG:36,36 CREG:36,36 BREG:36,36 SIREG:36,36 DIREG:36,36 AD_REGS:18,18 CLOBBERED_REGS:18,18 Q_REGS:18,18 NON_Q_REGS:36,36 TLS_GOTBASE_REGS:36,36 GENERAL_REGS:18,18 SSE_FIRST_REG:216,216 NO_REX_SSE_REGS:216,216 SSE_REGS:216,216 MMX_REGS:351,351 INT_SSE_REGS:234,234 ALL_REGS:3816,3816 MEM:153,153
  a9(r105,l0) costs: AREG:36,36 DREG:36,36 CREG:36,36 BREG:36,36 SIREG:36,36 DIREG:18,-9 AD_REGS:36,36 CLOBBERED_REGS:18,18 Q_REGS:36,36 NON_Q_REGS:18,18 TLS_GOTBASE_REGS:18,18 GENERAL_REGS:18,18 SSE_FIRST_REG:216,216 NO_REX_SSE_REGS:216,216 SSE_REGS:216,216 MMX_REGS:351,351 INT_SSE_REGS:234,234 ALL_REGS:2916,2916 MEM:162,162
  a10(r103,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:344,344 NO_REX_SSE_REGS:344,344 SSE_REGS:344,344 MMX_REGS:538,538 INT_SSE_REGS:538,538 ALL_REGS:6890,6890 MEM:258,258
  a11(r116,l0) costs: AREG:18,-9 DREG:36,36 CREG:36,36 BREG:36,36 SIREG:36,36 DIREG:36,36 AD_REGS:18,18 CLOBBERED_REGS:18,18 Q_REGS:18,18 NON_Q_REGS:36,36 TLS_GOTBASE_REGS:36,36 GENERAL_REGS:18,18 SSE_FIRST_REG:216,216 NO_REX_SSE_REGS:216,216 SSE_REGS:216,216 MMX_REGS:351,351 INT_SSE_REGS:234,234 ALL_REGS:3816,3816 MEM:153,153
  a12(r104,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:472,472 NO_REX_SSE_REGS:472,472 SSE_REGS:472,472 MMX_REGS:746,746 INT_SSE_REGS:746,746 ALL_REGS:10282,10282 MEM:316,316
  a13(r115,l0) costs: AREG:8,-4 DREG:16,16 CREG:16,16 BREG:16,16 SIREG:16,16 DIREG:16,16 AD_REGS:8,8 CLOBBERED_REGS:8,8 Q_REGS:8,8 NON_Q_REGS:16,16 TLS_GOTBASE_REGS:16,16 GENERAL_REGS:8,8 SSE_FIRST_REG:96,96 NO_REX_SSE_REGS:96,96 SSE_REGS:96,96 MMX_REGS:156,156 INT_SSE_REGS:104,104 ALL_REGS:1696,1696 MEM:68,68
  a14(r82,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:336,336 NO_REX_SSE_REGS:336,336 SSE_REGS:336,336 MMX_REGS:525,525 INT_SSE_REGS:525,525 ALL_REGS:6678,6678 MEM:231,231
  a15(r114,l0) costs: AREG:42,-21 DREG:84,84 CREG:84,84 BREG:84,84 SIREG:84,84 DIREG:84,84 AD_REGS:42,42 CLOBBERED_REGS:42,42 Q_REGS:42,42 NON_Q_REGS:84,84 TLS_GOTBASE_REGS:84,84 GENERAL_REGS:42,42 SSE_FIRST_REG:504,504 NO_REX_SSE_REGS:504,504 SSE_REGS:504,504 MMX_REGS:819,819 INT_SSE_REGS:546,546 ALL_REGS:8904,8904 MEM:357,357
  a16(r113,l0) costs: AREG:84,84 DREG:84,84 CREG:84,84 BREG:84,84 SIREG:42,-21 DIREG:84,84 AD_REGS:84,84 CLOBBERED_REGS:42,42 Q_REGS:84,84 NON_Q_REGS:42,42 TLS_GOTBASE_REGS:42,42 GENERAL_REGS:42,42 SSE_FIRST_REG:504,504 NO_REX_SSE_REGS:504,504 SSE_REGS:504,504 MMX_REGS:819,819 INT_SSE_REGS:546,546 ALL_REGS:8904,8904 MEM:357,357
  a17(r112,l0) costs: AREG:84,84 DREG:84,84 CREG:84,84 BREG:84,84 SIREG:84,84 DIREG:42,-21 AD_REGS:84,84 CLOBBERED_REGS:42,42 Q_REGS:84,84 NON_Q_REGS:42,42 TLS_GOTBASE_REGS:42,42 GENERAL_REGS:42,42 SSE_FIRST_REG:504,504 NO_REX_SSE_REGS:504,504 SSE_REGS:504,504 MMX_REGS:819,819 INT_SSE_REGS:546,546 ALL_REGS:8904,8904 MEM:357,357
  a18(r96,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:776,776 NO_REX_SSE_REGS:776,776 SSE_REGS:776,776 MMX_REGS:1261,1261 INT_SSE_REGS:1261,1261 ALL_REGS:20564,20564 MEM:485,485
  a19(r97,l1) costs: GENERAL_REGS:194,194 SSE_FIRST_REG:1746,1746 NO_REX_SSE_REGS:1746,1746 SSE_REGS:1746,1746 MMX_REGS:2716,2716 INT_SSE_REGS:2716,2716 ALL_REGS:41322,41322 MEM:1164,1164
  a20(r98,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,7120 NO_REX_SSE_REGS:0,7120 SSE_REGS:0,7120 MMX_REGS:0,11570 INT_SSE_REGS:0,11570 ALL_REGS:0,188680 MEM:0,5340
  a21(r99,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2328,2328 NO_REX_SSE_REGS:2328,2328 SSE_REGS:2328,2328 MMX_REGS:3783,3783 INT_SSE_REGS:3783,3783 ALL_REGS:61692,61692 MEM:1455,1455
  a22(r101,l1) costs: GENERAL_REGS:194,194 SSE_FIRST_REG:2522,9642 NO_REX_SSE_REGS:2522,9642 SSE_REGS:2522,9642 MMX_REGS:3977,15547 INT_SSE_REGS:3977,15547 ALL_REGS:61886,250566 MEM:1649,6099
  a23(r102,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a24(r111,l1) costs: AREG:0,7120 DREG:0,7120 CREG:0,7120 BREG:0,7120 SIREG:0,7120 DIREG:0,7120 AD_REGS:0,7120 CLOBBERED_REGS:0,7120 Q_REGS:0,7120 NON_Q_REGS:0,7120 TLS_GOTBASE_REGS:0,7120 GENERAL_REGS:0,7120 FP_TOP_REG:0,11570 FP_SECOND_REG:0,11570 FLOAT_REGS:0,11570 SSE_REGS:0,0 FLOAT_SSE_REGS:0,11570 FLOAT_INT_REGS:0,11570 INT_SSE_REGS:0,11570 FLOAT_INT_SSE_REGS:0,11570 MEM:0,4450
  a25(r100,l1) costs: GENERAL_REGS:194,194 SSE_FIRST_REG:970,29450 NO_REX_SSE_REGS:970,29450 SSE_REGS:970,29450 MMX_REGS:1455,47735 INT_SSE_REGS:1455,47735 ALL_REGS:20758,688258 MEM:679,18479
  a26(r96,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a27(r97,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a28(r98,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:7120,7120 NO_REX_SSE_REGS:7120,7120 SSE_REGS:7120,7120 MMX_REGS:11570,11570 INT_SSE_REGS:11570,11570 ALL_REGS:188680,188680 MEM:5340,5340
  a29(r99,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a30(r100,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:28480,28480 NO_REX_SSE_REGS:28480,28480 SSE_REGS:28480,28480 MMX_REGS:46280,46280 INT_SSE_REGS:46280,46280 ALL_REGS:667500,667500 MEM:17800,17800
  a31(r101,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:7120,7120 NO_REX_SSE_REGS:7120,7120 SSE_REGS:7120,7120 MMX_REGS:11570,11570 INT_SSE_REGS:11570,11570 ALL_REGS:188680,188680 MEM:4450,4450
  a32(r102,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a33(r111,l2) costs: AREG:7120,7120 DREG:7120,7120 CREG:7120,7120 BREG:7120,7120 SIREG:7120,7120 DIREG:7120,7120 AD_REGS:7120,7120 CLOBBERED_REGS:7120,7120 Q_REGS:7120,7120 NON_Q_REGS:7120,7120 TLS_GOTBASE_REGS:7120,7120 GENERAL_REGS:7120,7120 FP_TOP_REG:11570,11570 FP_SECOND_REG:11570,11570 FLOAT_REGS:11570,11570 SSE_REGS:0,0 FLOAT_SSE_REGS:11570,11570 FLOAT_INT_REGS:11570,11570 INT_SSE_REGS:11570,11570 FLOAT_INT_SSE_REGS:11570,11570 MEM:4450,4450
  a34(r106,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:14240,14240 NO_REX_SSE_REGS:14240,14240 SSE_REGS:14240,14240 MMX_REGS:23140,23140 INT_SSE_REGS:23140,23140 ALL_REGS:377360,377360 MEM:10680,10680
  a35(r108,l2) costs: AREG:14240,14240 DREG:14240,14240 CREG:14240,14240 BREG:14240,14240 SIREG:14240,14240 DIREG:14240,14240 AD_REGS:14240,14240 CLOBBERED_REGS:14240,14240 Q_REGS:14240,14240 NON_Q_REGS:14240,14240 TLS_GOTBASE_REGS:14240,14240 GENERAL_REGS:14240,14240 FP_TOP_REG:23140,23140 FP_SECOND_REG:23140,23140 FLOAT_REGS:23140,23140 SSE_REGS:0,0 FLOAT_SSE_REGS:23140,23140 FLOAT_INT_REGS:23140,23140 INT_SSE_REGS:23140,23140 FLOAT_INT_SSE_REGS:23140,23140 MEM:10680,10680
  a36(r107,l2) costs: AREG:14240,14240 DREG:14240,14240 CREG:14240,14240 BREG:14240,14240 SIREG:14240,14240 DIREG:14240,14240 AD_REGS:14240,14240 CLOBBERED_REGS:14240,14240 Q_REGS:14240,14240 NON_Q_REGS:14240,14240 TLS_GOTBASE_REGS:14240,14240 GENERAL_REGS:14240,14240 FP_TOP_REG:23140,23140 FP_SECOND_REG:23140,23140 FLOAT_REGS:23140,23140 SSE_REGS:0,0 FLOAT_SSE_REGS:23140,23140 FLOAT_INT_REGS:23140,23140 INT_SSE_REGS:23140,23140 FLOAT_INT_SSE_REGS:23140,23140 MEM:10680,10680
  a37(r119,l2) costs: AREG:1780,-890 DREG:3560,3560 CREG:3560,3560 BREG:3560,3560 SIREG:3560,3560 DIREG:3560,3560 AD_REGS:1780,1780 CLOBBERED_REGS:1780,1780 Q_REGS:1780,1780 NON_Q_REGS:3560,3560 TLS_GOTBASE_REGS:3560,3560 GENERAL_REGS:1780,1780 SSE_FIRST_REG:21360,21360 NO_REX_SSE_REGS:21360,21360 SSE_REGS:21360,21360 MMX_REGS:33820,33820 INT_SSE_REGS:22250,22250 ALL_REGS:283020,283020 MEM:16020,16020

   Insn 115(l0): point = 0
   Insn 114(l0): point = 2
   Insn 128(l0): point = 5
   Insn 7(l0): point = 7
   Insn 6(l0): point = 9
   Insn 151(l0): point = 12
   Insn 148(l0): point = 15
   Insn 72(l0): point = 18
   Insn 71(l0): point = 20
   Insn 69(l0): point = 23
   Insn 68(l0): point = 25
   Insn 62(l0): point = 27
   Insn 59(l0): point = 29
   Insn 143(l0): point = 31
   Insn 58(l0): point = 33
   Insn 57(l0): point = 35
   Insn 56(l0): point = 37
   Insn 55(l0): point = 39
   Insn 54(l0): point = 41
   Insn 46(l0): point = 44
   Insn 142(l0): point = 46
   Insn 45(l0): point = 48
   Insn 44(l0): point = 50
   Insn 43(l0): point = 52
   Insn 39(l0): point = 54
   Insn 141(l0): point = 56
   Insn 38(l0): point = 58
   Insn 37(l0): point = 60
   Insn 34(l0): point = 63
   Insn 33(l0): point = 65
   Insn 8(l0): point = 67
   Insn 145(l0): point = 70
   Insn 5(l0): point = 72
   Insn 24(l0): point = 74
   Insn 140(l0): point = 76
   Insn 23(l0): point = 78
   Insn 22(l0): point = 80
   Insn 19(l0): point = 83
   Insn 18(l0): point = 85
   Insn 15(l0): point = 87
   Insn 14(l0): point = 89
   Insn 13(l0): point = 91
   Insn 139(l0): point = 93
   Insn 12(l0): point = 95
   Insn 3(l0): point = 97
   Insn 138(l0): point = 99
   Insn 2(l0): point = 101
   Insn 137(l0): point = 103
   Insn 153(l1): point = 106
   Insn 106(l1): point = 108
   Insn 100(l1): point = 111
   Insn 99(l1): point = 113
   Insn 98(l1): point = 115
   Insn 95(l1): point = 117
   Insn 92(l2): point = 120
   Insn 91(l2): point = 122
   Insn 89(l2): point = 124
   Insn 85(l2): point = 126
   Insn 84(l2): point = 128
   Insn 82(l2): point = 130
   Insn 81(l2): point = 132
   Insn 144(l2): point = 134
   Insn 79(l2): point = 136
 a0(r102): [63..67] [3..29]
 a1(r111): [5..5]
 a2(r99): [5..7]
 a3(r101): [5..9]
 a4(r97): [70..72] [18..44] [5..11]
 a5(r96): [70..74] [18..54] [5..11]
 a6(r98): [18..27] [5..11]
 a7(r118): [30..31]
 a8(r117): [45..46]
 a9(r105): [51..52]
 a10(r103): [81..101] [53..69]
 a11(r116): [55..56]
 a12(r104): [83..97] [66..69]
 a13(r115): [75..76]
 a14(r82): [90..91]
 a15(r114): [92..93]
 a16(r113): [98..99]
 a17(r112): [102..103]
 a18(r96): [106..119]
 a19(r97): [106..119]
 a20(r98): [106..119]
 a21(r99): [106..119]
 a22(r101): [106..119]
 a23(r102): [106..119]
 a24(r111): [106..119]
 a25(r100): [106..108]
 a26(r96): [120..138]
 a27(r97): [120..138]
 a28(r98): [120..138]
 a29(r99): [120..138]
 a30(r100): [120..138]
 a31(r101): [120..138]
 a32(r102): [120..138]
 a33(r111): [120..138]
 a34(r106): [127..132]
 a35(r108): [127..128]
 a36(r107): [129..130]
 a37(r119): [131..134]
 Rebuilding regno allocno list for 119
      Moving ranges of a33r111 to a24r111:  [120..138]
      Moving ranges of a24r111 to a1r111:  [106..138]
 Rebuilding regno allocno list for 108
 Rebuilding regno allocno list for 107
 Rebuilding regno allocno list for 106
      Moving ranges of a32r102 to a23r102:  [120..138]
      Moving ranges of a23r102 to a0r102:  [106..138]
      Moving ranges of a31r101 to a22r101:  [120..138]
      Moving ranges of a22r101 to a3r101:  [106..138]
      Moving ranges of a30r100 to a25r100:  [120..138]
 Rebuilding regno allocno list for 100
      Moving ranges of a29r99 to a21r99:  [120..138]
      Moving ranges of a21r99 to a2r99:  [106..138]
      Moving ranges of a28r98 to a20r98:  [120..138]
      Moving ranges of a20r98 to a6r98:  [106..138]
      Moving ranges of a27r97 to a19r97:  [120..138]
      Moving ranges of a19r97 to a4r97:  [106..138]
      Moving ranges of a26r96 to a18r96:  [120..138]
      Moving ranges of a18r96 to a5r96:  [106..138]
Compressing live ranges: from 139 to 37 - 26%
Ranges after the compression:
 a0(r102): [29..36] [15..16] [0..4]
 a1(r111): [29..36] [1..1]
 a2(r99): [29..36] [1..2]
 a3(r101): [29..36] [1..2]
 a4(r97): [29..36] [17..18] [1..6]
 a5(r96): [29..36] [17..18] [1..12]
 a6(r98): [29..36] [1..4]
 a7(r118): [5..6]
 a8(r117): [7..8]
 a9(r105): [9..10]
 a10(r103): [21..26] [11..16]
 a11(r116): [13..14]
 a12(r104): [21..24] [15..16]
 a13(r115): [19..20]
 a14(r82): [21..22]
 a15(r114): [23..24]
 a16(r113): [25..26]
 a17(r112): [27..28]
 a25(r100): [29..36]
 a34(r106): [31..36]
 a35(r108): [31..32]
 a36(r107): [33..34]
 a37(r119): [35..36]
+++Allocating 184 bytes for conflict table (uncompressed size 304)
;; a0(r102,l0) conflicts: a2(r99,l0) a3(r101,l0) a4(r97,l0) a5(r96,l0) a6(r98,l0) a10(r103,l0) a12(r104,l0) a25(r100,l0) a34(r106,l0) a37(r119,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

;; a1(r111,l0) conflicts: a35(r108,l0) a36(r107,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r99,l0) conflicts: a0(r102,l0) a3(r101,l0) a4(r97,l0) a5(r96,l0) a6(r98,l0) a25(r100,l0) a34(r106,l0) a37(r119,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

;; a3(r101,l0) conflicts: a0(r102,l0) a2(r99,l0) a4(r97,l0) a5(r96,l0) a6(r98,l0) a25(r100,l0) a34(r106,l0) a37(r119,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

;; a4(r97,l0) conflicts: a0(r102,l0) a2(r99,l0) a3(r101,l0) a5(r96,l0) a6(r98,l0) a7(r118,l0) a25(r100,l0) a34(r106,l0) a37(r119,l0)
;;     total conflict hard regs: 0 2 4 5
;;     conflict hard regs: 0 2 4 5

;; a5(r96,l0) conflicts: a0(r102,l0) a2(r99,l0) a3(r101,l0) a4(r97,l0) a6(r98,l0) a7(r118,l0) a8(r117,l0) a9(r105,l0) a10(r103,l0) a25(r100,l0) a34(r106,l0) a37(r119,l0)
;;     total conflict hard regs: 0-2 5
;;     conflict hard regs: 0-2 5

;; a6(r98,l0) conflicts: a0(r102,l0) a2(r99,l0) a3(r101,l0) a4(r97,l0) a5(r96,l0) a25(r100,l0) a34(r106,l0) a37(r119,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

;; a7(r118,l0) conflicts: a4(r97,l0) a5(r96,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r117,l0) conflicts: a5(r96,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r105,l0) conflicts: a5(r96,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r103,l0) conflicts: a0(r102,l0) a5(r96,l0) a11(r116,l0) a12(r104,l0) a14(r82,l0) a15(r114,l0) a16(r113,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a11(r116,l0) conflicts: a10(r103,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r104,l0) conflicts: a0(r102,l0) a10(r103,l0) a14(r82,l0) a15(r114,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a13(r115,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r82,l0) conflicts: a10(r103,l0) a12(r104,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r114,l0) conflicts: a10(r103,l0) a12(r104,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r113,l0) conflicts: a10(r103,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r112,l0) conflicts:
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a25(r100,l0) conflicts: a0(r102,l0) a2(r99,l0) a3(r101,l0) a4(r97,l0) a5(r96,l0) a6(r98,l0) a34(r106,l0) a37(r119,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

;; a34(r106,l0) conflicts: a0(r102,l0) a2(r99,l0) a3(r101,l0) a4(r97,l0) a5(r96,l0) a6(r98,l0) a25(r100,l0) a37(r119,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a35(r108,l0) conflicts: a1(r111,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a36(r107,l0) conflicts: a1(r111,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a37(r119,l0) conflicts: a0(r102,l0) a2(r99,l0) a3(r101,l0) a4(r97,l0) a5(r96,l0) a6(r98,l0) a25(r100,l0) a34(r106,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a36(r107)<->a37(r119)@111:shuffle
  cp1:a35(r108)<->a36(r107)@890:constraint
  cp2:a0(r102)<->a7(r118)@13:move
  cp3:a5(r96)<->a11(r116)@9:move
  cp4:a4(r97)<->a8(r117)@9:move
  cp5:a5(r96)<->a13(r115)@4:move
  cp6:a10(r103)<->a17(r112)@21:move
  cp7:a12(r104)<->a16(r113)@21:move
  cp8:a14(r82)<->a15(r114)@21:move
  pref0:a37(r119)<-hr0@1335
  pref1:a7(r118)<-hr0@19
  pref2:a8(r117)<-hr0@13
  pref3:a11(r116)<-hr0@13
  pref4:a13(r115)<-hr0@6
  pref5:a15(r114)<-hr0@31
  pref6:a16(r113)<-hr4@31
  pref7:a17(r112)<-hr5@31
  pref8:a9(r105)<-hr5@13
  pref9:a0(r102)<-hr0@31
  pref10:a14(r82)<-hr5@21
  regions=3, blocks=15, points=37
    allocnos=38 (big 0), copies=9, conflicts=0, ranges=35

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 14 12 11 13 10 9 8 7 6 5 4 3 2
    all: 0r102 1r111 2r99 3r101 4r97 5r96 6r98 7r118 8r117 9r105 10r103 11r116 12r104 13r115 14r82 15r114 16r113 17r112 25r100 34r106 35r108 36r107 37r119
    modified regnos: 82 96 97 98 99 100 101 102 103 104 105 106 107 108 111 112 113 114 115 116 117 118 119
    border:
    Pressure: GENERAL_REGS=9 SSE_REGS=2
 Removing pref9:hr0@31
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 20-27 44-51)@42720
        2:( 0-6 36-43)@58840
          3:( 1-6 36-43)@36570
            4:( 3 6 40-43)@31430
      Spill a1(r111,l0)
      Allocno a0r102 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 7-35 44-74)
      Allocno a2r99 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 7-35 44-74)
      Allocno a3r101 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 7-35 44-74)
      Allocno a4r97 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 2 4 5 7-35 44-74)
      Allocno a5r96 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0-2 5 7-35 44-74)
      Allocno a6r98 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 7-35 44-74)
      Allocno a7r118 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a8r117 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a9r105 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a10r103 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 4 5 7-35 44-74)
      Allocno a11r116 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a12r104 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 36-43, ^node:  1-6 36-43 (confl regs =  0 5 7-35 44-74)
      Allocno a13r115 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a14r82 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a15r114 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a16r113 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a17r112 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, ^node:  0-6 36-43 (confl regs =  4 7-35 44-74)
      Allocno a25r100 of GENERAL_REGS(15) has 14 avail. regs  1-6 36-43, node:  1-6 36-43 (confl regs =  0 7-35 44-74)
      Allocno a34r106 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a35r108 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a36r107 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a37r119 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Forming thread by copy 1:a35r108-a36r107 (freq=890):
        Result (freq=3560): a35r108(1780) a36r107(1780)
      Forming thread by copy 0:a36r107-a37r119 (freq=111):
        Result (freq=5340): a35r108(1780) a37r119(1780) a36r107(1780)
      Forming thread by copy 7:a12r104-a16r113 (freq=21):
        Result (freq=101): a12r104(59) a16r113(42)
      Forming thread by copy 8:a14r82-a15r114 (freq=21):
        Result (freq=84): a14r82(42) a15r114(42)
      Pushing a13(r115,l0)(cost 0)
      Pushing a11(r116,l0)(cost 0)
      Pushing a9(r105,l0)(cost 0)
      Pushing a8(r117,l0)(cost 0)
      Pushing a7(r118,l0)(cost 0)
      Pushing a17(r112,l0)(cost 0)
      Pushing a15(r114,l0)(cost 0)
      Forming thread by copy 6:a10r103-a17r112 (freq=21):
        Result (freq=85): a10r103(43) a17r112(42)
        Making a10(r103,l0) colorable
      Pushing a14(r82,l0)(cost 0)
      Pushing a10(r103,l0)(cost 258)
      Pushing a16(r113,l0)(cost 0)
      Pushing a12(r104,l0)(cost 0)
      Pushing a34(r106,l0)(cost 0)
      Pushing a25(r100,l0)(cost 0)
      Pushing a36(r107,l0)(cost 0)
      Pushing a35(r108,l0)(cost 0)
      Pushing a37(r119,l0)(cost 0)
      Forming thread by copy 2:a0r102-a7r118 (freq=13):
        Result (freq=90): a0r102(64) a7r118(26)
        Making a0(r102,l0) colorable
        Making a2(r99,l0) colorable
        Making a3(r101,l0) colorable
      Forming thread by copy 4:a4r97-a8r117 (freq=9):
        Result (freq=260): a4r97(242) a8r117(18)
        Making a4(r97,l0) colorable
      Forming thread by copy 3:a5r96-a11r116 (freq=9):
        Result (freq=158): a5r96(140) a11r116(18)
      Forming thread by copy 5:a5r96-a13r115 (freq=4):
        Result (freq=166): a5r96(140) a13r115(8) a11r116(18)
        Making a5(r96,l0) colorable
        Making a6(r98,l0) colorable
      Pushing a0(r102,l0)(cost 468)
      Pushing a5(r96,l0)(cost 791)
      Pushing a4(r97,l0)(cost 1300)
      Pushing a2(r99,l0)(cost 1515)
      Pushing a6(r98,l0)(cost 5418)
      Pushing a3(r101,l0)(cost 5965)
      Popping a3(r101,l0)  -- assign reg 3
      Popping a6(r98,l0)  -- assign reg 6
      Popping a2(r99,l0)  -- assign reg 40
      Popping a4(r97,l0)  -- assign reg 41
      Popping a5(r96,l0)  -- assign reg 42
      Popping a0(r102,l0)  -- assign reg 43
      Popping a37(r119,l0)  -- assign reg 0
      Popping a35(r108,l0)  -- assign reg 20
      Popping a36(r107,l0)  -- assign reg 20
      Popping a25(r100,l0)  -- assign reg 1
      Popping a34(r106,l0)  -- assign reg 2
      Popping a12(r104,l0)  -- assign reg 3
      Popping a16(r113,l0)  -- assign reg 4
      Popping a10(r103,l0)  -- assign reg 6
      Popping a14(r82,l0)  -- assign reg 5
      Popping a15(r114,l0)  -- assign reg 0
      Popping a17(r112,l0)  -- assign reg 5
      Popping a7(r118,l0)  -- assign reg 0
      Popping a8(r117,l0)  -- assign reg 0
      Popping a9(r105,l0)  -- assign reg 5
      Popping a11(r116,l0)  -- assign reg 0
      Popping a13(r115,l0)  -- assign reg 0
Spilling a0r102 for a25r100
Assigning 43 to a25r100
       a0(r102,l0)  -- assign memory
Disposition:
   14:r82  l0     5    5:r96  l0    42    4:r97  l0    41    6:r98  l0     6
    2:r99  l0    40   25:r100 l0    43    3:r101 l0     3    0:r102 l0   mem
   10:r103 l0     6   12:r104 l0     3    9:r105 l0     5   34:r106 l0     2
   36:r107 l0    20   35:r108 l0    20    1:r111 l0   mem   17:r112 l0     5
   16:r113 l0     4   15:r114 l0     0   13:r115 l0     0   11:r116 l0     0
    8:r117 l0     0    7:r118 l0     0   37:r119 l0     0
New iteration of spill/restore move
+++Costs: overall 4495, reg -405, mem 4900, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_rand

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={9d,8u} r1={9d,1u} r2={9d,1u} r4={9d,2u} r5={13d,6u} r6={1d,14u} r7={1d,21u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r16={1d,13u} r17={18d,6u} r18={7d} r19={1d,14u} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={8d} r37={8d} r38={7d} r39={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r82={1d,1u} r96={2d,8u} r97={2d,7u} r98={1d,2u,1e} r99={2d,4u} r100={2d,3u} r101={2d,3u} r102={2d,3u} r103={1d,3u} r104={1d,2u} r105={1d,1u} r106={1d,1u,1e} r107={1d,1u} r108={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} 
;;    total ref usage 674{537d,135u,2e} in 95{88 regular + 7 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 22864923 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [always]  count:22864923 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 82 103 104 112 113 114
(note 9 1 137 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 137 9 2 2 (set (reg:DI 112)
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_math.c":192:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ arg ])
        (nil)))
(insn 2 137 138 2 (set (reg/v/f:DI 103 [ arg ])
        (reg:DI 112)) "cmodules/fbgc_math.c":192:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 112)
        (nil)))
(insn 138 2 3 2 (set (reg:SI 113)
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_math.c":192:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ argc ])
        (nil)))
(insn 3 138 4 2 (set (reg/v:SI 104 [ argc ])
        (reg:SI 113)) "cmodules/fbgc_math.c":192:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 113)
        (nil)))
(note 4 3 11 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 11 4 12 2 (debug_marker) "cmodules/fbgc_math.c":193:2 -1
     (nil))
(call_insn 12 11 139 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("clock") [flags 0x41]  <function_decl 0x7f213e36da00 clock>) [0 clock S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":193:14 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("clock") [flags 0x41]  <function_decl 0x7f213e36da00 clock>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 139 12 13 2 (set (reg:DI 114)
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":193:14 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 13 139 14 2 (set (reg:DI 82 [ _1 ])
        (reg:DI 114)) "cmodules/fbgc_math.c":193:14 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 114)
        (nil)))
(insn 14 13 15 2 (set (reg:SI 5 di)
        (subreg:SI (reg:DI 82 [ _1 ]) 0)) "cmodules/fbgc_math.c":193:2 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 82 [ _1 ])
        (nil)))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref:DI ("srand") [flags 0x41]  <function_decl 0x7f213e5e7700 srand>) [0 srand S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_math.c":193:2 666 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("srand") [flags 0x41]  <function_decl 0x7f213e5e7700 srand>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(debug_insn 16 15 17 2 (debug_marker) "cmodules/fbgc_math.c":194:2 -1
     (nil))
(debug_insn 17 16 18 2 (debug_marker) "cmodules/fbgc_math.c":195:2 -1
     (nil))
(insn 18 17 19 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 104 [ argc ])
            (const_int 1 [0x1]))) "cmodules/fbgc_math.c":195:4 11 {*cmpsi_1}
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "cmodules/fbgc_math.c":195:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 856416484 (nil)))
 -> 30)
;;  succ:       3 [20.2% (guessed)]  count:4627860 (estimated locally) (FALLTHRU)
;;              4 [79.8% (guessed)]  count:18237063 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 103 104

;; basic block 3, loop depth 0, count 4627860 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [20.2% (guessed)]  count:4627860 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(6){ }u14(7){ }u15(16){ }u16(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 103
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 103
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 96 97 115
(note 20 19 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 21 20 22 3 (debug_marker) "cmodules/fbgc_math.c":196:3 -1
     (nil))
(insn 22 21 23 3 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 103 [ arg ]) [3 *arg_30(D)+0 S8 A64])) "cmodules/fbgc_math.c":196:15 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 103 [ arg ])
        (nil)))
(call_insn 23 22 140 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f213e3db600 convert_fbgc_object_to_int>) [0 convert_fbgc_object_to_int S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":196:15 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f213e3db600 convert_fbgc_object_to_int>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 140 23 24 3 (set (reg:SI 115)
        (reg:SI 0 ax)) "cmodules/fbgc_math.c":196:15 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 24 140 26 3 (set (reg/v:SI 96 [ row ])
        (reg:SI 115)) "cmodules/fbgc_math.c":196:15 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 115)
        (nil)))
(debug_insn 26 24 27 3 (var_location:SI col (reg/v:SI 96 [ row ])) "cmodules/fbgc_math.c":196:13 -1
     (nil))
(debug_insn 27 26 5 3 (var_location:SI row (reg/v:SI 96 [ row ])) "cmodules/fbgc_math.c":196:7 -1
     (nil))
(insn 5 27 145 3 (set (reg/v:SI 97 [ col ])
        (reg/v:SI 96 [ row ])) "cmodules/fbgc_math.c":196:13 67 {*movsi_internal}
     (nil))
(jump_insn 145 5 146 3 (set (pc)
        (label_ref 49)) 660 {jump}
     (nil)
 -> 49)
;;  succ:       6 [always]  count:4627860 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96 97

(barrier 146 145 30)
;; basic block 4, loop depth 0, count 18237062 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [79.8% (guessed)]  count:18237063 (estimated locally)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u24(6){ }u25(7){ }u26(16){ }u27(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 103 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 104
;; lr  def 	 17 [flags] 102
(code_label 30 146 31 4 15 (nil) [1 uses])
(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 32 31 8 4 (debug_marker) "cmodules/fbgc_math.c":198:7 -1
     (nil))
(insn 8 32 33 4 (set (reg/v/f:DI 102 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":202:14 66 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 33 8 34 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 104 [ argc ])
            (const_int 2 [0x2]))) "cmodules/fbgc_math.c":198:9 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/v:SI 104 [ argc ])
        (nil)))
(jump_insn 34 33 35 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 113)
            (pc))) "cmodules/fbgc_math.c":198:9 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 486727172 (nil)))
 -> 113)
;;  succ:       5 [54.7% (guessed)]  count:9970202 (estimated locally) (FALLTHRU)
;;              14 [45.3% (guessed)]  count:8266860 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 102 103

;; basic block 5, loop depth 0, count 9970202 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [54.7% (guessed)]  count:9970202 (estimated locally) (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u30(6){ }u31(7){ }u32(16){ }u33(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 103
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 103
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 96 97 105 116 117
(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 36 35 37 5 (debug_marker) "cmodules/fbgc_math.c":199:3 -1
     (nil))
(insn 37 36 38 5 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 103 [ arg ]) [3 *arg_30(D)+0 S8 A64])) "cmodules/fbgc_math.c":199:9 66 {*movdi_internal}
     (nil))
(call_insn 38 37 141 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f213e3db600 convert_fbgc_object_to_int>) [0 convert_fbgc_object_to_int S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":199:9 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f213e3db600 convert_fbgc_object_to_int>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 141 38 39 5 (set (reg:SI 116)
        (reg:SI 0 ax)) "cmodules/fbgc_math.c":199:9 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 39 141 41 5 (set (reg/v:SI 96 [ row ])
        (reg:SI 116)) "cmodules/fbgc_math.c":199:9 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 116)
        (nil)))
(debug_insn 41 39 42 5 (var_location:SI row (reg/v:SI 96 [ row ])) "cmodules/fbgc_math.c":199:7 -1
     (nil))
(debug_insn 42 41 43 5 (debug_marker) "cmodules/fbgc_math.c":200:3 -1
     (nil))
(insn 43 42 44 5 (set (reg/f:DI 105 [ MEM[(struct fbgc_object * *)arg_30(D) + 8B] ])
        (mem/f:DI (plus:DI (reg/v/f:DI 103 [ arg ])
                (const_int 8 [0x8])) [3 MEM[(struct fbgc_object * *)arg_30(D) + 8B]+0 S8 A64])) "cmodules/fbgc_math.c":200:9 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 103 [ arg ])
        (nil)))
(insn 44 43 45 5 (set (reg:DI 5 di)
        (reg/f:DI 105 [ MEM[(struct fbgc_object * *)arg_30(D) + 8B] ])) "cmodules/fbgc_math.c":200:9 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 105 [ MEM[(struct fbgc_object * *)arg_30(D) + 8B] ])
        (nil)))
(call_insn 45 44 142 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f213e3db600 convert_fbgc_object_to_int>) [0 convert_fbgc_object_to_int S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":200:9 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f213e3db600 convert_fbgc_object_to_int>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 142 45 46 5 (set (reg:SI 117)
        (reg:SI 0 ax)) "cmodules/fbgc_math.c":200:9 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 46 142 48 5 (set (reg/v:SI 97 [ col ])
        (reg:SI 117)) "cmodules/fbgc_math.c":200:9 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 117)
        (nil)))
(debug_insn 48 46 49 5 (var_location:SI col (reg/v:SI 97 [ col ])) "cmodules/fbgc_math.c":200:7 -1
     (nil))
;;  succ:       6 [always]  count:9970202 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96 97

;; basic block 6, loop depth 0, count 14598062 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [always]  count:9970202 (estimated locally) (FALLTHRU)
;;              3 [always]  count:4627860 (estimated locally)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u45(6){ }u46(7){ }u47(16){ }u48(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96 97
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96 97
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 98 102 118
(code_label 49 48 50 6 16 (nil) [1 uses])
(note 50 49 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 51 50 52 6 (var_location:SI col (reg/v:SI 97 [ col ])) -1
     (nil))
(debug_insn 52 51 53 6 (var_location:SI row (reg/v:SI 96 [ row ])) -1
     (nil))
(debug_insn 53 52 54 6 (debug_marker) "cmodules/fbgc_math.c":204:2 -1
     (nil))
(insn 54 53 55 6 (set (reg:SI 2 cx)
        (const_int 10 [0xa])) "cmodules/fbgc_math.c":204:27 67 {*movsi_internal}
     (nil))
(insn 55 54 56 6 (set (reg:SI 1 dx)
        (reg/v:SI 97 [ col ])) "cmodules/fbgc_math.c":204:27 67 {*movsi_internal}
     (nil))
(insn 56 55 57 6 (set (reg:SI 4 si)
        (reg/v:SI 96 [ row ])) "cmodules/fbgc_math.c":204:27 67 {*movsi_internal}
     (nil))
(insn 57 56 58 6 (set (reg:SI 5 di)
        (const_int 4 [0x4])) "cmodules/fbgc_math.c":204:27 67 {*movsi_internal}
     (nil))
(call_insn 58 57 143 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_matrix_object") [flags 0x41]  <function_decl 0x7f213e3fe100 new_fbgc_matrix_object>) [0 new_fbgc_matrix_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":204:27 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_matrix_object") [flags 0x41]  <function_decl 0x7f213e3fe100 new_fbgc_matrix_object>)
                        (nil))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 143 58 59 6 (set (reg:DI 118)
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":204:27 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 59 143 60 6 (set (reg/v/f:DI 102 [ <retval> ])
        (reg:DI 118)) "cmodules/fbgc_math.c":204:27 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 118)
        (nil)))
(debug_insn 60 59 61 6 (var_location:DI m (reg/v/f:DI 102 [ <retval> ])) "cmodules/fbgc_math.c":204:27 -1
     (nil))
(debug_insn 61 60 62 6 (debug_marker) "cmodules/fbgc_math.c":205:2 -1
     (nil))
(insn 62 61 63 6 (parallel [
            (set (reg/v/f:DI 98 [ mc ])
                (plus:DI (reg/v/f:DI 102 [ <retval> ])
                    (const_int 18 [0x12])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":205:11 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 63 62 64 6 (var_location:DI mc (reg/v/f:DI 98 [ mc ])) "cmodules/fbgc_math.c":205:11 -1
     (nil))
(debug_insn 64 63 65 6 (debug_marker) "cmodules/fbgc_math.c":206:2 -1
     (nil))
(debug_insn 65 64 66 6 (debug_marker) "cmodules/fbgc_math.c":206:6 -1
     (nil))
(debug_insn 66 65 67 6 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 67 66 68 6 (debug_marker) "cmodules/fbgc_math.c":206:20 -1
     (nil))
(insn 68 67 69 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 96 [ row ])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":206:2 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 69 68 70 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 113)
            (pc))) "cmodules/fbgc_math.c":206:2 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 113)
;;  succ:       7 [89.0% (guessed)]  count:12992275 (estimated locally) (FALLTHRU)
;;              14 [11.0% (guessed)]  count:1605787 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96 97 98 102

;; basic block 7, loop depth 0, count 12992275 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL)
;;  pred:       6 [89.0% (guessed)]  count:12992275 (estimated locally) (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u64(6){ }u65(7){ }u66(16){ }u67(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96 97 98 102
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 97
;; lr  def 	 17 [flags]
(note 70 69 71 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 97 [ col ])
            (const_int 0 [0]))) 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 72 71 147 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 123)
            (pc))) 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 123)
;;  succ:       12 [89.0% (guessed)]  count:11563125 (estimated locally)
;;              8 [11.0% (guessed)]  count:1429150 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96 97 98 102

;; basic block 8, loop depth 0, count 1429150 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [11.0% (guessed)]  count:1429150 (estimated locally) (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 102
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 147 72 148 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 148 147 149 8 (set (pc)
        (label_ref 113)) 660 {jump}
     (nil)
 -> 113)
;;  succ:       14 [always]  count:1429150 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 102

(barrier 149 148 90)
;; basic block 9, loop depth 2, count 955630224 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (HOT_PARTITION, RTL)
;;  pred:       9 [89.0% (guessed)]  count:850510900 (estimated locally) (DFS_BACK)
;;              13 [always]  count:105119324 (estimated locally)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u70(6){ }u71(7){ }u72(16){ }u73(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96 97 98 99 100 101 102 111
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 98 100 101 111
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 100 106 107 108 119
(code_label 90 149 76 9 19 (nil) [2 uses])
(note 76 90 77 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 77 76 78 9 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(debug_insn 78 77 79 9 (debug_marker) "cmodules/fbgc_math.c":208:4 -1
     (nil))
(call_insn 79 78 144 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7f213e5e7600 rand>) [0 rand S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":208:18 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7f213e5e7600 rand>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 144 79 80 9 (set (reg:SI 119)
        (reg:SI 0 ax)) "cmodules/fbgc_math.c":208:18 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(note 80 144 81 9 NOTE_INSN_DELETED)
(insn 81 80 82 9 (set (reg:DI 106 [ ivtmp.43 ])
        (zero_extend:DI (reg:SI 100 [ ivtmp.43 ]))) "cmodules/fbgc_math.c":208:12 114 {*zero_extendsidi2}
     (nil))
(insn 82 81 84 9 (set (reg:DF 107)
        (float:DF (reg:SI 119))) "cmodules/fbgc_math.c":208:25 172 {*floatsidf2}
     (expr_list:REG_DEAD (reg:SI 119)
        (nil)))
(insn 84 82 85 9 (set (reg:DF 108)
        (div:DF (reg:DF 107)
            (reg:DF 111))) "cmodules/fbgc_math.c":208:25 822 {*fop_df_1}
     (expr_list:REG_DEAD (reg:DF 107)
        (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 106 [ ivtmp.43 ])
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 98 [ mc ])) [2 *_15+0 S8 A64])
            (nil))))
(insn 85 84 86 9 (set (mem:DF (plus:DI (mult:DI (reg:DI 106 [ ivtmp.43 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 98 [ mc ])) [2 *_15+0 S8 A64])
        (reg:DF 108)) "cmodules/fbgc_math.c":208:16 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 108)
        (expr_list:REG_DEAD (reg:DI 106 [ ivtmp.43 ])
            (nil))))
(debug_insn 86 85 87 9 (debug_marker) "cmodules/fbgc_math.c":207:28 -1
     (nil))
(debug_insn 87 86 88 9 (var_location:SI j (const_int 1 [0x1])) -1
     (nil))
(debug_insn 88 87 89 9 (debug_marker) "cmodules/fbgc_math.c":207:21 -1
     (nil))
(insn 89 88 91 9 (parallel [
            (set (reg:SI 100 [ ivtmp.43 ])
                (plus:SI (reg:SI 100 [ ivtmp.43 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 91 89 92 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ ivtmp.49 ])
            (reg:SI 100 [ ivtmp.43 ]))) "cmodules/fbgc_math.c":207:3 11 {*cmpsi_1}
     (nil))
(jump_insn 92 91 93 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 90)
            (pc))) "cmodules/fbgc_math.c":207:3 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 90)
;;  succ:       9 [89.0% (guessed)]  count:850510900 (estimated locally) (DFS_BACK)
;;              10 [11.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96 97 98 99 100 101 102 111

;; basic block 10, loop depth 1, count 105119325 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (HOT_PARTITION, RTL)
;;  pred:       9 [11.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU,LOOP_EXIT)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u87(6){ }u88(7){ }u89(16){ }u90(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96 97 98 99 101 102 111
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96 97 99 101
;; lr  def 	 17 [flags] 99 101
(note 93 92 94 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 94 93 95 10 (debug_marker) "cmodules/fbgc_math.c":206:27 -1
     (nil))
(insn 95 94 96 10 (parallel [
            (set (reg/v:SI 99 [ i ])
                (plus:SI (reg/v:SI 99 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":206:27 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 96 95 97 10 (var_location:SI i (reg/v:SI 99 [ i ])) -1
     (nil))
(debug_insn 97 96 98 10 (debug_marker) "cmodules/fbgc_math.c":206:20 -1
     (nil))
(insn 98 97 99 10 (parallel [
            (set (reg:SI 101 [ ivtmp.49 ])
                (plus:SI (reg:SI 101 [ ivtmp.49 ])
                    (reg/v:SI 97 [ col ])))
            (clobber (reg:CC 17 flags))
        ]) 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 99 98 100 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 96 [ row ])
            (reg/v:SI 99 [ i ]))) "cmodules/fbgc_math.c":206:2 11 {*cmpsi_1}
     (nil))
(jump_insn 100 99 150 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 101)
            (pc))) "cmodules/fbgc_math.c":206:2 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 101)
;;  succ:       13 [89.0% (guessed)]  count:93556199 (estimated locally) (DFS_BACK)
;;              11 [11.0% (guessed)]  count:11563126 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96 97 98 99 101 102 111

;; basic block 11, loop depth 0, count 11563126 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (HOT_PARTITION, RTL)
;;  pred:       10 [11.0% (guessed)]  count:11563126 (estimated locally) (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 102
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 150 100 151 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 151 150 152 11 (set (pc)
        (label_ref 113)) 660 {jump}
     (nil)
 -> 113)
;;  succ:       14 [always]  count:11563126 (estimated locally) (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 102

(barrier 152 151 123)
;; basic block 12, loop depth 0, count 11563125 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [89.0% (guessed)]  count:11563125 (estimated locally)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u98(6){ }u99(7){ }u100(16){ }u101(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96 97 98 102
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 97
;; lr  def 	 99 101 111
(code_label 123 152 122 12 21 (nil) [1 uses])
(note 122 123 6 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 6 122 7 12 (set (reg:SI 101 [ ivtmp.49 ])
        (reg/v:SI 97 [ col ])) "cmodules/fbgc_math.c":206:2 67 {*movsi_internal}
     (nil))
(insn 7 6 128 12 (set (reg/v:SI 99 [ i ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":206:13 67 {*movsi_internal}
     (nil))
(insn 128 7 101 12 (set (reg:DF 111)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S8 A64])) 111 {*movdf_internal}
     (expr_list:REG_EQUIV (const_double:DF 2.147483647e+9 [0x0.fffffffep+31])
        (nil)))
;;  succ:       13 [always]  count:11563125 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96 97 98 99 101 102 111

;; basic block 13, loop depth 1, count 105119324 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (HOT_PARTITION, RTL)
;;  pred:       12 [always]  count:11563125 (estimated locally) (FALLTHRU)
;;              10 [89.0% (guessed)]  count:93556199 (estimated locally) (DFS_BACK)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u103(6){ }u104(7){ }u105(16){ }u106(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96 97 98 99 101 102 111
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 97 101
;; lr  def 	 17 [flags] 100
(code_label 101 128 102 13 18 (nil) [1 uses])
(note 102 101 103 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 103 102 104 13 (var_location:SI i (reg/v:SI 99 [ i ])) -1
     (nil))
(debug_insn 104 103 105 13 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(debug_insn 105 104 106 13 (debug_marker) "cmodules/fbgc_math.c":207:21 -1
     (nil))
(insn 106 105 153 13 (parallel [
            (set (reg:SI 100 [ ivtmp.43 ])
                (minus:SI (reg:SI 101 [ ivtmp.49 ])
                    (reg/v:SI 97 [ col ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":208:8 246 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 153 106 154 13 (set (pc)
        (label_ref 90)) 660 {jump}
     (nil)
 -> 90)
;;  succ:       9 [always]  count:105119324 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96 97 98 99 100 101 102 111

(barrier 154 153 113)
;; basic block 14, loop depth 0, count 22864923 (estimated locally), maybe hot
;;  prev block 13, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [45.3% (guessed)]  count:8266860 (estimated locally)
;;              6 [11.0% (guessed)]  count:1605787 (estimated locally)
;;              8 [always]  count:1429150 (estimated locally)
;;              11 [always]  count:11563126 (estimated locally) (LOOP_EXIT)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u110(6){ }u111(7){ }u112(16){ }u113(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 102
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 102
;; lr  def 	 0 [ax]
(code_label 113 154 116 14 14 (nil) [4 uses])
(note 116 113 114 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 114 116 115 14 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 102 [ <retval> ])) "cmodules/fbgc_math.c":212:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 102 [ <retval> ])
        (nil)))
(insn 115 114 0 14 (use (reg/i:DI 0 ax)) "cmodules/fbgc_math.c":212:1 -1
     (nil))
;;  succ:       EXIT [always]  count:22864923 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function fbgc_randint (fbgc_randint, funcdef_no=65, decl_uid=5741, cgraph_uid=66, symbol_order=74)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 9 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 8 }
;; 7 succs { 1 }
;; 8 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 101 uninteresting
Reg 93 uninteresting (no unique first use)
Reg 102 uninteresting
Reg 94: def dominates all uses has unique first use
Reg 103 uninteresting
Reg 82 uninteresting
Reg 104 uninteresting
Reg 105 uninteresting
Reg 95 uninteresting
Reg 106 uninteresting
Reg 107 uninteresting
Reg 94 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 8 }
;; 7 succs { 1 }
;; 8 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a5 (r107,l0) best AREG, allocno AREG
    a6 (r106,l0) best AREG, allocno AREG
    a9 (r105,l0) best AREG, allocno AREG
    a11 (r104,l0) best AREG, allocno AREG
    a13 (r103,l0) best AREG, allocno AREG
    a14 (r102,l0) best SIREG, allocno SIREG
    a15 (r101,l0) best DIREG, allocno DIREG
    a0 (r99,l0) best DIREG, allocno DIREG
    a3 (r98,l0) best AREG, allocno AREG
    a2 (r97,l0) best DREG, allocno DREG
    a7 (r95,l0) best DIREG, allocno DIREG
    a10 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a8 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a12 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r99,l0) costs: AREG:1536,1536 DREG:1536,1536 CREG:1536,1536 BREG:1536,1536 SIREG:1536,1536 DIREG:-768,-768 AD_REGS:1536,1536 CLOBBERED_REGS:1536,1536 Q_REGS:1536,1536 NON_Q_REGS:1536,1536 TLS_GOTBASE_REGS:1536,1536 GENERAL_REGS:1536,1536 SSE_FIRST_REG:12288,12288 NO_REX_SSE_REGS:12288,12288 SSE_REGS:12288,12288 MMX_REGS:19968,19968 INT_SSE_REGS:19968,19968 ALL_REGS:325632,325632 MEM:8448,8448
  a1(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:10752,10752 NO_REX_SSE_REGS:10752,10752 SSE_REGS:10752,10752 MMX_REGS:14592,14592 INT_SSE_REGS:14592,14592 ALL_REGS:239616,239616 MEM:4608,4608
  a2(r97,l0) costs: AREG:1536,1536 DREG:0,0 CREG:1536,1536 BREG:1536,1536 SIREG:1536,1536 DIREG:1536,1536 AD_REGS:1536,1536 CLOBBERED_REGS:1536,1536 Q_REGS:1536,1536 NON_Q_REGS:1536,1536 TLS_GOTBASE_REGS:1536,1536 GENERAL_REGS:1536,1536 SSE_FIRST_REG:12288,12288 NO_REX_SSE_REGS:12288,12288 SSE_REGS:12288,12288 MMX_REGS:19968,19968 INT_SSE_REGS:19968,19968 ALL_REGS:325632,325632 MEM:8448,8448
  a3(r98,l0) costs: AREG:0,0 DREG:1536,1536 CREG:1536,1536 BREG:1536,1536 SIREG:1536,1536 DIREG:1536,1536 AD_REGS:1536,1536 CLOBBERED_REGS:1536,1536 Q_REGS:1536,1536 NON_Q_REGS:1536,1536 TLS_GOTBASE_REGS:1536,1536 GENERAL_REGS:1536,1536 SSE_FIRST_REG:6144,6144 NO_REX_SSE_REGS:6144,6144 SSE_REGS:6144,6144 MMX_REGS:9984,9984 INT_SSE_REGS:9984,9984 ALL_REGS:162816,162816 MEM:4608,4608
  a4(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:10752,10752 NO_REX_SSE_REGS:10752,10752 SSE_REGS:10752,10752 MMX_REGS:14592,14592 INT_SSE_REGS:14592,14592 ALL_REGS:239616,239616 MEM:4608,4608
  a5(r107,l0) costs: AREG:-768,-768 DREG:3072,3072 CREG:3072,3072 BREG:3072,3072 SIREG:3072,3072 DIREG:3072,3072 AD_REGS:3072,3072 CLOBBERED_REGS:3072,3072 Q_REGS:3072,3072 NON_Q_REGS:3072,3072 TLS_GOTBASE_REGS:3072,3072 GENERAL_REGS:3072,3072 SSE_FIRST_REG:12288,12288 NO_REX_SSE_REGS:12288,12288 SSE_REGS:12288,12288 MMX_REGS:19968,19968 INT_SSE_REGS:19968,19968 ALL_REGS:325632,325632 MEM:9216,9216
  a6(r106,l0) costs: AREG:-566,-566 DREG:1132,1132 CREG:1132,1132 BREG:1132,1132 SIREG:1132,1132 DIREG:1132,1132 AD_REGS:1132,1132 CLOBBERED_REGS:1132,1132 Q_REGS:1132,1132 NON_Q_REGS:1132,1132 TLS_GOTBASE_REGS:1132,1132 GENERAL_REGS:1132,1132 SSE_FIRST_REG:9056,9056 NO_REX_SSE_REGS:9056,9056 SSE_REGS:9056,9056 MMX_REGS:14716,14716 INT_SSE_REGS:14716,14716 ALL_REGS:239984,239984 MEM:6226,6226
  a7(r95,l0) costs: AREG:1132,1132 DREG:1132,1132 CREG:1132,1132 BREG:1132,1132 SIREG:1132,1132 DIREG:-566,-566 AD_REGS:1132,1132 CLOBBERED_REGS:1132,1132 Q_REGS:1132,1132 NON_Q_REGS:1132,1132 TLS_GOTBASE_REGS:1132,1132 GENERAL_REGS:1132,1132 SSE_FIRST_REG:9056,9056 NO_REX_SSE_REGS:9056,9056 SSE_REGS:9056,9056 MMX_REGS:14150,14150 INT_SSE_REGS:14150,14150 ALL_REGS:179988,179988 MEM:6792,6792
  a8(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16672,16672 NO_REX_SSE_REGS:16672,16672 SSE_REGS:16672,16672 MMX_REGS:23342,23342 INT_SSE_REGS:23342,23342 ALL_REGS:382808,382808 MEM:9004,9004
  a9(r105,l0) costs: AREG:-566,-566 DREG:1132,1132 CREG:1132,1132 BREG:1132,1132 SIREG:1132,1132 DIREG:1132,1132 AD_REGS:1132,1132 CLOBBERED_REGS:1132,1132 Q_REGS:1132,1132 NON_Q_REGS:1132,1132 TLS_GOTBASE_REGS:1132,1132 GENERAL_REGS:1132,1132 SSE_FIRST_REG:9056,9056 NO_REX_SSE_REGS:9056,9056 SSE_REGS:9056,9056 MMX_REGS:14716,14716 INT_SSE_REGS:14716,14716 ALL_REGS:239984,239984 MEM:6226,6226
  a10(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20376,20376 NO_REX_SSE_REGS:20376,20376 SSE_REGS:20376,20376 MMX_REGS:29361,29361 INT_SSE_REGS:29361,29361 ALL_REGS:480964,480964 MEM:9985,9985
  a11(r104,l0) costs: AREG:-202,-202 DREG:404,404 CREG:404,404 BREG:404,404 SIREG:404,404 DIREG:404,404 AD_REGS:404,404 CLOBBERED_REGS:404,404 Q_REGS:404,404 NON_Q_REGS:404,404 TLS_GOTBASE_REGS:404,404 GENERAL_REGS:404,404 SSE_FIRST_REG:3232,3232 NO_REX_SSE_REGS:3232,3232 SSE_REGS:3232,3232 MMX_REGS:5252,5252 INT_SSE_REGS:5252,5252 ALL_REGS:85648,85648 MEM:2222,2222
  a12(r82,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:14000,14000 NO_REX_SSE_REGS:14000,14000 SSE_REGS:14000,14000 MMX_REGS:19000,19000 INT_SSE_REGS:19000,19000 ALL_REGS:312000,312000 MEM:6000,6000
  a13(r103,l0) costs: AREG:-1000,-1000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a14(r102,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:-1000,-1000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a15(r101,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:-1000,-1000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000


Pass 1 for finding pseudo/allocno costs

    r107: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r99,l0) costs: AREG:3072,3072 DREG:3072,3072 CREG:3072,3072 BREG:3072,3072 SIREG:3072,3072 DIREG:1536,-768 AD_REGS:3072,3072 CLOBBERED_REGS:1536,1536 Q_REGS:3072,3072 NON_Q_REGS:1536,1536 TLS_GOTBASE_REGS:1536,1536 GENERAL_REGS:1536,1536 SSE_FIRST_REG:18432,18432 NO_REX_SSE_REGS:18432,18432 SSE_REGS:18432,18432 MMX_REGS:29952,29952 INT_SSE_REGS:19968,19968 ALL_REGS:325632,325632 MEM:13056,13056
  a1(r90,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:12288,12288 NO_REX_SSE_REGS:12288,12288 SSE_REGS:12288,12288 MMX_REGS:19200,19200 INT_SSE_REGS:19200,19200 ALL_REGS:244224,244224 MEM:8448,8448
  a2(r97,l0) costs: AREG:1536,1536 DREG:1536,0 CREG:1536,1536 BREG:1536,1536 SIREG:1536,1536 DIREG:1536,1536 AD_REGS:1536,1536 CLOBBERED_REGS:1536,1536 Q_REGS:1536,1536 NON_Q_REGS:1536,1536 TLS_GOTBASE_REGS:1536,1536 GENERAL_REGS:1536,1536 SSE_FIRST_REG:12288,12288 NO_REX_SSE_REGS:12288,12288 SSE_REGS:12288,12288 MMX_REGS:19968,19968 INT_SSE_REGS:19968,19968 ALL_REGS:325632,325632 MEM:8448,8448
  a3(r98,l0) costs: AREG:1536,0 DREG:1536,1536 CREG:1536,1536 BREG:1536,1536 SIREG:1536,1536 DIREG:1536,1536 AD_REGS:1536,1536 CLOBBERED_REGS:1536,1536 Q_REGS:1536,1536 NON_Q_REGS:1536,1536 TLS_GOTBASE_REGS:1536,1536 GENERAL_REGS:1536,1536 SSE_FIRST_REG:6144,6144 NO_REX_SSE_REGS:6144,6144 SSE_REGS:6144,6144 MMX_REGS:9984,9984 INT_SSE_REGS:9984,9984 ALL_REGS:162816,162816 MEM:4608,4608
  a4(r91,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:12288,12288 NO_REX_SSE_REGS:12288,12288 SSE_REGS:12288,12288 MMX_REGS:19200,19200 INT_SSE_REGS:19200,19200 ALL_REGS:244224,244224 MEM:8448,8448
  a5(r107,l0) costs: AREG:3072,-768 DREG:4608,4608 CREG:4608,4608 BREG:4608,4608 SIREG:4608,4608 DIREG:4608,4608 AD_REGS:3072,3072 CLOBBERED_REGS:3072,3072 Q_REGS:3072,3072 NON_Q_REGS:4608,4608 TLS_GOTBASE_REGS:4608,4608 GENERAL_REGS:3072,3072 SSE_FIRST_REG:18432,18432 NO_REX_SSE_REGS:18432,18432 SSE_REGS:18432,18432 MMX_REGS:29952,29952 INT_SSE_REGS:19968,19968 ALL_REGS:325632,325632 MEM:13824,13824
  a6(r106,l0) costs: AREG:1132,-566 DREG:2264,2264 CREG:2264,2264 BREG:2264,2264 SIREG:2264,2264 DIREG:2264,2264 AD_REGS:1132,1132 CLOBBERED_REGS:1132,1132 Q_REGS:1132,1132 NON_Q_REGS:2264,2264 TLS_GOTBASE_REGS:2264,2264 GENERAL_REGS:1132,1132 SSE_FIRST_REG:13584,13584 NO_REX_SSE_REGS:13584,13584 SSE_REGS:13584,13584 MMX_REGS:22074,22074 INT_SSE_REGS:14716,14716 ALL_REGS:239984,239984 MEM:9622,9622
  a7(r95,l0) costs: AREG:2264,2264 DREG:2264,2264 CREG:2264,2264 BREG:2264,2264 SIREG:2264,2264 DIREG:1132,-566 AD_REGS:2264,2264 CLOBBERED_REGS:1132,1132 Q_REGS:2264,2264 NON_Q_REGS:1132,1132 TLS_GOTBASE_REGS:1132,1132 GENERAL_REGS:1132,1132 SSE_FIRST_REG:13584,13584 NO_REX_SSE_REGS:13584,13584 SSE_REGS:13584,13584 MMX_REGS:22074,22074 INT_SSE_REGS:14716,14716 ALL_REGS:183384,183384 MEM:10188,10188
  a8(r93,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:18672,18672 NO_REX_SSE_REGS:18672,18672 SSE_REGS:18672,18672 MMX_REGS:29342,29342 INT_SSE_REGS:29342,29342 ALL_REGS:388808,388808 MEM:14004,14004
  a9(r105,l0) costs: AREG:1132,-566 DREG:2264,2264 CREG:2264,2264 BREG:2264,2264 SIREG:2264,2264 DIREG:2264,2264 AD_REGS:1132,1132 CLOBBERED_REGS:1132,1132 Q_REGS:1132,1132 NON_Q_REGS:2264,2264 TLS_GOTBASE_REGS:2264,2264 GENERAL_REGS:1132,1132 SSE_FIRST_REG:13584,13584 NO_REX_SSE_REGS:13584,13584 SSE_REGS:13584,13584 MMX_REGS:22074,22074 INT_SSE_REGS:14716,14716 ALL_REGS:239984,239984 MEM:9622,9622
  a10(r94,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:22376,22376 NO_REX_SSE_REGS:22376,22376 SSE_REGS:22376,22376 MMX_REGS:35361,35361 INT_SSE_REGS:35361,35361 ALL_REGS:486964,486964 MEM:14985,14985
  a11(r104,l0) costs: AREG:404,-202 DREG:808,808 CREG:808,808 BREG:808,808 SIREG:808,808 DIREG:808,808 AD_REGS:404,404 CLOBBERED_REGS:404,404 Q_REGS:404,404 NON_Q_REGS:808,808 TLS_GOTBASE_REGS:808,808 GENERAL_REGS:404,404 SSE_FIRST_REG:4848,4848 NO_REX_SSE_REGS:4848,4848 SSE_REGS:4848,4848 MMX_REGS:7878,7878 INT_SSE_REGS:5252,5252 ALL_REGS:85648,85648 MEM:3434,3434
  a12(r82,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:25000,25000 INT_SSE_REGS:25000,25000 ALL_REGS:318000,318000 MEM:11000,11000
  a13(r103,l0) costs: AREG:2000,-1000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:4000,4000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:4000,4000 TLS_GOTBASE_REGS:4000,4000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000
  a14(r102,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:2000,-1000 DIREG:4000,4000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000
  a15(r101,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:2000,-1000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000

   Insn 88(l0): point = 0
   Insn 87(l0): point = 2
   Insn 79(l0): point = 5
   Insn 78(l0): point = 7
   Insn 77(l0): point = 9
   Insn 76(l0): point = 11
   Insn 98(l0): point = 14
   Insn 74(l0): point = 16
   Insn 104(l0): point = 19
   Insn 61(l0): point = 21
   Insn 60(l0): point = 23
   Insn 59(l0): point = 25
   Insn 58(l0): point = 27
   Insn 101(l0): point = 30
   Insn 44(l0): point = 32
   Insn 97(l0): point = 34
   Insn 43(l0): point = 36
   Insn 42(l0): point = 38
   Insn 41(l0): point = 40
   Insn 38(l0): point = 42
   Insn 96(l0): point = 44
   Insn 37(l0): point = 46
   Insn 36(l0): point = 48
   Insn 33(l0): point = 51
   Insn 32(l0): point = 53
   Insn 99(l0): point = 56
   Insn 5(l0): point = 58
   Insn 25(l0): point = 60
   Insn 95(l0): point = 62
   Insn 24(l0): point = 64
   Insn 23(l0): point = 66
   Insn 20(l0): point = 69
   Insn 19(l0): point = 71
   Insn 13(l0): point = 73
   Insn 12(l0): point = 75
   Insn 11(l0): point = 77
   Insn 94(l0): point = 79
   Insn 10(l0): point = 81
   Insn 3(l0): point = 83
   Insn 93(l0): point = 85
   Insn 2(l0): point = 87
   Insn 92(l0): point = 89
 a0(r99): [8..9]
 a1(r90): [56..58] [30..42] [10..18]
 a2(r97): [10..12]
 a3(r98): [11..11]
 a4(r91): [56..60] [30..32] [12..18]
 a5(r107): [13..14]
 a6(r106): [33..34]
 a7(r95): [39..40]
 a8(r93): [67..87] [41..55]
 a9(r105): [43..44]
 a10(r94): [69..83] [54..55]
 a11(r104): [61..62]
 a12(r82): [76..77]
 a13(r103): [78..79]
 a14(r102): [84..85]
 a15(r101): [88..89]
Compressing live ranges: from 92 to 31 - 33%
Ranges after the compression:
 a0(r99): [0..1]
 a1(r90): [19..20] [2..14]
 a2(r97): [2..4]
 a3(r98): [3..3]
 a4(r91): [19..20] [4..8]
 a5(r107): [5..6]
 a6(r106): [9..10]
 a7(r95): [11..12]
 a8(r93): [23..28] [13..18]
 a9(r105): [15..16]
 a10(r94): [23..26] [17..18]
 a11(r104): [21..22]
 a12(r82): [23..24]
 a13(r103): [25..26]
 a14(r102): [27..28]
 a15(r101): [29..30]
+++Allocating 112 bytes for conflict table (uncompressed size 128)
;; a0(r99,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r90,l0) conflicts: a2(r97,l0) a3(r98,l0) a4(r91,l0) a5(r107,l0) a6(r106,l0) a7(r95,l0) a8(r93,l0)
;;     total conflict hard regs: 0 1 5
;;     conflict hard regs: 0 1 5

;; a2(r97,l0) conflicts: a1(r90,l0) a3(r98,l0) a4(r91,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

;; a3(r98,l0) conflicts: a2(r97,l0) a1(r90,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a4(r91,l0) conflicts: a2(r97,l0) a1(r90,l0) a5(r107,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

;; a5(r107,l0) conflicts: a1(r90,l0) a4(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r106,l0) conflicts: a1(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r95,l0) conflicts: a1(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r93,l0) conflicts: a1(r90,l0) a9(r105,l0) a10(r94,l0) a12(r82,l0) a13(r103,l0) a14(r102,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a9(r105,l0) conflicts: a8(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r94,l0) conflicts: a8(r93,l0) a12(r82,l0) a13(r103,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a11(r104,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r82,l0) conflicts: a8(r93,l0) a10(r94,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r103,l0) conflicts: a8(r93,l0) a10(r94,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r102,l0) conflicts: a8(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r101,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a3(r98)<->a5(r107)@768:constraint
  cp1:a2(r97)<->a5(r107)@96:shuffle
  cp2:a0(r99)<->a2(r97)@96:shuffle
  cp3:a0(r99)<->a1(r90)@96:shuffle
  cp4:a1(r90)<->a9(r105)@566:move
  cp5:a4(r91)<->a6(r106)@566:move
  cp6:a4(r91)<->a11(r104)@202:move
  cp7:a8(r93)<->a15(r101)@1000:move
  cp8:a10(r94)<->a14(r102)@1000:move
  cp9:a12(r82)<->a13(r103)@1000:move
  pref0:a5(r107)<-hr0@1920
  pref1:a6(r106)<-hr0@849
  pref2:a9(r105)<-hr0@849
  pref3:a11(r104)<-hr0@303
  pref4:a13(r103)<-hr0@1500
  pref5:a14(r102)<-hr4@1500
  pref6:a15(r101)<-hr5@1500
  pref7:a0(r99)<-hr5@1152
  pref8:a3(r98)<-hr0@768
  pref9:a2(r97)<-hr1@768
  pref10:a7(r95)<-hr5@849
  pref11:a12(r82)<-hr5@1000
  regions=1, blocks=9, points=31
    allocnos=16 (big 0), copies=10, conflicts=0, ranges=20

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 8 7 6 5 4 3 2
    all: 0r99 1r90 2r97 3r98 4r91 5r107 6r106 7r95 8r93 9r105 10r94 11r104 12r82 13r103 14r102 15r101
    modified regnos: 82 90 91 93 94 95 97 98 99 101 102 103 104 105 106 107
    border:
    Pressure: GENERAL_REGS=3
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@224364
          2:( 0-3 5 6 36-43)@36000
            3:( 3 6 40-43)@61800
      Allocno a0r99 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a1r90 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 1 5 7-35 44-74)
      Allocno a2r97 of GENERAL_REGS(15) has 14 avail. regs  1-6 36-43, ^node:  0-6 36-43 (confl regs =  0 7-35 44-74)
      Allocno a3r98 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 36-43, ^node:  0-6 36-43 (confl regs =  1 7-35 44-74)
      Allocno a4r91 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 7-35 44-74)
      Allocno a5r107 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a6r106 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a7r95 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a8r93 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 4 5 7-35 44-74)
      Allocno a9r105 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a10r94 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 36-43, ^node:  0-6 36-43 (confl regs =  0 5 7-35 44-74)
      Allocno a11r104 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a12r82 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a13r103 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a14r102 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a15r101 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Forming thread by copy 8:a10r94-a14r102 (freq=1000):
        Result (freq=4797): a10r94(2797) a14r102(2000)
      Forming thread by copy 9:a12r82-a13r103 (freq=1000):
        Result (freq=4000): a12r82(2000) a13r103(2000)
      Forming thread by copy 0:a3r98-a5r107 (freq=768):
        Result (freq=3072): a3r98(768) a5r107(2304)
      Forming thread by copy 5:a4r91-a6r106 (freq=566):
        Result (freq=3436): a4r91(2304) a6r106(1132)
      Forming thread by copy 6:a4r91-a11r104 (freq=202):
        Result (freq=3840): a4r91(2304) a11r104(404) a6r106(1132)
      Forming thread by copy 2:a0r99-a2r97 (freq=96):
        Result (freq=3072): a0r99(1536) a2r97(1536)
      Pushing a9(r105,l0)(cost 0)
      Forming thread by copy 7:a8r93-a15r101 (freq=1000):
        Result (freq=4334): a8r93(2334) a15r101(2000)
        Making a8(r93,l0) colorable
      Pushing a7(r95,l0)(cost 0)
      Pushing a15(r101,l0)(cost 0)
      Pushing a3(r98,l0)(cost 0)
      Forming thread by copy 4:a1r90-a9r105 (freq=566):
        Result (freq=2668): a1r90(1536) a9r105(1132)
        Making a1(r90,l0) colorable
      Pushing a1(r90,l0)(cost 8448)
      Pushing a5(r107,l0)(cost 0)
      Pushing a0(r99,l0)(cost 0)
      Pushing a2(r97,l0)(cost 0)
      Pushing a11(r104,l0)(cost 0)
      Pushing a6(r106,l0)(cost 0)
      Pushing a4(r91,l0)(cost 0)
      Pushing a13(r103,l0)(cost 0)
      Pushing a12(r82,l0)(cost 0)
      Pushing a8(r93,l0)(cost 14004)
      Pushing a14(r102,l0)(cost 0)
      Pushing a10(r94,l0)(cost 0)
      Popping a10(r94,l0)  -- assign reg 3
      Popping a14(r102,l0)  -- assign reg 4
      Popping a8(r93,l0)  -- assign reg 6
      Popping a12(r82,l0)  -- assign reg 5
      Popping a13(r103,l0)  -- assign reg 0
      Popping a4(r91,l0)  -- assign reg 3
      Popping a6(r106,l0)  -- assign reg 0
      Popping a11(r104,l0)  -- assign reg 0
      Popping a2(r97,l0)  -- assign reg 1
      Popping a0(r99,l0)  -- assign reg 5
      Popping a5(r107,l0)  -- assign reg 0
      Popping a1(r90,l0)  -- assign reg 40
      Popping a3(r98,l0)  -- assign reg 0
      Popping a15(r101,l0)  -- assign reg 5
      Popping a7(r95,l0)  -- assign reg 5
      Popping a9(r105,l0)  -- assign reg 0
Disposition:
   12:r82  l0     5    1:r90  l0    40    4:r91  l0     3    8:r93  l0     6
   10:r94  l0     3    7:r95  l0     5    2:r97  l0     1    3:r98  l0     0
    0:r99  l0     5   15:r101 l0     5   14:r102 l0     4   13:r103 l0     0
   11:r104 l0     0    9:r105 l0     0    6:r106 l0     0    5:r107 l0     0
New iteration of spill/restore move
+++Costs: overall -8436, reg -8436, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_randint

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={11d,8u} r1={9d} r2={9d} r4={10d,3u} r5={15d,8u} r6={1d,8u} r7={1d,16u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r16={1d,7u} r17={12d,2u} r18={8d} r19={1d,8u} r20={9d} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={9d} r37={9d} r38={8d} r39={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r82={1d,1u} r90={2d,3u} r91={2d,5u} r93={1d,3u} r94={1d,2u} r95={1d,1u} r97={1d,1u} r98={1d} r99={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,2u} 
;;    total ref usage 671{586d,85u,0e} in 73{65 regular + 8 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 82 93 94 101 102 103
(note 7 1 90 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(debug_insn 90 7 92 2 (var_location:DI D#26 (reg:DI 5 di [ arg ])) -1
     (nil))
(insn 92 90 2 2 (set (reg:DI 101)
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_math.c":147:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ arg ])
        (nil)))
(insn 2 92 91 2 (set (reg/v/f:DI 93 [ arg ])
        (reg:DI 101)) "cmodules/fbgc_math.c":147:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 101)
        (nil)))
(debug_insn 91 2 93 2 (var_location:SI D#27 (reg:SI 4 si [ argc ])) -1
     (nil))
(insn 93 91 3 2 (set (reg:SI 102)
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_math.c":147:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ argc ])
        (nil)))
(insn 3 93 4 2 (set (reg/v:SI 94 [ argc ])
        (reg:SI 102)) "cmodules/fbgc_math.c":147:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 102)
        (nil)))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 9 4 10 2 (debug_marker) "cmodules/fbgc_math.c":149:2 -1
     (nil))
(call_insn 10 9 94 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("clock") [flags 0x41]  <function_decl 0x7f213e36da00 clock>) [0 clock S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":149:14 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("clock") [flags 0x41]  <function_decl 0x7f213e36da00 clock>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 94 10 11 2 (set (reg:DI 103)
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":149:14 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 11 94 12 2 (set (reg:DI 82 [ _1 ])
        (reg:DI 103)) "cmodules/fbgc_math.c":149:14 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 103)
        (nil)))
(insn 12 11 13 2 (set (reg:SI 5 di)
        (subreg:SI (reg:DI 82 [ _1 ]) 0)) "cmodules/fbgc_math.c":149:2 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 82 [ _1 ])
        (nil)))
(call_insn 13 12 14 2 (call (mem:QI (symbol_ref:DI ("srand") [flags 0x41]  <function_decl 0x7f213e5e7700 srand>) [0 srand S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_math.c":149:2 666 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("srand") [flags 0x41]  <function_decl 0x7f213e5e7700 srand>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(debug_insn 14 13 15 2 (debug_marker) "cmodules/fbgc_math.c":151:2 -1
     (nil))
(debug_insn 15 14 16 2 (var_location:SI min (const_int 0 [0])) "cmodules/fbgc_math.c":151:6 -1
     (nil))
(debug_insn 16 15 17 2 (debug_marker) "cmodules/fbgc_math.c":152:2 -1
     (nil))
(debug_insn 17 16 18 2 (var_location:SI max (const_int 0 [0])) "cmodules/fbgc_math.c":152:6 -1
     (nil))
(debug_insn 18 17 19 2 (debug_marker) "cmodules/fbgc_math.c":154:2 -1
     (nil))
(insn 19 18 20 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 94 [ argc ])
            (const_int 1 [0x1]))) "cmodules/fbgc_math.c":154:4 11 {*cmpsi_1}
     (nil))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) "cmodules/fbgc_math.c":154:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 856416484 (nil)))
 -> 29)
;;  succ:       3 [20.2% (guessed)]  count:217325344 (estimated locally) (FALLTHRU)
;;              4 [79.8% (guessed)]  count:856416480 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 93 94

;; basic block 3, loop depth 0, count 217325345 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [20.2% (guessed)]  count:217325344 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(6){ }u16(7){ }u17(16){ }u18(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 90 91 104
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 22 21 23 3 (debug_marker) "cmodules/fbgc_math.c":155:3 -1
     (nil))
(insn 23 22 24 3 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 93 [ arg ]) [3 *arg_20(D)+0 S8 A64])) "cmodules/fbgc_math.c":155:9 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 93 [ arg ])
        (nil)))
(call_insn 24 23 95 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f213e3db600 convert_fbgc_object_to_int>) [0 convert_fbgc_object_to_int S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":155:9 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f213e3db600 convert_fbgc_object_to_int>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 95 24 25 3 (set (reg:SI 104)
        (reg:SI 0 ax)) "cmodules/fbgc_math.c":155:9 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 25 95 26 3 (set (reg/v:SI 91 [ max ])
        (reg:SI 104)) "cmodules/fbgc_math.c":155:9 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 104)
        (nil)))
(debug_insn 26 25 5 3 (var_location:SI max (reg/v:SI 91 [ max ])) "cmodules/fbgc_math.c":155:9 -1
     (nil))
(insn 5 26 99 3 (set (reg/v:SI 90 [ min ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":151:6 67 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 99 5 100 3 (set (pc)
        (label_ref 69)) 660 {jump}
     (nil)
 -> 69)
;;  succ:       7 [always]  count:217325345 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 90 91

(barrier 100 99 29)
;; basic block 4, loop depth 0, count 856416480 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [79.8% (guessed)]  count:856416480 (estimated locally)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u24(6){ }u25(7){ }u26(16){ }u27(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 93 94
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 94
;; lr  def 	 17 [flags]
(code_label 29 100 30 4 29 (nil) [1 uses])
(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 31 30 32 4 (debug_marker) "cmodules/fbgc_math.c":157:7 -1
     (nil))
(insn 32 31 33 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 94 [ argc ])
            (const_int 2 [0x2]))) "cmodules/fbgc_math.c":157:9 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/v:SI 94 [ argc ])
        (nil)))
(jump_insn 33 32 34 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) "cmodules/fbgc_math.c":157:9 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 311385132 (nil)))
 -> 48)
;;  succ:       5 [71.0% (guessed)]  count:608055702 (estimated locally) (FALLTHRU)
;;              6 [29.0% (guessed)]  count:248360778 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 93

;; basic block 5, loop depth 0, count 608055701 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [71.0% (guessed)]  count:608055702 (estimated locally) (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u30(6){ }u31(7){ }u32(16){ }u33(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 90 91 95 105 106
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 35 34 36 5 (debug_marker) "cmodules/fbgc_math.c":158:3 -1
     (nil))
(insn 36 35 37 5 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 93 [ arg ]) [3 *arg_20(D)+0 S8 A64])) "cmodules/fbgc_math.c":158:9 66 {*movdi_internal}
     (nil))
(call_insn 37 36 96 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f213e3db600 convert_fbgc_object_to_int>) [0 convert_fbgc_object_to_int S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":158:9 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f213e3db600 convert_fbgc_object_to_int>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 96 37 38 5 (set (reg:SI 105)
        (reg:SI 0 ax)) "cmodules/fbgc_math.c":158:9 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 38 96 39 5 (set (reg/v:SI 90 [ min ])
        (reg:SI 105)) "cmodules/fbgc_math.c":158:9 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 105)
        (nil)))
(debug_insn 39 38 40 5 (var_location:SI min (reg/v:SI 90 [ min ])) "cmodules/fbgc_math.c":158:9 -1
     (nil))
(debug_insn 40 39 41 5 (debug_marker) "cmodules/fbgc_math.c":159:3 -1
     (nil))
(insn 41 40 42 5 (set (reg/f:DI 95 [ MEM[(struct fbgc_object * *)arg_20(D) + 8B] ])
        (mem/f:DI (plus:DI (reg/v/f:DI 93 [ arg ])
                (const_int 8 [0x8])) [3 MEM[(struct fbgc_object * *)arg_20(D) + 8B]+0 S8 A64])) "cmodules/fbgc_math.c":159:9 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 93 [ arg ])
        (nil)))
(insn 42 41 43 5 (set (reg:DI 5 di)
        (reg/f:DI 95 [ MEM[(struct fbgc_object * *)arg_20(D) + 8B] ])) "cmodules/fbgc_math.c":159:9 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ MEM[(struct fbgc_object * *)arg_20(D) + 8B] ])
        (nil)))
(call_insn 43 42 97 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f213e3db600 convert_fbgc_object_to_int>) [0 convert_fbgc_object_to_int S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":159:9 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f213e3db600 convert_fbgc_object_to_int>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 97 43 44 5 (set (reg:SI 106)
        (reg:SI 0 ax)) "cmodules/fbgc_math.c":159:9 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 44 97 45 5 (set (reg/v:SI 91 [ max ])
        (reg:SI 106)) "cmodules/fbgc_math.c":159:9 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 106)
        (nil)))
(debug_insn 45 44 101 5 (var_location:SI max (reg/v:SI 91 [ max ])) "cmodules/fbgc_math.c":159:9 -1
     (nil))
(jump_insn 101 45 102 5 (set (pc)
        (label_ref 69)) 660 {jump}
     (nil)
 -> 69)
;;  succ:       7 [always]  count:608055701 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 90 91

(barrier 102 101 48)
;; basic block 6, loop depth 0, count 248360779 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [29.0% (guessed)]  count:248360778 (estimated locally)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u45(6){ }u46(7){ }u47(16){ }u48(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(code_label 48 102 49 6 31 (nil) [1 uses])
(note 49 48 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 50 49 51 6 (var_location:DI D#7 (debug_expr:DI D#26)) -1
     (nil))
(debug_insn 51 50 52 6 (var_location:SI D#8 (debug_expr:SI D#27)) -1
     (nil))
(debug_insn 52 51 53 6 (debug_marker:BLK) "cmodules/fbgc_math.c":146:1 -1
     (nil))
(debug_insn 53 52 54 6 (var_location:DI D#10 (debug_expr:DI D#7)) -1
     (nil))
(debug_insn 54 53 55 6 (var_location:DI arg (debug_expr:DI D#10)) -1
     (nil))
(debug_insn 55 54 56 6 (var_location:SI D#9 (debug_expr:SI D#8)) -1
     (nil))
(debug_insn 56 55 57 6 (var_location:SI argc (debug_expr:SI D#9)) -1
     (nil))
(debug_insn 57 56 58 6 (debug_marker) "cmodules/fbgc_math.c":162:3 -1
     (nil))
(insn 58 57 59 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f213e0747e0 *.LC6>)) "cmodules/fbgc_math.c":162:3 66 {*movdi_internal}
     (nil))
(insn 59 58 60 6 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_math.c":162:3 67 {*movsi_internal}
     (nil))
(insn 60 59 61 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_math.c":162:3 69 {*movqi_internal}
     (nil))
(call_insn 61 60 62 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f213e3d6d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":162:3 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f213e3d6d00 cprintf>)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(debug_insn 62 61 63 6 (debug_marker) "cmodules/fbgc_math.c":163:3 -1
     (nil))
(debug_insn 63 62 64 6 (var_location:SI min (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 64 63 65 6 (var_location:SI max (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 65 64 66 6 (var_location:DI arg (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 66 65 104 6 (var_location:SI argc (clobber (const_int 0 [0]))) -1
     (nil))
(jump_insn 104 66 105 6 (set (pc)
        (label_ref 103)) 660 {jump}
     (nil)
 -> 103)
;;  succ:       8 [always]  count:248360779 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 105 104 69)
;; basic block 7, loop depth 0, count 825381046 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [always]  count:217325345 (estimated locally)
;;              5 [always]  count:608055701 (estimated locally)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u53(6){ }u54(7){ }u55(16){ }u56(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 90 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 90 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 97 98 99 107
(code_label 69 105 70 7 30 (nil) [2 uses])
(note 70 69 71 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 71 70 72 7 (var_location:SI max (reg/v:SI 91 [ max ])) -1
     (nil))
(debug_insn 72 71 73 7 (var_location:SI min (reg/v:SI 90 [ min ])) -1
     (nil))
(debug_insn 73 72 74 7 (debug_marker) "cmodules/fbgc_math.c":166:2 -1
     (nil))
(call_insn 74 73 98 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7f213e5e7600 rand>) [0 rand S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":166:29 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7f213e5e7600 rand>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 98 74 75 7 (set (reg:SI 107)
        (reg:SI 0 ax)) "cmodules/fbgc_math.c":166:29 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(note 75 98 76 7 NOTE_INSN_DELETED)
(insn 76 75 77 7 (parallel [
            (set (reg:SI 98)
                (div:SI (reg:SI 107)
                    (reg/v:SI 91 [ max ])))
            (set (reg:SI 97)
                (mod:SI (reg:SI 107)
                    (reg/v:SI 91 [ max ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":166:36 351 {*divmodsi4}
     (expr_list:REG_DEAD (reg:SI 107)
        (expr_list:REG_DEAD (reg/v:SI 91 [ max ])
            (expr_list:REG_UNUSED (reg:SI 98)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 77 76 78 7 (parallel [
            (set (reg:SI 99)
                (plus:SI (reg:SI 97)
                    (reg/v:SI 90 [ min ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":166:9 190 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 97)
        (expr_list:REG_DEAD (reg/v:SI 90 [ min ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 78 77 79 7 (set (reg:SI 5 di)
        (reg:SI 99)) "cmodules/fbgc_math.c":166:9 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 99)
        (nil)))
(call_insn/j 79 78 80 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_int_object") [flags 0x41]  <function_decl 0x7f213e3ed500 new_fbgc_int_object>) [0 new_fbgc_int_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":166:9 681 {*sibcall_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_int_object") [flags 0x41]  <function_decl 0x7f213e3ed500 new_fbgc_int_object>)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:825381046 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 80 79 103)
;; basic block 8, loop depth 0, count 248360778 (estimated locally), maybe hot
;;  prev block 7, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       6 [always]  count:248360779 (estimated locally)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u70(6){ }u71(7){ }u72(16){ }u73(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax]
(code_label 103 80 83 8 33 (nil) [1 uses])
(note 83 103 87 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 87 83 88 8 (set (reg/i:DI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_math.c":167:1 66 {*movdi_internal}
     (nil))
(insn 88 87 0 8 (use (reg/i:DI 0 ax)) "cmodules/fbgc_math.c":167:1 -1
     (nil))
;;  succ:       EXIT [always]  count:248360778 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function c_cos (c_cos, funcdef_no=57, decl_uid=5753, cgraph_uid=58, symbol_order=59)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 137 uninteresting
Reg 106: local to bb 2 def dominates all uses has unique first use
Reg 138 uninteresting
Reg 107: local to bb 2 def dominates all uses has unique first use
Reg 90: local to bb 2 def dominates all uses has unique first use
Reg 91: local to bb 2 def dominates all uses has unique first use
Reg 111 uninteresting
Reg 139 uninteresting
Reg 96: local to bb 2 def dominates all uses has unique first use
Reg 140 uninteresting
Reg 92: local to bb 2 def dominates all uses has unique first use
Reg 141: local to bb 2 def dominates all uses has unique first use
Reg 114: local to bb 2 def dominates all uses has unique first use
Reg 115 uninteresting
Reg 116: local to bb 2 def dominates all uses has unique first use
Reg 118 uninteresting
Reg 117: local to bb 2 def dominates all uses has unique first use
Reg 119: local to bb 2 def dominates all uses has unique first use
Reg 120 uninteresting
Reg 121: local to bb 2 def dominates all uses has unique first use
Found def insn 18 for 90 to be not moveable
Found def insn 19 for 91 to be not moveable
Examining insn 64, def for 92
  all ok
Examining insn 41, def for 96
  all ok
Examining insn 2, def for 106
  all ok
Examining insn 3, def for 107
  all ok
Examining insn 89, def for 114
  all ok
Examining insn 91, def for 116
  all ok
Examining insn 93, def for 117
  all ok
Examining insn 95, def for 119
  all ok
Examining insn 97, def for 121
  all ok
Found def insn 133 for 141 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 111: (insn_list:REG_DEP_TRUE 37 (nil))
init_insns for 118: (insn_list:REG_DEP_TRUE 92 (nil))
Reg 108 had equivalence, but can't be eliminated
Reg 109 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a7 (r141,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a16 (r140,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a18 (r139,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a22 (r138,l0) best SSE_REGS, allocno SSE_REGS
    a23 (r137,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a1 (r121,l0) best SSE_REGS, allocno SSE_REGS
    a3 (r120,l0) best SSE_REGS, allocno SSE_REGS
    a4 (r119,l0) best SSE_REGS, allocno SSE_REGS
    a0 (r118,l0) best SSE_REGS, allocno SSE_REGS
    a2 (r117,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a9 (r116,l0) best SSE_REGS, allocno SSE_REGS
    a10 (r115,l0) best SSE_REGS, allocno SSE_REGS
    a11 (r114,l0) best SSE_REGS, allocno SSE_REGS
    a13 (r112,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a15 (r111,l0) best SSE_REGS, allocno SSE_REGS
    a19 (r110,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a21 (r109,l0) best SIREG, allocno SIREG
    a20 (r108,l0) best DIREG, allocno DIREG
    a17 (r107,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a14 (r106,l0) best SSE_REGS, allocno SSE_REGS
    a5 (r96,l0) best SSE_REGS, allocno SSE_REGS
    a8 (r92,l0) best SSE_REGS, allocno SSE_REGS
    a6 (r91,l0) best SSE_REGS, allocno SSE_REGS
    a12 (r90,l0) best SSE_REGS, allocno SSE_REGS

  a0(r118,l0) costs: AREG:20000,20000 DREG:20000,20000 CREG:20000,20000 BREG:20000,20000 SIREG:20000,20000 DIREG:20000,20000 AD_REGS:20000,20000 CLOBBERED_REGS:20000,20000 Q_REGS:20000,20000 NON_Q_REGS:20000,20000 TLS_GOTBASE_REGS:20000,20000 GENERAL_REGS:20000,20000 FP_TOP_REG:40000,40000 FP_SECOND_REG:40000,40000 FLOAT_REGS:40000,40000 SSE_FIRST_REG:2000,2000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:40000,40000 FLOAT_INT_REGS:40000,40000 INT_SSE_REGS:40000,40000 FLOAT_INT_SSE_REGS:40000,40000 MEM:6000,6000
  a1(r121,l0) costs: AREG:18000,18000 DREG:18000,18000 CREG:18000,18000 BREG:18000,18000 SIREG:18000,18000 DIREG:18000,18000 AD_REGS:18000,18000 CLOBBERED_REGS:18000,18000 Q_REGS:18000,18000 NON_Q_REGS:18000,18000 TLS_GOTBASE_REGS:18000,18000 GENERAL_REGS:18000,18000 FP_TOP_REG:28000,28000 FP_SECOND_REG:28000,28000 FLOAT_REGS:28000,28000 SSE_FIRST_REG:2000,2000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:28000,28000 FLOAT_INT_REGS:28000,28000 INT_SSE_REGS:28000,28000 FLOAT_INT_SSE_REGS:28000,28000 MEM:13000,13000
  a2(r117,l0) costs: AREG:16000,16000 DREG:16000,16000 CREG:16000,16000 BREG:16000,16000 SIREG:16000,16000 DIREG:16000,16000 AD_REGS:16000,16000 CLOBBERED_REGS:16000,16000 Q_REGS:16000,16000 NON_Q_REGS:16000,16000 TLS_GOTBASE_REGS:16000,16000 GENERAL_REGS:16000,16000 FP_TOP_REG:26000,26000 FP_SECOND_REG:26000,26000 FLOAT_REGS:26000,26000 SSE_FIRST_REG:-1000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:26000,26000 FLOAT_INT_REGS:26000,26000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:26000,26000 MEM:12000,12000
  a3(r120,l0) costs: AREG:16000,16000 DREG:16000,16000 CREG:16000,16000 BREG:16000,16000 SIREG:16000,16000 DIREG:16000,16000 AD_REGS:16000,16000 CLOBBERED_REGS:16000,16000 Q_REGS:16000,16000 NON_Q_REGS:16000,16000 TLS_GOTBASE_REGS:16000,16000 GENERAL_REGS:16000,16000 FP_TOP_REG:26000,26000 FP_SECOND_REG:26000,26000 FLOAT_REGS:26000,26000 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:26000,26000 FLOAT_INT_REGS:26000,26000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:26000,26000 MEM:11000,11000
  a4(r119,l0) costs: AREG:16000,16000 DREG:16000,16000 CREG:16000,16000 BREG:16000,16000 SIREG:16000,16000 DIREG:16000,16000 AD_REGS:16000,16000 CLOBBERED_REGS:16000,16000 Q_REGS:16000,16000 NON_Q_REGS:16000,16000 TLS_GOTBASE_REGS:16000,16000 GENERAL_REGS:16000,16000 FP_TOP_REG:26000,26000 FP_SECOND_REG:26000,26000 FLOAT_REGS:26000,26000 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:26000,26000 FLOAT_INT_REGS:26000,26000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:26000,26000 MEM:11000,11000
  a5(r96,l0) costs: AREG:16000,16000 DREG:16000,16000 CREG:16000,16000 BREG:16000,16000 SIREG:16000,16000 DIREG:16000,16000 AD_REGS:16000,16000 CLOBBERED_REGS:16000,16000 Q_REGS:16000,16000 NON_Q_REGS:16000,16000 TLS_GOTBASE_REGS:16000,16000 GENERAL_REGS:16000,16000 FP_TOP_REG:32000,32000 FP_SECOND_REG:32000,32000 FLOAT_REGS:32000,32000 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:32000,32000 FLOAT_INT_REGS:32000,32000 INT_SSE_REGS:32000,32000 FLOAT_INT_SSE_REGS:32000,32000 MEM:11000,11000
  a6(r91,l0) costs: AREG:10000,10000 DREG:10000,10000 CREG:10000,10000 BREG:10000,10000 SIREG:10000,10000 DIREG:10000,10000 AD_REGS:10000,10000 CLOBBERED_REGS:10000,10000 Q_REGS:10000,10000 NON_Q_REGS:10000,10000 TLS_GOTBASE_REGS:10000,10000 GENERAL_REGS:10000,10000 FP_TOP_REG:25000,25000 FP_SECOND_REG:25000,25000 FLOAT_REGS:25000,25000 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:25000,25000 FLOAT_INT_REGS:25000,25000 INT_SSE_REGS:25000,25000 FLOAT_INT_SSE_REGS:25000,25000 MEM:11000,11000
  a7(r141,l0) costs: AREG:16000,16000 DREG:16000,16000 CREG:16000,16000 BREG:16000,16000 SIREG:16000,16000 DIREG:16000,16000 AD_REGS:16000,16000 CLOBBERED_REGS:16000,16000 Q_REGS:16000,16000 NON_Q_REGS:16000,16000 TLS_GOTBASE_REGS:16000,16000 GENERAL_REGS:16000,16000 FP_TOP_REG:26000,26000 FP_SECOND_REG:26000,26000 FLOAT_REGS:26000,26000 SSE_FIRST_REG:-1000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:26000,26000 FLOAT_INT_REGS:26000,26000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:26000,26000 MEM:11000,11000
  a8(r92,l0) costs: AREG:18000,18000 DREG:18000,18000 CREG:18000,18000 BREG:18000,18000 SIREG:18000,18000 DIREG:18000,18000 AD_REGS:18000,18000 CLOBBERED_REGS:18000,18000 Q_REGS:18000,18000 NON_Q_REGS:18000,18000 TLS_GOTBASE_REGS:18000,18000 GENERAL_REGS:18000,18000 FP_TOP_REG:34000,34000 FP_SECOND_REG:34000,34000 FLOAT_REGS:34000,34000 SSE_FIRST_REG:2000,2000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:34000,34000 FLOAT_INT_REGS:34000,34000 INT_SSE_REGS:34000,34000 FLOAT_INT_SSE_REGS:34000,34000 MEM:13000,13000
  a9(r116,l0) costs: AREG:16000,16000 DREG:16000,16000 CREG:16000,16000 BREG:16000,16000 SIREG:16000,16000 DIREG:16000,16000 AD_REGS:16000,16000 CLOBBERED_REGS:16000,16000 Q_REGS:16000,16000 NON_Q_REGS:16000,16000 TLS_GOTBASE_REGS:16000,16000 GENERAL_REGS:16000,16000 FP_TOP_REG:26000,26000 FP_SECOND_REG:26000,26000 FLOAT_REGS:26000,26000 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:26000,26000 FLOAT_INT_REGS:26000,26000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:26000,26000 MEM:12000,12000
  a10(r115,l0) costs: AREG:16000,16000 DREG:16000,16000 CREG:16000,16000 BREG:16000,16000 SIREG:16000,16000 DIREG:16000,16000 AD_REGS:16000,16000 CLOBBERED_REGS:16000,16000 Q_REGS:16000,16000 NON_Q_REGS:16000,16000 TLS_GOTBASE_REGS:16000,16000 GENERAL_REGS:16000,16000 FP_TOP_REG:26000,26000 FP_SECOND_REG:26000,26000 FLOAT_REGS:26000,26000 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:26000,26000 FLOAT_INT_REGS:26000,26000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:26000,26000 MEM:11000,11000
  a11(r114,l0) costs: AREG:18000,18000 DREG:18000,18000 CREG:18000,18000 BREG:18000,18000 SIREG:18000,18000 DIREG:18000,18000 AD_REGS:18000,18000 CLOBBERED_REGS:18000,18000 Q_REGS:18000,18000 NON_Q_REGS:18000,18000 TLS_GOTBASE_REGS:18000,18000 GENERAL_REGS:18000,18000 FP_TOP_REG:28000,28000 FP_SECOND_REG:28000,28000 FLOAT_REGS:28000,28000 SSE_FIRST_REG:2000,2000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:28000,28000 FLOAT_INT_REGS:28000,28000 INT_SSE_REGS:28000,28000 FLOAT_INT_SSE_REGS:28000,28000 MEM:13000,13000
  a12(r90,l0) costs: AREG:20000,20000 DREG:20000,20000 CREG:20000,20000 BREG:20000,20000 SIREG:20000,20000 DIREG:20000,20000 AD_REGS:20000,20000 CLOBBERED_REGS:20000,20000 Q_REGS:20000,20000 NON_Q_REGS:20000,20000 TLS_GOTBASE_REGS:20000,20000 GENERAL_REGS:20000,20000 FP_TOP_REG:40000,40000 FP_SECOND_REG:40000,40000 FLOAT_REGS:40000,40000 SSE_FIRST_REG:2000,2000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:40000,40000 FLOAT_INT_REGS:40000,40000 INT_SSE_REGS:40000,40000 FLOAT_INT_SSE_REGS:40000,40000 MEM:19000,19000
  a13(r112,l0) costs: AREG:16000,16000 DREG:16000,16000 CREG:16000,16000 BREG:16000,16000 SIREG:16000,16000 DIREG:16000,16000 AD_REGS:16000,16000 CLOBBERED_REGS:16000,16000 Q_REGS:16000,16000 NON_Q_REGS:16000,16000 TLS_GOTBASE_REGS:16000,16000 GENERAL_REGS:16000,16000 FP_TOP_REG:26000,26000 FP_SECOND_REG:26000,26000 FLOAT_REGS:26000,26000 SSE_FIRST_REG:-1000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:26000,26000 FLOAT_INT_REGS:26000,26000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:26000,26000 MEM:12000,12000
  a14(r106,l0) costs: AREG:16000,16000 DREG:16000,16000 CREG:16000,16000 BREG:16000,16000 SIREG:16000,16000 DIREG:16000,16000 AD_REGS:16000,16000 CLOBBERED_REGS:16000,16000 Q_REGS:16000,16000 NON_Q_REGS:16000,16000 TLS_GOTBASE_REGS:16000,16000 GENERAL_REGS:16000,16000 FP_TOP_REG:32000,32000 FP_SECOND_REG:32000,32000 FLOAT_REGS:32000,32000 SSE_FIRST_REG:2000,2000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:32000,32000 FLOAT_INT_REGS:32000,32000 INT_SSE_REGS:32000,32000 FLOAT_INT_SSE_REGS:32000,32000 MEM:13000,13000
  a15(r111,l0) costs: SSE_FIRST_REG:2000,2000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 MEM:18000,18000
  a16(r140,l0) costs: AREG:8000,8000 DREG:8000,8000 CREG:8000,8000 BREG:8000,8000 SIREG:8000,8000 DIREG:8000,8000 AD_REGS:8000,8000 CLOBBERED_REGS:8000,8000 Q_REGS:8000,8000 NON_Q_REGS:8000,8000 TLS_GOTBASE_REGS:8000,8000 GENERAL_REGS:8000,8000 FP_TOP_REG:19000,19000 FP_SECOND_REG:19000,19000 FLOAT_REGS:19000,19000 SSE_FIRST_REG:-1000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:19000,19000 FLOAT_INT_REGS:19000,19000 INT_SSE_REGS:19000,19000 FLOAT_INT_SSE_REGS:19000,19000 MEM:7000,7000
  a17(r107,l0) costs: AREG:18000,18000 DREG:18000,18000 CREG:18000,18000 BREG:18000,18000 SIREG:18000,18000 DIREG:18000,18000 AD_REGS:18000,18000 CLOBBERED_REGS:18000,18000 Q_REGS:18000,18000 NON_Q_REGS:18000,18000 TLS_GOTBASE_REGS:18000,18000 GENERAL_REGS:18000,18000 FP_TOP_REG:34000,34000 FP_SECOND_REG:34000,34000 FLOAT_REGS:34000,34000 SSE_FIRST_REG:1000,1000 NO_REX_SSE_REGS:4000,4000 SSE_REGS:4000,4000 FLOAT_SSE_REGS:34000,34000 FLOAT_INT_REGS:34000,34000 INT_SSE_REGS:34000,34000 FLOAT_INT_SSE_REGS:34000,34000 MEM:15000,15000
  a18(r139,l0) costs: AREG:8000,8000 DREG:8000,8000 CREG:8000,8000 BREG:8000,8000 SIREG:8000,8000 DIREG:8000,8000 AD_REGS:8000,8000 CLOBBERED_REGS:8000,8000 Q_REGS:8000,8000 NON_Q_REGS:8000,8000 TLS_GOTBASE_REGS:8000,8000 GENERAL_REGS:8000,8000 FP_TOP_REG:19000,19000 FP_SECOND_REG:19000,19000 FLOAT_REGS:19000,19000 SSE_FIRST_REG:-1000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:19000,19000 FLOAT_INT_REGS:19000,19000 INT_SSE_REGS:19000,19000 FLOAT_INT_SSE_REGS:19000,19000 MEM:7000,7000
  a19(r110,l0) costs: AREG:18000,18000 DREG:18000,18000 CREG:18000,18000 BREG:18000,18000 SIREG:18000,18000 DIREG:18000,18000 AD_REGS:18000,18000 CLOBBERED_REGS:18000,18000 Q_REGS:18000,18000 NON_Q_REGS:18000,18000 TLS_GOTBASE_REGS:18000,18000 GENERAL_REGS:18000,18000 FP_TOP_REG:28000,28000 FP_SECOND_REG:28000,28000 FLOAT_REGS:28000,28000 SSE_FIRST_REG:1000,1000 NO_REX_SSE_REGS:4000,4000 SSE_REGS:4000,4000 FLOAT_SSE_REGS:28000,28000 FLOAT_INT_REGS:28000,28000 INT_SSE_REGS:28000,28000 FLOAT_INT_SSE_REGS:28000,28000 MEM:14000,14000
  a20(r108,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:-1000,-1000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:12000,12000
  a21(r109,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:-1000,-1000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:12000,12000
  a22(r138,l0) costs: AREG:8000,8000 DREG:8000,8000 CREG:8000,8000 BREG:8000,8000 SIREG:8000,8000 DIREG:8000,8000 AD_REGS:8000,8000 CLOBBERED_REGS:8000,8000 Q_REGS:8000,8000 NON_Q_REGS:8000,8000 TLS_GOTBASE_REGS:8000,8000 GENERAL_REGS:8000,8000 FP_TOP_REG:19000,19000 FP_SECOND_REG:19000,19000 FLOAT_REGS:19000,19000 SSE_FIRST_REG:2000,2000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:19000,19000 FLOAT_INT_REGS:19000,19000 INT_SSE_REGS:19000,19000 FLOAT_INT_SSE_REGS:19000,19000 MEM:7000,7000
  a23(r137,l0) costs: AREG:8000,8000 DREG:8000,8000 CREG:8000,8000 BREG:8000,8000 SIREG:8000,8000 DIREG:8000,8000 AD_REGS:8000,8000 CLOBBERED_REGS:8000,8000 Q_REGS:8000,8000 NON_Q_REGS:8000,8000 TLS_GOTBASE_REGS:8000,8000 GENERAL_REGS:8000,8000 FP_TOP_REG:19000,19000 FP_SECOND_REG:19000,19000 FLOAT_REGS:19000,19000 SSE_FIRST_REG:-1000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:19000,19000 FLOAT_INT_REGS:19000,19000 INT_SSE_REGS:19000,19000 FLOAT_INT_SSE_REGS:19000,19000 MEM:7000,7000


Pass 1 for finding pseudo/allocno costs

    r141: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r140: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r139: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r138: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r137: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r121: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r120: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r119: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r118: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r117: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r116: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r115: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r114: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r112: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r111: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r110: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r109: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r106: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r96: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r92: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r91: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r90: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS

  a0(r118,l0) costs: AREG:26000,26000 DREG:26000,26000 CREG:26000,26000 BREG:26000,26000 SIREG:26000,26000 DIREG:26000,26000 AD_REGS:26000,26000 CLOBBERED_REGS:26000,26000 Q_REGS:26000,26000 NON_Q_REGS:26000,26000 TLS_GOTBASE_REGS:26000,26000 GENERAL_REGS:26000,26000 FP_TOP_REG:41000,41000 FP_SECOND_REG:41000,41000 FLOAT_REGS:41000,41000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:41000,41000 FLOAT_INT_REGS:41000,41000 INT_SSE_REGS:41000,41000 FLOAT_INT_SSE_REGS:41000,41000 MEM:6000,6000
  a1(r121,l0) costs: AREG:18000,18000 DREG:18000,18000 CREG:18000,18000 BREG:18000,18000 SIREG:18000,18000 DIREG:18000,18000 AD_REGS:18000,18000 CLOBBERED_REGS:18000,18000 Q_REGS:18000,18000 NON_Q_REGS:18000,18000 TLS_GOTBASE_REGS:18000,18000 GENERAL_REGS:18000,18000 FP_TOP_REG:28000,28000 FP_SECOND_REG:28000,28000 FLOAT_REGS:28000,28000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:28000,28000 FLOAT_INT_REGS:28000,28000 INT_SSE_REGS:28000,28000 FLOAT_INT_SSE_REGS:28000,28000 MEM:13000,13000
  a2(r117,l0) costs: AREG:24000,24000 DREG:24000,24000 CREG:24000,24000 BREG:24000,24000 SIREG:24000,24000 DIREG:24000,24000 AD_REGS:24000,24000 CLOBBERED_REGS:24000,24000 Q_REGS:24000,24000 NON_Q_REGS:24000,24000 TLS_GOTBASE_REGS:24000,24000 GENERAL_REGS:24000,24000 FP_TOP_REG:39000,39000 FP_SECOND_REG:39000,39000 FLOAT_REGS:39000,39000 SSE_FIRST_REG:2000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:26000,26000 FLOAT_INT_REGS:39000,39000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:26000,26000 MEM:18000,18000
  a3(r120,l0) costs: AREG:16000,16000 DREG:16000,16000 CREG:16000,16000 BREG:16000,16000 SIREG:16000,16000 DIREG:16000,16000 AD_REGS:16000,16000 CLOBBERED_REGS:16000,16000 Q_REGS:16000,16000 NON_Q_REGS:16000,16000 TLS_GOTBASE_REGS:16000,16000 GENERAL_REGS:16000,16000 FP_TOP_REG:26000,26000 FP_SECOND_REG:26000,26000 FLOAT_REGS:26000,26000 SSE_REGS:0,0 FLOAT_SSE_REGS:26000,26000 FLOAT_INT_REGS:26000,26000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:26000,26000 MEM:11000,11000
  a4(r119,l0) costs: AREG:16000,16000 DREG:16000,16000 CREG:16000,16000 BREG:16000,16000 SIREG:16000,16000 DIREG:16000,16000 AD_REGS:16000,16000 CLOBBERED_REGS:16000,16000 Q_REGS:16000,16000 NON_Q_REGS:16000,16000 TLS_GOTBASE_REGS:16000,16000 GENERAL_REGS:16000,16000 FP_TOP_REG:26000,26000 FP_SECOND_REG:26000,26000 FLOAT_REGS:26000,26000 SSE_REGS:0,0 FLOAT_SSE_REGS:26000,26000 FLOAT_INT_REGS:26000,26000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:26000,26000 MEM:11000,11000
  a5(r96,l0) costs: AREG:24000,24000 DREG:24000,24000 CREG:24000,24000 BREG:24000,24000 SIREG:24000,24000 DIREG:24000,24000 AD_REGS:24000,24000 CLOBBERED_REGS:24000,24000 Q_REGS:24000,24000 NON_Q_REGS:24000,24000 TLS_GOTBASE_REGS:24000,24000 GENERAL_REGS:24000,24000 FP_TOP_REG:38000,38000 FP_SECOND_REG:38000,38000 FLOAT_REGS:38000,38000 SSE_REGS:0,0 FLOAT_SSE_REGS:38000,38000 FLOAT_INT_REGS:38000,38000 INT_SSE_REGS:38000,38000 FLOAT_INT_SSE_REGS:38000,38000 MEM:16000,16000
  a6(r91,l0) costs: AREG:16000,16000 DREG:16000,16000 CREG:16000,16000 BREG:16000,16000 SIREG:16000,16000 DIREG:16000,16000 AD_REGS:16000,16000 CLOBBERED_REGS:16000,16000 Q_REGS:16000,16000 NON_Q_REGS:16000,16000 TLS_GOTBASE_REGS:16000,16000 GENERAL_REGS:16000,16000 FP_TOP_REG:26000,26000 FP_SECOND_REG:26000,26000 FLOAT_REGS:26000,26000 SSE_REGS:0,0 FLOAT_SSE_REGS:26000,26000 FLOAT_INT_REGS:26000,26000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:26000,26000 MEM:11000,11000
  a7(r141,l0) costs: AREG:24000,24000 DREG:24000,24000 CREG:24000,24000 BREG:24000,24000 SIREG:24000,24000 DIREG:24000,24000 AD_REGS:24000,24000 CLOBBERED_REGS:24000,24000 Q_REGS:24000,24000 NON_Q_REGS:24000,24000 TLS_GOTBASE_REGS:24000,24000 GENERAL_REGS:24000,24000 FP_TOP_REG:39000,39000 FP_SECOND_REG:39000,39000 FLOAT_REGS:39000,39000 SSE_FIRST_REG:2000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:26000,26000 FLOAT_INT_REGS:39000,39000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:26000,26000 MEM:17000,17000
  a8(r92,l0) costs: AREG:26000,26000 DREG:26000,26000 CREG:26000,26000 BREG:26000,26000 SIREG:26000,26000 DIREG:26000,26000 AD_REGS:26000,26000 CLOBBERED_REGS:26000,26000 Q_REGS:26000,26000 NON_Q_REGS:26000,26000 TLS_GOTBASE_REGS:26000,26000 GENERAL_REGS:26000,26000 FP_TOP_REG:40000,40000 FP_SECOND_REG:40000,40000 FLOAT_REGS:40000,40000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:40000,40000 FLOAT_INT_REGS:40000,40000 INT_SSE_REGS:40000,40000 FLOAT_INT_SSE_REGS:40000,40000 MEM:18000,18000
  a9(r116,l0) costs: AREG:16000,16000 DREG:16000,16000 CREG:16000,16000 BREG:16000,16000 SIREG:16000,16000 DIREG:16000,16000 AD_REGS:16000,16000 CLOBBERED_REGS:16000,16000 Q_REGS:16000,16000 NON_Q_REGS:16000,16000 TLS_GOTBASE_REGS:16000,16000 GENERAL_REGS:16000,16000 FP_TOP_REG:26000,26000 FP_SECOND_REG:26000,26000 FLOAT_REGS:26000,26000 SSE_REGS:0,0 FLOAT_SSE_REGS:26000,26000 FLOAT_INT_REGS:26000,26000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:26000,26000 MEM:12000,12000
  a10(r115,l0) costs: AREG:16000,16000 DREG:16000,16000 CREG:16000,16000 BREG:16000,16000 SIREG:16000,16000 DIREG:16000,16000 AD_REGS:16000,16000 CLOBBERED_REGS:16000,16000 Q_REGS:16000,16000 NON_Q_REGS:16000,16000 TLS_GOTBASE_REGS:16000,16000 GENERAL_REGS:16000,16000 FP_TOP_REG:26000,26000 FP_SECOND_REG:26000,26000 FLOAT_REGS:26000,26000 SSE_REGS:0,0 FLOAT_SSE_REGS:26000,26000 FLOAT_INT_REGS:26000,26000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:26000,26000 MEM:11000,11000
  a11(r114,l0) costs: AREG:18000,18000 DREG:18000,18000 CREG:18000,18000 BREG:18000,18000 SIREG:18000,18000 DIREG:18000,18000 AD_REGS:18000,18000 CLOBBERED_REGS:18000,18000 Q_REGS:18000,18000 NON_Q_REGS:18000,18000 TLS_GOTBASE_REGS:18000,18000 GENERAL_REGS:18000,18000 FP_TOP_REG:28000,28000 FP_SECOND_REG:28000,28000 FLOAT_REGS:28000,28000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:28000,28000 FLOAT_INT_REGS:28000,28000 INT_SSE_REGS:28000,28000 FLOAT_INT_SSE_REGS:28000,28000 MEM:13000,13000
  a12(r90,l0) costs: AREG:26000,26000 DREG:26000,26000 CREG:26000,26000 BREG:26000,26000 SIREG:26000,26000 DIREG:26000,26000 AD_REGS:26000,26000 CLOBBERED_REGS:26000,26000 Q_REGS:26000,26000 NON_Q_REGS:26000,26000 TLS_GOTBASE_REGS:26000,26000 GENERAL_REGS:26000,26000 FP_TOP_REG:41000,41000 FP_SECOND_REG:41000,41000 FLOAT_REGS:41000,41000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:41000,41000 FLOAT_INT_REGS:41000,41000 INT_SSE_REGS:41000,41000 FLOAT_INT_SSE_REGS:41000,41000 MEM:19000,19000
  a13(r112,l0) costs: AREG:24000,24000 DREG:24000,24000 CREG:24000,24000 BREG:24000,24000 SIREG:24000,24000 DIREG:24000,24000 AD_REGS:24000,24000 CLOBBERED_REGS:24000,24000 Q_REGS:24000,24000 NON_Q_REGS:24000,24000 TLS_GOTBASE_REGS:24000,24000 GENERAL_REGS:24000,24000 FP_TOP_REG:39000,39000 FP_SECOND_REG:39000,39000 FLOAT_REGS:39000,39000 SSE_FIRST_REG:2000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:26000,26000 FLOAT_INT_REGS:39000,39000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:26000,26000 MEM:18000,18000
  a14(r106,l0) costs: AREG:32000,32000 DREG:32000,32000 CREG:32000,32000 BREG:32000,32000 SIREG:32000,32000 DIREG:32000,32000 AD_REGS:32000,32000 CLOBBERED_REGS:32000,32000 Q_REGS:32000,32000 NON_Q_REGS:32000,32000 TLS_GOTBASE_REGS:32000,32000 GENERAL_REGS:32000,32000 FP_TOP_REG:51000,51000 FP_SECOND_REG:51000,51000 FLOAT_REGS:51000,51000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:38000,38000 FLOAT_INT_REGS:51000,51000 INT_SSE_REGS:38000,38000 FLOAT_INT_SSE_REGS:38000,38000 MEM:24000,24000
  a15(r111,l0) costs: SSE_REGS:2000,2000 MEM:18000,18000
  a16(r140,l0) costs: AREG:24000,24000 DREG:24000,24000 CREG:24000,24000 BREG:24000,24000 SIREG:24000,24000 DIREG:24000,24000 AD_REGS:24000,24000 CLOBBERED_REGS:24000,24000 Q_REGS:24000,24000 NON_Q_REGS:24000,24000 TLS_GOTBASE_REGS:24000,24000 GENERAL_REGS:24000,24000 FP_TOP_REG:38000,38000 FP_SECOND_REG:38000,38000 FLOAT_REGS:38000,38000 SSE_FIRST_REG:2000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:25000,25000 FLOAT_INT_REGS:38000,38000 INT_SSE_REGS:25000,25000 FLOAT_INT_SSE_REGS:25000,25000 MEM:18000,18000
  a17(r107,l0) costs: AREG:34000,34000 DREG:34000,34000 CREG:34000,34000 BREG:34000,34000 SIREG:34000,34000 DIREG:34000,34000 AD_REGS:34000,34000 CLOBBERED_REGS:34000,34000 Q_REGS:34000,34000 NON_Q_REGS:34000,34000 TLS_GOTBASE_REGS:34000,34000 GENERAL_REGS:34000,34000 FP_TOP_REG:53000,53000 FP_SECOND_REG:53000,53000 FLOAT_REGS:53000,53000 SSE_FIRST_REG:4000,1000 NO_REX_SSE_REGS:4000,4000 SSE_REGS:4000,4000 FLOAT_SSE_REGS:40000,40000 FLOAT_INT_REGS:53000,53000 INT_SSE_REGS:40000,40000 FLOAT_INT_SSE_REGS:40000,40000 MEM:26000,26000
  a18(r139,l0) costs: AREG:24000,24000 DREG:24000,24000 CREG:24000,24000 BREG:24000,24000 SIREG:24000,24000 DIREG:24000,24000 AD_REGS:24000,24000 CLOBBERED_REGS:24000,24000 Q_REGS:24000,24000 NON_Q_REGS:24000,24000 TLS_GOTBASE_REGS:24000,24000 GENERAL_REGS:24000,24000 FP_TOP_REG:38000,38000 FP_SECOND_REG:38000,38000 FLOAT_REGS:38000,38000 SSE_FIRST_REG:2000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:25000,25000 FLOAT_INT_REGS:38000,38000 INT_SSE_REGS:25000,25000 FLOAT_INT_SSE_REGS:25000,25000 MEM:18000,18000
  a19(r110,l0) costs: AREG:26000,26000 DREG:26000,26000 CREG:26000,26000 BREG:26000,26000 SIREG:26000,26000 DIREG:26000,26000 AD_REGS:26000,26000 CLOBBERED_REGS:26000,26000 Q_REGS:26000,26000 NON_Q_REGS:26000,26000 TLS_GOTBASE_REGS:26000,26000 GENERAL_REGS:26000,26000 FP_TOP_REG:41000,41000 FP_SECOND_REG:41000,41000 FLOAT_REGS:41000,41000 SSE_FIRST_REG:4000,1000 NO_REX_SSE_REGS:4000,4000 SSE_REGS:4000,4000 FLOAT_SSE_REGS:28000,28000 FLOAT_INT_REGS:41000,41000 INT_SSE_REGS:28000,28000 FLOAT_INT_SSE_REGS:28000,28000 MEM:20000,20000
  a20(r108,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:2000,-1000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:18000,18000
  a21(r109,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:2000,-1000 DIREG:4000,4000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:18000,18000
  a22(r138,l0) costs: AREG:24000,24000 DREG:24000,24000 CREG:24000,24000 BREG:24000,24000 SIREG:24000,24000 DIREG:24000,24000 AD_REGS:24000,24000 CLOBBERED_REGS:24000,24000 Q_REGS:24000,24000 NON_Q_REGS:24000,24000 TLS_GOTBASE_REGS:24000,24000 GENERAL_REGS:24000,24000 FP_TOP_REG:38000,38000 FP_SECOND_REG:38000,38000 FLOAT_REGS:38000,38000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:25000,25000 FLOAT_INT_REGS:38000,38000 INT_SSE_REGS:25000,25000 FLOAT_INT_SSE_REGS:25000,25000 MEM:18000,18000
  a23(r137,l0) costs: AREG:24000,24000 DREG:24000,24000 CREG:24000,24000 BREG:24000,24000 SIREG:24000,24000 DIREG:24000,24000 AD_REGS:24000,24000 CLOBBERED_REGS:24000,24000 Q_REGS:24000,24000 NON_Q_REGS:24000,24000 TLS_GOTBASE_REGS:24000,24000 GENERAL_REGS:24000,24000 FP_TOP_REG:38000,38000 FP_SECOND_REG:38000,38000 FLOAT_REGS:38000,38000 SSE_FIRST_REG:2000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:25000,25000 FLOAT_INT_REGS:38000,38000 INT_SSE_REGS:25000,25000 FLOAT_INT_SSE_REGS:25000,25000 MEM:18000,18000

   Insn 119(l0): point = 0
   Insn 118(l0): point = 2
   Insn 117(l0): point = 4
   Insn 116(l0): point = 6
   Insn 97(l0): point = 8
   Insn 96(l0): point = 10
   Insn 95(l0): point = 12
   Insn 93(l0): point = 14
   Insn 92(l0): point = 16
   Insn 91(l0): point = 18
   Insn 90(l0): point = 20
   Insn 89(l0): point = 22
   Insn 133(l0): point = 24
   Insn 72(l0): point = 26
   Insn 71(l0): point = 28
   Insn 70(l0): point = 30
   Insn 64(l0): point = 32
   Insn 132(l0): point = 34
   Insn 63(l0): point = 36
   Insn 62(l0): point = 38
   Insn 41(l0): point = 40
   Insn 131(l0): point = 42
   Insn 40(l0): point = 44
   Insn 39(l0): point = 46
   Insn 38(l0): point = 48
   Insn 37(l0): point = 50
   Insn 19(l0): point = 52
   Insn 18(l0): point = 54
   Insn 17(l0): point = 56
   Insn 16(l0): point = 58
   Insn 15(l0): point = 60
   Insn 14(l0): point = 62
   Insn 13(l0): point = 64
   Insn 12(l0): point = 66
   Insn 3(l0): point = 68
   Insn 130(l0): point = 70
   Insn 2(l0): point = 72
   Insn 129(l0): point = 74
 a0(r118): [5..16]
 a1(r121): [5..8]
 a2(r117): [7..14]
 a3(r120): [9..10]
 a4(r119): [9..12]
 a5(r96): [11..40]
 a6(r91): [11..52]
 a7(r141): [13..24]
 a8(r92): [13..32]
 a9(r116): [15..18]
 a10(r115): [19..20]
 a11(r114): [19..22]
 a12(r90): [21..54]
 a13(r112): [29..30]
 a14(r106): [31..72]
 a15(r111): [31..50]
 a16(r140): [33..34]
 a17(r107): [39..68]
 a18(r139): [41..42]
 a19(r110): [47..48]
 a20(r108): [61..66]
 a21(r109): [63..64]
 a22(r138): [69..70]
 a23(r137): [73..74]
Compressing live ranges: from 77 to 32 - 41%
Ranges after the compression:
 a0(r118): [0..9]
 a1(r121): [0..1]
 a2(r117): [0..7]
 a3(r120): [2..3]
 a4(r119): [2..5]
 a5(r96): [4..21]
 a6(r91): [4..25]
 a7(r141): [6..13]
 a8(r92): [6..17]
 a9(r116): [8..9]
 a10(r115): [10..11]
 a11(r114): [10..13]
 a12(r90): [12..25]
 a13(r112): [14..15]
 a14(r106): [16..29]
 a15(r111): [16..25]
 a16(r140): [18..19]
 a17(r107): [20..27]
 a18(r139): [22..23]
 a19(r110): [24..25]
 a20(r108): [26..27]
 a21(r109): [26..27]
 a22(r138): [28..29]
 a23(r137): [30..31]
+++Allocating 184 bytes for conflict table (uncompressed size 192)
;; a0(r118,l0) conflicts: a1(r121,l0) a2(r117,l0) a3(r120,l0) a4(r119,l0) a5(r96,l0) a6(r91,l0) a7(r141,l0) a8(r92,l0) a9(r116,l0)
;;     total conflict hard regs: 20
;;     conflict hard regs: 20

;; a1(r121,l0) conflicts: a2(r117,l0) a0(r118,l0)
;;     total conflict hard regs: 20
;;     conflict hard regs: 20

;; a2(r117,l0) conflicts: a1(r121,l0) a0(r118,l0) a3(r120,l0) a4(r119,l0) a5(r96,l0) a6(r91,l0) a7(r141,l0) a8(r92,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r120,l0) conflicts: a2(r117,l0) a0(r118,l0) a4(r119,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r119,l0) conflicts: a2(r117,l0) a0(r118,l0) a3(r120,l0) a5(r96,l0) a6(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r96,l0) conflicts: a2(r117,l0) a0(r118,l0) a4(r119,l0) a6(r91,l0) a7(r141,l0) a8(r92,l0) a9(r116,l0) a10(r115,l0) a11(r114,l0) a12(r90,l0) a13(r112,l0) a15(r111,l0) a14(r106,l0) a16(r140,l0) a17(r107,l0)
;;     total conflict hard regs: 20
;;     conflict hard regs: 20

;; a6(r91,l0) conflicts: a2(r117,l0) a0(r118,l0) a4(r119,l0) a5(r96,l0) a7(r141,l0) a8(r92,l0) a9(r116,l0) a10(r115,l0) a11(r114,l0) a12(r90,l0) a13(r112,l0) a15(r111,l0) a14(r106,l0) a16(r140,l0) a17(r107,l0) a18(r139,l0) a19(r110,l0)
;;     total conflict hard regs: 20
;;     conflict hard regs: 20

;; a7(r141,l0) conflicts: a2(r117,l0) a0(r118,l0) a5(r96,l0) a6(r91,l0) a8(r92,l0) a9(r116,l0) a10(r115,l0) a11(r114,l0) a12(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r92,l0) conflicts: a2(r117,l0) a0(r118,l0) a5(r96,l0) a6(r91,l0) a7(r141,l0) a9(r116,l0) a10(r115,l0) a11(r114,l0) a12(r90,l0) a13(r112,l0) a15(r111,l0) a14(r106,l0)
;;     total conflict hard regs: 20
;;     conflict hard regs: 20

;; a9(r116,l0) conflicts: a0(r118,l0) a5(r96,l0) a6(r91,l0) a7(r141,l0) a8(r92,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r115,l0) conflicts: a5(r96,l0) a6(r91,l0) a7(r141,l0) a8(r92,l0) a11(r114,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r114,l0) conflicts: a5(r96,l0) a6(r91,l0) a7(r141,l0) a8(r92,l0) a10(r115,l0) a12(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r90,l0) conflicts: a5(r96,l0) a6(r91,l0) a7(r141,l0) a8(r92,l0) a11(r114,l0) a13(r112,l0) a15(r111,l0) a14(r106,l0) a16(r140,l0) a17(r107,l0) a18(r139,l0) a19(r110,l0)
;;     total conflict hard regs: 20
;;     conflict hard regs: 20

;; a13(r112,l0) conflicts: a5(r96,l0) a6(r91,l0) a8(r92,l0) a12(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r106,l0) conflicts: a5(r96,l0) a6(r91,l0) a8(r92,l0) a12(r90,l0) a15(r111,l0) a16(r140,l0) a17(r107,l0) a18(r139,l0) a19(r110,l0) a22(r138,l0)
;;     total conflict hard regs: 20 21
;;     conflict hard regs: 20 21

;; a15(r111,l0) conflicts: a5(r96,l0) a6(r91,l0) a8(r92,l0) a12(r90,l0) a14(r106,l0) a16(r140,l0) a17(r107,l0) a18(r139,l0) a19(r110,l0)
;;     total conflict hard regs: 20
;;     conflict hard regs: 20

;; a16(r140,l0) conflicts: a5(r96,l0) a6(r91,l0) a12(r90,l0) a15(r111,l0) a14(r106,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r107,l0) conflicts: a5(r96,l0) a6(r91,l0) a12(r90,l0) a15(r111,l0) a14(r106,l0) a18(r139,l0) a19(r110,l0)
;;     total conflict hard regs: 20
;;     conflict hard regs: 20

;; a18(r139,l0) conflicts: a6(r91,l0) a12(r90,l0) a15(r111,l0) a14(r106,l0) a17(r107,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r110,l0) conflicts: a6(r91,l0) a12(r90,l0) a15(r111,l0) a14(r106,l0) a17(r107,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r108,l0) conflicts: a21(r109,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a21(r109,l0) conflicts: a20(r108,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r138,l0) conflicts: a14(r106,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r137,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a14(r106)<->a23(r137)@1000:move
  cp1:a17(r107)<->a22(r138)@1000:move
  cp2:a5(r96)<->a18(r139)@1000:move
  cp3:a8(r92)<->a16(r140)@1000:move
  cp4:a13(r112)<->a14(r106)@125:shuffle
  cp5:a13(r112)<->a15(r111)@125:shuffle
  cp6:a10(r115)<->a12(r90)@1000:constraint
  cp7:a9(r116)<->a11(r114)@1000:constraint
  cp8:a9(r116)<->a10(r115)@1000:constraint
  cp9:a2(r117)<->a9(r116)@1000:constraint
  cp10:a4(r119)<->a8(r92)@1000:constraint
  cp11:a4(r119)<->a7(r141)@1000:constraint
  cp12:a3(r120)<->a6(r91)@1000:constraint
  cp13:a3(r120)<->a5(r96)@1000:constraint
  cp14:a1(r121)<->a4(r119)@1000:constraint
  cp15:a1(r121)<->a3(r120)@1000:constraint
  pref0:a7(r141)<-hr20@1500
  pref1:a16(r140)<-hr20@1500
  pref2:a18(r139)<-hr20@1500
  pref3:a23(r137)<-hr20@1500
  pref4:a2(r117)<-hr20@1500
  pref5:a13(r112)<-hr20@1500
  pref6:a19(r110)<-hr20@1500
  pref7:a21(r109)<-hr4@1500
  pref8:a20(r108)<-hr5@1500
  pref9:a17(r107)<-hr20@1500
  pref10:a22(r138)<-hr21@2000
  pref11:a1(r121)<-hr21@1000
  pref12:a0(r118)<-hr21@1000
  regions=1, blocks=3, points=32
    allocnos=24 (big 0), copies=16, conflicts=0, ranges=24

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r118 1r121 2r117 3r120 4r119 5r96 6r91 7r141 8r92 9r116 10r115 11r114 12r90 13r112 14r106 15r111 16r140 17r107 18r139 19r110 20r108 21r109 22r138 23r137
    modified regnos: 90 91 92 96 106 107 108 109 110 111 112 114 115 116 117 118 119 120 121 137 138 139 140 141
    border:
    Pressure: GENERAL_REGS=2 SSE_REGS=6
 Removing pref9:hr20@1500
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@38000
          2:( 0-3 5 6 36-43)@38000
        3:( 20-27 44-51)@378000
          4:( 21-27 44-51)@72000
            5:( 22-27 44-51)@58000
      Spill a6(r91,l0)
      Spill a17(r107,l0)
      Allocno a0r118 of SSE_REGS(16) has 15 avail. regs  21-27 44-51, node:  21-27 44-51 (confl regs =  0-20 28-43 52-74)
      Allocno a1r121 of SSE_REGS(16) has 15 avail. regs  21-27 44-51, node:  21-27 44-51 (confl regs =  0-20 28-43 52-74)
      Allocno a2r117 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a3r120 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a4r119 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a5r96 of SSE_REGS(16) has 15 avail. regs  21-27 44-51, node:  21-27 44-51 (confl regs =  0-20 28-43 52-74)
      Allocno a7r141 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a8r92 of SSE_REGS(16) has 15 avail. regs  21-27 44-51, node:  21-27 44-51 (confl regs =  0-20 28-43 52-74)
      Allocno a9r116 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a10r115 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a11r114 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a12r90 of SSE_REGS(16) has 15 avail. regs  21-27 44-51, node:  21-27 44-51 (confl regs =  0-20 28-43 52-74)
      Allocno a13r112 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a14r106 of SSE_REGS(16) has 14 avail. regs  22-27 44-51, node:  22-27 44-51 (confl regs =  0-21 28-43 52-74)
      Allocno a15r111 of SSE_REGS(16) has 15 avail. regs  21-27 44-51, node:  21-27 44-51 (confl regs =  0-20 28-43 52-74)
      Allocno a16r140 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a18r139 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a19r110 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a20r108 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Allocno a21r109 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a22r138 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a23r137 of SSE_REGS(16) has 15 avail. regs  20 22-27 44-51, ^node:  20-27 44-51 (confl regs =  0-19 21 28-43 52-74)
      Forming thread by copy 0:a14r106-a23r137 (freq=1000):
        Result (freq=5000): a14r106(3000) a23r137(2000)
      Forming thread by copy 2:a5r96-a18r139 (freq=1000):
        Result (freq=5000): a5r96(3000) a18r139(2000)
      Forming thread by copy 3:a8r92-a16r140 (freq=1000):
        Result (freq=5000): a8r92(3000) a16r140(2000)
      Forming thread by copy 6:a10r115-a12r90 (freq=1000):
        Result (freq=5000): a10r115(2000) a12r90(3000)
      Forming thread by copy 7:a9r116-a11r114 (freq=1000):
        Result (freq=4000): a9r116(2000) a11r114(2000)
      Forming thread by copy 9:a2r117-a9r116 (freq=1000):
        Result (freq=6000): a2r117(2000) a9r116(2000) a11r114(2000)
      Forming thread by copy 10:a4r119-a8r92 (freq=1000):
        Result (freq=7000): a4r119(2000) a8r92(3000) a16r140(2000)
      Forming thread by copy 12:a3r120-a6r91 (freq=1000):
        Result (freq=4000): a3r120(2000) a6r91(2000)
      Forming thread by copy 14:a1r121-a4r119 (freq=1000):
        Result (freq=9000): a1r121(2000) a4r119(2000) a8r92(3000) a16r140(2000)
      Forming thread by copy 4:a13r112-a14r106 (freq=125):
        Result (freq=7000): a13r112(2000) a14r106(3000) a23r137(2000)
      Pushing a22(r138,l0)(cost 0)
      Pushing a21(r109,l0)(cost 0)
      Pushing a20(r108,l0)(cost 0)
      Pushing a19(r110,l0)(cost 0)
      Pushing a7(r141,l0)(cost 0)
      Pushing a15(r111,l0)(cost 0)
      Pushing a0(r118,l0)(cost 0)
      Pushing a3(r120,l0)(cost 0)
      Pushing a10(r115,l0)(cost 0)
      Pushing a12(r90,l0)(cost 0)
      Pushing a18(r139,l0)(cost 0)
      Pushing a5(r96,l0)(cost 0)
      Pushing a11(r114,l0)(cost 0)
      Pushing a9(r116,l0)(cost 0)
      Pushing a2(r117,l0)(cost 0)
      Pushing a13(r112,l0)(cost 0)
      Pushing a23(r137,l0)(cost 0)
      Pushing a14(r106,l0)(cost 0)
      Pushing a16(r140,l0)(cost 0)
      Pushing a4(r119,l0)(cost 0)
      Pushing a1(r121,l0)(cost 0)
      Pushing a8(r92,l0)(cost 0)
      Popping a8(r92,l0)  -- assign reg 22
      Popping a1(r121,l0)  -- assign reg 22
      Popping a4(r119,l0)  -- assign reg 22
      Popping a16(r140,l0)  -- assign reg 20
      Popping a14(r106,l0)  -- assign reg 23
      Popping a23(r137,l0)  -- assign reg 20
      Popping a13(r112,l0)  -- assign reg 20
      Popping a2(r117,l0)  -- assign reg 20
      Popping a9(r116,l0)  -- assign reg 20
      Popping a11(r114,l0)  -- assign reg 20
      Popping a5(r96,l0)  -- assign reg 24
      Popping a18(r139,l0)  -- assign reg 20
      Popping a12(r90,l0)  -- assign reg 25
      Popping a10(r115,l0)  -- assign reg 25
      Popping a3(r120,l0)  -- assign reg 24
      Popping a0(r118,l0)  -- assign reg 21
      Popping a15(r111,l0)  -- assign reg 21
      Popping a7(r141,l0)  -- assign reg 23
      Popping a19(r110,l0)  -- assign reg 20
      Popping a20(r108,l0)  -- assign reg 5
      Popping a21(r109,l0)  -- assign reg 4
      Popping a22(r138,l0)  -- assign reg 21
Disposition:
   12:r90  l0    25    6:r91  l0   mem    8:r92  l0    22    5:r96  l0    24
   14:r106 l0    23   17:r107 l0   mem   20:r108 l0     5   21:r109 l0     4
   19:r110 l0    20   15:r111 l0    21   13:r112 l0    20   11:r114 l0    20
   10:r115 l0    25    9:r116 l0    20    2:r117 l0    20    0:r118 l0    21
    4:r119 l0    22    3:r120 l0    24    1:r121 l0    22   23:r137 l0    20
   22:r138 l0    21   18:r139 l0    20   16:r140 l0    20    7:r141 l0    23
New iteration of spill/restore move
+++Costs: overall 103000, reg 66000, mem 37000, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


c_cos

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1]
;;  regs ever live 	 4 [si] 5 [di] 7 [sp] 17 [flags] 20 [xmm0] 21 [xmm1]
;;  ref usage 	r0={5d} r1={5d} r2={5d} r4={6d,1u} r5={6d,1u} r6={1d,2u} r7={1d,6u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,1u} r17={8d} r18={4d} r19={1d,6u,4e} r20={10d,10u} r21={6d,3u} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={5d} r37={5d} r38={4d} r39={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r90={1d,8u} r91={1d,4u} r92={1d,9u} r96={1d,9u} r106={1d,7u} r107={1d,5u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,2u} r112={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,2u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,4u} 
;;    total ref usage 422{323d,95u,4e} in 100{96 regular + 4 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 90 91 92 96 106 107 108 109 110 111 112 114 115 116 117 118 119 120 121 137 138 139 140 141
(note 9 1 129 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 129 9 2 2 (set (reg:DF 137)
        (reg:DF 20 xmm0 [ z ])) "cmodules/fbgc_math.c":31:47 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0 [ z ])
        (nil)))
(insn 2 129 130 2 (set (reg:DF 106 [ z ])
        (reg:DF 137)) "cmodules/fbgc_math.c":31:47 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 137)
        (nil)))
(insn 130 2 3 2 (set (reg:DF 138)
        (reg:DF 21 xmm1 [ z+8 ])) "cmodules/fbgc_math.c":31:47 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm1 [ z+8 ])
        (nil)))
(insn 3 130 8 2 (set (reg:DF 107 [ z+8 ])
        (reg:DF 138)) "cmodules/fbgc_math.c":31:47 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 138)
        (nil)))
(note 8 3 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 8 13 2 (parallel [
            (set (reg/f:DI 108)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))
(insn 13 12 14 2 (parallel [
            (set (reg/f:DI 109)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (reg/f:DI 109)) 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 109)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/f:DI 108)) 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 108)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))
(insn 16 15 17 2 (set (reg:DF 20 xmm0)
        (reg:DF 106 [ z ])) 111 {*movdf_internal}
     (nil))
(call_insn 17 16 18 2 (call (mem:QI (symbol_ref:DI ("sincos") [flags 0x41]  <function_decl 0x7f213e4ba400 __builtin_sincos>) [0 __builtin_sincos S1 A8])
        (const_int 0 [0])) 666 {*call}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("sincos") [flags 0x41]  <function_decl 0x7f213e4ba400 __builtin_sincos>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 18 17 19 2 (set (reg:DF 90 [ sincostmp_12 ])
        (mem/c:DF (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2  S8 A64])) 111 {*movdf_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DF 91 [ sincostmp_12+8 ])
        (mem/c:DF (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [2  S8 A64])) 111 {*movdf_internal}
     (nil))
(debug_insn 20 19 22 2 (var_location:DF z$real (reg:DF 106 [ z ])) -1
     (nil))
(debug_insn 22 20 23 2 (var_location:DF z$imag (reg:DF 107 [ z+8 ])) -1
     (nil))
(debug_insn 23 22 24 2 (debug_marker) "cmodules/fbgc_math.c":33:2 -1
     (nil))
(debug_insn 24 23 25 2 (debug_marker) "cmodules/fbgc_math.c":35:2 -1
     (nil))
(debug_insn 25 24 26 2 (var_location:DF u1$real (neg:DF (reg:DF 107 [ z+8 ]))) "cmodules/fbgc_math.c":35:10 -1
     (nil))
(debug_insn 26 25 27 2 (debug_marker) "cmodules/fbgc_math.c":36:2 -1
     (nil))
(debug_insn 27 26 28 2 (var_location:DF u1$imag (reg:DF 106 [ z ])) "cmodules/fbgc_math.c":36:10 -1
     (nil))
(debug_insn 28 27 29 2 (debug_marker) "cmodules/fbgc_math.c":38:2 -1
     (nil))
(debug_insn 29 28 30 2 (var_location:DF u2$real (reg:DF 107 [ z+8 ])) "cmodules/fbgc_math.c":38:10 -1
     (nil))
(debug_insn 30 29 31 2 (debug_marker) "cmodules/fbgc_math.c":39:2 -1
     (nil))
(debug_insn 31 30 32 2 (var_location:DF u2$imag (neg:DF (reg:DF 106 [ z ]))) "cmodules/fbgc_math.c":39:10 -1
     (nil))
(debug_insn 32 31 33 2 (debug_marker) "cmodules/fbgc_math.c":41:2 -1
     (nil))
(debug_insn 33 32 34 2 (debug_marker:BLK) "cmodules/fbgc_math.c":22:20 -1
     (nil))
(debug_insn 34 33 35 2 (var_location:DF z$imag (reg:DF 106 [ z ])) -1
     (nil))
(debug_insn 35 34 36 2 (debug_marker) "cmodules/fbgc_math.c":24:2 -1
     (nil))
(debug_insn 36 35 37 2 (debug_marker) "cmodules/fbgc_math.c":25:2 -1
     (nil))
(insn 37 36 38 2 (set (reg:V2DF 111)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S16 A128])) "cmodules/fbgc_math.c":35:12 1220 {movv2df_internal}
     (expr_list:REG_EQUIV (const_vector:V2DF [
                (const_double:DF -0.0 [-0x0.0p+0])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 38 37 39 2 (parallel [
            (set (reg:DF 110)
                (neg:DF (reg:DF 107 [ z+8 ])))
            (use (reg:V2DF 111))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":35:12 477 {*absnegdf2}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 39 38 40 2 (set (reg:DF 20 xmm0)
        (reg:DF 110)) "cmodules/fbgc_math.c":25:13 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 110)
        (nil)))
(call_insn 40 39 131 2 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":25:13 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 131 40 41 2 (set (reg:DF 139)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":25:13 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (nil)))
(insn 41 131 42 2 (set (reg/v:DF 96 [ r ])
        (reg:DF 139)) "cmodules/fbgc_math.c":25:13 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 139)
        (nil)))
(debug_insn 42 41 43 2 (var_location:DF r (reg/v:DF 96 [ r ])) "cmodules/fbgc_math.c":25:13 -1
     (nil))
(debug_insn 43 42 45 2 (debug_marker) "cmodules/fbgc_math.c":26:2 -1
     (nil))
(debug_insn 45 43 46 2 (var_location:DF res$real (mult:DF (reg/v:DF 96 [ r ])
        (reg:DF 90 [ sincostmp_12 ]))) "cmodules/fbgc_math.c":26:11 -1
     (nil))
(debug_insn 46 45 47 2 (debug_marker) "cmodules/fbgc_math.c":27:2 -1
     (nil))
(debug_insn 47 46 48 2 (var_location:DF res$imag (mult:DF (reg:DF 91 [ sincostmp_12+8 ])
        (reg/v:DF 96 [ r ]))) "cmodules/fbgc_math.c":27:11 -1
     (nil))
(debug_insn 48 47 49 2 (debug_marker) "cmodules/fbgc_math.c":28:2 -1
     (nil))
(debug_insn 49 48 50 2 (var_location:DF D#1 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 50 49 51 2 (var_location:DF res$real (debug_expr:DF D#1)) -1
     (nil))
(debug_insn 51 50 52 2 (var_location:DF D#2 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 52 51 53 2 (var_location:DF res$imag (debug_expr:DF D#2)) -1
     (nil))
(debug_insn 53 52 54 2 (var_location:DF r (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":41:7 -1
     (nil))
(debug_insn 54 53 55 2 (var_location:DF z$imag (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":41:7 -1
     (nil))
(debug_insn 55 54 56 2 (var_location:DF u1$real (mult:DF (reg/v:DF 96 [ r ])
        (reg:DF 90 [ sincostmp_12 ]))) "cmodules/fbgc_math.c":41:7 -1
     (nil))
(debug_insn 56 55 57 2 (var_location:DF u1$imag (mult:DF (reg:DF 91 [ sincostmp_12+8 ])
        (reg/v:DF 96 [ r ]))) "cmodules/fbgc_math.c":41:7 -1
     (nil))
(debug_insn 57 56 58 2 (debug_marker) "cmodules/fbgc_math.c":42:2 -1
     (nil))
(debug_insn 58 57 59 2 (debug_marker:BLK) "cmodules/fbgc_math.c":22:20 -1
     (nil))
(debug_insn 59 58 60 2 (var_location:DF z$imag (neg:DF (reg:DF 106 [ z ]))) -1
     (nil))
(debug_insn 60 59 61 2 (debug_marker) "cmodules/fbgc_math.c":24:2 -1
     (nil))
(debug_insn 61 60 62 2 (debug_marker) "cmodules/fbgc_math.c":25:2 -1
     (nil))
(insn 62 61 63 2 (set (reg:DF 20 xmm0)
        (reg:DF 107 [ z+8 ])) "cmodules/fbgc_math.c":25:13 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 107 [ z+8 ])
        (nil)))
(call_insn 63 62 132 2 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":25:13 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 132 63 64 2 (set (reg:DF 140)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":25:13 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (nil)))
(insn 64 132 65 2 (set (reg/v:DF 92 [ r ])
        (reg:DF 140)) "cmodules/fbgc_math.c":25:13 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 140)
        (nil)))
(debug_insn 65 64 66 2 (var_location:DF r (reg/v:DF 92 [ r ])) "cmodules/fbgc_math.c":25:13 -1
     (nil))
(debug_insn 66 65 67 2 (debug_marker) "cmodules/fbgc_math.c":26:2 -1
     (nil))
(debug_insn 67 66 68 2 (var_location:DF res$real (mult:DF (reg/v:DF 92 [ r ])
        (reg:DF 90 [ sincostmp_12 ]))) "cmodules/fbgc_math.c":26:11 -1
     (nil))
(debug_insn 68 67 70 2 (debug_marker) "cmodules/fbgc_math.c":27:2 -1
     (nil))
(insn 70 68 71 2 (parallel [
            (set (reg:DF 112)
                (neg:DF (reg:DF 106 [ z ])))
            (use (reg:V2DF 111))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":39:12 477 {*absnegdf2}
     (expr_list:REG_DEAD (reg:V2DF 111)
        (expr_list:REG_DEAD (reg:DF 106 [ z ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 71 70 72 2 (set (reg:DF 20 xmm0)
        (reg:DF 112)) "cmodules/fbgc_math.c":27:15 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 112)
        (nil)))
(call_insn/u 72 71 133 2 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7f213e4ba300 sin>) [0 __builtin_sin S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":27:15 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7f213e4ba300 sin>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 133 72 73 2 (set (reg:DF 141)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":27:15 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (nil)))
(note 73 133 74 2 NOTE_INSN_DELETED)
(debug_insn 74 73 75 2 (var_location:DF res$imag (mult:DF (reg/v:DF 92 [ r ])
        (reg:DF 141))) "cmodules/fbgc_math.c":27:11 -1
     (nil))
(debug_insn 75 74 76 2 (debug_marker) "cmodules/fbgc_math.c":28:2 -1
     (nil))
(debug_insn 76 75 77 2 (var_location:DF D#1 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 77 76 78 2 (var_location:DF res$real (debug_expr:DF D#1)) -1
     (nil))
(debug_insn 78 77 79 2 (var_location:DF D#2 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 79 78 80 2 (var_location:DF res$imag (debug_expr:DF D#2)) -1
     (nil))
(debug_insn 80 79 81 2 (var_location:DF r (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":42:7 -1
     (nil))
(debug_insn 81 80 82 2 (var_location:DF z$imag (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":42:7 -1
     (nil))
(debug_insn 82 81 83 2 (var_location:DF u2$real (mult:DF (reg/v:DF 92 [ r ])
        (reg:DF 90 [ sincostmp_12 ]))) "cmodules/fbgc_math.c":42:7 -1
     (nil))
(debug_insn 83 82 84 2 (var_location:DF u2$imag (mult:DF (reg/v:DF 92 [ r ])
        (reg:DF 141))) "cmodules/fbgc_math.c":42:7 -1
     (nil))
(debug_insn 84 83 85 2 (debug_marker) "cmodules/fbgc_math.c":44:2 -1
     (nil))
(debug_insn 85 84 86 2 (var_location:DF u1$real (mult:DF (plus:DF (mult:DF (reg/v:DF 92 [ r ])
                (reg:DF 90 [ sincostmp_12 ]))
            (mult:DF (reg/v:DF 96 [ r ])
                (reg:DF 90 [ sincostmp_12 ])))
        (const_double:DF 5.0e-1 [0x0.8p+0]))) "cmodules/fbgc_math.c":44:10 -1
     (nil))
(debug_insn 86 85 87 2 (debug_marker) "cmodules/fbgc_math.c":45:2 -1
     (nil))
(debug_insn 87 86 88 2 (var_location:DF u1$imag (mult:DF (plus:DF (mult:DF (reg/v:DF 92 [ r ])
                (reg:DF 141))
            (mult:DF (reg:DF 91 [ sincostmp_12+8 ])
                (reg/v:DF 96 [ r ])))
        (const_double:DF 5.0e-1 [0x0.8p+0]))) "cmodules/fbgc_math.c":45:10 -1
     (nil))
(debug_insn 88 87 89 2 (debug_marker) "cmodules/fbgc_math.c":47:2 -1
     (nil))
(insn 89 88 90 2 (set (reg:DF 114)
        (mult:DF (reg/v:DF 92 [ r ])
            (reg:DF 90 [ sincostmp_12 ]))) "cmodules/fbgc_math.c":26:14 818 {*fop_df_comm}
     (nil))
(insn 90 89 91 2 (set (reg:DF 115)
        (mult:DF (reg/v:DF 96 [ r ])
            (reg:DF 90 [ sincostmp_12 ]))) "cmodules/fbgc_math.c":26:14 818 {*fop_df_comm}
     (expr_list:REG_DEAD (reg:DF 90 [ sincostmp_12 ])
        (nil)))
(insn 91 90 92 2 (set (reg:DF 116)
        (plus:DF (reg:DF 114)
            (reg:DF 115))) "cmodules/fbgc_math.c":44:20 818 {*fop_df_comm}
     (expr_list:REG_DEAD (reg:DF 115)
        (expr_list:REG_DEAD (reg:DF 114)
            (nil))))
(insn 92 91 93 2 (set (reg:DF 118)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S8 A64])) "cmodules/fbgc_math.c":44:29 111 {*movdf_internal}
     (expr_list:REG_EQUIV (const_double:DF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 93 92 95 2 (set (reg:DF 117)
        (mult:DF (reg:DF 116)
            (reg:DF 118))) "cmodules/fbgc_math.c":44:29 818 {*fop_df_comm}
     (expr_list:REG_DEAD (reg:DF 116)
        (nil)))
(insn 95 93 96 2 (set (reg:DF 119)
        (mult:DF (reg/v:DF 92 [ r ])
            (reg:DF 141))) "cmodules/fbgc_math.c":27:14 818 {*fop_df_comm}
     (expr_list:REG_DEAD (reg:DF 141)
        (expr_list:REG_DEAD (reg/v:DF 92 [ r ])
            (nil))))
(insn 96 95 97 2 (set (reg:DF 120)
        (mult:DF (reg:DF 91 [ sincostmp_12+8 ])
            (reg/v:DF 96 [ r ]))) "cmodules/fbgc_math.c":27:14 818 {*fop_df_comm}
     (expr_list:REG_DEAD (reg/v:DF 96 [ r ])
        (expr_list:REG_DEAD (reg:DF 91 [ sincostmp_12+8 ])
            (nil))))
(insn 97 96 99 2 (set (reg:DF 121)
        (plus:DF (reg:DF 119)
            (reg:DF 120))) "cmodules/fbgc_math.c":45:20 818 {*fop_df_comm}
     (expr_list:REG_DEAD (reg:DF 120)
        (expr_list:REG_DEAD (reg:DF 119)
            (nil))))
(note 99 97 101 2 NOTE_INSN_DELETED)
(debug_insn 101 99 102 2 (var_location:DF D#3 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 102 101 103 2 (var_location:DF u1$real (debug_expr:DF D#3)) -1
     (nil))
(debug_insn 103 102 104 2 (var_location:DF D#4 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 104 103 105 2 (var_location:DF u1$imag (debug_expr:DF D#4)) -1
     (nil))
(debug_insn 105 104 106 2 (var_location:DF D#5 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 106 105 107 2 (var_location:DF u2$real (debug_expr:DF D#5)) -1
     (nil))
(debug_insn 107 106 108 2 (var_location:DF D#6 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 108 107 116 2 (var_location:DF u2$imag (debug_expr:DF D#6)) -1
     (nil))
(insn 116 108 117 2 (set (reg:DF 20 xmm0)
        (reg:DF 117)) "cmodules/fbgc_math.c":48:1 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 117)
        (nil)))
(insn 117 116 118 2 (set (reg:DF 21 xmm1)
        (mult:DF (reg:DF 121)
            (reg:DF 118))) "cmodules/fbgc_math.c":48:1 818 {*fop_df_comm}
     (expr_list:REG_DEAD (reg:DF 121)
        (expr_list:REG_DEAD (reg:DF 118)
            (nil))))
(insn 118 117 119 2 (use (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":48:1 -1
     (nil))
(insn 119 118 0 2 (use (reg:DF 21 xmm1)) "cmodules/fbgc_math.c":48:1 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1]


;; Function one_arg_math (one_arg_math, funcdef_no=58, decl_uid=5763, cgraph_uid=59, symbol_order=60)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 31 n_edges 45 count 42 (  1.4)
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
;;
;; Loop 3
;;  header 15, latch 17
;;  depth 1, outer 0
;;  nodes: 15 17
;;
;; Loop 1
;;  header 28, latch 27
;;  depth 1, outer 0
;;  nodes: 28 27 26 29 25 24 23 22 21
;;
;; Loop 2
;;  header 22, multiple latches: 25 23
;;  depth 2, outer 1
;;  nodes: 22 25 23
;; 2 succs { 3 19 }
;; 3 succs { 4 9 }
;; 4 succs { 5 7 }
;; 5 succs { 6 11 }
;; 6 succs { 30 }
;; 7 succs { 8 12 }
;; 8 succs { 30 }
;; 9 succs { 10 13 }
;; 10 succs { 30 }
;; 11 succs { 1 }
;; 12 succs { 1 }
;; 13 succs { 14 30 }
;; 14 succs { 15 }
;; 15 succs { 17 16 }
;; 16 succs { }
;; 17 succs { 15 18 }
;; 18 succs { 30 }
;; 19 succs { 28 20 }
;; 20 succs { 30 }
;; 21 succs { 22 }
;; 22 succs { 23 25 }
;; 23 succs { 22 24 }
;; 24 succs { 26 }
;; 25 succs { 22 26 }
;; 26 succs { 27 }
;; 27 succs { 28 30 }
;; 28 succs { 21 29 }
;; 29 succs { 27 30 }
;; 30 succs { 1 }
Adding REG_EQUIV to insn 355 for source of insn 233
Adding REG_EQUIV to insn 357 for source of insn 253
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 173 uninteresting
Reg 130: def dominates all uses has unique first use
Reg 174 uninteresting
Reg 132 uninteresting (no unique first use)
Reg 175 uninteresting
Reg 133 uninteresting (no unique first use)
Reg 83 uninteresting (no unique first use)
Reg 176 uninteresting
Reg 119 uninteresting
Reg 177 uninteresting
Reg 84 uninteresting
Reg 178 uninteresting
Reg 134: local to bb 12 def dominates all uses has unique first use
Reg 179: local to bb 12 def dominates all uses has unique first use
Reg 180 uninteresting
Reg 140: local to bb 12 def dominates all uses has unique first use
Reg 181 uninteresting
Reg 111 uninteresting
Reg 182 uninteresting
Reg 87: def dominates all uses has unique first use
Reg 183 uninteresting
Reg 112 uninteresting
Ignoring reg 142, has equiv memory
Ignoring reg 143, has equiv memory
Reg 144: local to bb 19 def dominates all uses has unique first use
Reg 184 uninteresting
Reg 146 uninteresting
Reg 99 uninteresting (no unique first use)
Reg 149 uninteresting
Ignoring reg 185, has equiv memory
Reg 186: local to bb 23 def dominates all uses has unique first use
Ignoring reg 187, has equiv memory
Reg 87 not local to one basic block
Reg 130 not local to one basic block
Examining insn 72, def for 134
  all ok
Examining insn 85, def for 140
  all ok
Found def insn 167 for 144 to be not moveable
Found def insn 349 for 179 to be not moveable
Found def insn 356 for 186 to be not moveable
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
;;
;; Loop 3
;;  header 15, latch 17
;;  depth 1, outer 0
;;  nodes: 15 17
;;
;; Loop 1
;;  header 28, latch 27
;;  depth 1, outer 0
;;  nodes: 28 27 26 29 25 24 23 22 21
;;
;; Loop 2
;;  header 22, multiple latches: 25 23
;;  depth 2, outer 1
;;  nodes: 22 25 23
;; 2 succs { 3 19 }
;; 3 succs { 4 9 }
;; 4 succs { 5 7 }
;; 5 succs { 6 11 }
;; 6 succs { 30 }
;; 7 succs { 8 12 }
;; 8 succs { 30 }
;; 9 succs { 10 13 }
;; 10 succs { 30 }
;; 11 succs { 1 }
;; 12 succs { 1 }
;; 13 succs { 14 30 }
;; 14 succs { 15 }
;; 15 succs { 17 16 }
;; 16 succs { }
;; 17 succs { 15 18 }
;; 18 succs { 30 }
;; 19 succs { 28 20 }
;; 20 succs { 30 }
;; 21 succs { 22 }
;; 22 succs { 23 25 }
;; 23 succs { 22 24 }
;; 24 succs { 26 }
;; 25 succs { 22 26 }
;; 26 succs { 27 }
;; 27 succs { 28 30 }
;; 28 succs { 21 29 }
;; 29 succs { 27 30 }
;; 30 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 142: (insn_list:REG_DEP_TRUE 165 (nil))
init_insns for 143: (insn_list:REG_DEP_TRUE 166 (nil))
init_insns for 185: (insn_list:REG_DEP_TRUE 233 (nil))
init_insns for 187: (insn_list:REG_DEP_TRUE 253 (nil))

Pass 0 for finding pseudo/allocno costs

    a55 (r187,l2) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a58 (r186,l2) best SSE_REGS, allocno SSE_REGS
    a59 (r185,l2) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a7 (r184,l0) best AREG, allocno AREG
    a72 (r183,l3) best AREG, allocno AREG
    a18 (r182,l0) best AREG, allocno AREG
    a20 (r181,l0) best SSE_REGS, allocno SSE_REGS
    a21 (r180,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a22 (r179,l0) best SSE_REGS, allocno SSE_REGS
    a24 (r178,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a26 (r177,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a28 (r176,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a30 (r175,l0) best CREG, allocno CREG
    a31 (r174,l0) best DREG, allocno DREG
    a32 (r173,l0) best DIREG, allocno DIREG
    a53 (r172,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a41 (r172,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a57 (r150,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a60 (r149,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a62 (r147,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a63 (r146,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a64 (r145,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a8 (r144,l0) best DIREG, allocno DIREG
    a9 (r143,l0) best SIREG, allocno SIREG
    a10 (r142,l0) best DREG, allocno DREG
    a19 (r140,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a23 (r134,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a70 (r133,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a52 (r133,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a40 (r133,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a12 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a69 (r132,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a51 (r132,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a39 (r132,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a11 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a17 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a68 (r129,l3) best AREG, allocno AREG
    a50 (r129,l2) best AREG, allocno AREG
    a38 (r129,l1) best AREG, allocno AREG
    a0 (r129,l0) best AREG, allocno AREG
    a67 (r124,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a14 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a54 (r122,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a49 (r121,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a43 (r121,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a37 (r120,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a27 (r119,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a48 (r118,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a42 (r118,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a61 (r116,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a47 (r115,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a36 (r115,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a46 (r114,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a35 (r114,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a66 (r113,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a13 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a71 (r112,l3) best SIREG, allocno SIREG
    a65 (r111,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a16 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a45 (r110,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a34 (r110,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a5 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a56 (r99,l2) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a15 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a25 (r84,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a29 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a44 (r82,l2) best DIREG, allocno DIREG
    a33 (r82,l1) best DIREG, allocno DIREG
    a6 (r82,l0) best DIREG, allocno DIREG

  a0(r129,l0) costs: AREG:-40,178 DREG:80,298 CREG:80,298 BREG:80,298 SIREG:80,298 DIREG:80,298 AD_REGS:80,298 CLOBBERED_REGS:80,298 Q_REGS:80,298 NON_Q_REGS:80,298 TLS_GOTBASE_REGS:80,298 GENERAL_REGS:80,298 SSE_FIRST_REG:1116,1988 NO_REX_SSE_REGS:1116,1988 SSE_REGS:1116,1988 MMX_REGS:1446,2863 INT_SSE_REGS:1446,2863 ALL_REGS:23792,46900 MEM:494,1148
  a1(r120,l0) costs: AREG:26,26 DREG:26,26 CREG:26,26 BREG:26,26 SIREG:26,26 DIREG:26,26 AD_REGS:26,26 CLOBBERED_REGS:26,26 Q_REGS:26,26 NON_Q_REGS:26,26 TLS_GOTBASE_REGS:26,26 GENERAL_REGS:26,26 SSE_FIRST_REG:338,1986 NO_REX_SSE_REGS:338,1986 SSE_REGS:338,1986 MMX_REGS:520,3101 INT_SSE_REGS:520,3101 ALL_REGS:6916,40306 MEM:247,1374
  a2(r172,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:104,9640 NO_REX_SSE_REGS:104,9640 SSE_REGS:104,9640 MMX_REGS:169,15665 INT_SSE_REGS:169,15665 ALL_REGS:2756,255460 MEM:78,7230
  a3(r115,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:78,9814 NO_REX_SSE_REGS:78,9814 SSE_REGS:78,9814 MMX_REGS:78,15899 INT_SSE_REGS:78,15899 ALL_REGS:1300,259304 MEM:13,6098
  a4(r114,l0) costs: AREG:26,26 DREG:26,26 CREG:26,26 BREG:26,26 SIREG:26,26 DIREG:26,26 AD_REGS:26,26 CLOBBERED_REGS:26,26 Q_REGS:26,26 NON_Q_REGS:26,26 TLS_GOTBASE_REGS:26,26 GENERAL_REGS:26,26 SSE_FIRST_REG:130,2546 NO_REX_SSE_REGS:130,2546 SSE_REGS:130,2546 MMX_REGS:195,4121 INT_SSE_REGS:195,4121 ALL_REGS:2782,66806 MEM:104,1916
  a5(r110,l0) costs: AREG:26,26 DREG:26,26 CREG:26,26 BREG:26,26 SIREG:26,26 DIREG:26,26 AD_REGS:26,26 CLOBBERED_REGS:26,26 Q_REGS:26,26 NON_Q_REGS:26,26 TLS_GOTBASE_REGS:26,26 GENERAL_REGS:26,26 SSE_FIRST_REG:234,22370 NO_REX_SSE_REGS:234,22370 SSE_REGS:234,22370 MMX_REGS:351,35433 INT_SSE_REGS:351,35433 ALL_REGS:4160,496530 MEM:169,15882
  a6(r82,l0) costs: AREG:52,52 DREG:52,52 CREG:52,52 BREG:52,52 SIREG:52,52 DIREG:-26,-26 AD_REGS:52,52 CLOBBERED_REGS:52,52 Q_REGS:52,52 NON_Q_REGS:52,52 TLS_GOTBASE_REGS:52,52 GENERAL_REGS:52,52 SSE_FIRST_REG:2128,17912 NO_REX_SSE_REGS:2128,17912 SSE_REGS:2128,17912 MMX_REGS:3390,29039 INT_SSE_REGS:3390,29039 ALL_REGS:49184,467460 MEM:1596,13434
  a7(r184,l0) costs: AREG:-13,-13 DREG:26,26 CREG:26,26 BREG:26,26 SIREG:26,26 DIREG:26,26 AD_REGS:26,26 CLOBBERED_REGS:26,26 Q_REGS:26,26 NON_Q_REGS:26,26 TLS_GOTBASE_REGS:26,26 GENERAL_REGS:26,26 SSE_FIRST_REG:104,104 NO_REX_SSE_REGS:104,104 SSE_REGS:104,104 MMX_REGS:338,338 INT_SSE_REGS:338,338 ALL_REGS:5512,5512 MEM:143,143
  a8(r144,l0) costs: AREG:26,26 DREG:26,26 CREG:26,26 BREG:26,26 SIREG:26,26 DIREG:-13,-13 AD_REGS:26,26 CLOBBERED_REGS:26,26 Q_REGS:26,26 NON_Q_REGS:26,26 TLS_GOTBASE_REGS:26,26 GENERAL_REGS:26,26 SSE_FIRST_REG:208,208 NO_REX_SSE_REGS:208,208 SSE_REGS:208,208 MMX_REGS:338,338 INT_SSE_REGS:338,338 ALL_REGS:5512,5512 MEM:156,156
  a9(r143,l0) costs: AREG:26,26 DREG:26,26 CREG:26,26 BREG:26,26 SIREG:-13,-13 DIREG:26,26 AD_REGS:26,26 CLOBBERED_REGS:26,26 Q_REGS:26,26 NON_Q_REGS:26,26 TLS_GOTBASE_REGS:26,26 GENERAL_REGS:26,26 SSE_FIRST_REG:208,208 NO_REX_SSE_REGS:208,208 SSE_REGS:208,208 MMX_REGS:325,325 INT_SSE_REGS:325,325 ALL_REGS:4134,4134 MEM:0,0
  a10(r142,l0) costs: AREG:26,26 DREG:-13,-13 CREG:26,26 BREG:26,26 SIREG:26,26 DIREG:26,26 AD_REGS:26,26 CLOBBERED_REGS:26,26 Q_REGS:26,26 NON_Q_REGS:26,26 TLS_GOTBASE_REGS:26,26 GENERAL_REGS:26,26 SSE_FIRST_REG:208,208 NO_REX_SSE_REGS:208,208 SSE_REGS:208,208 MMX_REGS:325,325 INT_SSE_REGS:325,325 ALL_REGS:4134,4134 MEM:0,0
  a11(r132,l0) costs: AREG:0,218 DREG:0,218 CREG:0,218 BREG:0,218 SIREG:0,218 DIREG:0,218 AD_REGS:0,218 CLOBBERED_REGS:0,218 Q_REGS:0,218 NON_Q_REGS:0,218 TLS_GOTBASE_REGS:0,218 GENERAL_REGS:0,218 SSE_FIRST_REG:512,6080 NO_REX_SSE_REGS:512,6080 SSE_REGS:512,6080 MMX_REGS:577,9625 INT_SSE_REGS:577,9625 ALL_REGS:9556,157108 MEM:146,4322
  a12(r133,l0) costs: AREG:0,218 DREG:0,218 CREG:0,218 BREG:0,218 SIREG:0,218 DIREG:0,218 AD_REGS:0,218 CLOBBERED_REGS:0,218 Q_REGS:0,218 NON_Q_REGS:0,218 TLS_GOTBASE_REGS:0,218 GENERAL_REGS:0,218 SSE_FIRST_REG:512,3800 NO_REX_SSE_REGS:512,3800 SSE_REGS:512,3800 MMX_REGS:577,5920 INT_SSE_REGS:577,5920 ALL_REGS:9556,96688 MEM:146,2612
  a13(r113,l0) costs: AREG:0,218 DREG:0,218 CREG:0,218 BREG:0,218 SIREG:0,218 DIREG:0,218 AD_REGS:0,218 CLOBBERED_REGS:0,218 Q_REGS:0,218 NON_Q_REGS:0,218 TLS_GOTBASE_REGS:0,218 GENERAL_REGS:0,218 SSE_FIRST_REG:72,3560 NO_REX_SSE_REGS:72,3560 SSE_REGS:72,3560 MMX_REGS:72,5740 INT_SSE_REGS:72,5740 ALL_REGS:1200,93632 MEM:12,2301
  a14(r124,l0) costs: AREG:0,218 DREG:0,218 CREG:0,218 BREG:0,218 SIREG:0,218 DIREG:0,218 AD_REGS:0,218 CLOBBERED_REGS:0,218 Q_REGS:0,218 NON_Q_REGS:0,218 TLS_GOTBASE_REGS:0,218 GENERAL_REGS:0,218 SSE_FIRST_REG:96,2712 NO_REX_SSE_REGS:96,2712 SSE_REGS:96,2712 MMX_REGS:156,4407 INT_SSE_REGS:156,4407 ALL_REGS:2544,71868 MEM:60,1804
  a15(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:200,200 NO_REX_SSE_REGS:200,200 SSE_REGS:200,200 MMX_REGS:312,312 INT_SSE_REGS:312,312 ALL_REGS:3922,3922 MEM:138,138
  a16(r111,l0) costs: AREG:26,26 DREG:26,26 CREG:26,26 BREG:26,26 SIREG:26,26 DIREG:26,26 AD_REGS:26,26 CLOBBERED_REGS:26,26 Q_REGS:26,26 NON_Q_REGS:26,26 TLS_GOTBASE_REGS:26,26 GENERAL_REGS:26,26 SSE_FIRST_REG:416,1288 NO_REX_SSE_REGS:416,1288 SSE_REGS:416,1288 MMX_REGS:663,2080 INT_SSE_REGS:663,2080 ALL_REGS:9646,32754 MEM:312,857
  a17(r130,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1056,1056 NO_REX_SSE_REGS:1056,1056 SSE_REGS:1056,1056 MMX_REGS:1461,1461 INT_SSE_REGS:1461,1461 ALL_REGS:23972,23972 MEM:554,554
  a18(r182,l0) costs: AREG:-13,-13 DREG:26,26 CREG:26,26 BREG:26,26 SIREG:26,26 DIREG:26,26 AD_REGS:26,26 CLOBBERED_REGS:26,26 Q_REGS:26,26 NON_Q_REGS:26,26 TLS_GOTBASE_REGS:26,26 GENERAL_REGS:26,26 SSE_FIRST_REG:104,104 NO_REX_SSE_REGS:104,104 SSE_REGS:104,104 MMX_REGS:338,338 INT_SSE_REGS:338,338 ALL_REGS:5512,5512 MEM:143,143
  a19(r140,l0) costs: AREG:104,104 DREG:104,104 CREG:104,104 BREG:104,104 SIREG:104,104 DIREG:104,104 AD_REGS:104,104 CLOBBERED_REGS:104,104 Q_REGS:104,104 NON_Q_REGS:104,104 TLS_GOTBASE_REGS:104,104 GENERAL_REGS:104,104 FP_TOP_REG:247,247 FP_SECOND_REG:247,247 FLOAT_REGS:247,247 SSE_FIRST_REG:-13,-13 NO_REX_SSE_REGS:26,26 SSE_REGS:26,26 FLOAT_SSE_REGS:247,247 FLOAT_INT_REGS:247,247 INT_SSE_REGS:247,247 FLOAT_INT_SSE_REGS:247,247 MEM:91,91
  a20(r181,l0) costs: AREG:208,208 DREG:208,208 CREG:208,208 BREG:208,208 SIREG:208,208 DIREG:208,208 AD_REGS:208,208 CLOBBERED_REGS:208,208 Q_REGS:208,208 NON_Q_REGS:208,208 TLS_GOTBASE_REGS:208,208 GENERAL_REGS:208,208 FP_TOP_REG:338,338 FP_SECOND_REG:338,338 FLOAT_REGS:338,338 SSE_FIRST_REG:52,52 NO_REX_SSE_REGS:52,52 SSE_REGS:52,52 FLOAT_SSE_REGS:338,338 FLOAT_INT_REGS:338,338 INT_SSE_REGS:338,338 FLOAT_INT_SSE_REGS:338,338 MEM:156,156
  a21(r180,l0) costs: AREG:104,104 DREG:104,104 CREG:104,104 BREG:104,104 SIREG:104,104 DIREG:104,104 AD_REGS:104,104 CLOBBERED_REGS:104,104 Q_REGS:104,104 NON_Q_REGS:104,104 TLS_GOTBASE_REGS:104,104 GENERAL_REGS:104,104 FP_TOP_REG:247,247 FP_SECOND_REG:247,247 FLOAT_REGS:247,247 SSE_FIRST_REG:-13,-13 NO_REX_SSE_REGS:26,26 SSE_REGS:26,26 FLOAT_SSE_REGS:247,247 FLOAT_INT_REGS:247,247 INT_SSE_REGS:247,247 FLOAT_INT_SSE_REGS:247,247 MEM:91,91
  a22(r179,l0) costs: AREG:208,208 DREG:208,208 CREG:208,208 BREG:208,208 SIREG:208,208 DIREG:208,208 AD_REGS:208,208 CLOBBERED_REGS:208,208 Q_REGS:208,208 NON_Q_REGS:208,208 TLS_GOTBASE_REGS:208,208 GENERAL_REGS:208,208 FP_TOP_REG:338,338 FP_SECOND_REG:338,338 FLOAT_REGS:338,338 SSE_FIRST_REG:52,52 NO_REX_SSE_REGS:52,52 SSE_REGS:52,52 FLOAT_SSE_REGS:338,338 FLOAT_INT_REGS:338,338 INT_SSE_REGS:338,338 FLOAT_INT_SSE_REGS:338,338 MEM:156,156
  a23(r134,l0) costs: AREG:104,104 DREG:104,104 CREG:104,104 BREG:104,104 SIREG:104,104 DIREG:104,104 AD_REGS:104,104 CLOBBERED_REGS:104,104 Q_REGS:104,104 NON_Q_REGS:104,104 TLS_GOTBASE_REGS:104,104 GENERAL_REGS:104,104 FP_TOP_REG:247,247 FP_SECOND_REG:247,247 FLOAT_REGS:247,247 SSE_FIRST_REG:-13,-13 NO_REX_SSE_REGS:26,26 SSE_REGS:26,26 FLOAT_SSE_REGS:247,247 FLOAT_INT_REGS:247,247 INT_SSE_REGS:247,247 FLOAT_INT_SSE_REGS:247,247 MEM:91,91
  a24(r178,l0) costs: AREG:104,104 DREG:104,104 CREG:104,104 BREG:104,104 SIREG:104,104 DIREG:104,104 AD_REGS:104,104 CLOBBERED_REGS:104,104 Q_REGS:104,104 NON_Q_REGS:104,104 TLS_GOTBASE_REGS:104,104 GENERAL_REGS:104,104 FP_TOP_REG:247,247 FP_SECOND_REG:247,247 FLOAT_REGS:247,247 SSE_FIRST_REG:-13,-13 NO_REX_SSE_REGS:26,26 SSE_REGS:26,26 FLOAT_SSE_REGS:247,247 FLOAT_INT_REGS:247,247 INT_SSE_REGS:247,247 FLOAT_INT_SSE_REGS:247,247 MEM:91,91
  a25(r84,l0) costs: AREG:104,104 DREG:104,104 CREG:104,104 BREG:104,104 SIREG:104,104 DIREG:104,104 AD_REGS:104,104 CLOBBERED_REGS:104,104 Q_REGS:104,104 NON_Q_REGS:104,104 TLS_GOTBASE_REGS:104,104 GENERAL_REGS:104,104 FP_TOP_REG:247,247 FP_SECOND_REG:247,247 FLOAT_REGS:247,247 SSE_FIRST_REG:-13,-13 NO_REX_SSE_REGS:26,26 SSE_REGS:26,26 FLOAT_SSE_REGS:247,247 FLOAT_INT_REGS:247,247 INT_SSE_REGS:247,247 FLOAT_INT_SSE_REGS:247,247 MEM:91,91
  a26(r177,l0) costs: AREG:104,104 DREG:104,104 CREG:104,104 BREG:104,104 SIREG:104,104 DIREG:104,104 AD_REGS:104,104 CLOBBERED_REGS:104,104 Q_REGS:104,104 NON_Q_REGS:104,104 TLS_GOTBASE_REGS:104,104 GENERAL_REGS:104,104 FP_TOP_REG:247,247 FP_SECOND_REG:247,247 FLOAT_REGS:247,247 SSE_FIRST_REG:-13,-13 NO_REX_SSE_REGS:26,26 SSE_REGS:26,26 FLOAT_SSE_REGS:247,247 FLOAT_INT_REGS:247,247 INT_SSE_REGS:247,247 FLOAT_INT_SSE_REGS:247,247 MEM:91,91
  a27(r119,l0) costs: AREG:104,104 DREG:104,104 CREG:104,104 BREG:104,104 SIREG:104,104 DIREG:104,104 AD_REGS:104,104 CLOBBERED_REGS:104,104 Q_REGS:104,104 NON_Q_REGS:104,104 TLS_GOTBASE_REGS:104,104 GENERAL_REGS:104,104 FP_TOP_REG:247,247 FP_SECOND_REG:247,247 FLOAT_REGS:247,247 SSE_FIRST_REG:-13,-13 NO_REX_SSE_REGS:26,26 SSE_REGS:26,26 FLOAT_SSE_REGS:247,247 FLOAT_INT_REGS:247,247 INT_SSE_REGS:247,247 FLOAT_INT_SSE_REGS:247,247 MEM:91,91
  a28(r176,l0) costs: AREG:104,104 DREG:104,104 CREG:104,104 BREG:104,104 SIREG:104,104 DIREG:104,104 AD_REGS:104,104 CLOBBERED_REGS:104,104 Q_REGS:104,104 NON_Q_REGS:104,104 TLS_GOTBASE_REGS:104,104 GENERAL_REGS:104,104 FP_TOP_REG:247,247 FP_SECOND_REG:247,247 FLOAT_REGS:247,247 SSE_FIRST_REG:-13,-13 NO_REX_SSE_REGS:26,26 SSE_REGS:26,26 FLOAT_SSE_REGS:247,247 FLOAT_INT_REGS:247,247 INT_SSE_REGS:247,247 FLOAT_INT_SSE_REGS:247,247 MEM:91,91
  a29(r83,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 MEM:2108,2108
  a30(r175,l0) costs: AREG:136,136 DREG:136,136 CREG:-68,-68 BREG:136,136 SIREG:136,136 DIREG:136,136 AD_REGS:136,136 CLOBBERED_REGS:136,136 Q_REGS:136,136 NON_Q_REGS:136,136 TLS_GOTBASE_REGS:136,136 GENERAL_REGS:136,136 SSE_FIRST_REG:544,544 NO_REX_SSE_REGS:544,544 SSE_REGS:544,544 MMX_REGS:1768,1768 INT_SSE_REGS:1768,1768 ALL_REGS:28832,28832 MEM:748,748
  a31(r174,l0) costs: AREG:136,136 DREG:-68,-68 CREG:136,136 BREG:136,136 SIREG:136,136 DIREG:136,136 AD_REGS:136,136 CLOBBERED_REGS:136,136 Q_REGS:136,136 NON_Q_REGS:136,136 TLS_GOTBASE_REGS:136,136 GENERAL_REGS:136,136 SSE_FIRST_REG:544,544 NO_REX_SSE_REGS:544,544 SSE_REGS:544,544 MMX_REGS:1768,1768 INT_SSE_REGS:1768,1768 ALL_REGS:28832,28832 MEM:748,748
  a32(r173,l0) costs: AREG:136,136 DREG:136,136 CREG:136,136 BREG:136,136 SIREG:136,136 DIREG:-68,-68 AD_REGS:136,136 CLOBBERED_REGS:136,136 Q_REGS:136,136 NON_Q_REGS:136,136 TLS_GOTBASE_REGS:136,136 GENERAL_REGS:136,136 SSE_FIRST_REG:544,544 NO_REX_SSE_REGS:544,544 SSE_REGS:544,544 MMX_REGS:1768,1768 INT_SSE_REGS:1768,1768 ALL_REGS:28832,28832 MEM:748,748
  a33(r82,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1552,15784 NO_REX_SSE_REGS:1552,15784 SSE_REGS:1552,15784 MMX_REGS:2522,25649 INT_SSE_REGS:2522,25649 ALL_REGS:41128,418276 MEM:1164,11838
  a34(r110,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:792,22136 NO_REX_SSE_REGS:792,22136 SSE_REGS:792,22136 MMX_REGS:1287,35082 INT_SSE_REGS:1287,35082 ALL_REGS:20988,492370 MEM:594,15713
  a35(r114,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,2416 NO_REX_SSE_REGS:0,2416 SSE_REGS:0,2416 MMX_REGS:0,3926 INT_SSE_REGS:0,3926 ALL_REGS:0,64024 MEM:0,1812
  a36(r115,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2616,9736 NO_REX_SSE_REGS:2616,9736 SSE_REGS:2616,9736 MMX_REGS:4251,15821 INT_SSE_REGS:4251,15821 ALL_REGS:69324,258004 MEM:1635,6085
  a37(r120,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1648,1648 NO_REX_SSE_REGS:1648,1648 SSE_REGS:1648,1648 MMX_REGS:2581,2581 INT_SSE_REGS:2581,2581 ALL_REGS:33390,33390 MEM:1127,1127
  a38(r129,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a39(r132,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,4696 NO_REX_SSE_REGS:0,4696 SSE_REGS:0,4696 MMX_REGS:0,7631 INT_SSE_REGS:0,7631 ALL_REGS:0,124444 MEM:0,3522
  a40(r133,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,2416 NO_REX_SSE_REGS:0,2416 SSE_REGS:0,2416 MMX_REGS:0,3926 INT_SSE_REGS:0,3926 ALL_REGS:0,64024 MEM:0,1812
  a41(r172,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,9536 NO_REX_SSE_REGS:0,9536 SSE_REGS:0,9536 MMX_REGS:0,15496 INT_SSE_REGS:0,15496 ALL_REGS:0,252704 MEM:0,7152
  a42(r118,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:582,29038 NO_REX_SSE_REGS:582,29038 SSE_REGS:582,29038 MMX_REGS:582,46823 INT_SSE_REGS:582,46823 ALL_REGS:9700,763784 MEM:97,17882
  a43(r121,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:776,10312 NO_REX_SSE_REGS:776,10312 SSE_REGS:776,10312 MMX_REGS:1261,16757 INT_SSE_REGS:1261,16757 ALL_REGS:20564,273268 MEM:582,7734
  a44(r82,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:14232,14232 NO_REX_SSE_REGS:14232,14232 SSE_REGS:14232,14232 MMX_REGS:23127,23127 INT_SSE_REGS:23127,23127 ALL_REGS:377148,377148 MEM:10674,10674
  a45(r110,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21344,21344 NO_REX_SSE_REGS:21344,21344 SSE_REGS:21344,21344 MMX_REGS:33795,33795 INT_SSE_REGS:33795,33795 ALL_REGS:471382,471382 MEM:15119,15119
  a46(r114,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2416,2416 NO_REX_SSE_REGS:2416,2416 SSE_REGS:2416,2416 MMX_REGS:3926,3926 INT_SSE_REGS:3926,3926 ALL_REGS:64024,64024 MEM:1812,1812
  a47(r115,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7120,7120 NO_REX_SSE_REGS:7120,7120 SSE_REGS:7120,7120 MMX_REGS:11570,11570 INT_SSE_REGS:11570,11570 ALL_REGS:188680,188680 MEM:4450,4450
  a48(r118,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28456,28456 NO_REX_SSE_REGS:28456,28456 SSE_REGS:28456,28456 MMX_REGS:46241,46241 INT_SSE_REGS:46241,46241 ALL_REGS:754084,754084 MEM:17785,17785
  a49(r121,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:9536,9536 NO_REX_SSE_REGS:9536,9536 SSE_REGS:9536,9536 MMX_REGS:15496,15496 INT_SSE_REGS:15496,15496 ALL_REGS:252704,252704 MEM:7152,7152
  a50(r129,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a51(r132,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4696,4696 NO_REX_SSE_REGS:4696,4696 SSE_REGS:4696,4696 MMX_REGS:7631,7631 INT_SSE_REGS:7631,7631 ALL_REGS:124444,124444 MEM:3522,3522
  a52(r133,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2416,2416 NO_REX_SSE_REGS:2416,2416 SSE_REGS:2416,2416 MMX_REGS:3926,3926 INT_SSE_REGS:3926,3926 ALL_REGS:64024,64024 MEM:1812,1812
  a53(r172,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:9536,9536 NO_REX_SSE_REGS:9536,9536 SSE_REGS:9536,9536 MMX_REGS:15496,15496 INT_SSE_REGS:15496,15496 ALL_REGS:252704,252704 MEM:7152,7152
  a54(r122,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:14232,14232 NO_REX_SSE_REGS:14232,14232 SSE_REGS:14232,14232 MMX_REGS:23127,23127 INT_SSE_REGS:23127,23127 ALL_REGS:377148,377148 MEM:10674,10674
  a55(r187,l2) costs: AREG:5870,5870 DREG:5870,5870 CREG:5870,5870 BREG:5870,5870 SIREG:5870,5870 DIREG:5870,5870 AD_REGS:5870,5870 CLOBBERED_REGS:5870,5870 Q_REGS:5870,5870 NON_Q_REGS:5870,5870 TLS_GOTBASE_REGS:5870,5870 GENERAL_REGS:5870,5870 FP_TOP_REG:14675,14675 FP_SECOND_REG:14675,14675 FLOAT_REGS:14675,14675 SSE_FIRST_REG:-587,-587 NO_REX_SSE_REGS:1174,1174 SSE_REGS:1174,1174 FLOAT_SSE_REGS:14675,14675 FLOAT_INT_REGS:14675,14675 INT_SSE_REGS:14675,14675 FLOAT_INT_SSE_REGS:14675,14675 MEM:7044,7044
  a56(r99,l2) costs: AREG:8892,8892 DREG:8892,8892 CREG:8892,8892 BREG:8892,8892 SIREG:8892,8892 DIREG:8892,8892 AD_REGS:8892,8892 CLOBBERED_REGS:8892,8892 Q_REGS:8892,8892 NON_Q_REGS:8892,8892 TLS_GOTBASE_REGS:8892,8892 GENERAL_REGS:8892,8892 FP_TOP_REG:22237,22237 FP_SECOND_REG:22237,22237 FLOAT_REGS:22237,22237 SSE_FIRST_REG:-889,-889 NO_REX_SSE_REGS:1778,1778 SSE_REGS:1778,1778 FLOAT_SSE_REGS:22237,22237 FLOAT_INT_REGS:22237,22237 INT_SSE_REGS:22237,22237 FLOAT_INT_SSE_REGS:22237,22237 MEM:10674,10674
  a57(r150,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7248,7248 NO_REX_SSE_REGS:7248,7248 SSE_REGS:7248,7248 MMX_REGS:11778,11778 INT_SSE_REGS:11778,11778 ALL_REGS:192072,192072 MEM:5134,5134
  a58(r186,l2) costs: AREG:3020,3020 DREG:3020,3020 CREG:3020,3020 BREG:3020,3020 SIREG:3020,3020 DIREG:3020,3020 AD_REGS:3020,3020 CLOBBERED_REGS:3020,3020 Q_REGS:3020,3020 NON_Q_REGS:3020,3020 TLS_GOTBASE_REGS:3020,3020 GENERAL_REGS:3020,3020 FP_TOP_REG:7550,7550 FP_SECOND_REG:7550,7550 FLOAT_REGS:7550,7550 SSE_FIRST_REG:604,604 NO_REX_SSE_REGS:604,604 SSE_REGS:604,604 FLOAT_SSE_REGS:7550,7550 FLOAT_INT_REGS:7550,7550 INT_SSE_REGS:7550,7550 FLOAT_INT_SSE_REGS:7550,7550 MEM:3624,3624
  a59(r185,l2) costs: AREG:3020,3020 DREG:3020,3020 CREG:3020,3020 BREG:3020,3020 SIREG:3020,3020 DIREG:3020,3020 AD_REGS:3020,3020 CLOBBERED_REGS:3020,3020 Q_REGS:3020,3020 NON_Q_REGS:3020,3020 TLS_GOTBASE_REGS:3020,3020 GENERAL_REGS:3020,3020 FP_TOP_REG:7550,7550 FP_SECOND_REG:7550,7550 FLOAT_REGS:7550,7550 SSE_FIRST_REG:-302,-302 NO_REX_SSE_REGS:604,604 SSE_REGS:604,604 FLOAT_SSE_REGS:7550,7550 FLOAT_INT_REGS:7550,7550 INT_SSE_REGS:7550,7550 FLOAT_INT_SSE_REGS:7550,7550 MEM:3624,3624
  a60(r149,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4832,4832 NO_REX_SSE_REGS:4832,4832 SSE_REGS:4832,4832 MMX_REGS:7852,7852 INT_SSE_REGS:7852,7852 ALL_REGS:128048,128048 MEM:3322,3322
  a61(r116,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:9536,9536 NO_REX_SSE_REGS:9536,9536 SSE_REGS:9536,9536 MMX_REGS:20836,20836 INT_SSE_REGS:20836,20836 ALL_REGS:341704,341704 MEM:7152,7152
  a62(r147,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21360,21360 NO_REX_SSE_REGS:21360,21360 SSE_REGS:21360,21360 MMX_REGS:34710,34710 INT_SSE_REGS:34710,34710 ALL_REGS:566040,566040 MEM:15130,15130
  a63(r146,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7120,7120 NO_REX_SSE_REGS:7120,7120 SSE_REGS:7120,7120 MMX_REGS:18690,18690 INT_SSE_REGS:18690,18690 ALL_REGS:279460,279460 MEM:7120,7120
  a64(r145,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:14240,14240 NO_REX_SSE_REGS:14240,14240 SSE_REGS:14240,14240 MMX_REGS:23140,23140 INT_SSE_REGS:23140,23140 ALL_REGS:377360,377360 MEM:9790,9790
  a65(r111,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:872,872 NO_REX_SSE_REGS:872,872 SSE_REGS:872,872 MMX_REGS:1417,1417 INT_SSE_REGS:1417,1417 ALL_REGS:23108,23108 MEM:545,545
  a66(r113,l3) costs: AREG:218,218 DREG:218,218 CREG:218,218 BREG:218,218 SIREG:218,218 DIREG:218,218 AD_REGS:218,218 CLOBBERED_REGS:218,218 Q_REGS:218,218 NON_Q_REGS:218,218 TLS_GOTBASE_REGS:218,218 GENERAL_REGS:218,218 SSE_FIRST_REG:3488,3488 NO_REX_SSE_REGS:3488,3488 SSE_REGS:3488,3488 MMX_REGS:5668,5668 INT_SSE_REGS:5668,5668 ALL_REGS:92432,92432 MEM:2289,2289
  a67(r124,l3) costs: AREG:218,218 DREG:218,218 CREG:218,218 BREG:218,218 SIREG:218,218 DIREG:218,218 AD_REGS:218,218 CLOBBERED_REGS:218,218 Q_REGS:218,218 NON_Q_REGS:218,218 TLS_GOTBASE_REGS:218,218 GENERAL_REGS:218,218 SSE_FIRST_REG:2616,2616 NO_REX_SSE_REGS:2616,2616 SSE_REGS:2616,2616 MMX_REGS:4251,4251 INT_SSE_REGS:4251,4251 ALL_REGS:69324,69324 MEM:1744,1744
  a68(r129,l3) costs: AREG:218,218 DREG:218,218 CREG:218,218 BREG:218,218 SIREG:218,218 DIREG:218,218 AD_REGS:218,218 CLOBBERED_REGS:218,218 Q_REGS:218,218 NON_Q_REGS:218,218 TLS_GOTBASE_REGS:218,218 GENERAL_REGS:218,218 SSE_FIRST_REG:872,872 NO_REX_SSE_REGS:872,872 SSE_REGS:872,872 MMX_REGS:1417,1417 INT_SSE_REGS:1417,1417 ALL_REGS:23108,23108 MEM:654,654
  a69(r132,l3) costs: AREG:218,218 DREG:218,218 CREG:218,218 BREG:218,218 SIREG:218,218 DIREG:218,218 AD_REGS:218,218 CLOBBERED_REGS:218,218 Q_REGS:218,218 NON_Q_REGS:218,218 TLS_GOTBASE_REGS:218,218 GENERAL_REGS:218,218 SSE_FIRST_REG:872,872 NO_REX_SSE_REGS:872,872 SSE_REGS:872,872 MMX_REGS:1417,1417 INT_SSE_REGS:1417,1417 ALL_REGS:23108,23108 MEM:654,654
  a70(r133,l3) costs: AREG:218,218 DREG:218,218 CREG:218,218 BREG:218,218 SIREG:218,218 DIREG:218,218 AD_REGS:218,218 CLOBBERED_REGS:218,218 Q_REGS:218,218 NON_Q_REGS:218,218 TLS_GOTBASE_REGS:218,218 GENERAL_REGS:218,218 SSE_FIRST_REG:872,872 NO_REX_SSE_REGS:872,872 SSE_REGS:872,872 MMX_REGS:1417,1417 INT_SSE_REGS:1417,1417 ALL_REGS:23108,23108 MEM:654,654
  a71(r112,l3) costs: AREG:218,218 DREG:218,218 CREG:218,218 BREG:218,218 SIREG:-109,-109 DIREG:218,218 AD_REGS:218,218 CLOBBERED_REGS:218,218 Q_REGS:218,218 NON_Q_REGS:218,218 TLS_GOTBASE_REGS:218,218 GENERAL_REGS:218,218 SSE_FIRST_REG:2398,2398 NO_REX_SSE_REGS:2398,2398 SSE_REGS:2398,2398 MMX_REGS:3488,3488 INT_SSE_REGS:3488,3488 ALL_REGS:57116,57116 MEM:1417,1417
  a72(r183,l3) costs: AREG:-109,-109 DREG:218,218 CREG:218,218 BREG:218,218 SIREG:218,218 DIREG:218,218 AD_REGS:218,218 CLOBBERED_REGS:218,218 Q_REGS:218,218 NON_Q_REGS:218,218 TLS_GOTBASE_REGS:218,218 GENERAL_REGS:218,218 SSE_FIRST_REG:872,872 NO_REX_SSE_REGS:872,872 SSE_REGS:872,872 MMX_REGS:2834,2834 INT_SSE_REGS:2834,2834 ALL_REGS:46216,46216 MEM:1199,1199


Pass 1 for finding pseudo/allocno costs

    r187: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r186: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r185: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r184: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r180: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r179: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r178: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r177: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r176: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r175: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r144: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r134: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r129: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a68 (r129,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a50 (r129,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a38 (r129,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r119: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r112: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r99: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r84: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r82: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a44 (r82,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a33 (r82,l1) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r129,l0) costs: AREG:80,178 DREG:160,596 CREG:160,596 BREG:160,596 SIREG:160,596 DIREG:160,596 AD_REGS:80,298 CLOBBERED_REGS:80,298 Q_REGS:80,298 NON_Q_REGS:160,596 TLS_GOTBASE_REGS:160,596 GENERAL_REGS:80,298 SSE_FIRST_REG:1632,3376 NO_REX_SSE_REGS:1632,3376 SSE_REGS:1632,3376 MMX_REGS:2554,5388 INT_SSE_REGS:2034,3451 ALL_REGS:24380,47488 MEM:1224,2532
  a1(r120,l0) costs: GENERAL_REGS:26,26 SSE_FIRST_REG:338,1986 NO_REX_SSE_REGS:338,1986 SSE_REGS:338,1986 MMX_REGS:533,3211 INT_SSE_REGS:533,3211 ALL_REGS:6994,40966 MEM:247,1374
  a2(r172,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:104,9640 NO_REX_SSE_REGS:104,9640 SSE_REGS:104,9640 MMX_REGS:169,15665 INT_SSE_REGS:169,15665 ALL_REGS:2756,255460 MEM:78,7230
  a3(r115,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:104,9840 NO_REX_SSE_REGS:104,9840 SSE_REGS:104,9840 MMX_REGS:156,15977 INT_SSE_REGS:156,15977 ALL_REGS:1378,259382 MEM:78,6163
  a4(r114,l0) costs: GENERAL_REGS:26,26 SSE_FIRST_REG:130,2546 NO_REX_SSE_REGS:130,2546 SSE_REGS:130,2546 MMX_REGS:195,4121 INT_SSE_REGS:195,4121 ALL_REGS:2782,66806 MEM:104,1916
  a5(r110,l0) costs: GENERAL_REGS:26,26 SSE_FIRST_REG:234,22370 NO_REX_SSE_REGS:234,22370 SSE_REGS:234,22370 MMX_REGS:364,36335 INT_SSE_REGS:364,36335 ALL_REGS:4238,501942 MEM:169,15882
  a6(r82,l0) costs: AREG:104,104 DREG:104,104 CREG:104,104 BREG:104,104 SIREG:104,104 DIREG:52,-26 AD_REGS:104,104 CLOBBERED_REGS:52,52 Q_REGS:104,104 NON_Q_REGS:52,52 TLS_GOTBASE_REGS:52,52 GENERAL_REGS:52,52 SSE_FIRST_REG:2336,18120 NO_REX_SSE_REGS:2336,18120 SSE_REGS:2336,18120 MMX_REGS:3796,29445 INT_SSE_REGS:3458,29107 ALL_REGS:49592,467868 MEM:1752,13590
  a7(r184,l0) costs: AREG:26,-13 DREG:52,52 CREG:52,52 BREG:52,52 SIREG:52,52 DIREG:52,52 AD_REGS:26,26 CLOBBERED_REGS:26,26 Q_REGS:26,26 NON_Q_REGS:52,52 TLS_GOTBASE_REGS:52,52 GENERAL_REGS:26,26 SSE_FIRST_REG:312,312 NO_REX_SSE_REGS:312,312 SSE_REGS:312,312 MMX_REGS:507,507 INT_SSE_REGS:338,338 ALL_REGS:5512,5512 MEM:221,221
  a8(r144,l0) costs: AREG:52,52 DREG:52,52 CREG:52,52 BREG:52,52 SIREG:52,52 DIREG:26,-13 AD_REGS:52,52 CLOBBERED_REGS:26,26 Q_REGS:52,52 NON_Q_REGS:26,26 TLS_GOTBASE_REGS:26,26 GENERAL_REGS:26,26 SSE_FIRST_REG:312,312 NO_REX_SSE_REGS:312,312 SSE_REGS:312,312 MMX_REGS:507,507 INT_SSE_REGS:338,338 ALL_REGS:5512,5512 MEM:234,234
  a9(r143,l0) costs: AREG:52,52 DREG:52,52 CREG:52,52 BREG:52,52 SIREG:26,-13 DIREG:52,52 AD_REGS:52,52 CLOBBERED_REGS:26,26 Q_REGS:52,52 NON_Q_REGS:26,26 TLS_GOTBASE_REGS:26,26 GENERAL_REGS:26,26 SSE_FIRST_REG:312,312 NO_REX_SSE_REGS:312,312 SSE_REGS:312,312 MMX_REGS:507,507 INT_SSE_REGS:338,338 ALL_REGS:4212,4212 MEM:78,78
  a10(r142,l0) costs: AREG:52,52 DREG:26,-13 CREG:52,52 BREG:52,52 SIREG:52,52 DIREG:52,52 AD_REGS:26,26 CLOBBERED_REGS:26,26 Q_REGS:26,26 NON_Q_REGS:52,52 TLS_GOTBASE_REGS:26,26 GENERAL_REGS:26,26 SSE_FIRST_REG:312,312 NO_REX_SSE_REGS:312,312 SSE_REGS:312,312 MMX_REGS:507,507 INT_SSE_REGS:338,338 ALL_REGS:4212,4212 MEM:78,78
  a11(r132,l0) costs: GENERAL_REGS:0,218 SSE_FIRST_REG:648,7088 NO_REX_SSE_REGS:648,7088 SSE_REGS:648,7088 MMX_REGS:985,11450 INT_SSE_REGS:985,10033 ALL_REGS:9964,157516 MEM:486,5316
  a12(r133,l0) costs: GENERAL_REGS:0,218 SSE_FIRST_REG:648,4808 NO_REX_SSE_REGS:648,4808 SSE_REGS:648,4808 MMX_REGS:985,7745 INT_SSE_REGS:985,6328 ALL_REGS:9964,97096 MEM:486,3606
  a13(r113,l0) costs: GENERAL_REGS:0,218 SSE_FIRST_REG:96,4456 NO_REX_SSE_REGS:96,4456 SSE_REGS:96,4456 MMX_REGS:144,7229 INT_SSE_REGS:144,5812 ALL_REGS:1272,93704 MEM:72,3015
  a14(r124,l0) costs: GENERAL_REGS:0,218 SSE_FIRST_REG:96,3584 NO_REX_SSE_REGS:96,3584 SSE_REGS:96,3584 MMX_REGS:156,5824 INT_SSE_REGS:156,4407 ALL_REGS:2544,71868 MEM:60,2458
  a15(r87,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:200,200 NO_REX_SSE_REGS:200,200 SSE_REGS:200,200 MMX_REGS:325,325 INT_SSE_REGS:325,325 ALL_REGS:4000,4000 MEM:138,138
  a16(r111,l0) costs: GENERAL_REGS:26,26 SSE_FIRST_REG:520,1392 NO_REX_SSE_REGS:520,1392 SSE_REGS:520,1392 MMX_REGS:845,2262 INT_SSE_REGS:676,2093 ALL_REGS:9724,32832 MEM:390,935
  a17(r130,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1192,1192 NO_REX_SSE_REGS:1192,1192 SSE_REGS:1192,1192 MMX_REGS:1869,1869 INT_SSE_REGS:1869,1869 ALL_REGS:24380,24380 MEM:894,894
  a18(r182,l0) costs: AREG:26,-13 DREG:52,52 CREG:52,52 BREG:52,52 SIREG:52,52 DIREG:52,52 AD_REGS:26,26 CLOBBERED_REGS:26,26 Q_REGS:26,26 NON_Q_REGS:52,52 TLS_GOTBASE_REGS:52,52 GENERAL_REGS:26,26 SSE_FIRST_REG:312,312 NO_REX_SSE_REGS:312,312 SSE_REGS:312,312 MMX_REGS:507,507 INT_SSE_REGS:338,338 ALL_REGS:5512,5512 MEM:221,221
  a19(r140,l0) costs: AREG:312,312 DREG:312,312 CREG:312,312 BREG:312,312 SIREG:312,312 DIREG:312,312 AD_REGS:312,312 CLOBBERED_REGS:312,312 Q_REGS:312,312 NON_Q_REGS:312,312 TLS_GOTBASE_REGS:312,312 GENERAL_REGS:312,312 FP_TOP_REG:494,494 FP_SECOND_REG:494,494 FLOAT_REGS:494,494 SSE_FIRST_REG:26,-13 NO_REX_SSE_REGS:26,26 SSE_REGS:26,26 FLOAT_SSE_REGS:325,325 FLOAT_INT_REGS:494,494 INT_SSE_REGS:325,325 FLOAT_INT_SSE_REGS:325,325 MEM:234,234
  a20(r181,l0) costs: AREG:416,416 DREG:416,416 CREG:416,416 BREG:416,416 SIREG:416,416 DIREG:416,416 AD_REGS:416,416 CLOBBERED_REGS:416,416 Q_REGS:416,416 NON_Q_REGS:416,416 TLS_GOTBASE_REGS:416,416 GENERAL_REGS:416,416 FP_TOP_REG:676,676 FP_SECOND_REG:676,676 FLOAT_REGS:676,676 SSE_REGS:52,52 FLOAT_SSE_REGS:338,338 FLOAT_INT_REGS:676,676 INT_SSE_REGS:338,338 FLOAT_INT_SSE_REGS:338,338 MEM:312,312
  a21(r180,l0) costs: AREG:312,312 DREG:312,312 CREG:312,312 BREG:312,312 SIREG:312,312 DIREG:312,312 AD_REGS:312,312 CLOBBERED_REGS:312,312 Q_REGS:312,312 NON_Q_REGS:312,312 TLS_GOTBASE_REGS:312,312 GENERAL_REGS:312,312 FP_TOP_REG:494,494 FP_SECOND_REG:494,494 FLOAT_REGS:494,494 SSE_FIRST_REG:26,-13 NO_REX_SSE_REGS:26,26 SSE_REGS:26,26 FLOAT_SSE_REGS:325,325 FLOAT_INT_REGS:494,494 INT_SSE_REGS:325,325 FLOAT_INT_SSE_REGS:325,325 MEM:234,234
  a22(r179,l0) costs: AREG:416,416 DREG:416,416 CREG:416,416 BREG:416,416 SIREG:416,416 DIREG:416,416 AD_REGS:416,416 CLOBBERED_REGS:416,416 Q_REGS:416,416 NON_Q_REGS:416,416 TLS_GOTBASE_REGS:416,416 GENERAL_REGS:416,416 FP_TOP_REG:676,676 FP_SECOND_REG:676,676 FLOAT_REGS:676,676 SSE_REGS:52,52 FLOAT_SSE_REGS:338,338 FLOAT_INT_REGS:676,676 INT_SSE_REGS:338,338 FLOAT_INT_SSE_REGS:338,338 MEM:312,312
  a23(r134,l0) costs: AREG:312,312 DREG:312,312 CREG:312,312 BREG:312,312 SIREG:312,312 DIREG:312,312 AD_REGS:312,312 CLOBBERED_REGS:312,312 Q_REGS:312,312 NON_Q_REGS:312,312 TLS_GOTBASE_REGS:312,312 GENERAL_REGS:312,312 FP_TOP_REG:494,494 FP_SECOND_REG:494,494 FLOAT_REGS:494,494 SSE_FIRST_REG:26,-13 NO_REX_SSE_REGS:26,26 SSE_REGS:26,26 FLOAT_SSE_REGS:325,325 FLOAT_INT_REGS:494,494 INT_SSE_REGS:325,325 FLOAT_INT_SSE_REGS:325,325 MEM:234,234
  a24(r178,l0) costs: AREG:312,312 DREG:312,312 CREG:312,312 BREG:312,312 SIREG:312,312 DIREG:312,312 AD_REGS:312,312 CLOBBERED_REGS:312,312 Q_REGS:312,312 NON_Q_REGS:312,312 TLS_GOTBASE_REGS:312,312 GENERAL_REGS:312,312 FP_TOP_REG:494,494 FP_SECOND_REG:494,494 FLOAT_REGS:494,494 SSE_FIRST_REG:26,-13 NO_REX_SSE_REGS:26,26 SSE_REGS:26,26 FLOAT_SSE_REGS:325,325 FLOAT_INT_REGS:494,494 INT_SSE_REGS:325,325 FLOAT_INT_SSE_REGS:325,325 MEM:234,234
  a25(r84,l0) costs: AREG:312,312 DREG:312,312 CREG:312,312 BREG:312,312 SIREG:312,312 DIREG:312,312 AD_REGS:312,312 CLOBBERED_REGS:312,312 Q_REGS:312,312 NON_Q_REGS:312,312 TLS_GOTBASE_REGS:312,312 GENERAL_REGS:312,312 FP_TOP_REG:494,494 FP_SECOND_REG:494,494 FLOAT_REGS:494,494 SSE_FIRST_REG:26,-13 NO_REX_SSE_REGS:26,26 SSE_REGS:26,26 FLOAT_SSE_REGS:325,325 FLOAT_INT_REGS:494,494 INT_SSE_REGS:325,325 FLOAT_INT_SSE_REGS:325,325 MEM:234,234
  a26(r177,l0) costs: AREG:312,312 DREG:312,312 CREG:312,312 BREG:312,312 SIREG:312,312 DIREG:312,312 AD_REGS:312,312 CLOBBERED_REGS:312,312 Q_REGS:312,312 NON_Q_REGS:312,312 TLS_GOTBASE_REGS:312,312 GENERAL_REGS:312,312 FP_TOP_REG:494,494 FP_SECOND_REG:494,494 FLOAT_REGS:494,494 SSE_FIRST_REG:26,-13 NO_REX_SSE_REGS:26,26 SSE_REGS:26,26 FLOAT_SSE_REGS:325,325 FLOAT_INT_REGS:494,494 INT_SSE_REGS:325,325 FLOAT_INT_SSE_REGS:325,325 MEM:234,234
  a27(r119,l0) costs: AREG:312,312 DREG:312,312 CREG:312,312 BREG:312,312 SIREG:312,312 DIREG:312,312 AD_REGS:312,312 CLOBBERED_REGS:312,312 Q_REGS:312,312 NON_Q_REGS:312,312 TLS_GOTBASE_REGS:312,312 GENERAL_REGS:312,312 FP_TOP_REG:494,494 FP_SECOND_REG:494,494 FLOAT_REGS:494,494 SSE_FIRST_REG:26,-13 NO_REX_SSE_REGS:26,26 SSE_REGS:26,26 FLOAT_SSE_REGS:325,325 FLOAT_INT_REGS:494,494 INT_SSE_REGS:325,325 FLOAT_INT_SSE_REGS:325,325 MEM:234,234
  a28(r176,l0) costs: AREG:312,312 DREG:312,312 CREG:312,312 BREG:312,312 SIREG:312,312 DIREG:312,312 AD_REGS:312,312 CLOBBERED_REGS:312,312 Q_REGS:312,312 NON_Q_REGS:312,312 TLS_GOTBASE_REGS:312,312 GENERAL_REGS:312,312 FP_TOP_REG:494,494 FP_SECOND_REG:494,494 FLOAT_REGS:494,494 SSE_FIRST_REG:26,-13 NO_REX_SSE_REGS:26,26 SSE_REGS:26,26 FLOAT_SSE_REGS:325,325 FLOAT_INT_REGS:494,494 INT_SSE_REGS:325,325 FLOAT_INT_SSE_REGS:325,325 MEM:234,234
  a29(r83,l0) costs: GENERAL_REGS:0,0 MEM:2108,2108
  a30(r175,l0) costs: AREG:272,272 DREG:272,272 CREG:136,-68 BREG:272,272 SIREG:272,272 DIREG:272,272 AD_REGS:272,272 CLOBBERED_REGS:136,136 Q_REGS:136,136 NON_Q_REGS:272,272 TLS_GOTBASE_REGS:136,136 GENERAL_REGS:136,136 SSE_FIRST_REG:1632,1632 NO_REX_SSE_REGS:1632,1632 SSE_REGS:1632,1632 MMX_REGS:2652,2652 INT_SSE_REGS:1768,1768 ALL_REGS:28832,28832 MEM:1156,1156
  a31(r174,l0) costs: AREG:272,272 DREG:136,-68 CREG:272,272 BREG:272,272 SIREG:272,272 DIREG:272,272 AD_REGS:136,136 CLOBBERED_REGS:136,136 Q_REGS:136,136 NON_Q_REGS:272,272 TLS_GOTBASE_REGS:136,136 GENERAL_REGS:136,136 SSE_FIRST_REG:1632,1632 NO_REX_SSE_REGS:1632,1632 SSE_REGS:1632,1632 MMX_REGS:2652,2652 INT_SSE_REGS:1768,1768 ALL_REGS:28832,28832 MEM:1156,1156
  a32(r173,l0) costs: AREG:272,272 DREG:272,272 CREG:272,272 BREG:272,272 SIREG:272,272 DIREG:136,-68 AD_REGS:272,272 CLOBBERED_REGS:136,136 Q_REGS:272,272 NON_Q_REGS:136,136 TLS_GOTBASE_REGS:136,136 GENERAL_REGS:136,136 SSE_FIRST_REG:1632,1632 NO_REX_SSE_REGS:1632,1632 SSE_REGS:1632,1632 MMX_REGS:2652,2652 INT_SSE_REGS:1768,1768 ALL_REGS:28832,28832 MEM:1156,1156
  a33(r82,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1552,15784 NO_REX_SSE_REGS:1552,15784 SSE_REGS:1552,15784 MMX_REGS:2522,25649 INT_SSE_REGS:2522,25649 ALL_REGS:41128,418276 MEM:1164,11838
  a34(r110,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:792,22136 NO_REX_SSE_REGS:792,22136 SSE_REGS:792,22136 MMX_REGS:1287,35971 INT_SSE_REGS:1287,35971 ALL_REGS:20988,497704 MEM:594,15713
  a35(r114,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,2416 NO_REX_SSE_REGS:0,2416 SSE_REGS:0,2416 MMX_REGS:0,3926 INT_SSE_REGS:0,3926 ALL_REGS:0,64024 MEM:0,1812
  a36(r115,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2616,9736 NO_REX_SSE_REGS:2616,9736 SSE_REGS:2616,9736 MMX_REGS:4251,15821 INT_SSE_REGS:4251,15821 ALL_REGS:69324,258004 MEM:1635,6085
  a37(r120,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1648,1648 NO_REX_SSE_REGS:1648,1648 SSE_REGS:1648,1648 MMX_REGS:2678,2678 INT_SSE_REGS:2678,2678 ALL_REGS:33972,33972 MEM:1127,1127
  a38(r129,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a39(r132,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,4696 NO_REX_SSE_REGS:0,4696 SSE_REGS:0,4696 MMX_REGS:0,7631 INT_SSE_REGS:0,7631 ALL_REGS:0,124444 MEM:0,3522
  a40(r133,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,2416 NO_REX_SSE_REGS:0,2416 SSE_REGS:0,2416 MMX_REGS:0,3926 INT_SSE_REGS:0,3926 ALL_REGS:0,64024 MEM:0,1812
  a41(r172,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,9536 NO_REX_SSE_REGS:0,9536 SSE_REGS:0,9536 MMX_REGS:0,15496 INT_SSE_REGS:0,15496 ALL_REGS:0,252704 MEM:0,7152
  a42(r118,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:776,29232 NO_REX_SSE_REGS:776,29232 SSE_REGS:776,29232 MMX_REGS:1164,47405 INT_SSE_REGS:1164,47405 ALL_REGS:10282,764366 MEM:582,18367
  a43(r121,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:776,10312 NO_REX_SSE_REGS:776,10312 SSE_REGS:776,10312 MMX_REGS:1261,16757 INT_SSE_REGS:1261,16757 ALL_REGS:20564,273268 MEM:582,7734
  a44(r82,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:14232,14232 NO_REX_SSE_REGS:14232,14232 SSE_REGS:14232,14232 MMX_REGS:23127,23127 INT_SSE_REGS:23127,23127 ALL_REGS:377148,377148 MEM:10674,10674
  a45(r110,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21344,21344 NO_REX_SSE_REGS:21344,21344 SSE_REGS:21344,21344 MMX_REGS:34684,34684 INT_SSE_REGS:34684,34684 ALL_REGS:476716,476716 MEM:15119,15119
  a46(r114,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2416,2416 NO_REX_SSE_REGS:2416,2416 SSE_REGS:2416,2416 MMX_REGS:3926,3926 INT_SSE_REGS:3926,3926 ALL_REGS:64024,64024 MEM:1812,1812
  a47(r115,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:7120,7120 NO_REX_SSE_REGS:7120,7120 SSE_REGS:7120,7120 MMX_REGS:11570,11570 INT_SSE_REGS:11570,11570 ALL_REGS:188680,188680 MEM:4450,4450
  a48(r118,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:28456,28456 NO_REX_SSE_REGS:28456,28456 SSE_REGS:28456,28456 MMX_REGS:46241,46241 INT_SSE_REGS:46241,46241 ALL_REGS:754084,754084 MEM:17785,17785
  a49(r121,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:9536,9536 NO_REX_SSE_REGS:9536,9536 SSE_REGS:9536,9536 MMX_REGS:15496,15496 INT_SSE_REGS:15496,15496 ALL_REGS:252704,252704 MEM:7152,7152
  a50(r129,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a51(r132,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4696,4696 NO_REX_SSE_REGS:4696,4696 SSE_REGS:4696,4696 MMX_REGS:7631,7631 INT_SSE_REGS:7631,7631 ALL_REGS:124444,124444 MEM:3522,3522
  a52(r133,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2416,2416 NO_REX_SSE_REGS:2416,2416 SSE_REGS:2416,2416 MMX_REGS:3926,3926 INT_SSE_REGS:3926,3926 ALL_REGS:64024,64024 MEM:1812,1812
  a53(r172,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:9536,9536 NO_REX_SSE_REGS:9536,9536 SSE_REGS:9536,9536 MMX_REGS:15496,15496 INT_SSE_REGS:15496,15496 ALL_REGS:252704,252704 MEM:7152,7152
  a54(r122,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:14232,14232 NO_REX_SSE_REGS:14232,14232 SSE_REGS:14232,14232 MMX_REGS:23127,23127 INT_SSE_REGS:23127,23127 ALL_REGS:377148,377148 MEM:10674,10674
  a55(r187,l2) costs: AREG:14088,14088 DREG:14088,14088 CREG:14088,14088 BREG:14088,14088 SIREG:14088,14088 DIREG:14088,14088 AD_REGS:14088,14088 CLOBBERED_REGS:14088,14088 Q_REGS:14088,14088 NON_Q_REGS:14088,14088 TLS_GOTBASE_REGS:14088,14088 GENERAL_REGS:14088,14088 FP_TOP_REG:22893,22893 FP_SECOND_REG:22893,22893 FLOAT_REGS:22893,22893 SSE_FIRST_REG:1174,-587 NO_REX_SSE_REGS:1174,1174 SSE_REGS:1174,1174 FLOAT_SSE_REGS:15262,15262 FLOAT_INT_REGS:22893,22893 INT_SSE_REGS:15262,15262 FLOAT_INT_SSE_REGS:15262,15262 MEM:10566,10566
  a56(r99,l2) costs: AREG:21344,21344 DREG:21344,21344 CREG:21344,21344 BREG:21344,21344 SIREG:21344,21344 DIREG:21344,21344 AD_REGS:21344,21344 CLOBBERED_REGS:21344,21344 Q_REGS:21344,21344 NON_Q_REGS:21344,21344 TLS_GOTBASE_REGS:21344,21344 GENERAL_REGS:21344,21344 FP_TOP_REG:34684,34684 FP_SECOND_REG:34684,34684 FLOAT_REGS:34684,34684 SSE_FIRST_REG:1778,-889 NO_REX_SSE_REGS:1778,1778 SSE_REGS:1778,1778 FLOAT_SSE_REGS:23127,23127 FLOAT_INT_REGS:34684,34684 INT_SSE_REGS:23127,23127 FLOAT_INT_SSE_REGS:23127,23127 MEM:16008,16008
  a57(r150,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:7248,7248 NO_REX_SSE_REGS:7248,7248 SSE_REGS:7248,7248 MMX_REGS:11778,11778 INT_SSE_REGS:11778,11778 ALL_REGS:192072,192072 MEM:5134,5134
  a58(r186,l2) costs: AREG:7248,7248 DREG:7248,7248 CREG:7248,7248 BREG:7248,7248 SIREG:7248,7248 DIREG:7248,7248 AD_REGS:7248,7248 CLOBBERED_REGS:7248,7248 Q_REGS:7248,7248 NON_Q_REGS:7248,7248 TLS_GOTBASE_REGS:7248,7248 GENERAL_REGS:7248,7248 FP_TOP_REG:11778,11778 FP_SECOND_REG:11778,11778 FLOAT_REGS:11778,11778 SSE_REGS:604,604 FLOAT_SSE_REGS:7852,7852 FLOAT_INT_REGS:11778,11778 INT_SSE_REGS:7852,7852 FLOAT_INT_SSE_REGS:7852,7852 MEM:5436,5436
  a59(r185,l2) costs: AREG:7248,7248 DREG:7248,7248 CREG:7248,7248 BREG:7248,7248 SIREG:7248,7248 DIREG:7248,7248 AD_REGS:7248,7248 CLOBBERED_REGS:7248,7248 Q_REGS:7248,7248 NON_Q_REGS:7248,7248 TLS_GOTBASE_REGS:7248,7248 GENERAL_REGS:7248,7248 FP_TOP_REG:11778,11778 FP_SECOND_REG:11778,11778 FLOAT_REGS:11778,11778 SSE_FIRST_REG:604,-302 NO_REX_SSE_REGS:604,604 SSE_REGS:604,604 FLOAT_SSE_REGS:7852,7852 FLOAT_INT_REGS:11778,11778 INT_SSE_REGS:7852,7852 FLOAT_INT_SSE_REGS:7852,7852 MEM:5436,5436
  a60(r149,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4832,4832 NO_REX_SSE_REGS:4832,4832 SSE_REGS:4832,4832 MMX_REGS:7852,7852 INT_SSE_REGS:7852,7852 ALL_REGS:128048,128048 MEM:3322,3322
  a61(r116,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16656,16656 NO_REX_SSE_REGS:16656,16656 SSE_REGS:16656,16656 MMX_REGS:27066,27066 INT_SSE_REGS:27066,27066 ALL_REGS:354164,354164 MEM:10712,10712
  a62(r147,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21360,21360 NO_REX_SSE_REGS:21360,21360 SSE_REGS:21360,21360 MMX_REGS:34710,34710 INT_SSE_REGS:34710,34710 ALL_REGS:566040,566040 MEM:15130,15130
  a63(r146,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:14240,14240 NO_REX_SSE_REGS:14240,14240 SSE_REGS:14240,14240 MMX_REGS:23140,23140 INT_SSE_REGS:23140,23140 ALL_REGS:377360,377360 MEM:9790,9790
  a64(r145,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:14240,14240 NO_REX_SSE_REGS:14240,14240 SSE_REGS:14240,14240 MMX_REGS:23140,23140 INT_SSE_REGS:23140,23140 ALL_REGS:377360,377360 MEM:9790,9790
  a65(r111,l3) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:872,872 NO_REX_SSE_REGS:872,872 SSE_REGS:872,872 MMX_REGS:1417,1417 INT_SSE_REGS:1417,1417 ALL_REGS:23108,23108 MEM:545,545
  a66(r113,l3) costs: GENERAL_REGS:218,218 SSE_FIRST_REG:4360,4360 NO_REX_SSE_REGS:4360,4360 SSE_REGS:4360,4360 MMX_REGS:7085,7085 INT_SSE_REGS:5668,5668 ALL_REGS:92432,92432 MEM:2943,2943
  a67(r124,l3) costs: GENERAL_REGS:218,218 SSE_FIRST_REG:3488,3488 NO_REX_SSE_REGS:3488,3488 SSE_REGS:3488,3488 MMX_REGS:5668,5668 INT_SSE_REGS:4251,4251 ALL_REGS:69324,69324 MEM:2398,2398
  a68(r129,l3) costs: AREG:218,218 DREG:436,436 CREG:436,436 BREG:436,436 SIREG:436,436 DIREG:436,436 AD_REGS:218,218 CLOBBERED_REGS:218,218 Q_REGS:218,218 NON_Q_REGS:436,436 TLS_GOTBASE_REGS:436,436 GENERAL_REGS:218,218 SSE_FIRST_REG:1744,1744 NO_REX_SSE_REGS:1744,1744 SSE_REGS:1744,1744 MMX_REGS:2834,2834 INT_SSE_REGS:1417,1417 ALL_REGS:23108,23108 MEM:1308,1308
  a69(r132,l3) costs: GENERAL_REGS:218,218 SSE_FIRST_REG:1744,1744 NO_REX_SSE_REGS:1744,1744 SSE_REGS:1744,1744 MMX_REGS:2834,2834 INT_SSE_REGS:1417,1417 ALL_REGS:23108,23108 MEM:1308,1308
  a70(r133,l3) costs: GENERAL_REGS:218,218 SSE_FIRST_REG:1744,1744 NO_REX_SSE_REGS:1744,1744 SSE_REGS:1744,1744 MMX_REGS:2834,2834 INT_SSE_REGS:1417,1417 ALL_REGS:23108,23108 MEM:1308,1308
  a71(r112,l3) costs: AREG:436,436 DREG:436,436 CREG:436,436 BREG:436,436 SIREG:218,-109 DIREG:436,436 AD_REGS:436,436 CLOBBERED_REGS:218,218 Q_REGS:436,436 NON_Q_REGS:218,218 TLS_GOTBASE_REGS:218,218 GENERAL_REGS:218,218 SSE_FIRST_REG:3488,3488 NO_REX_SSE_REGS:3488,3488 SSE_REGS:3488,3488 MMX_REGS:5559,5559 INT_SSE_REGS:4142,4142 ALL_REGS:57770,57770 MEM:2616,2616
  a72(r183,l3) costs: AREG:218,-109 DREG:436,436 CREG:436,436 BREG:436,436 SIREG:436,436 DIREG:436,436 AD_REGS:218,218 CLOBBERED_REGS:218,218 Q_REGS:218,218 NON_Q_REGS:436,436 TLS_GOTBASE_REGS:436,436 GENERAL_REGS:218,218 SSE_FIRST_REG:2616,2616 NO_REX_SSE_REGS:2616,2616 SSE_REGS:2616,2616 MMX_REGS:4251,4251 INT_SSE_REGS:2834,2834 ALL_REGS:46216,46216 MEM:1853,1853

   Insn 306(l0): point = 0
   Insn 305(l0): point = 2
   Insn 368(l0): point = 5
   Insn 186(l0): point = 8
   Insn 185(l0): point = 10
   Insn 192(l0): point = 12
   Insn 9(l0): point = 14
   Insn 178(l0): point = 16
   Insn 177(l0): point = 18
   Insn 176(l0): point = 20
   Insn 173(l0): point = 22
   Insn 354(l0): point = 24
   Insn 172(l0): point = 26
   Insn 171(l0): point = 28
   Insn 170(l0): point = 30
   Insn 169(l0): point = 32
   Insn 168(l0): point = 34
   Insn 167(l0): point = 36
   Insn 166(l0): point = 38
   Insn 165(l0): point = 40
   Insn 365(l0): point = 43
   Insn 140(l0): point = 46
   Insn 139(l0): point = 48
   Insn 138(l0): point = 50
   Insn 137(l0): point = 52
   Insn 136(l0): point = 54
   Insn 7(l0): point = 57
   Insn 120(l0): point = 59
   Insn 118(l0): point = 62
   Insn 117(l0): point = 64
   Insn 109(l0): point = 66
   Insn 107(l0): point = 68
   Insn 104(l0): point = 70
   Insn 352(l0): point = 72
   Insn 103(l0): point = 74
   Insn 102(l0): point = 76
   Insn 99(l0): point = 78
   Insn 93(l0): point = 81
   Insn 92(l0): point = 83
   Insn 91(l0): point = 85
   Insn 351(l0): point = 87
   Insn 85(l0): point = 89
   Insn 350(l0): point = 91
   Insn 84(l0): point = 93
   Insn 83(l0): point = 95
   Insn 82(l0): point = 97
   Insn 349(l0): point = 99
   Insn 72(l0): point = 101
   Insn 348(l0): point = 103
   Insn 71(l0): point = 105
   Insn 70(l0): point = 107
   Insn 64(l0): point = 110
   Insn 63(l0): point = 112
   Insn 62(l0): point = 114
   Insn 347(l0): point = 116
   Insn 61(l0): point = 118
   Insn 60(l0): point = 120
   Insn 57(l0): point = 122
   Insn 346(l0): point = 124
   Insn 56(l0): point = 126
   Insn 55(l0): point = 128
   Insn 362(l0): point = 131
   Insn 10(l0): point = 133
   Insn 48(l0): point = 136
   Insn 47(l0): point = 138
   Insn 360(l0): point = 141
   Insn 11(l0): point = 143
   Insn 41(l0): point = 146
   Insn 40(l0): point = 148
   Insn 358(l0): point = 151
   Insn 12(l0): point = 153
   Insn 34(l0): point = 156
   Insn 33(l0): point = 158
   Insn 29(l0): point = 161
   Insn 28(l0): point = 163
   Insn 24(l0): point = 166
   Insn 19(l0): point = 169
   Insn 18(l0): point = 171
   Insn 17(l0): point = 173
   Insn 16(l0): point = 175
   Insn 5(l0): point = 177
   Insn 345(l0): point = 179
   Insn 4(l0): point = 181
   Insn 344(l0): point = 183
   Insn 2(l0): point = 185
   Insn 343(l0): point = 187
   Insn 8(l1): point = 190
   Insn 191(l1): point = 192
   Insn 285(l1): point = 195
   Insn 284(l1): point = 197
   Insn 277(l1): point = 200
   Insn 276(l1): point = 202
   Insn 273(l1): point = 204
   Insn 268(l1): point = 207
   Insn 371(l1): point = 210
   Insn 293(l1): point = 213
   Insn 292(l1): point = 215
   Insn 288(l1): point = 217
   Insn 210(l2): point = 220
   Insn 209(l2): point = 222
   Insn 208(l2): point = 224
   Insn 205(l2): point = 226
   Insn 203(l2): point = 228
   Insn 202(l2): point = 230
   Insn 197(l2): point = 232
   Insn 196(l2): point = 234
   Insn 260(l2): point = 237
   Insn 259(l2): point = 239
   Insn 258(l2): point = 241
   Insn 255(l2): point = 243
   Insn 253(l2): point = 245
   Insn 357(l2): point = 247
   Insn 251(l2): point = 249
   Insn 250(l2): point = 251
   Insn 243(l2): point = 254
   Insn 242(l2): point = 256
   Insn 241(l2): point = 258
   Insn 238(l2): point = 260
   Insn 235(l2): point = 262
   Insn 233(l2): point = 264
   Insn 356(l2): point = 266
   Insn 355(l2): point = 268
   Insn 226(l2): point = 270
   Insn 225(l2): point = 272
   Insn 224(l2): point = 274
   Insn 215(l2): point = 276
   Insn 214(l2): point = 278
   Insn 133(l3): point = 281
   Insn 132(l3): point = 283
   Insn 129(l3): point = 285
   Insn 353(l3): point = 287
   Insn 128(l3): point = 289
   Insn 127(l3): point = 291
   Insn 126(l3): point = 293
   Insn 125(l3): point = 295
   Insn 124(l3): point = 297
   Insn 156(l3): point = 300
   Insn 155(l3): point = 302
   Insn 153(l3): point = 304
   Insn 150(l3): point = 306
   Insn 148(l3): point = 308
   Insn 147(l3): point = 310
   Insn 146(l3): point = 312
   Insn 145(l3): point = 314
 a0(r129): [151..153] [141..143] [131..133] [57..70] [43..45] [3..22]
 a1(r120): [8..20]
 a2(r172): [8..12]
 a3(r115): [8..14]
 a4(r114): [8..16]
 a5(r110): [8..18]
 a6(r82): [156..175] [146..150] [136..140] [129..130] [108..109] [79..80] [8..42]
 a7(r184): [23..24]
 a8(r144): [29..36]
 a9(r143): [31..38]
 a10(r142): [33..40]
 a11(r132): [156..181] [136..140] [119..130] [57..80] [8..42]
 a12(r133): [161..177] [146..150] [136..140] [94..109] [57..80] [8..42]
 a13(r113): [57..57]
 a14(r124): [57..59]
 a15(r87): [60..66]
 a16(r111): [57..78]
 a17(r130): [166..185] [136..140] [67..80]
 a18(r182): [71..72]
 a19(r140): [84..89]
 a20(r181): [86..87]
 a21(r180): [90..91]
 a22(r179): [96..99]
 a23(r134): [98..101]
 a24(r178): [102..103]
 a25(r84): [113..114]
 a26(r177): [115..116]
 a27(r119): [121..122]
 a28(r176): [123..124]
 a29(r83): [159..173] [149..150] [139..140]
 a30(r175): [178..179]
 a31(r174): [182..183]
 a32(r173): [186..187]
 a33(r82): [190..219]
 a34(r110): [190..219]
 a35(r114): [190..219]
 a36(r115): [190..219]
 a37(r120): [213..219] [195..207]
 a38(r129): [190..219]
 a39(r132): [190..219]
 a40(r133): [190..219]
 a41(r172): [190..219]
 a42(r118): [190..190]
 a43(r121): [190..192]
 a44(r82): [220..280]
 a45(r110): [254..258] [235..241]
 a46(r114): [220..280]
 a47(r115): [220..280]
 a48(r118): [220..280]
 a49(r121): [220..280]
 a50(r129): [220..280]
 a51(r132): [220..280]
 a52(r133): [220..280]
 a53(r172): [220..280]
 a54(r122): [265..280] [246..253] [220..224]
 a55(r187): [246..247]
 a56(r99): [275..280] [252..253] [220..226]
 a57(r150): [263..276]
 a58(r186): [263..266]
 a59(r185): [265..268]
 a60(r149): [277..278]
 a61(r116): [279..280] [220..232]
 a62(r147): [225..228]
 a63(r146): [229..230]
 a64(r145): [233..234]
 a65(r111): [281..316]
 a66(r113): [281..316]
 a67(r124): [281..316]
 a68(r129): [281..316]
 a69(r132): [281..316]
 a70(r133): [281..316]
 a71(r112): [313..316] [281..285]
 a72(r183): [286..287]
 Rebuilding regno allocno list for 187
 Rebuilding regno allocno list for 186
 Rebuilding regno allocno list for 185
 Rebuilding regno allocno list for 183
      Moving ranges of a53r172 to a41r172:  [220..280]
      Moving ranges of a41r172 to a2r172:  [190..280]
 Rebuilding regno allocno list for 150
 Rebuilding regno allocno list for 149
 Rebuilding regno allocno list for 147
 Rebuilding regno allocno list for 146
 Rebuilding regno allocno list for 145
      Moving ranges of a70r133 to a12r133:  [281..316]
      Moving ranges of a52r133 to a40r133:  [220..280]
      Moving ranges of a40r133 to a12r133:  [190..280]
      Moving ranges of a69r132 to a11r132:  [281..316]
      Moving ranges of a51r132 to a39r132:  [220..280]
      Moving ranges of a39r132 to a11r132:  [190..280]
      Moving ranges of a68r129 to a0r129:  [281..316]
      Moving ranges of a50r129 to a38r129:  [220..280]
      Moving ranges of a38r129 to a0r129:  [190..280]
      Moving ranges of a67r124 to a14r124:  [281..316]
 Rebuilding regno allocno list for 122
      Moving ranges of a49r121 to a43r121:  [220..280]
 Rebuilding regno allocno list for 121
      Moving ranges of a37r120 to a1r120:  [213..219] [195..207]
      Moving ranges of a48r118 to a42r118:  [220..280]
 Rebuilding regno allocno list for 118
 Rebuilding regno allocno list for 116
      Moving ranges of a47r115 to a36r115:  [220..280]
      Moving ranges of a36r115 to a3r115:  [190..280]
      Moving ranges of a46r114 to a35r114:  [220..280]
      Moving ranges of a35r114 to a4r114:  [190..280]
      Moving ranges of a66r113 to a13r113:  [281..316]
 Rebuilding regno allocno list for 112
      Moving ranges of a65r111 to a16r111:  [281..316]
      Moving ranges of a45r110 to a34r110:  [254..258] [235..241]
      Moving ranges of a34r110 to a5r110:  [254..258] [235..241] [190..219]
 Rebuilding regno allocno list for 99
      Moving ranges of a44r82 to a33r82:  [220..280]
      Moving ranges of a33r82 to a6r82:  [190..280]
Compressing live ranges: from 317 to 92 - 29%
Ranges after the compression:
 a0(r129): [56..91] [46..47] [42..43] [38..39] [6..13] [0..1]
 a1(r120): [58..61] [0..1]
 a2(r172): [56..85] [0..1]
 a3(r115): [56..85] [0..1]
 a4(r114): [56..85] [0..1]
 a5(r110): [76..77] [70..71] [56..61] [0..1]
 a6(r82): [56..85] [48..49] [44..45] [40..41] [36..37] [26..27] [16..17] [0..5]
 a7(r184): [2..3]
 a8(r144): [4..5]
 a9(r143): [4..5]
 a10(r142): [4..5]
 a11(r132): [56..91] [48..51] [40..41] [32..37] [8..17] [0..5]
 a12(r133): [56..91] [48..49] [44..45] [40..41] [22..27] [8..17] [0..5]
 a13(r113): [86..91] [8..8]
 a14(r124): [86..91] [8..9]
 a15(r87): [10..11]
 a16(r111): [86..91] [8..15]
 a17(r130): [48..53] [40..41] [12..17]
 a18(r182): [14..15]
 a19(r140): [18..19]
 a20(r181): [18..19]
 a21(r180): [20..21]
 a22(r179): [22..23]
 a23(r134): [22..23]
 a24(r178): [24..25]
 a25(r84): [28..29]
 a26(r177): [30..31]
 a27(r119): [32..33]
 a28(r176): [34..35]
 a29(r83): [48..49] [44..45] [40..41]
 a30(r175): [50..51]
 a31(r174): [52..53]
 a32(r173): [54..55]
 a42(r118): [62..85] [56..56]
 a43(r121): [62..85] [56..57]
 a54(r122): [78..85] [72..75] [62..63]
 a55(r187): [72..73]
 a56(r99): [80..85] [74..75] [62..65]
 a57(r150): [78..81]
 a58(r186): [78..79]
 a59(r185): [78..79]
 a60(r149): [82..83]
 a61(r116): [84..85] [62..67]
 a62(r147): [64..65]
 a63(r146): [66..67]
 a64(r145): [68..69]
 a71(r112): [90..91] [86..87]
 a72(r183): [88..89]
+++Allocating 384 bytes for conflict table (uncompressed size 1168)
;; a0(r129,l0) conflicts: a1(r120,l0) a5(r110,l0) a2(r172,l0) a3(r115,l0) a4(r114,l0) a6(r82,l0) a11(r132,l0) a12(r133,l0) a13(r113,l0) a14(r124,l0) a16(r111,l0) a15(r87,l0) a17(r130,l0) a42(r118,l0) a43(r121,l0) a54(r122,l0) a61(r116,l0) a62(r147,l0) a63(r146,l0) a64(r145,l0) a57(r150,l0) a60(r149,l0) a71(r112,l0) a72(r183,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a1(r120,l0) conflicts: a5(r110,l0) a2(r172,l0) a3(r115,l0) a4(r114,l0) a6(r82,l0) a0(r129,l0) a11(r132,l0) a12(r133,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r172,l0) conflicts: a1(r120,l0) a5(r110,l0) a3(r115,l0) a4(r114,l0) a6(r82,l0) a0(r129,l0) a11(r132,l0) a12(r133,l0) a42(r118,l0) a43(r121,l0) a54(r122,l0) a61(r116,l0) a62(r147,l0) a63(r146,l0) a64(r145,l0) a57(r150,l0) a60(r149,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r115,l0) conflicts: a1(r120,l0) a5(r110,l0) a2(r172,l0) a4(r114,l0) a6(r82,l0) a0(r129,l0) a11(r132,l0) a12(r133,l0) a42(r118,l0) a43(r121,l0) a54(r122,l0) a61(r116,l0) a62(r147,l0) a63(r146,l0) a64(r145,l0) a57(r150,l0) a60(r149,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r114,l0) conflicts: a1(r120,l0) a5(r110,l0) a2(r172,l0) a3(r115,l0) a6(r82,l0) a0(r129,l0) a11(r132,l0) a12(r133,l0) a42(r118,l0) a43(r121,l0) a54(r122,l0) a61(r116,l0) a62(r147,l0) a63(r146,l0) a64(r145,l0) a57(r150,l0) a60(r149,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r110,l0) conflicts: a1(r120,l0) a2(r172,l0) a3(r115,l0) a4(r114,l0) a6(r82,l0) a0(r129,l0) a11(r132,l0) a12(r133,l0) a42(r118,l0) a43(r121,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r82,l0) conflicts: a1(r120,l0) a5(r110,l0) a2(r172,l0) a3(r115,l0) a4(r114,l0) a0(r129,l0) a11(r132,l0) a12(r133,l0) a7(r184,l0) a8(r144,l0) a9(r143,l0) a10(r142,l0) a17(r130,l0) a29(r83,l0) a42(r118,l0) a43(r121,l0) a54(r122,l0) a61(r116,l0) a62(r147,l0) a63(r146,l0) a64(r145,l0) a57(r150,l0) a60(r149,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a7(r184,l0) conflicts: a6(r82,l0) a11(r132,l0) a12(r133,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r144,l0) conflicts: a6(r82,l0) a11(r132,l0) a12(r133,l0) a9(r143,l0) a10(r142,l0)
;;     total conflict hard regs: 1 2 4
;;     conflict hard regs: 1 2 4

;; a9(r143,l0) conflicts: a6(r82,l0) a11(r132,l0) a12(r133,l0) a8(r144,l0) a10(r142,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

;; a10(r142,l0) conflicts: a6(r82,l0) a11(r132,l0) a12(r133,l0) a8(r144,l0) a9(r143,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a11(r132,l0) conflicts: a1(r120,l0) a5(r110,l0) a2(r172,l0) a3(r115,l0) a4(r114,l0) a6(r82,l0) a0(r129,l0) a12(r133,l0) a7(r184,l0) a8(r144,l0) a9(r143,l0) a10(r142,l0) a13(r113,l0) a14(r124,l0) a16(r111,l0) a15(r87,l0) a17(r130,l0) a18(r182,l0) a29(r83,l0) a30(r175,l0) a42(r118,l0) a43(r121,l0) a54(r122,l0) a61(r116,l0) a62(r147,l0) a63(r146,l0) a64(r145,l0) a57(r150,l0) a60(r149,l0) a71(r112,l0) a72(r183,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a12(r133,l0) conflicts: a1(r120,l0) a5(r110,l0) a2(r172,l0) a3(r115,l0) a4(r114,l0) a6(r82,l0) a0(r129,l0) a11(r132,l0) a7(r184,l0) a8(r144,l0) a9(r143,l0) a10(r142,l0) a13(r113,l0) a14(r124,l0) a16(r111,l0) a15(r87,l0) a17(r130,l0) a18(r182,l0) a29(r83,l0) a42(r118,l0) a43(r121,l0) a54(r122,l0) a61(r116,l0) a62(r147,l0) a63(r146,l0) a64(r145,l0) a57(r150,l0) a60(r149,l0) a71(r112,l0) a72(r183,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a13(r113,l0) conflicts: a0(r129,l0) a11(r132,l0) a12(r133,l0) a14(r124,l0) a16(r111,l0) a71(r112,l0) a72(r183,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a14(r124,l0) conflicts: a0(r129,l0) a11(r132,l0) a12(r133,l0) a13(r113,l0) a16(r111,l0) a71(r112,l0) a72(r183,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a15(r87,l0) conflicts: a0(r129,l0) a11(r132,l0) a12(r133,l0) a16(r111,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r111,l0) conflicts: a0(r129,l0) a11(r132,l0) a12(r133,l0) a13(r113,l0) a14(r124,l0) a15(r87,l0) a17(r130,l0) a18(r182,l0) a71(r112,l0) a72(r183,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a17(r130,l0) conflicts: a6(r82,l0) a0(r129,l0) a11(r132,l0) a12(r133,l0) a16(r111,l0) a18(r182,l0) a29(r83,l0) a30(r175,l0) a31(r174,l0)
;;     total conflict hard regs: 0-2 5
;;     conflict hard regs: 0-2 5

;; a18(r182,l0) conflicts: a11(r132,l0) a12(r133,l0) a16(r111,l0) a17(r130,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r140,l0) conflicts: a20(r181,l0)
;;     total conflict hard regs: 21
;;     conflict hard regs: 21

;; a20(r181,l0) conflicts: a19(r140,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r180,l0) conflicts:
;;     total conflict hard regs: 21
;;     conflict hard regs: 21

;; a22(r179,l0) conflicts: a23(r134,l0)
;;     total conflict hard regs: 20
;;     conflict hard regs: 20

;; a23(r134,l0) conflicts: a22(r179,l0)
;;     total conflict hard regs: 21
;;     conflict hard regs: 21

;; a24(r178,l0) conflicts:
;;     total conflict hard regs: 21
;;     conflict hard regs: 21

;; a25(r84,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r177,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a27(r119,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a28(r176,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a29(r83,l0) conflicts: a6(r82,l0) a11(r132,l0) a12(r133,l0) a17(r130,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a30(r175,l0) conflicts: a11(r132,l0) a17(r130,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a31(r174,l0) conflicts: a17(r130,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a32(r173,l0) conflicts:
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

;; a42(r118,l0) conflicts: a5(r110,l0) a2(r172,l0) a3(r115,l0) a4(r114,l0) a6(r82,l0) a0(r129,l0) a11(r132,l0) a12(r133,l0) a43(r121,l0) a54(r122,l0) a61(r116,l0) a62(r147,l0) a63(r146,l0) a64(r145,l0) a57(r150,l0) a60(r149,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a43(r121,l0) conflicts: a5(r110,l0) a2(r172,l0) a3(r115,l0) a4(r114,l0) a6(r82,l0) a0(r129,l0) a11(r132,l0) a12(r133,l0) a42(r118,l0) a54(r122,l0) a61(r116,l0) a62(r147,l0) a63(r146,l0) a64(r145,l0) a57(r150,l0) a60(r149,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a54(r122,l0) conflicts: a2(r172,l0) a3(r115,l0) a4(r114,l0) a6(r82,l0) a0(r129,l0) a11(r132,l0) a12(r133,l0) a42(r118,l0) a43(r121,l0) a61(r116,l0) a57(r150,l0) a60(r149,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a55(r187,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a56(r99,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a57(r150,l0) conflicts: a2(r172,l0) a3(r115,l0) a4(r114,l0) a6(r82,l0) a0(r129,l0) a11(r132,l0) a12(r133,l0) a42(r118,l0) a43(r121,l0) a54(r122,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a58(r186,l0) conflicts: a59(r185,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a59(r185,l0) conflicts: a58(r186,l0)
;;     total conflict hard regs: 21
;;     conflict hard regs: 21

;; a60(r149,l0) conflicts: a2(r172,l0) a3(r115,l0) a4(r114,l0) a6(r82,l0) a0(r129,l0) a11(r132,l0) a12(r133,l0) a42(r118,l0) a43(r121,l0) a54(r122,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a61(r116,l0) conflicts: a2(r172,l0) a3(r115,l0) a4(r114,l0) a6(r82,l0) a0(r129,l0) a11(r132,l0) a12(r133,l0) a42(r118,l0) a43(r121,l0) a54(r122,l0) a62(r147,l0) a63(r146,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a62(r147,l0) conflicts: a2(r172,l0) a3(r115,l0) a4(r114,l0) a6(r82,l0) a0(r129,l0) a11(r132,l0) a12(r133,l0) a42(r118,l0) a43(r121,l0) a61(r116,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a63(r146,l0) conflicts: a2(r172,l0) a3(r115,l0) a4(r114,l0) a6(r82,l0) a0(r129,l0) a11(r132,l0) a12(r133,l0) a42(r118,l0) a43(r121,l0) a61(r116,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a64(r145,l0) conflicts: a2(r172,l0) a3(r115,l0) a4(r114,l0) a6(r82,l0) a0(r129,l0) a11(r132,l0) a12(r133,l0) a42(r118,l0) a43(r121,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a71(r112,l0) conflicts: a0(r129,l0) a11(r132,l0) a12(r133,l0) a13(r113,l0) a14(r124,l0) a16(r111,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a72(r183,l0) conflicts: a0(r129,l0) a11(r132,l0) a12(r133,l0) a13(r113,l0) a14(r124,l0) a16(r111,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a57(r150)<->a60(r149)@37:shuffle
  cp1:a5(r110)<->a64(r145)@890:constraint
  cp2:a61(r116)<->a64(r145)@111:shuffle
  cp3:a62(r147)<->a63(r146)@111:shuffle
  cp4:a0(r129)<->a7(r184)@13:move
  cp5:a71(r112)<->a72(r183)@109:move
  cp6:a14(r124)<->a15(r87)@1:shuffle
  cp7:a0(r129)<->a18(r182)@13:move
  cp8:a23(r134)<->a24(r178)@13:move
  cp9:a19(r140)<->a21(r180)@13:move
  cp10:a27(r119)<->a28(r176)@13:move
  cp11:a25(r84)<->a26(r177)@13:move
  cp12:a17(r130)<->a32(r173)@68:move
  cp13:a11(r132)<->a31(r174)@68:move
  cp14:a12(r133)<->a30(r175)@68:move
  pref0:a55(r187)<-hr20@880
  pref1:a59(r185)<-hr20@453
  pref2:a7(r184)<-hr0@19
  pref3:a72(r183)<-hr0@163
  pref4:a18(r182)<-hr0@19
  pref5:a21(r180)<-hr20@19
  pref6:a24(r178)<-hr20@19
  pref7:a26(r177)<-hr20@19
  pref8:a28(r176)<-hr20@19
  pref9:a30(r175)<-hr2@102
  pref10:a31(r174)<-hr1@102
  pref11:a32(r173)<-hr5@102
  pref12:a8(r144)<-hr5@19
  pref13:a9(r143)<-hr4@19
  pref14:a10(r142)<-hr1@19
  pref15:a19(r140)<-hr20@19
  pref16:a23(r134)<-hr20@19
  pref17:a0(r129)<-hr0@60
  pref18:a27(r119)<-hr20@19
  pref19:a71(r112)<-hr4@163
  pref20:a56(r99)<-hr20@1333
  pref21:a25(r84)<-hr20@19
  pref22:a6(r82)<-hr5@39
  pref23:a22(r179)<-hr21@52
  pref24:a20(r181)<-hr21@52
  pref25:a58(r186)<-hr21@604
  regions=4, blocks=31, points=92
    allocnos=73 (big 0), copies=15, conflicts=0, ranges=93

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 30 29 28 27 26 24 25 23 22 21 20 19 18 16 17 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r129 1r120 2r172 3r115 4r114 5r110 6r82 7r184 8r144 9r143 10r142 11r132 12r133 13r113 14r124 15r87 16r111 17r130 18r182 19r140 20r181 21r180 22r179 23r134 24r178 25r84 26r177 27r119 28r176 29r83 30r175 31r174 32r173 42r118 43r121 54r122 55r187 56r99 57r150 58r186 59r185 60r149 61r116 62r147 63r146 64r145 71r112 72r183
    modified regnos: 82 83 84 87 99 110 111 112 113 114 115 116 118 119 120 121 122 124 129 130 132 133 134 140 142 143 144 145 146 147 149 150 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187
    border:
    Pressure: GENERAL_REGS=11 SSE_REGS=2
 Removing pref17:hr0@60
 Removing pref22:hr5@39
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 20-27 44-51)@70884
          2:( 20 22-27 44-51)@13452
        3:( 0-6 36-43)@212046
          4:( 0 2-6 36-43)@5450
            5:( 0 3-6 36-43)@3945
              6:( 3 4 6 36-43)@1788
                7:( 3 6 36-43)@32917
                  8:( 3 6 40-43)@74208
      Allocno a0r129 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0-2 4 5 7-35 44-74)
      Allocno a1r120 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a2r172 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  7-35 44-74)
      Allocno a3r115 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  7-35 44-74)
      Allocno a4r114 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  7-35 44-74)
      Allocno a5r110 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a6r82 of GENERAL_REGS(15) has 10 avail. regs  3 6 36-43, node:  3 6 36-43 (confl regs =  0-2 4 5 7-35 44-74)
      Allocno a7r184 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a8r144 of GENERAL_REGS(15) has 12 avail. regs  0 3 5 6 36-43, ^node:  0 3-6 36-43 (confl regs =  1 2 4 7-35 44-74)
      Allocno a9r143 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 36-43, node:  0 3-6 36-43 (confl regs =  1 2 7-35 44-74)
      Allocno a10r142 of GENERAL_REGS(15) has 14 avail. regs  0 1 3-6 36-43, ^node:  0-6 36-43 (confl regs =  2 7-35 44-74)
      Allocno a11r132 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0-2 4 5 7-35 44-74)
      Allocno a12r133 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0-2 4 5 7-35 44-74)
      Allocno a13r113 of GENERAL_REGS(15) has 10 avail. regs  3 6 36-43, node:  3 6 36-43 (confl regs =  0-2 4 5 7-35 44-74)
      Allocno a14r124 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0-2 4 5 7-35 44-74)
      Allocno a15r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a16r111 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0-2 4 5 7-35 44-74)
      Allocno a17r130 of GENERAL_REGS(15) has 11 avail. regs  3 4 6 36-43, node:  3 4 6 36-43 (confl regs =  0-2 5 7-35 44-74)
      Allocno a18r182 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a19r140 of SSE_REGS(16) has 15 avail. regs  20 22-27 44-51, node:  20 22-27 44-51 (confl regs =  0-19 21 28-43 52-74)
      Allocno a20r181 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a21r180 of SSE_REGS(16) has 15 avail. regs  20 22-27 44-51, node:  20 22-27 44-51 (confl regs =  0-19 21 28-43 52-74)
      Allocno a22r179 of SSE_REGS(16) has 15 avail. regs  21-27 44-51, ^node:  20-27 44-51 (confl regs =  0-20 28-43 52-74)
      Allocno a23r134 of SSE_REGS(16) has 15 avail. regs  20 22-27 44-51, node:  20 22-27 44-51 (confl regs =  0-19 21 28-43 52-74)
      Allocno a24r178 of SSE_REGS(16) has 15 avail. regs  20 22-27 44-51, node:  20 22-27 44-51 (confl regs =  0-19 21 28-43 52-74)
      Allocno a25r84 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a26r177 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a27r119 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a28r176 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a29r83 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a30r175 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a31r174 of GENERAL_REGS(15) has 14 avail. regs  0 1 3-6 36-43, ^node:  0-6 36-43 (confl regs =  2 7-35 44-74)
      Allocno a32r173 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 36-43, node:  0 3-6 36-43 (confl regs =  1 2 7-35 44-74)
      Allocno a42r118 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a43r121 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  7-35 44-74)
      Allocno a54r122 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a55r187 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a56r99 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a57r150 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a58r186 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a59r185 of SSE_REGS(16) has 15 avail. regs  20 22-27 44-51, node:  20 22-27 44-51 (confl regs =  0-19 21 28-43 52-74)
      Allocno a60r149 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a61r116 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a62r147 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a63r146 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a64r145 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a71r112 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 36-43, node:  0 2-6 36-43 (confl regs =  1 7-35 44-74)
      Allocno a72r183 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Forming thread by copy 1:a5r110-a64r145 (freq=890):
        Result (freq=4573): a5r110(2793) a64r145(1780)
      Forming thread by copy 2:a61r116-a64r145 (freq=111):
        Result (freq=6655): a61r116(2082) a5r110(2793) a64r145(1780)
      Forming thread by copy 3:a62r147-a63r146 (freq=111):
        Result (freq=4450): a62r147(2670) a63r146(1780)
      Forming thread by copy 5:a71r112-a72r183 (freq=109):
        Result (freq=545): a71r112(327) a72r183(218)
      Forming thread by copy 12:a17r130-a32r173 (freq=68):
        Result (freq=285): a17r130(149) a32r173(136)
      Forming thread by copy 0:a57r150-a60r149 (freq=37):
        Result (freq=1510): a57r150(906) a60r149(604)
      Forming thread by copy 8:a23r134-a24r178 (freq=13):
        Result (freq=52): a23r134(26) a24r178(26)
      Forming thread by copy 9:a19r140-a21r180 (freq=13):
        Result (freq=52): a19r140(26) a21r180(26)
      Forming thread by copy 10:a27r119-a28r176 (freq=13):
        Result (freq=52): a27r119(26) a28r176(26)
      Forming thread by copy 11:a25r84-a26r177 (freq=13):
        Result (freq=52): a25r84(26) a26r177(26)
      Pushing a15(r87,l0)(cost 0)
      Pushing a22(r179,l0)(cost 0)
      Pushing a20(r181,l0)(cost 0)
      Pushing a18(r182,l0)(cost 0)
      Pushing a10(r142,l0)(cost 0)
      Pushing a9(r143,l0)(cost 0)
      Pushing a8(r144,l0)(cost 0)
      Pushing a7(r184,l0)(cost 0)
      Pushing a28(r176,l0)(cost 0)
      Pushing a27(r119,l0)(cost 0)
      Pushing a26(r177,l0)(cost 0)
      Pushing a25(r84,l0)(cost 0)
      Pushing a24(r178,l0)(cost 0)
      Pushing a23(r134,l0)(cost 0)
      Pushing a21(r180,l0)(cost 0)
      Pushing a19(r140,l0)(cost 0)
      Pushing a31(r174,l0)(cost 0)
      Pushing a30(r175,l0)(cost 0)
      Pushing a1(r120,l0)(cost 0)
      Pushing a32(r173,l0)(cost 0)
      Pushing a17(r130,l0)(cost 0)
      Pushing a29(r83,l0)(cost 0)
      Pushing a13(r113,l0)(cost 0)
      Pushing a72(r183,l0)(cost 0)
      Forming thread by copy 6:a14r124-a15r87 (freq=1):
        Result (freq=364): a14r124(339) a15r87(25)
        Making a14(r124,l0) colorable
        Making a16(r111,l0) colorable
      Pushing a16(r111,l0)(cost 909)
      Pushing a14(r124,l0)(cost 2240)
      Pushing a71(r112,l0)(cost 0)
      Pushing a59(r185,l0)(cost 0)
      Pushing a58(r186,l0)(cost 0)
      Pushing a55(r187,l0)(cost 0)
      Pushing a60(r149,l0)(cost 0)
        Making a42(r118,l0) colorable
      Pushing a57(r150,l0)(cost 0)
      Pushing a56(r99,l0)(cost 0)
      Pushing a54(r122,l0)(cost 0)
      Pushing a42(r118,l0)(cost 18367)
      Pushing a63(r146,l0)(cost 0)
      Pushing a62(r147,l0)(cost 0)
        Making a6(r82,l0) colorable
      Pushing a6(r82,l0)(cost 13538)
      Pushing a64(r145,l0)(cost 0)
      Pushing a61(r116,l0)(cost 0)
      Pushing a5(r110,l0)(cost 0)
      Pushing a4(r114,l0)(potential spill: pri=1890, cost=1890)
        Making a2(r172,l0) colorable
        Making a3(r115,l0) colorable
      Forming thread by copy 4:a0r129-a7r184 (freq=13):
        Result (freq=299): a0r129(273) a7r184(26)
      Forming thread by copy 7:a0r129-a18r182 (freq=13):
        Result (freq=325): a0r129(273) a18r182(26) a7r184(26)
        Making a0(r129,l0) colorable
      Forming thread by copy 13:a11r132-a31r174 (freq=68):
        Result (freq=913): a11r132(777) a31r174(136)
        Making a11(r132,l0) colorable
      Forming thread by copy 14:a12r133-a30r175 (freq=68):
        Result (freq=628): a12r133(492) a30r175(136)
        Making a12(r133,l0) colorable
        Making a43(r121,l0) colorable
      Pushing a0(r129,l0)(cost 2452)
      Pushing a12(r133,l0)(cost 3388)
      Pushing a11(r132,l0)(cost 5098)
      Pushing a2(r172,l0)(cost 7230)
      Pushing a3(r115,l0)(cost 6163)
      Pushing a43(r121,l0)(cost 7734)
      Popping a43(r121,l0)  -- assign reg 3
      Popping a3(r115,l0)  -- assign reg 6
      Popping a2(r172,l0)  -- assign reg 40
      Popping a11(r132,l0)  -- assign reg 41
      Popping a12(r133,l0)  -- assign reg 42
      Popping a0(r129,l0)  -- assign reg 43
      Popping a4(r114,l0)  -- spill
      Popping a5(r110,l0)  -- assign reg 0
      Popping a61(r116,l0)  -- assign reg 0
      Popping a64(r145,l0)  -- assign reg 0
      Popping a6(r82,l0)  -- assign reg 36
      Popping a62(r147,l0)  -- assign reg 1
      Popping a63(r146,l0)  -- assign reg 1
      Popping a42(r118,l0)  -- assign reg 2
      Popping a54(r122,l0)  -- assign reg 1
      Popping a56(r99,l0)  -- assign reg 20
      Popping a57(r150,l0)  -- assign reg 0
      Popping a60(r149,l0)  -- assign reg 0
      Popping a55(r187,l0)  -- assign reg 20
      Popping a58(r186,l0)  -- assign reg 21
      Popping a59(r185,l0)  -- assign reg 20
      Popping a71(r112,l0)  -- assign reg 4
      Popping a14(r124,l0)  -- assign reg 3
      Popping a16(r111,l0)  -- assign reg 6
      Popping a72(r183,l0)  -- assign reg 0
      Popping a13(r113,l0)  -- assign reg 40
      Popping a29(r83,l0)  -- assign reg 0
      Popping a17(r130,l0)  -- assign reg 3
      Popping a32(r173,l0)  -- assign reg 5
      Popping a1(r120,l0)  -- assign reg 1
      Popping a30(r175,l0)  -- assign reg 2
      Popping a31(r174,l0)  -- assign reg 1
      Popping a19(r140,l0)  -- assign reg 20
      Popping a21(r180,l0)  -- assign reg 20
      Popping a23(r134,l0)  -- assign reg 20
      Popping a24(r178,l0)  -- assign reg 20
      Popping a25(r84,l0)  -- assign reg 20
      Popping a26(r177,l0)  -- assign reg 20
      Popping a27(r119,l0)  -- assign reg 20
      Popping a28(r176,l0)  -- assign reg 20
      Popping a7(r184,l0)  -- assign reg 0
      Popping a8(r144,l0)  -- assign reg 5
      Popping a9(r143,l0)  -- assign reg 4
      Popping a10(r142,l0)  -- assign reg 1
      Popping a18(r182,l0)  -- assign reg 0
      Popping a20(r181,l0)  -- assign reg 21
      Popping a22(r179,l0)  -- assign reg 21
      Popping a15(r87,l0)  -- assign reg 3
Spilling a0r129 for a6r82
Assigning 43 to a6r82
Spilling a12r133 for a42r118
Assigning 42 to a42r118
Spilling a11r132 for a54r122
Assigning 41 to a54r122
       a0(r129,l0)  -- assign memory
       a12(r133,l0)  -- assign memory
       a11(r132,l0)  -- assign memory
Disposition:
    6:r82  l0    43   29:r83  l0     0   25:r84  l0    20   15:r87  l0     3
   56:r99  l0    20    5:r110 l0     0   16:r111 l0     6   71:r112 l0     4
   13:r113 l0    40    4:r114 l0   mem    3:r115 l0     6   61:r116 l0     0
   42:r118 l0    42   27:r119 l0    20    1:r120 l0     1   43:r121 l0     3
   54:r122 l0    41   14:r124 l0     3    0:r129 l0   mem   17:r130 l0     3
   11:r132 l0   mem   12:r133 l0   mem   23:r134 l0    20   19:r140 l0    20
   10:r142 l0     1    9:r143 l0     4    8:r144 l0     5   64:r145 l0     0
   63:r146 l0     1   62:r147 l0     1   60:r149 l0     0   57:r150 l0     0
    2:r172 l0    40   32:r173 l0     5   31:r174 l0     1   30:r175 l0     2
   28:r176 l0    20   26:r177 l0    20   24:r178 l0    20   22:r179 l0    21
   21:r180 l0    20   20:r181 l0    21   18:r182 l0     0   72:r183 l0     0
    7:r184 l0     0   59:r185 l0    20   58:r186 l0    21   55:r187 l0    20
New iteration of spill/restore move
+++Costs: overall 14483, reg 1113, mem 13370, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


one_arg_math

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags] 20 [xmm0] 21 [xmm1]
;;  ref usage 	r0={15d,5u} r1={18d,5u} r2={17d,4u} r4={18d,4u} r5={21d,8u} r6={1d,30u} r7={1d,43u} r8={13d} r9={13d} r10={13d} r11={13d} r12={13d} r13={13d} r14={13d} r15={13d} r16={1d,29u} r17={42d,16u} r18={13d} r19={1d,30u} r20={20d,12u} r21={17d,6u} r22={14d} r23={14d} r24={14d} r25={14d} r26={14d} r27={14d} r28={13d} r29={13d} r30={13d} r31={13d} r32={13d} r33={13d} r34={13d} r35={13d} r36={14d} r37={14d} r38={13d} r39={13d} r44={13d} r45={13d} r46={13d} r47={13d} r48={13d} r49={13d} r50={13d} r51={13d} r52={13d} r53={13d} r54={13d} r55={13d} r56={13d} r57={13d} r58={13d} r59={13d} r60={13d} r61={13d} r62={13d} r63={13d} r64={13d} r65={13d} r66={13d} r67={13d} r68={13d} r69={13d} r70={13d} r71={13d} r72={13d} r73={13d} r74={13d} r75={13d} r82={1d,15u,2e} r83={1d,5u} r84={1d,1u} r87={1d,2u} r99={1d,3u} r110={3d,5u} r111={1d,5u} r112={1d,3u} r113={2d,5u} r114={1d,3u} r115={3d,8u} r116={1d,4u} r118={3d,8u} r119={1d,2u} r120={2d,4u} r121={1d,2u} r122={1d,2u,2e} r124={2d,2u} r129={5d,6u} r130={1d,2u} r132={1d,3u} r133={1d,3u} r134={1d,1u} r140={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,2u} r149={1d,1u} r150={1d,2u} r172={1d,2u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} 
;;    total ref usage 1326{1008d,314u,4e} in 214{201 regular + 13 call} insns.
(note 1 0 13 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 72990323 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [always]  count:72990323 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 1 [dx] 2 [cx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 1 [dx] 2 [cx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 83 130 132 133 173 174 175
(note 13 1 343 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 343 13 2 2 (set (reg:DI 173)
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_math.c":52:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ arg ])
        (nil)))
(insn 2 343 344 2 (set (reg/v/f:DI 130 [ arg ])
        (reg:DI 173)) "cmodules/fbgc_math.c":52:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 173)
        (nil)))
(insn 344 2 4 2 (set (reg:DI 174)
        (reg:DI 1 dx [ fun ])) "cmodules/fbgc_math.c":52:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ fun ])
        (nil)))
(insn 4 344 345 2 (set (reg/v/f:DI 132 [ fun ])
        (reg:DI 174)) "cmodules/fbgc_math.c":52:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 174)
        (nil)))
(insn 345 4 5 2 (set (reg:DI 175)
        (reg:DI 2 cx [ zfun ])) "cmodules/fbgc_math.c":52:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ zfun ])
        (nil)))
(insn 5 345 6 2 (set (reg/v/f:DI 133 [ zfun ])
        (reg:DI 175)) "cmodules/fbgc_math.c":52:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 175)
        (nil)))
(note 6 5 15 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 15 6 16 2 (debug_marker) "cmodules/fbgc_math.c":53:2 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (reg/v/f:DI 130 [ arg ]) [3 *arg_50(D)+0 S8 A64])) "cmodules/fbgc_math.c":53:12 66 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:QI 83 [ _2 ])
        (mem:QI (reg/f:DI 82 [ _1 ]) [0 _1->type+0 S1 A8])) "cmodules/fbgc_math.c":53:15 69 {*movqi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 83 [ _2 ])
            (const_int 7 [0x7]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (eq (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 160)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (int_list:REG_BR_PROB 214748374 (nil))
 -> 160)
;;  succ:       3 [80.0% (adjusted)]  count:58392258 (estimated locally) (FALLTHRU)
;;              19 [20.0% (adjusted)]  count:14598065 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 17 [flags] 19 [frame] 82 83 130 132 133

;; basic block 3, loop depth 0, count 72990323 (estimated locally), maybe hot
;; Invalid sum of incoming counts 58392258 (estimated locally), should be 72990323 (estimated locally)
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [80.0% (adjusted)]  count:58392258 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(6){ }u12(7){ }u13(16){ }u14(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 17 [flags] 19 [frame] 82 83 130 132 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 17 [flags] 19 [frame]
;; lr  def 	
(note 20 19 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(jump_insn 24 20 25 3 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 402653190 (nil)))
 -> 45)
;;  succ:       4 [62.5% (adjusted)]  count:45618952 (estimated locally) (FALLTHRU)
;;              9 [37.5% (adjusted)]  count:27371371 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 130 132 133

;; basic block 4, loop depth 0, count 72990323 (estimated locally), maybe hot
;; Invalid sum of incoming counts 45618952 (estimated locally), should be 72990323 (estimated locally)
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [62.5% (adjusted)]  count:45618952 (estimated locally) (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(6){ }u17(7){ }u18(16){ }u19(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 132 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  def 	 17 [flags]
(note 25 24 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 25 29 4 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 83 [ _2 ])
            (const_int 4 [0x4]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (nil))
(jump_insn 29 28 30 4 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 536870926 (nil)))
 -> 38)
;;  succ:       5 [50.0% (adjusted)]  count:36495161 (estimated locally) (FALLTHRU)
;;              7 [50.0% (adjusted)]  count:36495162 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 132 133

;; basic block 5, loop depth 0, count 72990323 (estimated locally), maybe hot
;; Invalid sum of incoming counts 36495161 (estimated locally), should be 72990323 (estimated locally)
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [50.0% (adjusted)]  count:36495161 (estimated locally) (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(6){ }u23(7){ }u24(16){ }u25(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  def 	 17 [flags]
(note 30 29 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 30 34 5 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 83 [ _2 ])
            (const_int 2 [0x2]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 83 [ _2 ])
        (nil)))
(jump_insn 34 33 37 5 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 477218590 (nil)))
 -> 52)
;;  succ:       6 [55.6% (adjusted)]  count:40550180 (estimated locally) (FALLTHRU)
;;              11 [44.4% (adjusted)]  count:32440143 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 132

;; basic block 6, loop depth 0, count 40550180 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [55.6% (adjusted)]  count:40550180 (estimated locally) (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u28(6){ }u29(7){ }u30(16){ }u31(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 129
(note 37 34 12 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 12 37 358 6 (set (reg/v/f:DI 129 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":53:2 66 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 358 12 359 6 (set (pc)
        (label_ref 304)) 660 {jump}
     (nil)
 -> 304)
;;  succ:       30 [always]  count:40550180 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 129

(barrier 359 358 38)
;; basic block 7, loop depth 0, count 72990323 (estimated locally), maybe hot
;; Invalid sum of incoming counts 36495162 (estimated locally), should be 72990323 (estimated locally)
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [50.0% (adjusted)]  count:36495162 (estimated locally)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u32(6){ }u33(7){ }u34(16){ }u35(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  def 	 17 [flags]
(code_label 38 359 39 7 41 (nil) [1 uses])
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _2 ])
            (const_int 5 [0x5]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 83 [ _2 ])
        (nil)))
(jump_insn 41 40 44 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 858993454 (nil)))
 -> 67)
;;  succ:       8 [20.0% (adjusted)]  count:14598065 (estimated locally) (FALLTHRU)
;;              12 [80.0% (adjusted)]  count:58392258 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 133

;; basic block 8, loop depth 0, count 14598065 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [20.0% (adjusted)]  count:14598065 (estimated locally) (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u38(6){ }u39(7){ }u40(16){ }u41(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 129
(note 44 41 11 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 11 44 360 8 (set (reg/v/f:DI 129 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":53:2 66 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 360 11 361 8 (set (pc)
        (label_ref 304)) 660 {jump}
     (nil)
 -> 304)
;;  succ:       30 [always]  count:14598065 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 129

(barrier 361 360 45)
;; basic block 9, loop depth 0, count 72990323 (estimated locally), maybe hot
;; Invalid sum of incoming counts 27371371 (estimated locally), should be 72990323 (estimated locally)
;;  prev block 8, next block 10, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [37.5% (adjusted)]  count:27371371 (estimated locally)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u42(6){ }u43(7){ }u44(16){ }u45(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 130 132 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  def 	 17 [flags]
(code_label 45 361 46 9 40 (nil) [1 uses])
(note 46 45 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _2 ])
            (const_int 8 [0x8]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 83 [ _2 ])
        (nil)))
(jump_insn 48 47 51 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 715827886 (nil)))
 -> 96)
;;  succ:       10 [33.3% (adjusted)]  count:24330108 (estimated locally) (FALLTHRU)
;;              13 [66.7% (adjusted)]  count:48660215 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 130 132 133

;; basic block 10, loop depth 0, count 24330108 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (HOT_PARTITION, RTL)
;;  pred:       9 [33.3% (adjusted)]  count:24330108 (estimated locally) (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u48(6){ }u49(7){ }u50(16){ }u51(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 129
(note 51 48 10 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 10 51 362 10 (set (reg/v/f:DI 129 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":53:2 66 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 362 10 363 10 (set (pc)
        (label_ref 304)) 660 {jump}
     (nil)
 -> 304)
;;  succ:       30 [always]  count:24330108 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 129

(barrier 363 362 52)
;; basic block 11, loop depth 0, count 14598065 (estimated locally), maybe hot
;; Invalid sum of incoming counts 32440143 (estimated locally), should be 14598065 (estimated locally)
;;  prev block 10, next block 12, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [44.4% (adjusted)]  count:32440143 (estimated locally)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u52(6){ }u53(7){ }u54(16){ }u55(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 132
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 84 119 176 177
(code_label 52 363 53 11 42 (nil) [1 uses])
(note 53 52 54 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 54 53 55 11 (debug_marker) "cmodules/fbgc_math.c":58:4 -1
     (nil))
(insn 55 54 56 11 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _1 ])) "cmodules/fbgc_math.c":58:19 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 82 [ _1 ])
        (nil)))
(call_insn 56 55 346 11 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f213e3db700 convert_fbgc_object_to_double>) [0 convert_fbgc_object_to_double S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":58:19 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f213e3db700 convert_fbgc_object_to_double>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 346 56 57 11 (set (reg:DF 176)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":58:19 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (nil)))
(insn 57 346 58 11 (set (reg/v:DF 119 [ dbarg ])
        (reg:DF 176)) "cmodules/fbgc_math.c":58:19 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 176)
        (nil)))
(debug_insn 58 57 59 11 (var_location:DF dbarg (reg/v:DF 119 [ dbarg ])) "cmodules/fbgc_math.c":58:19 -1
     (nil))
(debug_insn 59 58 60 11 (debug_marker) "cmodules/fbgc_math.c":59:4 -1
     (nil))
(insn 60 59 61 11 (set (reg:DF 20 xmm0)
        (reg/v:DF 119 [ dbarg ])) "cmodules/fbgc_math.c":59:11 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg/v:DF 119 [ dbarg ])
        (nil)))
(call_insn 61 60 347 11 (set (reg:DF 20 xmm0)
        (call (mem:QI (reg/v/f:DI 132 [ fun ]) [0 *fun_57(D) S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":59:11 677 {*call_value}
     (expr_list:REG_DEAD (reg/v/f:DI 132 [ fun ])
        (expr_list:REG_CALL_DECL (nil)
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 347 61 62 11 (set (reg:DF 177)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":59:11 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (nil)))
(insn 62 347 63 11 (set (reg:DF 84 [ _3 ])
        (reg:DF 177)) "cmodules/fbgc_math.c":59:11 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 177)
        (nil)))
(insn 63 62 64 11 (set (reg:DF 20 xmm0)
        (reg:DF 84 [ _3 ])) "cmodules/fbgc_math.c":59:11 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 84 [ _3 ])
        (nil)))
(call_insn/j 64 63 65 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f213e3e6d00 new_fbgc_double_object>) [0 new_fbgc_double_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":59:11 681 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f213e3e6d00 new_fbgc_double_object>)
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
;;  succ:       EXIT [always]  count:14598065 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 65 64 67)
;; basic block 12, loop depth 0, count 14598065 (estimated locally), maybe hot
;; Invalid sum of incoming counts 58392258 (estimated locally), should be 14598065 (estimated locally)
;;  prev block 11, next block 13, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [80.0% (adjusted)]  count:58392258 (estimated locally)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u69(6){ }u70(7){ }u71(16){ }u72(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 133
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 134 140 178 179 180 181
(code_label 67 65 68 12 44 (nil) [1 uses])
(note 68 67 69 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 69 68 70 12 (debug_marker) "cmodules/fbgc_math.c":63:4 -1
     (nil))
(insn 70 69 71 12 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _1 ])) "cmodules/fbgc_math.c":63:27 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 82 [ _1 ])
        (nil)))
(call_insn 71 70 348 12 (set (parallel:TI [
                (expr_list:REG_DEP_TRUE (reg:DF 20 xmm0)
                    (const_int 0 [0]))
                (expr_list:REG_DEP_TRUE (reg:DF 21 xmm1)
                    (const_int 8 [0x8]))
            ])
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_complex") [flags 0x41]  <function_decl 0x7f213e3db800 convert_fbgc_object_to_complex>) [0 convert_fbgc_object_to_complex S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":63:27 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_complex") [flags 0x41]  <function_decl 0x7f213e3db800 convert_fbgc_object_to_complex>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 348 71 72 12 (set (reg:DF 178)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":63:27 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (nil)))
(insn 72 348 349 12 (set (reg:DF 134)
        (reg:DF 178)) "cmodules/fbgc_math.c":63:27 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 178)
        (nil)))
(insn 349 72 73 12 (set (reg:DF 179)
        (reg:DF 21 xmm1)) "cmodules/fbgc_math.c":63:27 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm1)
        (nil)))
(note 73 349 77 12 NOTE_INSN_DELETED)
(debug_insn 77 73 82 12 (debug_marker) "cmodules/fbgc_math.c":64:4 -1
     (nil))
(insn 82 77 83 12 (set (reg:DF 20 xmm0)
        (reg:DF 134)) "cmodules/fbgc_math.c":64:9 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 134)
        (nil)))
(insn 83 82 84 12 (set (reg:DF 21 xmm1)
        (reg:DF 179)) "cmodules/fbgc_math.c":64:9 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 179)
        (nil)))
(call_insn 84 83 350 12 (set (parallel:TI [
                (expr_list:REG_DEP_TRUE (reg:DF 20 xmm0)
                    (const_int 0 [0]))
                (expr_list:REG_DEP_TRUE (reg:DF 21 xmm1)
                    (const_int 8 [0x8]))
            ])
        (call (mem:QI (reg/v/f:DI 133 [ zfun ]) [0 *zfun_58(D) S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":64:9 677 {*call_value}
     (expr_list:REG_DEAD (reg/v/f:DI 133 [ zfun ])
        (expr_list:REG_CALL_DECL (nil)
            (nil)))
    (expr_list (use (reg:DF 21 xmm1))
        (expr_list (use (reg:DF 20 xmm0))
            (nil))))
(insn 350 84 85 12 (set (reg:DF 180)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":64:9 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (nil)))
(insn 85 350 351 12 (set (reg:DF 140)
        (reg:DF 180)) "cmodules/fbgc_math.c":64:9 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 180)
        (nil)))
(insn 351 85 86 12 (set (reg:DF 181)
        (reg:DF 21 xmm1)) "cmodules/fbgc_math.c":64:9 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm1)
        (nil)))
(note 86 351 90 12 NOTE_INSN_DELETED)
(debug_insn 90 86 91 12 (debug_marker) "cmodules/fbgc_math.c":65:4 -1
     (nil))
(insn 91 90 92 12 (set (reg:DF 21 xmm1)
        (reg:DF 181)) "cmodules/fbgc_math.c":65:11 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 181)
        (nil)))
(insn 92 91 93 12 (set (reg:DF 20 xmm0)
        (reg:DF 140)) "cmodules/fbgc_math.c":65:11 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 140)
        (nil)))
(call_insn/j 93 92 94 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_complex_object") [flags 0x41]  <function_decl 0x7f213e3f0300 new_fbgc_complex_object>) [0 new_fbgc_complex_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":65:11 681 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm1)
        (expr_list:REG_DEAD (reg:DF 20 xmm0)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_complex_object") [flags 0x41]  <function_decl 0x7f213e3f0300 new_fbgc_complex_object>)
                (nil))))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (expr_list:DF (use (reg:DF 21 xmm1))
            (nil))))
;;  succ:       EXIT [always]  count:14598065 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 94 93 96)
;; basic block 13, loop depth 0, count 14598065 (estimated locally), maybe hot
;; Invalid sum of incoming counts 48660215 (estimated locally), should be 14598065 (estimated locally)
;;  prev block 12, next block 14, flags: (HOT_PARTITION, RTL)
;;  pred:       9 [66.7% (adjusted)]  count:48660215 (estimated locally)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u91(6){ }u92(7){ }u93(16){ }u94(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 130 132 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 130
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 87 111 129 182
(code_label 96 94 97 13 45 (nil) [1 uses])
(note 97 96 98 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 98 97 99 13 (debug_marker) "cmodules/fbgc_math.c":69:4 -1
     (nil))
(insn 99 98 100 13 (set (reg/v:SI 111 [ sz ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 13 [0xd])) [5 MEM[(struct fbgc_tuple_object *)_1].size+0 S4 A8])) "cmodules/fbgc_math.c":69:11 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 82 [ _1 ])
        (nil)))
(debug_insn 100 99 101 13 (var_location:SI sz (reg/v:SI 111 [ sz ])) "cmodules/fbgc_math.c":69:11 -1
     (nil))
(debug_insn 101 100 102 13 (debug_marker) "cmodules/fbgc_math.c":70:4 -1
     (nil))
(insn 102 101 103 13 (set (reg:SI 5 di)
        (reg/v:SI 111 [ sz ])) "cmodules/fbgc_math.c":70:34 67 {*movsi_internal}
     (nil))
(call_insn 103 102 352 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f213e3fec00 new_fbgc_tuple_object>) [0 new_fbgc_tuple_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":70:34 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f213e3fec00 new_fbgc_tuple_object>)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 352 103 104 13 (set (reg:DI 182)
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":70:34 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 104 352 105 13 (set (reg/v/f:DI 129 [ <retval> ])
        (reg:DI 182)) "cmodules/fbgc_math.c":70:34 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 182)
        (nil)))
(debug_insn 105 104 106 13 (var_location:DI res_tp (reg/v/f:DI 129 [ <retval> ])) "cmodules/fbgc_math.c":70:34 -1
     (nil))
(debug_insn 106 105 107 13 (debug_marker) "cmodules/fbgc_math.c":71:4 -1
     (nil))
(insn 107 106 108 13 (set (mem:SI (plus:DI (reg/v/f:DI 129 [ <retval> ])
                (const_int 13 [0xd])) [5 MEM[(struct fbgc_tuple_object *)res_tp_53].size+0 S4 A8])
        (reg/v:SI 111 [ sz ])) "cmodules/fbgc_math.c":71:35 67 {*movsi_internal}
     (nil))
(debug_insn 108 107 109 13 (debug_marker) "cmodules/fbgc_math.c":72:4 -1
     (nil))
(insn 109 108 110 13 (set (reg/f:DI 87 [ _6 ])
        (mem/f:DI (reg/v/f:DI 130 [ arg ]) [3 *arg_50(D)+0 S8 A64])) "cmodules/fbgc_math.c":72:39 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 130 [ arg ])
        (nil)))
(debug_insn 110 109 111 13 (var_location:DI D#28 (plus:DI (reg/f:DI 87 [ _6 ])
        (const_int 17 [0x11]))) "cmodules/fbgc_math.c":72:26 -1
     (nil))
(debug_insn 111 110 112 13 (var_location:DI tp_content (debug_expr:DI D#28)) "cmodules/fbgc_math.c":72:26 -1
     (nil))
(debug_insn 112 111 113 13 (debug_marker) "cmodules/fbgc_math.c":72:67 -1
     (nil))
(debug_insn 113 112 114 13 (debug_marker) "cmodules/fbgc_math.c":74:4 -1
     (nil))
(debug_insn 114 113 115 13 (debug_marker) "cmodules/fbgc_math.c":74:8 -1
     (nil))
(debug_insn 115 114 116 13 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 116 115 117 13 (debug_marker) "cmodules/fbgc_math.c":74:22 -1
     (nil))
(insn 117 116 118 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 111 [ sz ])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":74:4 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 118 117 119 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 304)
            (pc))) "cmodules/fbgc_math.c":74:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 304)
;;  succ:       14 [89.0% (guessed)]  count:12992278 (estimated locally) (FALLTHRU)
;;              30 [11.0% (guessed)]  count:1605787 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 111 129 132 133

;; basic block 14, loop depth 0, count 12992278 (estimated locally), maybe hot
;;  prev block 13, next block 15, flags: (HOT_PARTITION, RTL)
;;  pred:       13 [89.0% (guessed)]  count:12992278 (estimated locally) (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u108(6){ }u109(7){ }u110(16){ }u111(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 111 129 132 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 87
;; lr  def 	 17 [flags] 113 124
(note 119 118 120 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 7 14 (parallel [
            (set (reg:DI 124 [ ivtmp.68 ])
                (plus:DI (reg/f:DI 87 [ _6 ])
                    (const_int 17 [0x11])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _6 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 7 120 154 14 (set (reg/v:SI 113 [ i ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":74:15 67 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       15 [always]  count:12992278 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 111 113 124 129 132 133

;; basic block 15, loop depth 1, count 117730595 (estimated locally), maybe hot
;;  prev block 14, next block 16, flags: (HOT_PARTITION, RTL)
;;  pred:       14 [always]  count:12992278 (estimated locally) (FALLTHRU)
;;              17 [89.0% (guessed)]  count:104738318 (estimated locally) (DFS_BACK)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u113(6){ }u114(7){ }u115(16){ }u116(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 111 113 124 129 132 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 124 132 133
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 112 183
(code_label 154 7 121 15 47 (nil) [1 uses])
(note 121 154 122 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(debug_insn 122 121 123 15 (var_location:SI i (reg/v:SI 113 [ i ])) -1
     (nil))
(debug_insn 123 122 124 15 (debug_marker) "cmodules/fbgc_math.c":76:5 -1
     (nil))
(insn 124 123 125 15 (set (reg:DI 2 cx)
        (reg/v/f:DI 133 [ zfun ])) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (nil))
(insn 125 124 126 15 (set (reg:DI 1 dx)
        (reg/v/f:DI 132 [ fun ])) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (nil))
(insn 126 125 127 15 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "cmodules/fbgc_math.c":76:35 67 {*movsi_internal}
     (nil))
(insn 127 126 128 15 (set (reg:DI 5 di)
        (reg:DI 124 [ ivtmp.68 ])) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (nil))
(call_insn 128 127 353 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("one_arg_math") [flags 0x3]  <function_decl 0x7f213dfac000 one_arg_math>) [0 one_arg_math S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":76:35 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("one_arg_math") [flags 0x3]  <function_decl 0x7f213dfac000 one_arg_math>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 353 128 129 15 (set (reg:DI 183)
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 129 353 130 15 (set (reg/v/f:DI 112 [ result ])
        (reg:DI 183)) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 183)
        (nil)))
(debug_insn 130 129 131 15 (var_location:DI result (reg/v/f:DI 112 [ result ])) "cmodules/fbgc_math.c":76:35 -1
     (nil))
(debug_insn 131 130 132 15 (debug_marker) "cmodules/fbgc_math.c":77:5 -1
     (nil))
(insn 132 131 133 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 112 [ result ])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":77:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 133 132 134 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 142)
            (pc))) "cmodules/fbgc_math.c":77:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 142)
;;  succ:       17 [100.0% (guessed)]  count:117683503 (estimated locally)
;;              16 [0.0% (guessed)]  count:47092 (estimated locally) (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 111 112 113 124 129 132 133

;; basic block 16, loop depth 0, count 47092 (estimated locally)
;;  prev block 15, next block 17, flags: (HOT_PARTITION, RTL)
;;  pred:       15 [0.0% (guessed)]  count:47092 (estimated locally) (FALLTHRU,LOOP_EXIT)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u130(6){ }u131(7){ }u132(16){ }u133(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 134 133 135 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(debug_insn 135 134 136 16 (debug_marker) "cmodules/fbgc_math.c":77:5 -1
     (nil))
(insn 136 135 137 16 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.5776") [flags 0x2]  <var_decl 0x7f213dfa6990 __PRETTY_FUNCTION__>)) "cmodules/fbgc_math.c":77:5 66 {*movdi_internal}
     (nil))
(insn 137 136 138 16 (set (reg:SI 1 dx)
        (const_int 77 [0x4d])) "cmodules/fbgc_math.c":77:5 67 {*movsi_internal}
     (nil))
(insn 138 137 139 16 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f213e0b5900 *.LC9>)) "cmodules/fbgc_math.c":77:5 66 {*movdi_internal}
     (nil))
(insn 139 138 140 16 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f213e0b5990 *.LC10>)) "cmodules/fbgc_math.c":77:5 66 {*movdi_internal}
     (nil))
(call_insn 140 139 141 16 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f213e2a1c00 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_math.c":77:5 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f213e2a1c00 __assert_fail>)
                        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                            (expr_list:REG_NORETURN (const_int 0 [0])
                                (expr_list:REG_EH_REGION (const_int 0 [0])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 141 140 142)
;; basic block 17, loop depth 1, count 117683503 (estimated locally), maybe hot
;;  prev block 16, next block 18, flags: (HOT_PARTITION, RTL)
;;  pred:       15 [100.0% (guessed)]  count:117683503 (estimated locally)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u139(6){ }u140(7){ }u141(16){ }u142(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 111 112 113 124 129 132 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 111 112 113 124 129
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 113 124
(code_label 142 141 143 17 46 (nil) [1 uses])
(note 143 142 144 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(debug_insn 144 143 145 17 (debug_marker) "cmodules/fbgc_math.c":78:5 -1
     (nil))
(insn 145 144 146 17 (set (reg:SI 1 dx)
        (reg/v:SI 113 [ i ])) "cmodules/fbgc_math.c":78:5 67 {*movsi_internal}
     (nil))
(insn 146 145 147 17 (set (reg:DI 4 si)
        (reg/v/f:DI 112 [ result ])) "cmodules/fbgc_math.c":78:5 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 112 [ result ])
        (nil)))
(insn 147 146 148 17 (set (reg:DI 5 di)
        (reg/v/f:DI 129 [ <retval> ])) "cmodules/fbgc_math.c":78:5 66 {*movdi_internal}
     (nil))
(call_insn 148 147 149 17 (call (mem:QI (symbol_ref:DI ("set_object_in_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f213e3fee00 set_object_in_fbgc_tuple_object>) [0 set_object_in_fbgc_tuple_object S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_math.c":78:5 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("set_object_in_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f213e3fee00 set_object_in_fbgc_tuple_object>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(debug_insn 149 148 150 17 (debug_marker) "cmodules/fbgc_math.c":74:31 -1
     (nil))
(insn 150 149 151 17 (parallel [
            (set (reg/v:SI 113 [ i ])
                (plus:SI (reg/v:SI 113 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":74:31 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 151 150 152 17 (var_location:SI i (reg/v:SI 113 [ i ])) -1
     (nil))
(debug_insn 152 151 153 17 (debug_marker) "cmodules/fbgc_math.c":74:22 -1
     (nil))
(insn 153 152 155 17 (parallel [
            (set (reg:DI 124 [ ivtmp.68 ])
                (plus:DI (reg:DI 124 [ ivtmp.68 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 155 153 156 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 111 [ sz ])
            (reg/v:SI 113 [ i ]))) "cmodules/fbgc_math.c":74:4 11 {*cmpsi_1}
     (nil))
(jump_insn 156 155 364 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 154)
            (pc))) "cmodules/fbgc_math.c":74:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 154)
;;  succ:       15 [89.0% (guessed)]  count:104738318 (estimated locally) (DFS_BACK)
;;              18 [11.0% (guessed)]  count:12945185 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 111 113 124 129 132 133

;; basic block 18, loop depth 0, count 12945185 (estimated locally), maybe hot
;;  prev block 17, next block 19, flags: (HOT_PARTITION, RTL)
;;  pred:       17 [11.0% (guessed)]  count:12945185 (estimated locally) (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 129
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 364 156 365 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(jump_insn 365 364 366 18 (set (pc)
        (label_ref 304)) 660 {jump}
     (nil)
 -> 304)
;;  succ:       30 [always]  count:12945185 (estimated locally) (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 129

(barrier 366 365 160)
;; basic block 19, loop depth 0, count 14598065 (estimated locally), maybe hot
;;  prev block 18, next block 20, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [20.0% (adjusted)]  count:14598065 (estimated locally)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u156(6){ }u157(7){ }u158(16){ }u159(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 132 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 110 114 115 120 129 142 143 144 172 184
(code_label 160 366 161 19 39 (nil) [1 uses])
(note 161 160 162 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(debug_insn 162 161 163 19 (debug_marker) "cmodules/fbgc_math.c":84:4 -1
     (nil))
(debug_insn 163 162 164 19 (var_location:DI m (reg/f:DI 82 [ _1 ])) "cmodules/fbgc_math.c":84:32 -1
     (nil))
(debug_insn 164 163 165 19 (debug_marker) "cmodules/fbgc_math.c":85:4 -1
     (nil))
(insn 165 164 166 19 (set (reg:SI 142 [ MEM[(struct fbgc_matrix_object *)_1].column ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 14 [0xe])) [5 MEM[(struct fbgc_matrix_object *)_1].column+0 S4 A8])) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 14 [0xe])) [5 MEM[(struct fbgc_matrix_object *)_1].column+0 S4 A8])
        (nil)))
(insn 166 165 167 19 (set (reg:SI 143 [ MEM[(struct fbgc_matrix_object *)_1].row ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 10 [0xa])) [5 MEM[(struct fbgc_matrix_object *)_1].row+0 S4 A8])) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 10 [0xa])) [5 MEM[(struct fbgc_matrix_object *)_1].row+0 S4 A8])
        (nil)))
(insn 167 166 168 19 (set (reg:SI 144 [ MEM[(struct fbgc_matrix_object *)_1].sub_type ])
        (zero_extend:SI (mem:QI (plus:DI (reg/f:DI 82 [ _1 ])
                    (const_int 9 [0x9])) [0 MEM[(struct fbgc_matrix_object *)_1].sub_type+0 S1 A8]))) "cmodules/fbgc_math.c":85:33 119 {*zero_extendqisi2}
     (nil))
(insn 168 167 169 19 (set (reg:SI 2 cx)
        (const_int 10 [0xa])) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (nil))
(insn 169 168 170 19 (set (reg:SI 1 dx)
        (reg:SI 142 [ MEM[(struct fbgc_matrix_object *)_1].column ])) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 142 [ MEM[(struct fbgc_matrix_object *)_1].column ])
        (nil)))
(insn 170 169 171 19 (set (reg:SI 4 si)
        (reg:SI 143 [ MEM[(struct fbgc_matrix_object *)_1].row ])) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 143 [ MEM[(struct fbgc_matrix_object *)_1].row ])
        (nil)))
(insn 171 170 172 19 (set (reg:SI 5 di)
        (reg:SI 144 [ MEM[(struct fbgc_matrix_object *)_1].sub_type ])) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 144 [ MEM[(struct fbgc_matrix_object *)_1].sub_type ])
        (nil)))
(call_insn 172 171 354 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_matrix_object") [flags 0x41]  <function_decl 0x7f213e3fe100 new_fbgc_matrix_object>) [0 new_fbgc_matrix_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":85:33 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_matrix_object") [flags 0x41]  <function_decl 0x7f213e3fe100 new_fbgc_matrix_object>)
                        (nil))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 354 172 173 19 (set (reg:DI 184)
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":85:33 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 173 354 174 19 (set (reg/v/f:DI 129 [ <retval> ])
        (reg:DI 184)) "cmodules/fbgc_math.c":85:33 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 184)
        (nil)))
(debug_insn 174 173 175 19 (var_location:DI res_m (reg/v/f:DI 129 [ <retval> ])) "cmodules/fbgc_math.c":85:33 -1
     (nil))
(debug_insn 175 174 176 19 (debug_marker) "cmodules/fbgc_math.c":87:4 -1
     (nil))
(insn 176 175 177 19 (set (reg:SI 120 [ prephitmp_109 ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 10 [0xa])) [5 MEM[(struct fbgc_matrix_object *)_1].row+0 S4 A8])) "cmodules/fbgc_math.c":87:17 67 {*movsi_internal}
     (nil))
(insn 177 176 178 19 (set (reg:SI 110 [ _38 ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 14 [0xe])) [5 MEM[(struct fbgc_matrix_object *)_1].column+0 S4 A8])) "cmodules/fbgc_math.c":87:24 67 {*movsi_internal}
     (nil))
(insn 178 177 179 19 (parallel [
            (set (reg/v:SI 114 [ rc ])
                (mult:SI (reg:SI 120 [ prephitmp_109 ])
                    (reg:SI 110 [ _38 ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":87:11 317 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 179 178 180 19 (var_location:SI rc (reg/v:SI 114 [ rc ])) "cmodules/fbgc_math.c":87:11 -1
     (nil))
(debug_insn 180 179 181 19 (debug_marker) "cmodules/fbgc_math.c":89:4 -1
     (nil))
(debug_insn 181 180 182 19 (debug_marker) "cmodules/fbgc_math.c":91:4 -1
     (nil))
(debug_insn 182 181 183 19 (debug_marker) "cmodules/fbgc_math.c":91:8 -1
     (nil))
(debug_insn 183 182 184 19 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 184 183 9 19 (debug_marker) "cmodules/fbgc_math.c":91:22 -1
     (nil))
(insn 9 184 192 19 (set (reg/v:SI 115 [ i ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":91:15 67 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 192 9 185 19 (parallel [
            (set (reg/f:DI 172 [ pretmp_139 ])
                (plus:DI (reg/v/f:DI 129 [ <retval> ])
                    (const_int 14 [0xe])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 185 192 186 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120 [ prephitmp_109 ])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":91:4 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 186 185 367 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 278)
            (pc))) "cmodules/fbgc_math.c":91:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 278)
;;  succ:       28 [89.0% (guessed)]  count:12992278 (estimated locally)
;;              20 [11.0% (guessed)]  count:1605787 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 110 114 115 120 129 132 133 172

;; basic block 20, loop depth 0, count 1605787 (estimated locally), maybe hot
;;  prev block 19, next block 21, flags: (HOT_PARTITION, RTL)
;;  pred:       19 [11.0% (guessed)]  count:1605787 (estimated locally) (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 129
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 367 186 368 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(jump_insn 368 367 369 20 (set (pc)
        (label_ref 304)) 660 {jump}
     (nil)
 -> 304)
;;  succ:       30 [always]  count:1605787 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 129

(barrier 369 368 283)
;; basic block 21, loop depth 1, count 105119326 (estimated locally), maybe hot
;;  prev block 20, next block 22, flags: (HOT_PARTITION, RTL)
;;  pred:       28 [99.8% (guessed)]  count:106372132 (estimated locally)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u186(6){ }u187(7){ }u188(16){ }u189(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 110 114 115 129 132 133 172
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82
;; lr  def 	 17 [flags] 118 121
(code_label 283 369 190 21 54 (nil) [1 uses])
(note 190 283 191 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 191 190 8 21 (parallel [
            (set (reg/f:DI 121 [ pretmp_114 ])
                (plus:DI (reg/f:DI 82 [ _1 ])
                    (const_int 14 [0xe])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 191 263 21 (set (reg/v:SI 118 [ j ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":92:16 67 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       22 [always]  count:105119326 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 110 114 115 118 121 129 132 133 172

;; basic block 22, loop depth 2, count 955630223 (estimated locally), maybe hot
;;  prev block 21, next block 23, flags: (HOT_PARTITION, RTL)
;;  pred:       21 [always]  count:105119326 (estimated locally) (FALLTHRU)
;;              25 [89.0% (guessed)]  count:561337193 (estimated locally) (DFS_BACK)
;;              23 [89.0% (guessed)]  count:289173706 (estimated locally) (DFS_BACK)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u191(6){ }u192(7){ }u193(16){ }u194(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 110 114 115 118 121 129 132 133 172
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 110 115 118 121 172
;; lr  def 	 17 [flags] 99 116 122 145 146 147
(code_label 263 8 193 22 53 (nil) [2 uses])
(note 193 263 194 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(debug_insn 194 193 195 22 (var_location:SI j (reg/v:SI 118 [ j ])) -1
     (nil))
(debug_insn 195 194 196 22 (debug_marker) "cmodules/fbgc_math.c":93:6 -1
     (nil))
(insn 196 195 197 22 (parallel [
            (set (reg:SI 145)
                (mult:SI (reg:SI 110 [ _38 ])
                    (reg/v:SI 115 [ i ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":93:23 317 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 110 [ _38 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 197 196 198 22 (parallel [
            (set (reg/v:SI 116 [ index ])
                (plus:SI (reg:SI 145)
                    (reg/v:SI 118 [ j ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":93:13 190 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(debug_insn 198 197 199 22 (var_location:SI index (reg/v:SI 116 [ index ])) "cmodules/fbgc_math.c":93:13 -1
     (nil))
(debug_insn 199 198 200 22 (debug_marker) "cmodules/fbgc_math.c":94:6 -1
     (nil))
(debug_insn 200 199 201 22 (var_location:SI c_index (plus:SI (reg/v:SI 114 [ rc ])
        (reg/v:SI 116 [ index ]))) "cmodules/fbgc_math.c":94:13 -1
     (nil))
(debug_insn 201 200 202 22 (debug_marker) "cmodules/fbgc_math.c":96:6 -1
     (nil))
(insn 202 201 203 22 (set (reg:DI 146 [ index ])
        (zero_extend:DI (reg/v:SI 116 [ index ]))) "cmodules/fbgc_math.c":96:46 114 {*zero_extendsidi2}
     (nil))
(insn 203 202 204 22 (parallel [
            (set (reg:DI 147)
                (ashift:DI (reg:DI 146 [ index ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":96:46 520 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 146 [ index ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(note 204 203 205 22 NOTE_INSN_DELETED)
(insn 205 204 206 22 (set (reg:DF 99 [ _23 ])
        (mem:DF (plus:DI (plus:DI (reg/f:DI 121 [ pretmp_114 ])
                    (reg:DI 147))
                (const_int 4 [0x4])) [2 *_22+0 S8 A64])) "cmodules/fbgc_math.c":96:15 111 {*movdf_internal}
     (nil))
(debug_insn 206 205 207 22 (var_location:DF z$real (reg:DF 99 [ _23 ])) "cmodules/fbgc_math.c":96:13 -1
     (nil))
(debug_insn 207 206 208 22 (debug_marker) "cmodules/fbgc_math.c":97:6 -1
     (nil))
(insn 208 207 209 22 (set (reg/f:DI 122 [ _123 ])
        (plus:DI (plus:DI (reg/f:DI 172 [ pretmp_139 ])
                (reg:DI 147))
            (const_int 4 [0x4]))) 187 {*leadi}
     (expr_list:REG_DEAD (reg:DI 147)
        (nil)))
(insn 209 208 210 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 82 [ _1 ])
                    (const_int 9 [0x9])) [0 MEM[(struct fbgc_matrix_object *)_1].sub_type+0 S1 A8])
            (const_int 5 [0x5]))) "cmodules/fbgc_math.c":97:8 9 {*cmpqi_1}
     (nil))
(jump_insn 210 209 211 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 247)
            (pc))) "cmodules/fbgc_math.c":97:8 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 708669604 (nil)))
 -> 247)
;;  succ:       23 [34.0% (guessed)]  count:324914279 (estimated locally) (FALLTHRU)
;;              25 [66.0% (guessed)]  count:630715944 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 99 114 115 116 118 121 122 129 132 133 172

;; basic block 23, loop depth 2, count 324914276 (estimated locally), maybe hot
;;  prev block 22, next block 24, flags: (HOT_PARTITION, RTL)
;;  pred:       22 [34.0% (guessed)]  count:324914279 (estimated locally) (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u213(6){ }u214(7){ }u215(16){ }u216(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 99 114 115 116 118 121 122 129 132 133 172
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 99 114 116 118 121 122 133 172
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 110 118 149 150 185 186
(note 211 210 212 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(debug_insn 212 211 213 23 (debug_marker) "cmodules/fbgc_math.c":98:7 -1
     (nil))
(note 213 212 214 23 NOTE_INSN_DELETED)
(insn 214 213 215 23 (set (reg:DI 149 [ c_index ])
        (zero_extend:DI (plus:SI (reg/v:SI 114 [ rc ])
                (reg/v:SI 116 [ index ])))) "cmodules/fbgc_math.c":98:47 187 {*leadi}
     (expr_list:REG_DEAD (reg/v:SI 116 [ index ])
        (nil)))
(insn 215 214 218 23 (parallel [
            (set (reg:DI 150)
                (ashift:DI (reg:DI 149 [ c_index ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":98:47 520 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 149 [ c_index ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(debug_insn 218 215 223 23 (debug_marker) "cmodules/fbgc_math.c":99:7 -1
     (nil))
(note 223 218 224 23 NOTE_INSN_DELETED)
(insn 224 223 225 23 (set (reg:DF 20 xmm0)
        (reg:DF 99 [ _23 ])) "cmodules/fbgc_math.c":99:36 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 99 [ _23 ])
        (nil)))
(insn 225 224 226 23 (set (reg:DF 21 xmm1)
        (mem:DF (plus:DI (plus:DI (reg/f:DI 121 [ pretmp_114 ])
                    (reg:DI 150))
                (const_int 4 [0x4])) [2 *_28+0 S8 A64])) "cmodules/fbgc_math.c":99:36 111 {*movdf_internal}
     (nil))
(call_insn 226 225 355 23 (set (parallel:TI [
                (expr_list:REG_DEP_TRUE (reg:DF 20 xmm0)
                    (const_int 0 [0]))
                (expr_list:REG_DEP_TRUE (reg:DF 21 xmm1)
                    (const_int 8 [0x8]))
            ])
        (call (mem:QI (reg/v/f:DI 133 [ zfun ]) [0 *zfun_58(D) S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":99:36 677 {*call_value}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list (use (reg:DF 21 xmm1))
        (expr_list (use (reg:DF 20 xmm0))
            (nil))))
(insn 355 226 227 23 (set (reg:DF 185)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":99:36 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (expr_list:REG_EQUIV (mem:DF (reg/f:DI 122 [ _123 ]) [2 MEM[(double *)_123]+0 S8 A64])
            (nil))))
(note 227 355 356 23 NOTE_INSN_DELETED)
(insn 356 227 228 23 (set (reg:DF 186)
        (reg:DF 21 xmm1)) "cmodules/fbgc_math.c":99:36 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm1)
        (nil)))
(note 228 356 232 23 NOTE_INSN_DELETED)
(debug_insn 232 228 233 23 (debug_marker) "cmodules/fbgc_math.c":100:7 -1
     (nil))
(insn 233 232 234 23 (set (mem:DF (reg/f:DI 122 [ _123 ]) [2 MEM[(double *)_123]+0 S8 A64])
        (reg:DF 185)) "cmodules/fbgc_math.c":100:50 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 185)
        (expr_list:REG_DEAD (reg/f:DI 122 [ _123 ])
            (nil))))
(debug_insn 234 233 235 23 (debug_marker) "cmodules/fbgc_math.c":101:7 -1
     (nil))
(insn 235 234 237 23 (set (mem:DF (plus:DI (plus:DI (reg/f:DI 172 [ pretmp_139 ])
                    (reg:DI 150))
                (const_int 4 [0x4])) [2 *_33+0 S8 A64])
        (reg:DF 186)) "cmodules/fbgc_math.c":101:52 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 186)
        (expr_list:REG_DEAD (reg:DI 150)
            (nil))))
(debug_insn 237 235 238 23 (debug_marker) "cmodules/fbgc_math.c":92:36 -1
     (nil))
(insn 238 237 239 23 (parallel [
            (set (reg/v:SI 118 [ j ])
                (plus:SI (reg/v:SI 118 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":92:36 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 239 238 240 23 (var_location:SI j (reg/v:SI 118 [ j ])) -1
     (nil))
(debug_insn 240 239 241 23 (debug_marker) "cmodules/fbgc_math.c":92:23 -1
     (nil))
(insn 241 240 242 23 (set (reg:SI 110 [ _38 ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 14 [0xe])) [5 MEM[(struct fbgc_matrix_object *)_1].column+0 S4 A8])) "cmodules/fbgc_math.c":92:26 67 {*movsi_internal}
     (nil))
(insn 242 241 243 23 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 118 [ j ])
            (reg:SI 110 [ _38 ]))) "cmodules/fbgc_math.c":92:5 11 {*cmpsi_1}
     (nil))
(jump_insn 243 242 370 23 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 263)
            (pc))) "cmodules/fbgc_math.c":92:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 263)
;;  succ:       22 [89.0% (guessed)]  count:289173706 (estimated locally) (DFS_BACK)
;;              24 [11.0% (guessed)]  count:35740570 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 110 114 115 118 121 129 132 133 172

;; basic block 24, loop depth 1, count 35740570 (estimated locally), maybe hot
;;  prev block 23, next block 25, flags: (HOT_PARTITION, RTL)
;;  pred:       23 [11.0% (guessed)]  count:35740570 (estimated locally) (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 110 114 115 129 132 133 172
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 370 243 371 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(jump_insn 371 370 372 24 (set (pc)
        (label_ref 266)) 660 {jump}
     (nil)
 -> 266)
;;  succ:       26 [always]  count:35740570 (estimated locally) (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 110 114 115 129 132 133 172

(barrier 372 371 247)
;; basic block 25, loop depth 2, count 630715947 (estimated locally), maybe hot
;;  prev block 24, next block 26, flags: (HOT_PARTITION, RTL)
;;  pred:       22 [66.0% (guessed)]  count:630715944 (estimated locally)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u243(6){ }u244(7){ }u245(16){ }u246(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 99 114 115 118 121 122 129 132 133 172
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 99 118 122 132
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 110 118 187
(code_label 247 372 248 25 50 (nil) [1 uses])
(note 248 247 249 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(debug_insn 249 248 250 25 (debug_marker) "cmodules/fbgc_math.c":103:11 -1
     (nil))
(insn 250 249 251 25 (set (reg:DF 20 xmm0)
        (reg:DF 99 [ _23 ])) "cmodules/fbgc_math.c":103:57 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 99 [ _23 ])
        (nil)))
(call_insn 251 250 357 25 (set (reg:DF 20 xmm0)
        (call (mem:QI (reg/v/f:DI 132 [ fun ]) [0 *fun_57(D) S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":103:57 677 {*call_value}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 357 251 252 25 (set (reg:DF 187)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":103:57 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (expr_list:REG_EQUIV (mem:DF (reg/f:DI 122 [ _123 ]) [2 MEM[(double *)_123]+0 S8 A64])
            (nil))))
(note 252 357 253 25 NOTE_INSN_DELETED)
(insn 253 252 254 25 (set (mem:DF (reg/f:DI 122 [ _123 ]) [2 MEM[(double *)_123]+0 S8 A64])
        (reg:DF 187)) "cmodules/fbgc_math.c":103:54 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 187)
        (expr_list:REG_DEAD (reg/f:DI 122 [ _123 ])
            (nil))))
(debug_insn 254 253 255 25 (debug_marker) "cmodules/fbgc_math.c":92:36 -1
     (nil))
(insn 255 254 256 25 (parallel [
            (set (reg/v:SI 118 [ j ])
                (plus:SI (reg/v:SI 118 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":92:36 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 256 255 257 25 (var_location:SI j (reg/v:SI 118 [ j ])) -1
     (nil))
(debug_insn 257 256 258 25 (debug_marker) "cmodules/fbgc_math.c":92:23 -1
     (nil))
(insn 258 257 259 25 (set (reg:SI 110 [ _38 ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 14 [0xe])) [5 MEM[(struct fbgc_matrix_object *)_1].column+0 S4 A8])) "cmodules/fbgc_math.c":92:26 67 {*movsi_internal}
     (nil))
(insn 259 258 260 25 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 110 [ _38 ])
            (reg/v:SI 118 [ j ]))) "cmodules/fbgc_math.c":92:5 11 {*cmpsi_1}
     (nil))
(jump_insn 260 259 266 25 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 263)
            (pc))) "cmodules/fbgc_math.c":92:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 263)
;;  succ:       22 [89.0% (guessed)]  count:561337193 (estimated locally) (DFS_BACK)
;;              26 [11.0% (guessed)]  count:69378754 (estimated locally) (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 110 114 115 118 121 129 132 133 172

;; basic block 26, loop depth 1, count 105119324 (estimated locally), maybe hot
;;  prev block 25, next block 27, flags: (HOT_PARTITION, RTL)
;;  pred:       25 [11.0% (guessed)]  count:69378754 (estimated locally) (FALLTHRU,LOOP_EXIT)
;;              24 [always]  count:35740570 (estimated locally) (LOOP_EXIT)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u260(6){ }u261(7){ }u262(16){ }u263(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 110 114 115 129 132 133 172
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82
;; lr  def 	 120
(code_label 266 260 267 26 52 (nil) [1 uses])
(note 267 266 268 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 291 26 (set (reg:SI 120 [ prephitmp_109 ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 10 [0xa])) [5 MEM[(struct fbgc_matrix_object *)_1].row+0 S4 A8])) 67 {*movsi_internal}
     (nil))
;;  succ:       27 [always]  count:105119324 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 110 114 115 120 129 132 133 172

;; basic block 27, loop depth 1, count 105119325 (estimated locally), maybe hot
;; Invalid sum of incoming counts 116682450 (estimated locally), should be 105119325 (estimated locally)
;;  prev block 26, next block 28, flags: (HOT_PARTITION, RTL)
;;  pred:       26 [always]  count:105119324 (estimated locally) (FALLTHRU)
;;              29 [89.0% (guessed)]  count:11563126 (estimated locally)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u265(6){ }u266(7){ }u267(16){ }u268(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 110 114 115 120 129 132 133 172
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 115 120
;; lr  def 	 17 [flags] 115
(code_label 291 268 269 27 55 (nil) [1 uses])
(note 269 291 270 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(debug_insn 270 269 271 27 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 271 270 272 27 (var_location:SI j (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 272 271 273 27 (debug_marker) "cmodules/fbgc_math.c":91:32 -1
     (nil))
(insn 273 272 274 27 (parallel [
            (set (reg/v:SI 115 [ i ])
                (plus:SI (reg/v:SI 115 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":91:32 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 274 273 275 27 (var_location:SI i (reg/v:SI 115 [ i ])) -1
     (nil))
(debug_insn 275 274 276 27 (debug_marker) "cmodules/fbgc_math.c":91:22 -1
     (nil))
(insn 276 275 277 27 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 115 [ i ])
            (reg:SI 120 [ prephitmp_109 ]))) "cmodules/fbgc_math.c":91:4 11 {*cmpsi_1}
     (nil))
(jump_insn 277 276 278 27 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 304)
            (pc))) "cmodules/fbgc_math.c":91:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 304)
;;  succ:       28 [89.0% (guessed)]  count:93556199 (estimated locally) (FALLTHRU,DFS_BACK)
;;              30 [11.0% (guessed)]  count:11563126 (estimated locally) (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 110 114 115 120 129 132 133 172

;; basic block 28, loop depth 1, count 106548476 (estimated locally), maybe hot
;;  prev block 27, next block 29, flags: (HOT_PARTITION, RTL)
;;  pred:       19 [89.0% (guessed)]  count:12992278 (estimated locally)
;;              27 [89.0% (guessed)]  count:93556199 (estimated locally) (FALLTHRU,DFS_BACK)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u274(6){ }u275(7){ }u276(16){ }u277(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 110 114 115 120 129 132 133 172
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 110
;; lr  def 	 17 [flags]
(code_label 278 277 279 28 48 (nil) [1 uses])
(note 279 278 280 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(debug_insn 280 279 281 28 (var_location:SI i (reg/v:SI 115 [ i ])) -1
     (nil))
(debug_insn 281 280 282 28 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(debug_insn 282 281 284 28 (debug_marker) "cmodules/fbgc_math.c":92:23 -1
     (nil))
(insn 284 282 285 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 110 [ _38 ])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":92:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 285 284 286 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 283)
            (pc))) "cmodules/fbgc_math.c":92:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1071964724 (nil)))
 -> 283)
;;  succ:       21 [99.8% (guessed)]  count:106372132 (estimated locally)
;;              29 [0.2% (guessed)]  count:176344 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 110 114 115 120 129 132 133 172

;; basic block 29, loop depth 1, count 12992276 (estimated locally), maybe hot
;; Invalid sum of incoming counts 176344 (estimated locally), should be 12992276 (estimated locally)
;;  prev block 28, next block 30, flags: (HOT_PARTITION, RTL)
;;  pred:       28 [0.2% (guessed)]  count:176344 (estimated locally) (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u281(6){ }u282(7){ }u283(16){ }u284(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 110 114 115 120 129 132 133 172
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 115 120
;; lr  def 	 17 [flags] 115
(note 286 285 287 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(debug_insn 287 286 288 29 (debug_marker) "cmodules/fbgc_math.c":91:32 -1
     (nil))
(insn 288 287 289 29 (parallel [
            (set (reg/v:SI 115 [ i ])
                (plus:SI (reg/v:SI 115 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":91:32 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 289 288 290 29 (var_location:SI i (reg/v:SI 115 [ i ])) -1
     (nil))
(debug_insn 290 289 292 29 (debug_marker) "cmodules/fbgc_math.c":91:22 -1
     (nil))
(insn 292 290 293 29 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 120 [ prephitmp_109 ])
            (reg/v:SI 115 [ i ]))) "cmodules/fbgc_math.c":91:4 11 {*cmpsi_1}
     (nil))
(jump_insn 293 292 304 29 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) "cmodules/fbgc_math.c":91:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 291)
;;  succ:       27 [89.0% (guessed)]  count:11563126 (estimated locally)
;;              30 [11.0% (guessed)]  count:1429150 (estimated locally) (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 110 114 115 120 129 132 133 172

;; basic block 30, loop depth 0, count 43747099 (estimated locally), maybe hot
;; Invalid sum of incoming counts 108627388 (estimated locally), should be 43747099 (estimated locally)
;;  prev block 29, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       29 [11.0% (guessed)]  count:1429150 (estimated locally) (FALLTHRU,LOOP_EXIT)
;;              27 [11.0% (guessed)]  count:11563126 (estimated locally) (LOOP_EXIT)
;;              6 [always]  count:40550180 (estimated locally)
;;              8 [always]  count:14598065 (estimated locally)
;;              13 [11.0% (guessed)]  count:1605787 (estimated locally)
;;              10 [always]  count:24330108 (estimated locally)
;;              18 [always]  count:12945185 (estimated locally) (LOOP_EXIT)
;;              20 [always]  count:1605787 (estimated locally)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u290(6){ }u291(7){ }u292(16){ }u293(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 129
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 129
;; lr  def 	 0 [ax]
(code_label 304 293 307 30 38 (nil) [7 uses])
(note 307 304 305 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 305 307 306 30 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 129 [ <retval> ])) "cmodules/fbgc_math.c":111:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 129 [ <retval> ])
        (nil)))
(insn 306 305 0 30 (use (reg/i:DI 0 ax)) "cmodules/fbgc_math.c":111:1 -1
     (nil))
;;  succ:       EXIT [always]  count:43747099 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function fbgc_sin (fbgc_sin, funcdef_no=59, decl_uid=5689, cgraph_uid=60, symbol_order=62)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 1 }
rescanning insn with uid = 19.
deleting insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)
Reg 87 uninteresting
Reg 83: def dominates all uses has unique first use
Reg 88 uninteresting
Reg 83 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a1 (r88,l0) best SIREG, allocno SIREG
    a2 (r87,l0) best DIREG, allocno DIREG
    a0 (r83,l0) best DIREG, allocno DIREG

  a0(r83,l0) costs: AREG:766,766 DREG:766,766 CREG:766,766 BREG:766,766 SIREG:766,766 DIREG:-383,-383 AD_REGS:766,766 CLOBBERED_REGS:766,766 Q_REGS:766,766 NON_Q_REGS:766,766 TLS_GOTBASE_REGS:766,766 GENERAL_REGS:766,766 SSE_FIRST_REG:9064,9064 NO_REX_SSE_REGS:9064,9064 SSE_REGS:9064,9064 MMX_REGS:10979,10979 INT_SSE_REGS:10979,10979 ALL_REGS:181196,181196 MEM:3298,3298
  a1(r88,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:-1000,-1000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a2(r87,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:-1000,-1000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000


Pass 1 for finding pseudo/allocno costs

    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:1532,1532 DREG:1532,1532 CREG:1532,1532 BREG:1532,1532 SIREG:1532,1532 DIREG:766,-383 AD_REGS:1532,1532 CLOBBERED_REGS:766,766 Q_REGS:1532,1532 NON_Q_REGS:766,766 TLS_GOTBASE_REGS:766,766 GENERAL_REGS:766,766 SSE_FIRST_REG:14128,14128 NO_REX_SSE_REGS:14128,14128 SSE_REGS:14128,14128 MMX_REGS:21958,21958 INT_SSE_REGS:16979,16979 ALL_REGS:187196,187196 MEM:10596,10596
  a1(r88,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:2000,-1000 DIREG:4000,4000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000
  a2(r87,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:2000,-1000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000

   Insn 31(l0): point = 0
   Insn 30(l0): point = 2
   Insn 22(l0): point = 5
   Insn 21(l0): point = 7
   Insn 20(l0): point = 9
   Insn 19(l0): point = 11
   Insn 17(l0): point = 13
   Insn 10(l0): point = 16
   Insn 9(l0): point = 18
   Insn 34(l0): point = 20
   Insn 2(l0): point = 22
   Insn 33(l0): point = 24
 a0(r83): [8..22]
 a1(r88): [19..20]
 a2(r87): [23..24]
Compressing live ranges: from 27 to 4 - 14%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r88): [0..1]
 a2(r87): [2..3]
+++Allocating 16 bytes for conflict table (uncompressed size 24)
;; a0(r83,l0) conflicts: a1(r88,l0)
;;     total conflict hard regs: 1 2 4
;;     conflict hard regs: 1 2 4

;; a1(r88,l0) conflicts: a0(r83,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r87,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a0(r83)<->a2(r87)@1000:move
  pref0:a1(r88)<-hr4@1500
  pref1:a2(r87)<-hr5@1500
  pref2:a0(r83)<-hr5@574
  regions=1, blocks=5, points=4
    allocnos=3 (big 0), copies=1, conflicts=0, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r83 1r88 2r87
    modified regnos: 83 87 88
    border:
    Pressure: GENERAL_REGS=4
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@36000
          2:( 0-3 5 6 36-43)@36000
            3:( 0 3 5 6 36-43)@21958
      Allocno a0r83 of GENERAL_REGS(15) has 12 avail. regs  0 3 5 6 36-43, node:  0 3 5 6 36-43 (confl regs =  1 2 4 7-35 44-74)
      Allocno a1r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a2r87 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Forming thread by copy 0:a0r83-a2r87 (freq=1000):
        Result (freq=3383): a0r83(1383) a2r87(2000)
      Pushing a1(r88,l0)(cost 0)
      Pushing a0(r83,l0)(cost 0)
      Pushing a2(r87,l0)(cost 0)
      Popping a2(r87,l0)  -- assign reg 5
      Popping a0(r83,l0)  -- assign reg 5
      Popping a1(r88,l0)  -- assign reg 4
Disposition:
    0:r83  l0     5    2:r87  l0     5    1:r88  l0     4
New iteration of spill/restore move
+++Costs: overall -2383, reg -2383, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_sin

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={3d,1u} r4={3d,2u} r5={3d,2u} r6={1d,4u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={2d,1u} r18={1d} r19={1d,4u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={2d} r37={2d} r38={1d} r39={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r83={1d,2u} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 124{95d,29u,0e} in 18{17 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 83 87 88
(note 6 1 33 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 33 6 2 2 (set (reg:DI 87)
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_math.c":120:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ arg ])
        (nil)))
(insn 2 33 34 2 (set (reg/v/f:DI 83 [ arg ])
        (reg:DI 87)) "cmodules/fbgc_math.c":120:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 34 2 3 2 (set (reg:SI 88)
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_math.c":120:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ argc ])
        (nil)))
(note 3 34 4 2 NOTE_INSN_DELETED)
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 4 9 2 (debug_marker) "cmodules/fbgc_math.c":120:1 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88)
            (const_int 1 [0x1]))) "cmodules/fbgc_math.c":120:1 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 88)
        (nil)))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "cmodules/fbgc_math.c":120:1 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 662283964 (nil)))
 -> 25)
;;  succ:       3 [38.3% (guessed)]  count:411457864 (estimated locally) (FALLTHRU)
;;              4 [61.7% (guessed)]  count:662283960 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83

;; basic block 3, loop depth 0, count 411457867 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [38.3% (guessed)]  count:411457864 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 12 11 13 3 (var_location:SI D#12 (const_int 1 [0x1])) -1
     (nil))
(debug_insn 13 12 14 3 (var_location:DI arg (reg/v/f:DI 83 [ arg ])) -1
     (nil))
(debug_insn 14 13 15 3 (debug_marker:BLK) "cmodules/fbgc_math.c":120:1 -1
     (nil))
(debug_insn 15 14 16 3 (var_location:SI D#13 (debug_expr:SI D#12)) -1
     (nil))
(debug_insn 16 15 17 3 (var_location:SI argc (debug_expr:SI D#13)) -1
     (nil))
(insn 17 16 19 3 (set (reg:DI 2 cx)
        (const_int 0 [0])) "cmodules/fbgc_math.c":120:1 66 {*movdi_internal}
     (nil))
(insn 19 17 20 3 (set (reg:DI 1 dx)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7f213e4ba300 sin>)
                    ] UNSPEC_GOTPCREL)) [11  S8 A8])) "cmodules/fbgc_math.c":120:1 66 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7f213e4ba300 sin>)
        (nil)))
(insn 20 19 21 3 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "cmodules/fbgc_math.c":120:1 67 {*movsi_internal}
     (nil))
(insn 21 20 22 3 (set (reg:DI 5 di)
        (reg/v/f:DI 83 [ arg ])) "cmodules/fbgc_math.c":120:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 83 [ arg ])
        (nil)))
(call_insn/j 22 21 23 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("one_arg_math") [flags 0x3]  <function_decl 0x7f213dfac000 one_arg_math>) [0 one_arg_math S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":120:1 681 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("one_arg_math") [flags 0x3]  <function_decl 0x7f213dfac000 one_arg_math>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       EXIT [always]  count:411457867 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 23 22 25)
;; basic block 4, loop depth 0, count 662283957 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [61.7% (guessed)]  count:662283960 (estimated locally)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(6){ }u21(7){ }u22(16){ }u23(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax]
(code_label 25 23 26 4 69 (nil) [1 uses])
(note 26 25 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 26 31 4 (set (reg/i:DI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_math.c":120:1 66 {*movdi_internal}
     (nil))
(insn 31 30 0 4 (use (reg/i:DI 0 ax)) "cmodules/fbgc_math.c":120:1 -1
     (nil))
;;  succ:       EXIT [always]  count:662283957 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function fbgc_tan (fbgc_tan, funcdef_no=61, decl_uid=5697, cgraph_uid=62, symbol_order=66)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 1 }
rescanning insn with uid = 19.
deleting insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)
Reg 87 uninteresting
Reg 83: def dominates all uses has unique first use
Reg 88 uninteresting
Reg 83 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a1 (r88,l0) best SIREG, allocno SIREG
    a2 (r87,l0) best DIREG, allocno DIREG
    a0 (r83,l0) best DIREG, allocno DIREG

  a0(r83,l0) costs: AREG:766,766 DREG:766,766 CREG:766,766 BREG:766,766 SIREG:766,766 DIREG:-383,-383 AD_REGS:766,766 CLOBBERED_REGS:766,766 Q_REGS:766,766 NON_Q_REGS:766,766 TLS_GOTBASE_REGS:766,766 GENERAL_REGS:766,766 SSE_FIRST_REG:9064,9064 NO_REX_SSE_REGS:9064,9064 SSE_REGS:9064,9064 MMX_REGS:10979,10979 INT_SSE_REGS:10979,10979 ALL_REGS:181196,181196 MEM:3298,3298
  a1(r88,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:-1000,-1000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a2(r87,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:-1000,-1000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000


Pass 1 for finding pseudo/allocno costs

    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:1532,1532 DREG:1532,1532 CREG:1532,1532 BREG:1532,1532 SIREG:1532,1532 DIREG:766,-383 AD_REGS:1532,1532 CLOBBERED_REGS:766,766 Q_REGS:1532,1532 NON_Q_REGS:766,766 TLS_GOTBASE_REGS:766,766 GENERAL_REGS:766,766 SSE_FIRST_REG:14128,14128 NO_REX_SSE_REGS:14128,14128 SSE_REGS:14128,14128 MMX_REGS:21958,21958 INT_SSE_REGS:16979,16979 ALL_REGS:187196,187196 MEM:10596,10596
  a1(r88,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:2000,-1000 DIREG:4000,4000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000
  a2(r87,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:2000,-1000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000

   Insn 31(l0): point = 0
   Insn 30(l0): point = 2
   Insn 22(l0): point = 5
   Insn 21(l0): point = 7
   Insn 20(l0): point = 9
   Insn 19(l0): point = 11
   Insn 17(l0): point = 13
   Insn 10(l0): point = 16
   Insn 9(l0): point = 18
   Insn 34(l0): point = 20
   Insn 2(l0): point = 22
   Insn 33(l0): point = 24
 a0(r83): [8..22]
 a1(r88): [19..20]
 a2(r87): [23..24]
Compressing live ranges: from 27 to 4 - 14%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r88): [0..1]
 a2(r87): [2..3]
+++Allocating 16 bytes for conflict table (uncompressed size 24)
;; a0(r83,l0) conflicts: a1(r88,l0)
;;     total conflict hard regs: 1 2 4
;;     conflict hard regs: 1 2 4

;; a1(r88,l0) conflicts: a0(r83,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r87,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a0(r83)<->a2(r87)@1000:move
  pref0:a1(r88)<-hr4@1500
  pref1:a2(r87)<-hr5@1500
  pref2:a0(r83)<-hr5@574
  regions=1, blocks=5, points=4
    allocnos=3 (big 0), copies=1, conflicts=0, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r83 1r88 2r87
    modified regnos: 83 87 88
    border:
    Pressure: GENERAL_REGS=4
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@36000
          2:( 0-3 5 6 36-43)@36000
            3:( 0 3 5 6 36-43)@21958
      Allocno a0r83 of GENERAL_REGS(15) has 12 avail. regs  0 3 5 6 36-43, node:  0 3 5 6 36-43 (confl regs =  1 2 4 7-35 44-74)
      Allocno a1r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a2r87 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Forming thread by copy 0:a0r83-a2r87 (freq=1000):
        Result (freq=3383): a0r83(1383) a2r87(2000)
      Pushing a1(r88,l0)(cost 0)
      Pushing a0(r83,l0)(cost 0)
      Pushing a2(r87,l0)(cost 0)
      Popping a2(r87,l0)  -- assign reg 5
      Popping a0(r83,l0)  -- assign reg 5
      Popping a1(r88,l0)  -- assign reg 4
Disposition:
    0:r83  l0     5    2:r87  l0     5    1:r88  l0     4
New iteration of spill/restore move
+++Costs: overall -2383, reg -2383, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_tan

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={3d,1u} r4={3d,2u} r5={3d,2u} r6={1d,4u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={2d,1u} r18={1d} r19={1d,4u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={2d} r37={2d} r38={1d} r39={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r83={1d,2u} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 124{95d,29u,0e} in 18{17 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 83 87 88
(note 6 1 33 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 33 6 2 2 (set (reg:DI 87)
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_math.c":122:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ arg ])
        (nil)))
(insn 2 33 34 2 (set (reg/v/f:DI 83 [ arg ])
        (reg:DI 87)) "cmodules/fbgc_math.c":122:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 34 2 3 2 (set (reg:SI 88)
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_math.c":122:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ argc ])
        (nil)))
(note 3 34 4 2 NOTE_INSN_DELETED)
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 4 9 2 (debug_marker) "cmodules/fbgc_math.c":122:1 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88)
            (const_int 1 [0x1]))) "cmodules/fbgc_math.c":122:1 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 88)
        (nil)))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "cmodules/fbgc_math.c":122:1 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 662283964 (nil)))
 -> 25)
;;  succ:       3 [38.3% (guessed)]  count:411457864 (estimated locally) (FALLTHRU)
;;              4 [61.7% (guessed)]  count:662283960 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83

;; basic block 3, loop depth 0, count 411457867 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [38.3% (guessed)]  count:411457864 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 12 11 13 3 (var_location:SI D#16 (const_int 1 [0x1])) -1
     (nil))
(debug_insn 13 12 14 3 (var_location:DI arg (reg/v/f:DI 83 [ arg ])) -1
     (nil))
(debug_insn 14 13 15 3 (debug_marker:BLK) "cmodules/fbgc_math.c":122:1 -1
     (nil))
(debug_insn 15 14 16 3 (var_location:SI D#17 (debug_expr:SI D#16)) -1
     (nil))
(debug_insn 16 15 17 3 (var_location:SI argc (debug_expr:SI D#17)) -1
     (nil))
(insn 17 16 19 3 (set (reg:DI 2 cx)
        (const_int 0 [0])) "cmodules/fbgc_math.c":122:1 66 {*movdi_internal}
     (nil))
(insn 19 17 20 3 (set (reg:DI 1 dx)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tan") [flags 0x41]  <function_decl 0x7f213e4bd500 tan>)
                    ] UNSPEC_GOTPCREL)) [11  S8 A8])) "cmodules/fbgc_math.c":122:1 66 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("tan") [flags 0x41]  <function_decl 0x7f213e4bd500 tan>)
        (nil)))
(insn 20 19 21 3 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "cmodules/fbgc_math.c":122:1 67 {*movsi_internal}
     (nil))
(insn 21 20 22 3 (set (reg:DI 5 di)
        (reg/v/f:DI 83 [ arg ])) "cmodules/fbgc_math.c":122:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 83 [ arg ])
        (nil)))
(call_insn/j 22 21 23 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("one_arg_math") [flags 0x3]  <function_decl 0x7f213dfac000 one_arg_math>) [0 one_arg_math S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":122:1 681 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("one_arg_math") [flags 0x3]  <function_decl 0x7f213dfac000 one_arg_math>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       EXIT [always]  count:411457867 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 23 22 25)
;; basic block 4, loop depth 0, count 662283957 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [61.7% (guessed)]  count:662283960 (estimated locally)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(6){ }u21(7){ }u22(16){ }u23(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax]
(code_label 25 23 26 4 72 (nil) [1 uses])
(note 26 25 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 26 31 4 (set (reg/i:DI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_math.c":122:1 66 {*movdi_internal}
     (nil))
(insn 31 30 0 4 (use (reg/i:DI 0 ax)) "cmodules/fbgc_math.c":122:1 -1
     (nil))
;;  succ:       EXIT [always]  count:662283957 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function fbgc_sqrt (fbgc_sqrt, funcdef_no=63, decl_uid=5729, cgraph_uid=64, symbol_order=70)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 1 }
rescanning insn with uid = 19.
deleting insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)
Reg 87 uninteresting
Reg 83: def dominates all uses has unique first use
Reg 88 uninteresting
Reg 83 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a1 (r88,l0) best SIREG, allocno SIREG
    a2 (r87,l0) best DIREG, allocno DIREG
    a0 (r83,l0) best DIREG, allocno DIREG

  a0(r83,l0) costs: AREG:766,766 DREG:766,766 CREG:766,766 BREG:766,766 SIREG:766,766 DIREG:-383,-383 AD_REGS:766,766 CLOBBERED_REGS:766,766 Q_REGS:766,766 NON_Q_REGS:766,766 TLS_GOTBASE_REGS:766,766 GENERAL_REGS:766,766 SSE_FIRST_REG:9064,9064 NO_REX_SSE_REGS:9064,9064 SSE_REGS:9064,9064 MMX_REGS:10979,10979 INT_SSE_REGS:10979,10979 ALL_REGS:181196,181196 MEM:3298,3298
  a1(r88,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:-1000,-1000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a2(r87,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:-1000,-1000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000


Pass 1 for finding pseudo/allocno costs

    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:1532,1532 DREG:1532,1532 CREG:1532,1532 BREG:1532,1532 SIREG:1532,1532 DIREG:766,-383 AD_REGS:1532,1532 CLOBBERED_REGS:766,766 Q_REGS:1532,1532 NON_Q_REGS:766,766 TLS_GOTBASE_REGS:766,766 GENERAL_REGS:766,766 SSE_FIRST_REG:14128,14128 NO_REX_SSE_REGS:14128,14128 SSE_REGS:14128,14128 MMX_REGS:21958,21958 INT_SSE_REGS:16979,16979 ALL_REGS:187196,187196 MEM:10596,10596
  a1(r88,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:2000,-1000 DIREG:4000,4000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000
  a2(r87,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:2000,-1000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000

   Insn 31(l0): point = 0
   Insn 30(l0): point = 2
   Insn 22(l0): point = 5
   Insn 21(l0): point = 7
   Insn 20(l0): point = 9
   Insn 19(l0): point = 11
   Insn 17(l0): point = 13
   Insn 10(l0): point = 16
   Insn 9(l0): point = 18
   Insn 34(l0): point = 20
   Insn 2(l0): point = 22
   Insn 33(l0): point = 24
 a0(r83): [8..22]
 a1(r88): [19..20]
 a2(r87): [23..24]
Compressing live ranges: from 27 to 4 - 14%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r88): [0..1]
 a2(r87): [2..3]
+++Allocating 16 bytes for conflict table (uncompressed size 24)
;; a0(r83,l0) conflicts: a1(r88,l0)
;;     total conflict hard regs: 1 2 4
;;     conflict hard regs: 1 2 4

;; a1(r88,l0) conflicts: a0(r83,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r87,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a0(r83)<->a2(r87)@1000:move
  pref0:a1(r88)<-hr4@1500
  pref1:a2(r87)<-hr5@1500
  pref2:a0(r83)<-hr5@574
  regions=1, blocks=5, points=4
    allocnos=3 (big 0), copies=1, conflicts=0, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r83 1r88 2r87
    modified regnos: 83 87 88
    border:
    Pressure: GENERAL_REGS=4
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@36000
          2:( 0-3 5 6 36-43)@36000
            3:( 0 3 5 6 36-43)@21958
      Allocno a0r83 of GENERAL_REGS(15) has 12 avail. regs  0 3 5 6 36-43, node:  0 3 5 6 36-43 (confl regs =  1 2 4 7-35 44-74)
      Allocno a1r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a2r87 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Forming thread by copy 0:a0r83-a2r87 (freq=1000):
        Result (freq=3383): a0r83(1383) a2r87(2000)
      Pushing a1(r88,l0)(cost 0)
      Pushing a0(r83,l0)(cost 0)
      Pushing a2(r87,l0)(cost 0)
      Popping a2(r87,l0)  -- assign reg 5
      Popping a0(r83,l0)  -- assign reg 5
      Popping a1(r88,l0)  -- assign reg 4
Disposition:
    0:r83  l0     5    2:r87  l0     5    1:r88  l0     4
New iteration of spill/restore move
+++Costs: overall -2383, reg -2383, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_sqrt

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={3d,1u} r4={3d,2u} r5={3d,2u} r6={1d,4u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={2d,1u} r18={1d} r19={1d,4u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={2d} r37={2d} r38={1d} r39={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r83={1d,2u} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 124{95d,29u,0e} in 18{17 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 83 87 88
(note 6 1 33 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 33 6 2 2 (set (reg:DI 87)
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_math.c":124:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ arg ])
        (nil)))
(insn 2 33 34 2 (set (reg/v/f:DI 83 [ arg ])
        (reg:DI 87)) "cmodules/fbgc_math.c":124:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 34 2 3 2 (set (reg:SI 88)
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_math.c":124:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ argc ])
        (nil)))
(note 3 34 4 2 NOTE_INSN_DELETED)
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 4 9 2 (debug_marker) "cmodules/fbgc_math.c":124:1 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88)
            (const_int 1 [0x1]))) "cmodules/fbgc_math.c":124:1 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 88)
        (nil)))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "cmodules/fbgc_math.c":124:1 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 662283964 (nil)))
 -> 25)
;;  succ:       3 [38.3% (guessed)]  count:411457864 (estimated locally) (FALLTHRU)
;;              4 [61.7% (guessed)]  count:662283960 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83

;; basic block 3, loop depth 0, count 411457867 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [38.3% (guessed)]  count:411457864 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 12 11 13 3 (var_location:SI D#20 (const_int 1 [0x1])) -1
     (nil))
(debug_insn 13 12 14 3 (var_location:DI arg (reg/v/f:DI 83 [ arg ])) -1
     (nil))
(debug_insn 14 13 15 3 (debug_marker:BLK) "cmodules/fbgc_math.c":124:1 -1
     (nil))
(debug_insn 15 14 16 3 (var_location:SI D#21 (debug_expr:SI D#20)) -1
     (nil))
(debug_insn 16 15 17 3 (var_location:SI argc (debug_expr:SI D#21)) -1
     (nil))
(insn 17 16 19 3 (set (reg:DI 2 cx)
        (const_int 0 [0])) "cmodules/fbgc_math.c":124:1 66 {*movdi_internal}
     (nil))
(insn 19 17 20 3 (set (reg:DI 1 dx)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7f213e4bc500 sqrt>)
                    ] UNSPEC_GOTPCREL)) [11  S8 A8])) "cmodules/fbgc_math.c":124:1 66 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7f213e4bc500 sqrt>)
        (nil)))
(insn 20 19 21 3 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "cmodules/fbgc_math.c":124:1 67 {*movsi_internal}
     (nil))
(insn 21 20 22 3 (set (reg:DI 5 di)
        (reg/v/f:DI 83 [ arg ])) "cmodules/fbgc_math.c":124:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 83 [ arg ])
        (nil)))
(call_insn/j 22 21 23 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("one_arg_math") [flags 0x3]  <function_decl 0x7f213dfac000 one_arg_math>) [0 one_arg_math S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":124:1 681 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("one_arg_math") [flags 0x3]  <function_decl 0x7f213dfac000 one_arg_math>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       EXIT [always]  count:411457867 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 23 22 25)
;; basic block 4, loop depth 0, count 662283957 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [61.7% (guessed)]  count:662283960 (estimated locally)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(6){ }u21(7){ }u22(16){ }u23(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax]
(code_label 25 23 26 4 75 (nil) [1 uses])
(note 26 25 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 26 31 4 (set (reg/i:DI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_math.c":124:1 66 {*movdi_internal}
     (nil))
(insn 31 30 0 4 (use (reg/i:DI 0 ax)) "cmodules/fbgc_math.c":124:1 -1
     (nil))
;;  succ:       EXIT [always]  count:662283957 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function fbgc_exp (fbgc_exp, funcdef_no=62, decl_uid=5733, cgraph_uid=63, symbol_order=68)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 32 n_edges 47 count 43 (  1.3)
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
;;
;; Loop 3
;;  header 16, latch 18
;;  depth 1, outer 0
;;  nodes: 16 18
;;
;; Loop 1
;;  header 29, latch 28
;;  depth 1, outer 0
;;  nodes: 29 28 27 30 26 25 24 23 22
;;
;; Loop 2
;;  header 23, multiple latches: 26 24
;;  depth 2, outer 1
;;  nodes: 23 26 24
;; 2 succs { 3 31 }
;; 3 succs { 4 20 }
;; 4 succs { 5 10 }
;; 5 succs { 6 8 }
;; 6 succs { 31 7 }
;; 7 succs { 12 }
;; 8 succs { 9 13 }
;; 9 succs { 31 }
;; 10 succs { 11 14 }
;; 11 succs { 31 }
;; 12 succs { 1 }
;; 13 succs { 1 }
;; 14 succs { 15 31 }
;; 15 succs { 16 }
;; 16 succs { 18 17 }
;; 17 succs { }
;; 18 succs { 16 19 }
;; 19 succs { 31 }
;; 20 succs { 29 21 }
;; 21 succs { 31 }
;; 22 succs { 23 }
;; 23 succs { 24 26 }
;; 24 succs { 23 25 }
;; 25 succs { 27 }
;; 26 succs { 23 27 }
;; 27 succs { 28 }
;; 28 succs { 29 31 }
;; 29 succs { 22 30 }
;; 30 succs { 28 31 }
;; 31 succs { 1 }
Will split live ranges of parameters at BB 3
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
;;
;; Loop 3
;;  header 16, latch 18
;;  depth 1, outer 0
;;  nodes: 16 18
;;
;; Loop 1
;;  header 29, latch 28
;;  depth 1, outer 0
;;  nodes: 29 28 27 30 26 25 24 23 22
;;
;; Loop 2
;;  header 23, multiple latches: 26 24
;;  depth 2, outer 1
;;  nodes: 23 26 24
;; 2 succs { 3 31 }
;; 3 succs { 4 20 }
;; 4 succs { 5 10 }
;; 5 succs { 6 8 }
;; 6 succs { 31 7 }
;; 7 succs { 12 }
;; 8 succs { 9 13 }
;; 9 succs { 31 }
;; 10 succs { 11 14 }
;; 11 succs { 31 }
;; 12 succs { 1 }
;; 13 succs { 1 }
;; 14 succs { 15 31 }
;; 15 succs { 16 }
;; 16 succs { 18 17 }
;; 17 succs { }
;; 18 succs { 16 19 }
;; 19 succs { 31 }
;; 20 succs { 29 21 }
;; 21 succs { 31 }
;; 22 succs { 23 }
;; 23 succs { 24 26 }
;; 24 succs { 23 25 }
;; 25 succs { 27 }
;; 26 succs { 23 27 }
;; 27 succs { 28 }
;; 28 succs { 29 31 }
;; 29 succs { 22 30 }
;; 30 succs { 28 31 }
;; 31 succs { 1 }
Adding REG_EQUIV to insn 286 for source of insn 287
Adding REG_EQUIV to insn 289 for source of insn 290
Adding REG_EQUIV to insn 427 for source of insn 307
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 173 uninteresting
Reg 140: def dominates all uses has unique first use
Reg 174: local to bb 2 def dominates all uses has unique first use
Reg 84 uninteresting (no unique first use)
Reg 175 uninteresting
Reg 85 uninteresting
Reg 176 uninteresting
Reg 86 uninteresting
Reg 177 uninteresting
Reg 142: local to bb 13 def dominates all uses has unique first use
Reg 178 uninteresting
Reg 143: local to bb 13 def dominates all uses has unique first use
Reg 128: local to bb 13 def dominates all uses has unique first use
Reg 129: local to bb 13 def dominates all uses has unique first use
Reg 179 uninteresting
Reg 116 uninteresting
Reg 147: local to bb 13 def dominates all uses has unique first use
Reg 88 uninteresting
Reg 180 uninteresting
Reg 89: def dominates all uses has unique first use
Ignoring reg 166, has equiv memory
Reg 167: def dominates all uses has unique first use
Reg 181 uninteresting
Reg 92 uninteresting
Ignoring reg 149, has equiv memory
Ignoring reg 150, has equiv memory
Reg 151: local to bb 20 def dominates all uses has unique first use
Reg 182 uninteresting
Reg 153 uninteresting
Reg 107 uninteresting (no unique first use)
Reg 156 uninteresting
Ignoring reg 160, has equiv memory
Reg 130: local to bb 24 def dominates all uses has unique first use
Reg 131: local to bb 24 def dominates all uses has unique first use
Reg 183 uninteresting
Reg 121 uninteresting
Ignoring reg 161, has equiv memory
Ignoring reg 162, has equiv memory
Ignoring reg 184, has equiv memory
Reg 89 not local to one basic block
Found def insn 99 for 128 to be not moveable
Found def insn 100 for 129 to be not moveable
Found def insn 263 for 130 to be not moveable
Found def insn 264 for 131 to be not moveable
Reg 140 not local to one basic block
Examining insn 85, def for 142
  all ok
Examining insn 86, def for 143
  all ok
Examining insn 127, def for 147
  all ok
Found def insn 205 for 151 to be not moveable
Reg 167 not local to one basic block
Found def insn 417 for 174 to be not moveable
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
;;
;; Loop 3
;;  header 16, latch 18
;;  depth 1, outer 0
;;  nodes: 16 18
;;
;; Loop 1
;;  header 29, latch 28
;;  depth 1, outer 0
;;  nodes: 29 28 27 30 26 25 24 23 22
;;
;; Loop 2
;;  header 23, multiple latches: 26 24
;;  depth 2, outer 1
;;  nodes: 23 26 24
;; 2 succs { 3 31 }
;; 3 succs { 4 20 }
;; 4 succs { 5 10 }
;; 5 succs { 6 8 }
;; 6 succs { 31 7 }
;; 7 succs { 12 }
;; 8 succs { 9 13 }
;; 9 succs { 31 }
;; 10 succs { 11 14 }
;; 11 succs { 31 }
;; 12 succs { 1 }
;; 13 succs { 1 }
;; 14 succs { 15 31 }
;; 15 succs { 16 }
;; 16 succs { 18 17 }
;; 17 succs { }
;; 18 succs { 16 19 }
;; 19 succs { 31 }
;; 20 succs { 29 21 }
;; 21 succs { 31 }
;; 22 succs { 23 }
;; 23 succs { 24 26 }
;; 24 succs { 23 25 }
;; 25 succs { 27 }
;; 26 succs { 23 27 }
;; 27 succs { 28 }
;; 28 succs { 29 31 }
;; 29 succs { 22 30 }
;; 30 succs { 28 31 }
;; 31 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 149: (insn_list:REG_DEP_TRUE 203 (nil))
init_insns for 150: (insn_list:REG_DEP_TRUE 204 (nil))
init_insns for 160: (insn_list:REG_DEP_TRUE 258 (nil))
init_insns for 161: (insn_list:REG_DEP_TRUE 287 (nil))
init_insns for 162: (insn_list:REG_DEP_TRUE 290 (nil))
init_insns for 166: (insn_list:REG_DEP_TRUE 398 (nil))
init_insns for 167: (insn_list:REG_DEP_TRUE 161 (nil))
init_insns for 184: (insn_list:REG_DEP_TRUE 307 (nil))
Reg 144 had equivalence, but can't be eliminated
Reg 145 had equivalence, but can't be eliminated
Reg 170 had equivalence, but can't be eliminated
Reg 172 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a61 (r184,l2) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a69 (r183,l2) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a9 (r182,l0) best AREG, allocno AREG
    a83 (r181,l3) best AREG, allocno AREG
    a20 (r180,l0) best AREG, allocno AREG
    a25 (r179,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a30 (r178,l0) best SSE_REGS, allocno SSE_REGS
    a31 (r177,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a33 (r176,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a35 (r175,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a37 (r174,l0) best SIREG, allocno SIREG
    a38 (r173,l0) best DIREG, allocno DIREG
    a59 (r172,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a47 (r172,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a58 (r170,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a46 (r170,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a57 (r169,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a45 (r169,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a81 (r167,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a13 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a80 (r166,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a14 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a64 (r162,l2) best SSE_REGS, allocno SSE_REGS
    a67 (r161,l2) best SSE_REGS, allocno SSE_REGS
    a70 (r160,l2) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a63 (r157,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a71 (r156,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a73 (r154,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a74 (r153,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a75 (r152,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r151,l0) best DIREG, allocno DIREG
    a11 (r150,l0) best SIREG, allocno SIREG
    a12 (r149,l0) best DREG, allocno DREG
    a21 (r147,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a29 (r145,l0) best SIREG, allocno SIREG
    a28 (r144,l0) best DIREG, allocno DIREG
    a27 (r143,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a26 (r142,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a19 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a79 (r139,l3) best AREG, allocno AREG
    a56 (r139,l2) best AREG, allocno AREG
    a44 (r139,l1) best AREG, allocno AREG
    a0 (r139,l0) best AREG, allocno AREG
    a78 (r136,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a16 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a55 (r134,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a43 (r134,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a7 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a60 (r133,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a54 (r132,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a49 (r132,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a66 (r131,l2) best SSE_REGS, allocno SSE_REGS
    a68 (r130,l2) best SSE_REGS, allocno SSE_REGS
    a23 (r129,l0) best SSE_REGS, allocno SSE_REGS
    a24 (r128,l0) best SSE_REGS, allocno SSE_REGS
    a65 (r121,l2) best SSE_REGS, allocno SSE_REGS
    a22 (r116,l0) best SSE_REGS, allocno SSE_REGS
    a62 (r107,l2) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a72 (r101,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a53 (r99,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a42 (r99,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a77 (r94,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a15 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a82 (r92,l3) best SIREG, allocno SIREG
    a52 (r90,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a48 (r90,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a17 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a76 (r88,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a18 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a51 (r87,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a41 (r87,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a5 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a32 (r86,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a34 (r85,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a36 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a50 (r83,l2) best DIREG, allocno DIREG
    a40 (r83,l1) best DIREG, allocno DIREG
    a8 (r83,l0) best DIREG, allocno DIREG
    a39 (r82,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r139,l0) costs: AREG:-846,388 DREG:1692,2926 CREG:1692,2926 BREG:1692,2926 SIREG:1692,2926 DIREG:1692,2926 AD_REGS:1692,2926 CLOBBERED_REGS:1692,2926 Q_REGS:1692,2926 NON_Q_REGS:1692,2926 TLS_GOTBASE_REGS:1692,2926 GENERAL_REGS:1692,2926 SSE_FIRST_REG:14896,19832 NO_REX_SSE_REGS:14896,19832 SSE_REGS:14896,19832 MMX_REGS:19886,27907 INT_SSE_REGS:19886,27907 ALL_REGS:326776,457580 MEM:7140,10842
  a1(r82,l0) costs: AREG:152,152 DREG:152,152 CREG:152,152 BREG:152,152 SIREG:152,152 DIREG:152,152 AD_REGS:152,152 CLOBBERED_REGS:152,152 Q_REGS:152,152 NON_Q_REGS:152,152 TLS_GOTBASE_REGS:152,152 GENERAL_REGS:152,152 SSE_FIRST_REG:1976,11336 NO_REX_SSE_REGS:1976,11336 SSE_REGS:1976,11336 MMX_REGS:3040,17699 INT_SSE_REGS:3040,17699 ALL_REGS:40432,230066 MEM:1444,7845
  a2(r172,l0) costs: AREG:0,2000 DREG:0,2000 CREG:0,2000 BREG:0,2000 SIREG:0,2000 DIREG:0,2000 AD_REGS:0,2000 CLOBBERED_REGS:0,2000 Q_REGS:0,2000 NON_Q_REGS:0,2000 TLS_GOTBASE_REGS:0,2000 GENERAL_REGS:0,2000 SSE_FIRST_REG:608,8608 NO_REX_SSE_REGS:608,8608 SSE_REGS:608,8608 MMX_REGS:988,13988 INT_SSE_REGS:988,13988 ALL_REGS:16112,228112 MEM:456,6456
  a3(r170,l0) costs: AREG:0,2000 DREG:0,2000 CREG:0,2000 BREG:0,2000 SIREG:0,2000 DIREG:0,2000 AD_REGS:0,2000 CLOBBERED_REGS:0,2000 Q_REGS:0,2000 NON_Q_REGS:0,2000 TLS_GOTBASE_REGS:0,2000 GENERAL_REGS:0,2000 SSE_FIRST_REG:608,8608 NO_REX_SSE_REGS:608,8608 SSE_REGS:608,8608 MMX_REGS:988,13988 INT_SSE_REGS:988,13988 ALL_REGS:16112,228112 MEM:456,6456
  a4(r169,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:608,16608 NO_REX_SSE_REGS:608,16608 SSE_REGS:608,16608 MMX_REGS:988,26988 INT_SSE_REGS:988,26988 ALL_REGS:16112,440112 MEM:456,12456
  a5(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:456,23312 NO_REX_SSE_REGS:456,23312 SSE_REGS:456,23312 MMX_REGS:456,37597 INT_SSE_REGS:456,37597 ALL_REGS:7600,613284 MEM:76,14361
  a6(r99,l0) costs: AREG:152,152 DREG:152,152 CREG:152,152 BREG:152,152 SIREG:152,152 DIREG:152,152 AD_REGS:152,152 CLOBBERED_REGS:152,152 Q_REGS:152,152 NON_Q_REGS:152,152 TLS_GOTBASE_REGS:152,152 GENERAL_REGS:152,152 SSE_FIRST_REG:760,8760 NO_REX_SSE_REGS:760,8760 SSE_REGS:760,8760 MMX_REGS:1140,14140 INT_SSE_REGS:1140,14140 ALL_REGS:16264,228264 MEM:608,6608
  a7(r134,l0) costs: AREG:152,152 DREG:152,152 CREG:152,152 BREG:152,152 SIREG:152,152 DIREG:152,152 AD_REGS:152,152 CLOBBERED_REGS:152,152 Q_REGS:152,152 NON_Q_REGS:152,152 TLS_GOTBASE_REGS:152,152 GENERAL_REGS:152,152 SSE_FIRST_REG:1368,45840 NO_REX_SSE_REGS:1368,45840 SSE_REGS:1368,45840 MMX_REGS:2052,72319 INT_SSE_REGS:2052,72319 ALL_REGS:24320,990828 MEM:988,32342
  a8(r83,l0) costs: AREG:304,304 DREG:304,304 CREG:304,304 BREG:304,304 SIREG:304,304 DIREG:-152,-152 AD_REGS:304,304 CLOBBERED_REGS:304,304 Q_REGS:304,304 NON_Q_REGS:304,304 TLS_GOTBASE_REGS:304,304 GENERAL_REGS:304,304 SSE_FIRST_REG:12208,45024 NO_REX_SSE_REGS:12208,45024 SSE_REGS:12208,45024 MMX_REGS:19455,72781 INT_SSE_REGS:19455,72781 ALL_REGS:282914,1152538 MEM:9156,33768
  a9(r182,l0) costs: AREG:-76,-76 DREG:152,152 CREG:152,152 BREG:152,152 SIREG:152,152 DIREG:152,152 AD_REGS:152,152 CLOBBERED_REGS:152,152 Q_REGS:152,152 NON_Q_REGS:152,152 TLS_GOTBASE_REGS:152,152 GENERAL_REGS:152,152 SSE_FIRST_REG:608,608 NO_REX_SSE_REGS:608,608 SSE_REGS:608,608 MMX_REGS:1976,1976 INT_SSE_REGS:1976,1976 ALL_REGS:32224,32224 MEM:836,836
  a10(r151,l0) costs: AREG:152,152 DREG:152,152 CREG:152,152 BREG:152,152 SIREG:152,152 DIREG:-76,-76 AD_REGS:152,152 CLOBBERED_REGS:152,152 Q_REGS:152,152 NON_Q_REGS:152,152 TLS_GOTBASE_REGS:152,152 GENERAL_REGS:152,152 SSE_FIRST_REG:1216,1216 NO_REX_SSE_REGS:1216,1216 SSE_REGS:1216,1216 MMX_REGS:1976,1976 INT_SSE_REGS:1976,1976 ALL_REGS:32224,32224 MEM:912,912
  a11(r150,l0) costs: AREG:152,152 DREG:152,152 CREG:152,152 BREG:152,152 SIREG:-76,-76 DIREG:152,152 AD_REGS:152,152 CLOBBERED_REGS:152,152 Q_REGS:152,152 NON_Q_REGS:152,152 TLS_GOTBASE_REGS:152,152 GENERAL_REGS:152,152 SSE_FIRST_REG:1216,1216 NO_REX_SSE_REGS:1216,1216 SSE_REGS:1216,1216 MMX_REGS:1900,1900 INT_SSE_REGS:1900,1900 ALL_REGS:24168,24168 MEM:0,0
  a12(r149,l0) costs: AREG:152,152 DREG:-76,-76 CREG:152,152 BREG:152,152 SIREG:152,152 DIREG:152,152 AD_REGS:152,152 CLOBBERED_REGS:152,152 Q_REGS:152,152 NON_Q_REGS:152,152 TLS_GOTBASE_REGS:152,152 GENERAL_REGS:152,152 SSE_FIRST_REG:1216,1216 NO_REX_SSE_REGS:1216,1216 SSE_REGS:1216,1216 MMX_REGS:1900,1900 INT_SSE_REGS:1900,1900 ALL_REGS:24168,24168 MEM:0,0
  a13(r167,l0) costs: AREG:0,1236 DREG:0,1236 CREG:0,1236 BREG:0,1236 SIREG:0,1236 DIREG:0,1236 AD_REGS:0,1236 CLOBBERED_REGS:0,1236 Q_REGS:0,1236 NON_Q_REGS:0,1236 TLS_GOTBASE_REGS:0,1236 GENERAL_REGS:0,1236 SSE_FIRST_REG:544,5488 NO_REX_SSE_REGS:544,5488 SSE_REGS:544,5488 MMX_REGS:680,8714 INT_SSE_REGS:680,8714 ALL_REGS:7072,138088 MEM:340,4048
  a14(r166,l0) costs: AREG:0,1236 DREG:0,1236 CREG:0,1236 BREG:0,1236 SIREG:0,1236 DIREG:0,1236 AD_REGS:0,1236 CLOBBERED_REGS:0,1236 Q_REGS:0,1236 NON_Q_REGS:0,1236 TLS_GOTBASE_REGS:0,1236 GENERAL_REGS:0,1236 SSE_FIRST_REG:544,5488 NO_REX_SSE_REGS:544,5488 SSE_REGS:544,5488 MMX_REGS:816,8850 INT_SSE_REGS:816,8850 ALL_REGS:7208,138224 MEM:-408,3300
  a15(r94,l0) costs: AREG:0,1234 DREG:0,1234 CREG:0,1234 BREG:0,1234 SIREG:0,1234 DIREG:0,1234 AD_REGS:0,1234 CLOBBERED_REGS:0,1234 Q_REGS:0,1234 NON_Q_REGS:0,1234 TLS_GOTBASE_REGS:0,1234 GENERAL_REGS:0,1234 SSE_FIRST_REG:408,20152 NO_REX_SSE_REGS:408,20152 SSE_REGS:408,20152 MMX_REGS:408,32492 INT_SSE_REGS:408,32492 ALL_REGS:6800,530016 MEM:68,13025
  a16(r136,l0) costs: AREG:0,1236 DREG:0,1236 CREG:0,1236 BREG:0,1236 SIREG:0,1236 DIREG:0,1236 AD_REGS:0,1236 CLOBBERED_REGS:0,1236 Q_REGS:0,1236 NON_Q_REGS:0,1236 TLS_GOTBASE_REGS:0,1236 GENERAL_REGS:0,1236 SSE_FIRST_REG:544,15360 NO_REX_SSE_REGS:544,15360 SSE_REGS:544,15360 MMX_REGS:884,24960 INT_SSE_REGS:884,24960 ALL_REGS:14416,407040 MEM:340,10218
  a17(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1152,1152 NO_REX_SSE_REGS:1152,1152 SSE_REGS:1152,1152 MMX_REGS:1796,1796 INT_SSE_REGS:1796,1796 ALL_REGS:22472,22472 MEM:796,796
  a18(r88,l0) costs: AREG:152,152 DREG:152,152 CREG:152,152 BREG:152,152 SIREG:152,152 DIREG:152,152 AD_REGS:152,152 CLOBBERED_REGS:152,152 Q_REGS:152,152 NON_Q_REGS:152,152 TLS_GOTBASE_REGS:152,152 GENERAL_REGS:152,152 SSE_FIRST_REG:2432,7368 NO_REX_SSE_REGS:2432,7368 SSE_REGS:2432,7368 MMX_REGS:3876,11897 INT_SSE_REGS:3876,11897 ALL_REGS:56392,187196 MEM:1824,4909
  a19(r140,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:9672,9672 NO_REX_SSE_REGS:9672,9672 SSE_REGS:9672,9672 MMX_REGS:11967,11967 INT_SSE_REGS:11967,11967 ALL_REGS:197308,197308 MEM:3754,3754
  a20(r180,l0) costs: AREG:-76,-76 DREG:152,152 CREG:152,152 BREG:152,152 SIREG:152,152 DIREG:152,152 AD_REGS:152,152 CLOBBERED_REGS:152,152 Q_REGS:152,152 NON_Q_REGS:152,152 TLS_GOTBASE_REGS:152,152 GENERAL_REGS:152,152 SSE_FIRST_REG:608,608 NO_REX_SSE_REGS:608,608 SSE_REGS:608,608 MMX_REGS:1976,1976 INT_SSE_REGS:1976,1976 ALL_REGS:32224,32224 MEM:836,836
  a21(r147,l0) costs: AREG:1216,1216 DREG:1216,1216 CREG:1216,1216 BREG:1216,1216 SIREG:1216,1216 DIREG:1216,1216 AD_REGS:1216,1216 CLOBBERED_REGS:1216,1216 Q_REGS:1216,1216 NON_Q_REGS:1216,1216 TLS_GOTBASE_REGS:1216,1216 GENERAL_REGS:1216,1216 FP_TOP_REG:1976,1976 FP_SECOND_REG:1976,1976 FLOAT_REGS:1976,1976 SSE_FIRST_REG:-76,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1976,1976 FLOAT_INT_REGS:1976,1976 INT_SSE_REGS:1976,1976 FLOAT_INT_SSE_REGS:1976,1976 MEM:912,912
  a22(r116,l0) costs: AREG:1368,1368 DREG:1368,1368 CREG:1368,1368 BREG:1368,1368 SIREG:1368,1368 DIREG:1368,1368 AD_REGS:1368,1368 CLOBBERED_REGS:1368,1368 Q_REGS:1368,1368 NON_Q_REGS:1368,1368 TLS_GOTBASE_REGS:1368,1368 GENERAL_REGS:1368,1368 FP_TOP_REG:2584,2584 FP_SECOND_REG:2584,2584 FLOAT_REGS:2584,2584 SSE_FIRST_REG:152,152 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:2584,2584 FLOAT_INT_REGS:2584,2584 INT_SSE_REGS:2584,2584 FLOAT_INT_SSE_REGS:2584,2584 MEM:988,988
  a23(r129,l0) costs: AREG:912,912 DREG:912,912 CREG:912,912 BREG:912,912 SIREG:912,912 DIREG:912,912 AD_REGS:912,912 CLOBBERED_REGS:912,912 Q_REGS:912,912 NON_Q_REGS:912,912 TLS_GOTBASE_REGS:912,912 GENERAL_REGS:912,912 FP_TOP_REG:2052,2052 FP_SECOND_REG:2052,2052 FLOAT_REGS:2052,2052 SSE_FIRST_REG:152,152 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:2052,2052 FLOAT_INT_REGS:2052,2052 INT_SSE_REGS:2052,2052 FLOAT_INT_SSE_REGS:2052,2052 MEM:988,988
  a24(r128,l0) costs: AREG:760,760 DREG:760,760 CREG:760,760 BREG:760,760 SIREG:760,760 DIREG:760,760 AD_REGS:760,760 CLOBBERED_REGS:760,760 Q_REGS:760,760 NON_Q_REGS:760,760 TLS_GOTBASE_REGS:760,760 GENERAL_REGS:760,760 FP_TOP_REG:1900,1900 FP_SECOND_REG:1900,1900 FLOAT_REGS:1900,1900 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:1900,1900 FLOAT_INT_REGS:1900,1900 INT_SSE_REGS:1900,1900 FLOAT_INT_SSE_REGS:1900,1900 MEM:912,912
  a25(r179,l0) costs: AREG:608,608 DREG:608,608 CREG:608,608 BREG:608,608 SIREG:608,608 DIREG:608,608 AD_REGS:608,608 CLOBBERED_REGS:608,608 Q_REGS:608,608 NON_Q_REGS:608,608 TLS_GOTBASE_REGS:608,608 GENERAL_REGS:608,608 FP_TOP_REG:1444,1444 FP_SECOND_REG:1444,1444 FLOAT_REGS:1444,1444 SSE_FIRST_REG:-76,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1444,1444 FLOAT_INT_REGS:1444,1444 INT_SSE_REGS:1444,1444 FLOAT_INT_SSE_REGS:1444,1444 MEM:532,532
  a26(r142,l0) costs: AREG:608,608 DREG:608,608 CREG:608,608 BREG:608,608 SIREG:608,608 DIREG:608,608 AD_REGS:608,608 CLOBBERED_REGS:608,608 Q_REGS:608,608 NON_Q_REGS:608,608 TLS_GOTBASE_REGS:608,608 GENERAL_REGS:608,608 FP_TOP_REG:1444,1444 FP_SECOND_REG:1444,1444 FLOAT_REGS:1444,1444 SSE_FIRST_REG:-76,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1444,1444 FLOAT_INT_REGS:1444,1444 INT_SSE_REGS:1444,1444 FLOAT_INT_SSE_REGS:1444,1444 MEM:532,532
  a27(r143,l0) costs: AREG:608,608 DREG:608,608 CREG:608,608 BREG:608,608 SIREG:608,608 DIREG:608,608 AD_REGS:608,608 CLOBBERED_REGS:608,608 Q_REGS:608,608 NON_Q_REGS:608,608 TLS_GOTBASE_REGS:608,608 GENERAL_REGS:608,608 FP_TOP_REG:1444,1444 FP_SECOND_REG:1444,1444 FLOAT_REGS:1444,1444 SSE_FIRST_REG:-76,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1444,1444 FLOAT_INT_REGS:1444,1444 INT_SSE_REGS:1444,1444 FLOAT_INT_SSE_REGS:1444,1444 MEM:532,532
  a28(r144,l0) costs: AREG:152,152 DREG:152,152 CREG:152,152 BREG:152,152 SIREG:152,152 DIREG:-76,-76 AD_REGS:152,152 CLOBBERED_REGS:152,152 Q_REGS:152,152 NON_Q_REGS:152,152 TLS_GOTBASE_REGS:152,152 GENERAL_REGS:152,152 SSE_FIRST_REG:1216,1216 NO_REX_SSE_REGS:1216,1216 SSE_REGS:1216,1216 MMX_REGS:1976,1976 INT_SSE_REGS:1976,1976 ALL_REGS:32224,32224 MEM:912,912
  a29(r145,l0) costs: AREG:152,152 DREG:152,152 CREG:152,152 BREG:152,152 SIREG:-76,-76 DIREG:152,152 AD_REGS:152,152 CLOBBERED_REGS:152,152 Q_REGS:152,152 NON_Q_REGS:152,152 TLS_GOTBASE_REGS:152,152 GENERAL_REGS:152,152 SSE_FIRST_REG:1216,1216 NO_REX_SSE_REGS:1216,1216 SSE_REGS:1216,1216 MMX_REGS:1976,1976 INT_SSE_REGS:1976,1976 ALL_REGS:32224,32224 MEM:912,912
  a30(r178,l0) costs: AREG:608,608 DREG:608,608 CREG:608,608 BREG:608,608 SIREG:608,608 DIREG:608,608 AD_REGS:608,608 CLOBBERED_REGS:608,608 Q_REGS:608,608 NON_Q_REGS:608,608 TLS_GOTBASE_REGS:608,608 GENERAL_REGS:608,608 FP_TOP_REG:1444,1444 FP_SECOND_REG:1444,1444 FLOAT_REGS:1444,1444 SSE_FIRST_REG:152,152 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1444,1444 FLOAT_INT_REGS:1444,1444 INT_SSE_REGS:1444,1444 FLOAT_INT_SSE_REGS:1444,1444 MEM:532,532
  a31(r177,l0) costs: AREG:608,608 DREG:608,608 CREG:608,608 BREG:608,608 SIREG:608,608 DIREG:608,608 AD_REGS:608,608 CLOBBERED_REGS:608,608 Q_REGS:608,608 NON_Q_REGS:608,608 TLS_GOTBASE_REGS:608,608 GENERAL_REGS:608,608 FP_TOP_REG:1444,1444 FP_SECOND_REG:1444,1444 FLOAT_REGS:1444,1444 SSE_FIRST_REG:-76,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1444,1444 FLOAT_INT_REGS:1444,1444 INT_SSE_REGS:1444,1444 FLOAT_INT_SSE_REGS:1444,1444 MEM:532,532
  a32(r86,l0) costs: AREG:608,608 DREG:608,608 CREG:608,608 BREG:608,608 SIREG:608,608 DIREG:608,608 AD_REGS:608,608 CLOBBERED_REGS:608,608 Q_REGS:608,608 NON_Q_REGS:608,608 TLS_GOTBASE_REGS:608,608 GENERAL_REGS:608,608 FP_TOP_REG:1444,1444 FP_SECOND_REG:1444,1444 FLOAT_REGS:1444,1444 SSE_FIRST_REG:-76,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1444,1444 FLOAT_INT_REGS:1444,1444 INT_SSE_REGS:1444,1444 FLOAT_INT_SSE_REGS:1444,1444 MEM:532,532
  a33(r176,l0) costs: AREG:608,608 DREG:608,608 CREG:608,608 BREG:608,608 SIREG:608,608 DIREG:608,608 AD_REGS:608,608 CLOBBERED_REGS:608,608 Q_REGS:608,608 NON_Q_REGS:608,608 TLS_GOTBASE_REGS:608,608 GENERAL_REGS:608,608 FP_TOP_REG:1444,1444 FP_SECOND_REG:1444,1444 FLOAT_REGS:1444,1444 SSE_FIRST_REG:-76,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1444,1444 FLOAT_INT_REGS:1444,1444 INT_SSE_REGS:1444,1444 FLOAT_INT_SSE_REGS:1444,1444 MEM:532,532
  a34(r85,l0) costs: AREG:608,608 DREG:608,608 CREG:608,608 BREG:608,608 SIREG:608,608 DIREG:608,608 AD_REGS:608,608 CLOBBERED_REGS:608,608 Q_REGS:608,608 NON_Q_REGS:608,608 TLS_GOTBASE_REGS:608,608 GENERAL_REGS:608,608 FP_TOP_REG:1444,1444 FP_SECOND_REG:1444,1444 FLOAT_REGS:1444,1444 SSE_FIRST_REG:-76,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1444,1444 FLOAT_INT_REGS:1444,1444 INT_SSE_REGS:1444,1444 FLOAT_INT_SSE_REGS:1444,1444 MEM:532,532
  a35(r175,l0) costs: AREG:608,608 DREG:608,608 CREG:608,608 BREG:608,608 SIREG:608,608 DIREG:608,608 AD_REGS:608,608 CLOBBERED_REGS:608,608 Q_REGS:608,608 NON_Q_REGS:608,608 TLS_GOTBASE_REGS:608,608 GENERAL_REGS:608,608 FP_TOP_REG:1444,1444 FP_SECOND_REG:1444,1444 FLOAT_REGS:1444,1444 SSE_FIRST_REG:-76,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1444,1444 FLOAT_INT_REGS:1444,1444 INT_SSE_REGS:1444,1444 FLOAT_INT_SSE_REGS:1444,1444 MEM:532,532
  a36(r84,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 MEM:11873,11873
  a37(r174,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:-1000,-1000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a38(r173,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:-1000,-1000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a39(r82,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:9360,9360 NO_REX_SSE_REGS:9360,9360 SSE_REGS:9360,9360 MMX_REGS:14659,14659 INT_SSE_REGS:14659,14659 ALL_REGS:189634,189634 MEM:6401,6401
  a40(r83,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8816,32816 NO_REX_SSE_REGS:8816,32816 SSE_REGS:8816,32816 MMX_REGS:14326,53326 INT_SSE_REGS:14326,53326 ALL_REGS:233624,869624 MEM:6612,24612
  a41(r87,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:14856,22856 NO_REX_SSE_REGS:14856,22856 SSE_REGS:14856,22856 MMX_REGS:24141,37141 INT_SSE_REGS:24141,37141 ALL_REGS:393684,605684 MEM:9285,14285
  a42(r99,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,8000 NO_REX_SSE_REGS:0,8000 SSE_REGS:0,8000 MMX_REGS:0,13000 INT_SSE_REGS:0,13000 ALL_REGS:0,212000 MEM:0,6000
  a43(r134,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4472,44472 NO_REX_SSE_REGS:4472,44472 SSE_REGS:4472,44472 MMX_REGS:7267,70267 INT_SSE_REGS:7267,70267 ALL_REGS:118508,966508 MEM:3354,31354
  a44(r139,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a45(r169,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,16000 NO_REX_SSE_REGS:0,16000 SSE_REGS:0,16000 MMX_REGS:0,26000 INT_SSE_REGS:0,26000 ALL_REGS:0,424000 MEM:0,12000
  a46(r170,l1) costs: AREG:0,2000 DREG:0,2000 CREG:0,2000 BREG:0,2000 SIREG:0,2000 DIREG:0,2000 AD_REGS:0,2000 CLOBBERED_REGS:0,2000 Q_REGS:0,2000 NON_Q_REGS:0,2000 TLS_GOTBASE_REGS:0,2000 GENERAL_REGS:0,2000 SSE_FIRST_REG:0,8000 NO_REX_SSE_REGS:0,8000 SSE_REGS:0,8000 MMX_REGS:0,13000 INT_SSE_REGS:0,13000 ALL_REGS:0,212000 MEM:0,6000
  a47(r172,l1) costs: AREG:0,2000 DREG:0,2000 CREG:0,2000 BREG:0,2000 SIREG:0,2000 DIREG:0,2000 AD_REGS:0,2000 CLOBBERED_REGS:0,2000 Q_REGS:0,2000 NON_Q_REGS:0,2000 TLS_GOTBASE_REGS:0,2000 GENERAL_REGS:0,2000 SSE_FIRST_REG:0,8000 NO_REX_SSE_REGS:0,8000 SSE_REGS:0,8000 MMX_REGS:0,13000 INT_SSE_REGS:0,13000 ALL_REGS:0,212000 MEM:0,6000
  a48(r90,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3306,59306 NO_REX_SSE_REGS:3306,59306 SSE_REGS:3306,59306 MMX_REGS:3306,94306 INT_SSE_REGS:3306,94306 ALL_REGS:55100,1539100 MEM:551,35551
  a49(r132,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4408,28408 NO_REX_SSE_REGS:4408,28408 SSE_REGS:4408,28408 MMX_REGS:7163,46163 INT_SSE_REGS:7163,46163 ALL_REGS:116812,752812 MEM:3306,21306
  a50(r83,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:39000,39000 ALL_REGS:636000,636000 MEM:18000,18000
  a51(r87,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:13000,13000 INT_SSE_REGS:13000,13000 ALL_REGS:212000,212000 MEM:5000,5000
  a52(r90,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:56000,56000 NO_REX_SSE_REGS:56000,56000 SSE_REGS:56000,56000 MMX_REGS:91000,91000 INT_SSE_REGS:91000,91000 ALL_REGS:1484000,1484000 MEM:35000,35000
  a53(r99,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:13000,13000 INT_SSE_REGS:13000,13000 ALL_REGS:212000,212000 MEM:6000,6000
  a54(r132,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:39000,39000 ALL_REGS:636000,636000 MEM:18000,18000
  a55(r134,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:40000,40000 NO_REX_SSE_REGS:40000,40000 SSE_REGS:40000,40000 MMX_REGS:63000,63000 INT_SSE_REGS:63000,63000 ALL_REGS:848000,848000 MEM:28000,28000
  a56(r139,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a57(r169,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:12000,12000
  a58(r170,l2) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:13000,13000 INT_SSE_REGS:13000,13000 ALL_REGS:212000,212000 MEM:6000,6000
  a59(r172,l2) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:13000,13000 INT_SSE_REGS:13000,13000 ALL_REGS:212000,212000 MEM:6000,6000
  a60(r133,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:39000,39000 ALL_REGS:636000,636000 MEM:18000,18000
  a61(r184,l2) costs: AREG:10000,10000 DREG:10000,10000 CREG:10000,10000 BREG:10000,10000 SIREG:10000,10000 DIREG:10000,10000 AD_REGS:10000,10000 CLOBBERED_REGS:10000,10000 Q_REGS:10000,10000 NON_Q_REGS:10000,10000 TLS_GOTBASE_REGS:10000,10000 GENERAL_REGS:10000,10000 FP_TOP_REG:25000,25000 FP_SECOND_REG:25000,25000 FLOAT_REGS:25000,25000 SSE_FIRST_REG:-1000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:25000,25000 FLOAT_INT_REGS:25000,25000 INT_SSE_REGS:25000,25000 FLOAT_INT_SSE_REGS:25000,25000 MEM:12000,12000
  a62(r107,l2) costs: AREG:18000,18000 DREG:18000,18000 CREG:18000,18000 BREG:18000,18000 SIREG:18000,18000 DIREG:18000,18000 AD_REGS:18000,18000 CLOBBERED_REGS:18000,18000 Q_REGS:18000,18000 NON_Q_REGS:18000,18000 TLS_GOTBASE_REGS:18000,18000 GENERAL_REGS:18000,18000 FP_TOP_REG:38000,38000 FP_SECOND_REG:38000,38000 FLOAT_REGS:38000,38000 SSE_FIRST_REG:-2000,-2000 NO_REX_SSE_REGS:4000,4000 SSE_REGS:4000,4000 FLOAT_SSE_REGS:38000,38000 FLOAT_INT_REGS:38000,38000 INT_SSE_REGS:38000,38000 FLOAT_INT_SSE_REGS:38000,38000 MEM:18000,18000
  a63(r157,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32000,32000 NO_REX_SSE_REGS:32000,32000 SSE_REGS:32000,32000 MMX_REGS:52000,52000 INT_SSE_REGS:52000,52000 ALL_REGS:848000,848000 MEM:23000,23000
  a64(r162,l2) costs: AREG:10000,10000 DREG:10000,10000 CREG:10000,10000 BREG:10000,10000 SIREG:10000,10000 DIREG:10000,10000 AD_REGS:10000,10000 CLOBBERED_REGS:10000,10000 Q_REGS:10000,10000 NON_Q_REGS:10000,10000 TLS_GOTBASE_REGS:10000,10000 GENERAL_REGS:10000,10000 FP_TOP_REG:25000,25000 FP_SECOND_REG:25000,25000 FLOAT_REGS:25000,25000 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:25000,25000 FLOAT_INT_REGS:25000,25000 INT_SSE_REGS:25000,25000 FLOAT_INT_SSE_REGS:25000,25000 MEM:12000,12000
  a65(r121,l2) costs: AREG:16000,16000 DREG:16000,16000 CREG:16000,16000 BREG:16000,16000 SIREG:16000,16000 DIREG:16000,16000 AD_REGS:16000,16000 CLOBBERED_REGS:16000,16000 Q_REGS:16000,16000 NON_Q_REGS:16000,16000 TLS_GOTBASE_REGS:16000,16000 GENERAL_REGS:16000,16000 FP_TOP_REG:32000,32000 FP_SECOND_REG:32000,32000 FLOAT_REGS:32000,32000 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:32000,32000 FLOAT_INT_REGS:32000,32000 INT_SSE_REGS:32000,32000 FLOAT_INT_SSE_REGS:32000,32000 MEM:11000,11000
  a66(r131,l2) costs: AREG:10000,10000 DREG:10000,10000 CREG:10000,10000 BREG:10000,10000 SIREG:10000,10000 DIREG:10000,10000 AD_REGS:10000,10000 CLOBBERED_REGS:10000,10000 Q_REGS:10000,10000 NON_Q_REGS:10000,10000 TLS_GOTBASE_REGS:10000,10000 GENERAL_REGS:10000,10000 FP_TOP_REG:25000,25000 FP_SECOND_REG:25000,25000 FLOAT_REGS:25000,25000 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:25000,25000 FLOAT_INT_REGS:25000,25000 INT_SSE_REGS:25000,25000 FLOAT_INT_SSE_REGS:25000,25000 MEM:11000,11000
  a67(r161,l2) costs: AREG:10000,10000 DREG:10000,10000 CREG:10000,10000 BREG:10000,10000 SIREG:10000,10000 DIREG:10000,10000 AD_REGS:10000,10000 CLOBBERED_REGS:10000,10000 Q_REGS:10000,10000 NON_Q_REGS:10000,10000 TLS_GOTBASE_REGS:10000,10000 GENERAL_REGS:10000,10000 FP_TOP_REG:25000,25000 FP_SECOND_REG:25000,25000 FLOAT_REGS:25000,25000 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:25000,25000 FLOAT_INT_REGS:25000,25000 INT_SSE_REGS:25000,25000 FLOAT_INT_SSE_REGS:25000,25000 MEM:12000,12000
  a68(r130,l2) costs: AREG:10000,10000 DREG:10000,10000 CREG:10000,10000 BREG:10000,10000 SIREG:10000,10000 DIREG:10000,10000 AD_REGS:10000,10000 CLOBBERED_REGS:10000,10000 Q_REGS:10000,10000 NON_Q_REGS:10000,10000 TLS_GOTBASE_REGS:10000,10000 GENERAL_REGS:10000,10000 FP_TOP_REG:25000,25000 FP_SECOND_REG:25000,25000 FLOAT_REGS:25000,25000 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 FLOAT_SSE_REGS:25000,25000 FLOAT_INT_REGS:25000,25000 INT_SSE_REGS:25000,25000 FLOAT_INT_SSE_REGS:25000,25000 MEM:12000,12000
  a69(r183,l2) costs: AREG:8000,8000 DREG:8000,8000 CREG:8000,8000 BREG:8000,8000 SIREG:8000,8000 DIREG:8000,8000 AD_REGS:8000,8000 CLOBBERED_REGS:8000,8000 Q_REGS:8000,8000 NON_Q_REGS:8000,8000 TLS_GOTBASE_REGS:8000,8000 GENERAL_REGS:8000,8000 FP_TOP_REG:19000,19000 FP_SECOND_REG:19000,19000 FLOAT_REGS:19000,19000 SSE_FIRST_REG:-1000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:19000,19000 FLOAT_INT_REGS:19000,19000 INT_SSE_REGS:19000,19000 FLOAT_INT_SSE_REGS:19000,19000 MEM:7000,7000
  a70(r160,l2) costs: AREG:10000,10000 DREG:10000,10000 CREG:10000,10000 BREG:10000,10000 SIREG:10000,10000 DIREG:10000,10000 AD_REGS:10000,10000 CLOBBERED_REGS:10000,10000 Q_REGS:10000,10000 NON_Q_REGS:10000,10000 TLS_GOTBASE_REGS:10000,10000 GENERAL_REGS:10000,10000 FP_TOP_REG:25000,25000 FP_SECOND_REG:25000,25000 FLOAT_REGS:25000,25000 SSE_FIRST_REG:-1000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:25000,25000 FLOAT_INT_REGS:25000,25000 INT_SSE_REGS:25000,25000 FLOAT_INT_SSE_REGS:25000,25000 MEM:0,0
  a71(r156,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a72(r101,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:32000,32000 INT_SSE_REGS:32000,32000 ALL_REGS:524000,524000 MEM:12000,12000
  a73(r154,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:39000,39000 ALL_REGS:636000,636000 MEM:17000,17000
  a74(r153,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:21000,21000 INT_SSE_REGS:21000,21000 ALL_REGS:314000,314000 MEM:8000,8000
  a75(r152,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a76(r88,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4936,4936 NO_REX_SSE_REGS:4936,4936 SSE_REGS:4936,4936 MMX_REGS:8021,8021 INT_SSE_REGS:8021,8021 ALL_REGS:130804,130804 MEM:3085,3085
  a77(r94,l3) costs: AREG:1234,1234 DREG:1234,1234 CREG:1234,1234 BREG:1234,1234 SIREG:1234,1234 DIREG:1234,1234 AD_REGS:1234,1234 CLOBBERED_REGS:1234,1234 Q_REGS:1234,1234 NON_Q_REGS:1234,1234 TLS_GOTBASE_REGS:1234,1234 GENERAL_REGS:1234,1234 SSE_FIRST_REG:19744,19744 NO_REX_SSE_REGS:19744,19744 SSE_REGS:19744,19744 MMX_REGS:32084,32084 INT_SSE_REGS:32084,32084 ALL_REGS:523216,523216 MEM:12957,12957
  a78(r136,l3) costs: AREG:1236,1236 DREG:1236,1236 CREG:1236,1236 BREG:1236,1236 SIREG:1236,1236 DIREG:1236,1236 AD_REGS:1236,1236 CLOBBERED_REGS:1236,1236 Q_REGS:1236,1236 NON_Q_REGS:1236,1236 TLS_GOTBASE_REGS:1236,1236 GENERAL_REGS:1236,1236 SSE_FIRST_REG:14816,14816 NO_REX_SSE_REGS:14816,14816 SSE_REGS:14816,14816 MMX_REGS:24076,24076 INT_SSE_REGS:24076,24076 ALL_REGS:392624,392624 MEM:9878,9878
  a79(r139,l3) costs: AREG:1234,1234 DREG:1234,1234 CREG:1234,1234 BREG:1234,1234 SIREG:1234,1234 DIREG:1234,1234 AD_REGS:1234,1234 CLOBBERED_REGS:1234,1234 Q_REGS:1234,1234 NON_Q_REGS:1234,1234 TLS_GOTBASE_REGS:1234,1234 GENERAL_REGS:1234,1234 SSE_FIRST_REG:4936,4936 NO_REX_SSE_REGS:4936,4936 SSE_REGS:4936,4936 MMX_REGS:8021,8021 INT_SSE_REGS:8021,8021 ALL_REGS:130804,130804 MEM:3702,3702
  a80(r166,l3) costs: AREG:1236,1236 DREG:1236,1236 CREG:1236,1236 BREG:1236,1236 SIREG:1236,1236 DIREG:1236,1236 AD_REGS:1236,1236 CLOBBERED_REGS:1236,1236 Q_REGS:1236,1236 NON_Q_REGS:1236,1236 TLS_GOTBASE_REGS:1236,1236 GENERAL_REGS:1236,1236 SSE_FIRST_REG:4944,4944 NO_REX_SSE_REGS:4944,4944 SSE_REGS:4944,4944 MMX_REGS:8034,8034 INT_SSE_REGS:8034,8034 ALL_REGS:131016,131016 MEM:3708,3708
  a81(r167,l3) costs: AREG:1236,1236 DREG:1236,1236 CREG:1236,1236 BREG:1236,1236 SIREG:1236,1236 DIREG:1236,1236 AD_REGS:1236,1236 CLOBBERED_REGS:1236,1236 Q_REGS:1236,1236 NON_Q_REGS:1236,1236 TLS_GOTBASE_REGS:1236,1236 GENERAL_REGS:1236,1236 SSE_FIRST_REG:4944,4944 NO_REX_SSE_REGS:4944,4944 SSE_REGS:4944,4944 MMX_REGS:8034,8034 INT_SSE_REGS:8034,8034 ALL_REGS:131016,131016 MEM:3708,3708
  a82(r92,l3) costs: AREG:1234,1234 DREG:1234,1234 CREG:1234,1234 BREG:1234,1234 SIREG:-617,-617 DIREG:1234,1234 AD_REGS:1234,1234 CLOBBERED_REGS:1234,1234 Q_REGS:1234,1234 NON_Q_REGS:1234,1234 TLS_GOTBASE_REGS:1234,1234 GENERAL_REGS:1234,1234 SSE_FIRST_REG:13588,13588 NO_REX_SSE_REGS:13588,13588 SSE_REGS:13588,13588 MMX_REGS:19763,19763 INT_SSE_REGS:19763,19763 ALL_REGS:323620,323620 MEM:8028,8028
  a83(r181,l3) costs: AREG:-618,-618 DREG:1236,1236 CREG:1236,1236 BREG:1236,1236 SIREG:1236,1236 DIREG:1236,1236 AD_REGS:1236,1236 CLOBBERED_REGS:1236,1236 Q_REGS:1236,1236 NON_Q_REGS:1236,1236 TLS_GOTBASE_REGS:1236,1236 GENERAL_REGS:1236,1236 SSE_FIRST_REG:4944,4944 NO_REX_SSE_REGS:4944,4944 SSE_REGS:4944,4944 MMX_REGS:16068,16068 INT_SSE_REGS:16068,16068 ALL_REGS:262032,262032 MEM:6798,6798


Pass 1 for finding pseudo/allocno costs

    r184: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r183: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r182: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r178: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r177: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r176: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r175: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r174: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r162: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r161: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r160: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r151: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r145: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r142: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r139: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a79 (r139,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a56 (r139,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a44 (r139,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r131: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r130: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r129: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r128: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r121: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r116: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r107: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r92: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r86: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r85: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a50 (r83,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a40 (r83,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r139,l0) costs: AREG:1692,388 DREG:3384,5852 CREG:3384,5852 BREG:3384,5852 SIREG:3384,5852 DIREG:3384,5852 AD_REGS:1692,2926 CLOBBERED_REGS:1692,2926 Q_REGS:1692,2926 NON_Q_REGS:3384,5852 TLS_GOTBASE_REGS:3384,5852 GENERAL_REGS:1692,2926 SSE_FIRST_REG:23968,33840 NO_REX_SSE_REGS:23968,33840 SSE_REGS:23968,33840 MMX_REGS:37796,53838 INT_SSE_REGS:26798,34819 ALL_REGS:333688,464492 MEM:17976,25380
  a1(r82,l0) costs: GENERAL_REGS:152,152 SSE_FIRST_REG:1976,11336 NO_REX_SSE_REGS:1976,11336 SSE_REGS:1976,11336 MMX_REGS:3116,18326 INT_SSE_REGS:3116,18326 ALL_REGS:40888,233828 MEM:1444,7845
  a2(r172,l0) costs: GENERAL_REGS:0,2000 SSE_FIRST_REG:608,16608 NO_REX_SSE_REGS:608,16608 SSE_REGS:608,16608 MMX_REGS:988,26988 INT_SSE_REGS:988,13988 ALL_REGS:16112,228112 MEM:456,12456
  a3(r170,l0) costs: GENERAL_REGS:0,2000 SSE_FIRST_REG:608,16608 NO_REX_SSE_REGS:608,16608 SSE_REGS:608,16608 MMX_REGS:988,26988 INT_SSE_REGS:988,13988 ALL_REGS:16112,228112 MEM:456,12456
  a4(r169,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:608,16608 NO_REX_SSE_REGS:608,16608 SSE_REGS:608,16608 MMX_REGS:988,26988 INT_SSE_REGS:988,26988 ALL_REGS:16112,440112 MEM:456,12456
  a5(r87,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:608,23464 NO_REX_SSE_REGS:608,23464 SSE_REGS:608,23464 MMX_REGS:912,38053 INT_SSE_REGS:912,38053 ALL_REGS:8056,613740 MEM:456,14741
  a6(r99,l0) costs: GENERAL_REGS:152,152 SSE_FIRST_REG:760,8760 NO_REX_SSE_REGS:760,8760 SSE_REGS:760,8760 MMX_REGS:1140,14140 INT_SSE_REGS:1140,14140 ALL_REGS:16264,228264 MEM:608,6608
  a7(r134,l0) costs: GENERAL_REGS:152,152 SSE_FIRST_REG:1368,45840 NO_REX_SSE_REGS:1368,45840 SSE_REGS:1368,45840 MMX_REGS:2128,74395 INT_SSE_REGS:2128,74395 ALL_REGS:24776,1003284 MEM:988,32342
  a8(r83,l0) costs: AREG:608,608 DREG:608,608 CREG:608,608 BREG:608,608 SIREG:608,608 DIREG:304,-152 AD_REGS:608,608 CLOBBERED_REGS:304,304 Q_REGS:608,608 NON_Q_REGS:304,304 TLS_GOTBASE_REGS:304,304 GENERAL_REGS:304,304 SSE_FIRST_REG:13424,46240 NO_REX_SSE_REGS:13424,46240 SSE_REGS:13424,46240 MMX_REGS:21814,75140 INT_SSE_REGS:19838,73164 ALL_REGS:285212,1154836 MEM:10068,34680
  a9(r182,l0) costs: AREG:152,-76 DREG:304,304 CREG:304,304 BREG:304,304 SIREG:304,304 DIREG:304,304 AD_REGS:152,152 CLOBBERED_REGS:152,152 Q_REGS:152,152 NON_Q_REGS:304,304 TLS_GOTBASE_REGS:304,304 GENERAL_REGS:152,152 SSE_FIRST_REG:1824,1824 NO_REX_SSE_REGS:1824,1824 SSE_REGS:1824,1824 MMX_REGS:2964,2964 INT_SSE_REGS:1976,1976 ALL_REGS:32224,32224 MEM:1292,1292
  a10(r151,l0) costs: AREG:304,304 DREG:304,304 CREG:304,304 BREG:304,304 SIREG:304,304 DIREG:152,-76 AD_REGS:304,304 CLOBBERED_REGS:152,152 Q_REGS:304,304 NON_Q_REGS:152,152 TLS_GOTBASE_REGS:152,152 GENERAL_REGS:152,152 SSE_FIRST_REG:1824,1824 NO_REX_SSE_REGS:1824,1824 SSE_REGS:1824,1824 MMX_REGS:2964,2964 INT_SSE_REGS:1976,1976 ALL_REGS:32224,32224 MEM:1368,1368
  a11(r150,l0) costs: AREG:304,304 DREG:304,304 CREG:304,304 BREG:304,304 SIREG:152,-76 DIREG:304,304 AD_REGS:304,304 CLOBBERED_REGS:152,152 Q_REGS:304,304 NON_Q_REGS:152,152 TLS_GOTBASE_REGS:152,152 GENERAL_REGS:152,152 SSE_FIRST_REG:1824,1824 NO_REX_SSE_REGS:1824,1824 SSE_REGS:1824,1824 MMX_REGS:2964,2964 INT_SSE_REGS:1976,1976 ALL_REGS:24624,24624 MEM:456,456
  a12(r149,l0) costs: AREG:304,304 DREG:152,-76 CREG:304,304 BREG:304,304 SIREG:304,304 DIREG:304,304 AD_REGS:152,152 CLOBBERED_REGS:152,152 Q_REGS:152,152 NON_Q_REGS:304,304 TLS_GOTBASE_REGS:152,152 GENERAL_REGS:152,152 SSE_FIRST_REG:1824,1824 NO_REX_SSE_REGS:1824,1824 SSE_REGS:1824,1824 MMX_REGS:2964,2964 INT_SSE_REGS:1976,1976 ALL_REGS:24624,24624 MEM:456,456
  a13(r167,l0) costs: GENERAL_REGS:0,1236 SSE_FIRST_REG:544,10432 NO_REX_SSE_REGS:544,10432 SSE_REGS:544,10432 MMX_REGS:884,16952 INT_SSE_REGS:884,8918 ALL_REGS:7480,138496 MEM:408,7824
  a14(r166,l0) costs: GENERAL_REGS:0,1236 SSE_FIRST_REG:544,10432 NO_REX_SSE_REGS:544,10432 SSE_REGS:544,10432 MMX_REGS:884,16952 INT_SSE_REGS:884,8918 ALL_REGS:7616,138632 MEM:-408,7008
  a15(r94,l0) costs: GENERAL_REGS:0,1234 SSE_FIRST_REG:544,25224 NO_REX_SSE_REGS:544,25224 SSE_REGS:544,25224 MMX_REGS:816,40921 INT_SSE_REGS:816,32900 ALL_REGS:7208,530424 MEM:408,17067
  a16(r136,l0) costs: GENERAL_REGS:0,1236 SSE_FIRST_REG:544,20304 NO_REX_SSE_REGS:544,20304 SSE_REGS:544,20304 MMX_REGS:884,32994 INT_SSE_REGS:884,24960 ALL_REGS:14416,407040 MEM:340,13926
  a17(r89,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1152,1152 NO_REX_SSE_REGS:1152,1152 SSE_REGS:1152,1152 MMX_REGS:1872,1872 INT_SSE_REGS:1872,1872 ALL_REGS:22928,22928 MEM:796,796
  a18(r88,l0) costs: GENERAL_REGS:152,152 SSE_FIRST_REG:3040,7976 NO_REX_SSE_REGS:3040,7976 SSE_REGS:3040,7976 MMX_REGS:4940,12961 INT_SSE_REGS:3952,11973 ALL_REGS:56848,187652 MEM:2280,5365
  a19(r140,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11672,11672 NO_REX_SSE_REGS:11672,11672 SSE_REGS:11672,11672 MMX_REGS:17967,17967 INT_SSE_REGS:17967,17967 ALL_REGS:203308,203308 MEM:8754,8754
  a20(r180,l0) costs: AREG:152,-76 DREG:304,304 CREG:304,304 BREG:304,304 SIREG:304,304 DIREG:304,304 AD_REGS:152,152 CLOBBERED_REGS:152,152 Q_REGS:152,152 NON_Q_REGS:304,304 TLS_GOTBASE_REGS:304,304 GENERAL_REGS:152,152 SSE_FIRST_REG:1824,1824 NO_REX_SSE_REGS:1824,1824 SSE_REGS:1824,1824 MMX_REGS:2964,2964 INT_SSE_REGS:1976,1976 ALL_REGS:32224,32224 MEM:1292,1292
  a21(r147,l0) costs: AREG:1824,1824 DREG:1824,1824 CREG:1824,1824 BREG:1824,1824 SIREG:1824,1824 DIREG:1824,1824 AD_REGS:1824,1824 CLOBBERED_REGS:1824,1824 Q_REGS:1824,1824 NON_Q_REGS:1824,1824 TLS_GOTBASE_REGS:1824,1824 GENERAL_REGS:1824,1824 FP_TOP_REG:2964,2964 FP_SECOND_REG:2964,2964 FLOAT_REGS:2964,2964 SSE_FIRST_REG:152,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1976,1976 FLOAT_INT_REGS:2964,2964 INT_SSE_REGS:1976,1976 FLOAT_INT_SSE_REGS:1976,1976 MEM:1368,1368
  a22(r116,l0) costs: AREG:1976,1976 DREG:1976,1976 CREG:1976,1976 BREG:1976,1976 SIREG:1976,1976 DIREG:1976,1976 AD_REGS:1976,1976 CLOBBERED_REGS:1976,1976 Q_REGS:1976,1976 NON_Q_REGS:1976,1976 TLS_GOTBASE_REGS:1976,1976 GENERAL_REGS:1976,1976 FP_TOP_REG:3040,3040 FP_SECOND_REG:3040,3040 FLOAT_REGS:3040,3040 SSE_REGS:152,152 FLOAT_SSE_REGS:3040,3040 FLOAT_INT_REGS:3040,3040 INT_SSE_REGS:3040,3040 FLOAT_INT_SSE_REGS:3040,3040 MEM:1368,1368
  a23(r129,l0) costs: AREG:1368,1368 DREG:1368,1368 CREG:1368,1368 BREG:1368,1368 SIREG:1368,1368 DIREG:1368,1368 AD_REGS:1368,1368 CLOBBERED_REGS:1368,1368 Q_REGS:1368,1368 NON_Q_REGS:1368,1368 TLS_GOTBASE_REGS:1368,1368 GENERAL_REGS:1368,1368 FP_TOP_REG:2128,2128 FP_SECOND_REG:2128,2128 FLOAT_REGS:2128,2128 SSE_REGS:152,152 FLOAT_SSE_REGS:2128,2128 FLOAT_INT_REGS:2128,2128 INT_SSE_REGS:2128,2128 FLOAT_INT_SSE_REGS:2128,2128 MEM:988,988
  a24(r128,l0) costs: AREG:1216,1216 DREG:1216,1216 CREG:1216,1216 BREG:1216,1216 SIREG:1216,1216 DIREG:1216,1216 AD_REGS:1216,1216 CLOBBERED_REGS:1216,1216 Q_REGS:1216,1216 NON_Q_REGS:1216,1216 TLS_GOTBASE_REGS:1216,1216 GENERAL_REGS:1216,1216 FP_TOP_REG:1976,1976 FP_SECOND_REG:1976,1976 FLOAT_REGS:1976,1976 SSE_REGS:0,0 FLOAT_SSE_REGS:1976,1976 FLOAT_INT_REGS:1976,1976 INT_SSE_REGS:1976,1976 FLOAT_INT_SSE_REGS:1976,1976 MEM:912,912
  a25(r179,l0) costs: AREG:1824,1824 DREG:1824,1824 CREG:1824,1824 BREG:1824,1824 SIREG:1824,1824 DIREG:1824,1824 AD_REGS:1824,1824 CLOBBERED_REGS:1824,1824 Q_REGS:1824,1824 NON_Q_REGS:1824,1824 TLS_GOTBASE_REGS:1824,1824 GENERAL_REGS:1824,1824 FP_TOP_REG:2888,2888 FP_SECOND_REG:2888,2888 FLOAT_REGS:2888,2888 SSE_FIRST_REG:152,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1900,1900 FLOAT_INT_REGS:2888,2888 INT_SSE_REGS:1900,1900 FLOAT_INT_SSE_REGS:1900,1900 MEM:1368,1368
  a26(r142,l0) costs: AREG:1824,1824 DREG:1824,1824 CREG:1824,1824 BREG:1824,1824 SIREG:1824,1824 DIREG:1824,1824 AD_REGS:1824,1824 CLOBBERED_REGS:1824,1824 Q_REGS:1824,1824 NON_Q_REGS:1824,1824 TLS_GOTBASE_REGS:1824,1824 GENERAL_REGS:1824,1824 FP_TOP_REG:2888,2888 FP_SECOND_REG:2888,2888 FLOAT_REGS:2888,2888 SSE_FIRST_REG:152,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1900,1900 FLOAT_INT_REGS:2888,2888 INT_SSE_REGS:1900,1900 FLOAT_INT_SSE_REGS:1900,1900 MEM:1368,1368
  a27(r143,l0) costs: AREG:1824,1824 DREG:1824,1824 CREG:1824,1824 BREG:1824,1824 SIREG:1824,1824 DIREG:1824,1824 AD_REGS:1824,1824 CLOBBERED_REGS:1824,1824 Q_REGS:1824,1824 NON_Q_REGS:1824,1824 TLS_GOTBASE_REGS:1824,1824 GENERAL_REGS:1824,1824 FP_TOP_REG:2888,2888 FP_SECOND_REG:2888,2888 FLOAT_REGS:2888,2888 SSE_FIRST_REG:152,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1900,1900 FLOAT_INT_REGS:2888,2888 INT_SSE_REGS:1900,1900 FLOAT_INT_SSE_REGS:1900,1900 MEM:1368,1368
  a28(r144,l0) costs: AREG:304,304 DREG:304,304 CREG:304,304 BREG:304,304 SIREG:304,304 DIREG:152,-76 AD_REGS:304,304 CLOBBERED_REGS:152,152 Q_REGS:304,304 NON_Q_REGS:152,152 TLS_GOTBASE_REGS:152,152 GENERAL_REGS:152,152 SSE_FIRST_REG:1824,1824 NO_REX_SSE_REGS:1824,1824 SSE_REGS:1824,1824 MMX_REGS:2964,2964 INT_SSE_REGS:1976,1976 ALL_REGS:32224,32224 MEM:1368,1368
  a29(r145,l0) costs: AREG:304,304 DREG:304,304 CREG:304,304 BREG:304,304 SIREG:152,-76 DIREG:304,304 AD_REGS:304,304 CLOBBERED_REGS:152,152 Q_REGS:304,304 NON_Q_REGS:152,152 TLS_GOTBASE_REGS:152,152 GENERAL_REGS:152,152 SSE_FIRST_REG:1824,1824 NO_REX_SSE_REGS:1824,1824 SSE_REGS:1824,1824 MMX_REGS:2964,2964 INT_SSE_REGS:1976,1976 ALL_REGS:32224,32224 MEM:1368,1368
  a30(r178,l0) costs: AREG:1824,1824 DREG:1824,1824 CREG:1824,1824 BREG:1824,1824 SIREG:1824,1824 DIREG:1824,1824 AD_REGS:1824,1824 CLOBBERED_REGS:1824,1824 Q_REGS:1824,1824 NON_Q_REGS:1824,1824 TLS_GOTBASE_REGS:1824,1824 GENERAL_REGS:1824,1824 FP_TOP_REG:2888,2888 FP_SECOND_REG:2888,2888 FLOAT_REGS:2888,2888 SSE_REGS:152,152 FLOAT_SSE_REGS:1900,1900 FLOAT_INT_REGS:2888,2888 INT_SSE_REGS:1900,1900 FLOAT_INT_SSE_REGS:1900,1900 MEM:1368,1368
  a31(r177,l0) costs: AREG:1824,1824 DREG:1824,1824 CREG:1824,1824 BREG:1824,1824 SIREG:1824,1824 DIREG:1824,1824 AD_REGS:1824,1824 CLOBBERED_REGS:1824,1824 Q_REGS:1824,1824 NON_Q_REGS:1824,1824 TLS_GOTBASE_REGS:1824,1824 GENERAL_REGS:1824,1824 FP_TOP_REG:2888,2888 FP_SECOND_REG:2888,2888 FLOAT_REGS:2888,2888 SSE_FIRST_REG:152,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1900,1900 FLOAT_INT_REGS:2888,2888 INT_SSE_REGS:1900,1900 FLOAT_INT_SSE_REGS:1900,1900 MEM:1368,1368
  a32(r86,l0) costs: AREG:1824,1824 DREG:1824,1824 CREG:1824,1824 BREG:1824,1824 SIREG:1824,1824 DIREG:1824,1824 AD_REGS:1824,1824 CLOBBERED_REGS:1824,1824 Q_REGS:1824,1824 NON_Q_REGS:1824,1824 TLS_GOTBASE_REGS:1824,1824 GENERAL_REGS:1824,1824 FP_TOP_REG:2888,2888 FP_SECOND_REG:2888,2888 FLOAT_REGS:2888,2888 SSE_FIRST_REG:152,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1900,1900 FLOAT_INT_REGS:2888,2888 INT_SSE_REGS:1900,1900 FLOAT_INT_SSE_REGS:1900,1900 MEM:1368,1368
  a33(r176,l0) costs: AREG:1824,1824 DREG:1824,1824 CREG:1824,1824 BREG:1824,1824 SIREG:1824,1824 DIREG:1824,1824 AD_REGS:1824,1824 CLOBBERED_REGS:1824,1824 Q_REGS:1824,1824 NON_Q_REGS:1824,1824 TLS_GOTBASE_REGS:1824,1824 GENERAL_REGS:1824,1824 FP_TOP_REG:2888,2888 FP_SECOND_REG:2888,2888 FLOAT_REGS:2888,2888 SSE_FIRST_REG:152,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1900,1900 FLOAT_INT_REGS:2888,2888 INT_SSE_REGS:1900,1900 FLOAT_INT_SSE_REGS:1900,1900 MEM:1368,1368
  a34(r85,l0) costs: AREG:1824,1824 DREG:1824,1824 CREG:1824,1824 BREG:1824,1824 SIREG:1824,1824 DIREG:1824,1824 AD_REGS:1824,1824 CLOBBERED_REGS:1824,1824 Q_REGS:1824,1824 NON_Q_REGS:1824,1824 TLS_GOTBASE_REGS:1824,1824 GENERAL_REGS:1824,1824 FP_TOP_REG:2888,2888 FP_SECOND_REG:2888,2888 FLOAT_REGS:2888,2888 SSE_FIRST_REG:152,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1900,1900 FLOAT_INT_REGS:2888,2888 INT_SSE_REGS:1900,1900 FLOAT_INT_SSE_REGS:1900,1900 MEM:1368,1368
  a35(r175,l0) costs: AREG:1824,1824 DREG:1824,1824 CREG:1824,1824 BREG:1824,1824 SIREG:1824,1824 DIREG:1824,1824 AD_REGS:1824,1824 CLOBBERED_REGS:1824,1824 Q_REGS:1824,1824 NON_Q_REGS:1824,1824 TLS_GOTBASE_REGS:1824,1824 GENERAL_REGS:1824,1824 FP_TOP_REG:2888,2888 FP_SECOND_REG:2888,2888 FLOAT_REGS:2888,2888 SSE_FIRST_REG:152,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1900,1900 FLOAT_INT_REGS:2888,2888 INT_SSE_REGS:1900,1900 FLOAT_INT_SSE_REGS:1900,1900 MEM:1368,1368
  a36(r84,l0) costs: GENERAL_REGS:0,0 MEM:11873,11873
  a37(r174,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:2000,-1000 DIREG:4000,4000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000
  a38(r173,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:2000,-1000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000
  a39(r82,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:9360,9360 NO_REX_SSE_REGS:9360,9360 SSE_REGS:9360,9360 MMX_REGS:15210,15210 INT_SSE_REGS:15210,15210 ALL_REGS:192940,192940 MEM:6401,6401
  a40(r83,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8816,32816 NO_REX_SSE_REGS:8816,32816 SSE_REGS:8816,32816 MMX_REGS:14326,53326 INT_SSE_REGS:14326,53326 ALL_REGS:233624,869624 MEM:6612,24612
  a41(r87,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:14856,22856 NO_REX_SSE_REGS:14856,22856 SSE_REGS:14856,22856 MMX_REGS:24141,37141 INT_SSE_REGS:24141,37141 ALL_REGS:393684,605684 MEM:9285,14285
  a42(r99,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,8000 NO_REX_SSE_REGS:0,8000 SSE_REGS:0,8000 MMX_REGS:0,13000 INT_SSE_REGS:0,13000 ALL_REGS:0,212000 MEM:0,6000
  a43(r134,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4472,44472 NO_REX_SSE_REGS:4472,44472 SSE_REGS:4472,44472 MMX_REGS:7267,72267 INT_SSE_REGS:7267,72267 ALL_REGS:118508,978508 MEM:3354,31354
  a44(r139,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a45(r169,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,16000 NO_REX_SSE_REGS:0,16000 SSE_REGS:0,16000 MMX_REGS:0,26000 INT_SSE_REGS:0,26000 ALL_REGS:0,424000 MEM:0,12000
  a46(r170,l1) costs: GENERAL_REGS:0,2000 SSE_FIRST_REG:0,16000 NO_REX_SSE_REGS:0,16000 SSE_REGS:0,16000 MMX_REGS:0,26000 INT_SSE_REGS:0,13000 ALL_REGS:0,212000 MEM:0,12000
  a47(r172,l1) costs: GENERAL_REGS:0,2000 SSE_FIRST_REG:0,16000 NO_REX_SSE_REGS:0,16000 SSE_REGS:0,16000 MMX_REGS:0,26000 INT_SSE_REGS:0,13000 ALL_REGS:0,212000 MEM:0,12000
  a48(r90,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4408,60408 NO_REX_SSE_REGS:4408,60408 SSE_REGS:4408,60408 MMX_REGS:6612,97612 INT_SSE_REGS:6612,97612 ALL_REGS:58406,1542406 MEM:3306,38306
  a49(r132,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4408,28408 NO_REX_SSE_REGS:4408,28408 SSE_REGS:4408,28408 MMX_REGS:7163,46163 INT_SSE_REGS:7163,46163 ALL_REGS:116812,752812 MEM:3306,21306
  a50(r83,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:39000,39000 ALL_REGS:636000,636000 MEM:18000,18000
  a51(r87,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:13000,13000 INT_SSE_REGS:13000,13000 ALL_REGS:212000,212000 MEM:5000,5000
  a52(r90,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:56000,56000 NO_REX_SSE_REGS:56000,56000 SSE_REGS:56000,56000 MMX_REGS:91000,91000 INT_SSE_REGS:91000,91000 ALL_REGS:1484000,1484000 MEM:35000,35000
  a53(r99,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:13000,13000 INT_SSE_REGS:13000,13000 ALL_REGS:212000,212000 MEM:6000,6000
  a54(r132,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:39000,39000 ALL_REGS:636000,636000 MEM:18000,18000
  a55(r134,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:40000,40000 NO_REX_SSE_REGS:40000,40000 SSE_REGS:40000,40000 MMX_REGS:65000,65000 INT_SSE_REGS:65000,65000 ALL_REGS:860000,860000 MEM:28000,28000
  a56(r139,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a57(r169,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:12000,12000
  a58(r170,l2) costs: GENERAL_REGS:2000,2000 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:13000,13000 ALL_REGS:212000,212000 MEM:12000,12000
  a59(r172,l2) costs: GENERAL_REGS:2000,2000 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:13000,13000 ALL_REGS:212000,212000 MEM:12000,12000
  a60(r133,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:39000,39000 ALL_REGS:636000,636000 MEM:18000,18000
  a61(r184,l2) costs: AREG:24000,24000 DREG:24000,24000 CREG:24000,24000 BREG:24000,24000 SIREG:24000,24000 DIREG:24000,24000 AD_REGS:24000,24000 CLOBBERED_REGS:24000,24000 Q_REGS:24000,24000 NON_Q_REGS:24000,24000 TLS_GOTBASE_REGS:24000,24000 GENERAL_REGS:24000,24000 FP_TOP_REG:39000,39000 FP_SECOND_REG:39000,39000 FLOAT_REGS:39000,39000 SSE_FIRST_REG:2000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:26000,26000 FLOAT_INT_REGS:39000,39000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:26000,26000 MEM:18000,18000
  a62(r107,l2) costs: AREG:40000,40000 DREG:40000,40000 CREG:40000,40000 BREG:40000,40000 SIREG:40000,40000 DIREG:40000,40000 AD_REGS:40000,40000 CLOBBERED_REGS:40000,40000 Q_REGS:40000,40000 NON_Q_REGS:40000,40000 TLS_GOTBASE_REGS:40000,40000 GENERAL_REGS:40000,40000 FP_TOP_REG:65000,65000 FP_SECOND_REG:65000,65000 FLOAT_REGS:65000,65000 SSE_FIRST_REG:4000,-2000 NO_REX_SSE_REGS:4000,4000 SSE_REGS:4000,4000 FLOAT_SSE_REGS:39000,39000 FLOAT_INT_REGS:65000,65000 INT_SSE_REGS:39000,39000 FLOAT_INT_SSE_REGS:39000,39000 MEM:30000,30000
  a63(r157,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:32000,32000 NO_REX_SSE_REGS:32000,32000 SSE_REGS:32000,32000 MMX_REGS:52000,52000 INT_SSE_REGS:52000,52000 ALL_REGS:848000,848000 MEM:23000,23000
  a64(r162,l2) costs: AREG:16000,16000 DREG:16000,16000 CREG:16000,16000 BREG:16000,16000 SIREG:16000,16000 DIREG:16000,16000 AD_REGS:16000,16000 CLOBBERED_REGS:16000,16000 Q_REGS:16000,16000 NON_Q_REGS:16000,16000 TLS_GOTBASE_REGS:16000,16000 GENERAL_REGS:16000,16000 FP_TOP_REG:26000,26000 FP_SECOND_REG:26000,26000 FLOAT_REGS:26000,26000 SSE_REGS:0,0 FLOAT_SSE_REGS:26000,26000 FLOAT_INT_REGS:26000,26000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:26000,26000 MEM:12000,12000
  a65(r121,l2) costs: AREG:24000,24000 DREG:24000,24000 CREG:24000,24000 BREG:24000,24000 SIREG:24000,24000 DIREG:24000,24000 AD_REGS:24000,24000 CLOBBERED_REGS:24000,24000 Q_REGS:24000,24000 NON_Q_REGS:24000,24000 TLS_GOTBASE_REGS:24000,24000 GENERAL_REGS:24000,24000 FP_TOP_REG:38000,38000 FP_SECOND_REG:38000,38000 FLOAT_REGS:38000,38000 SSE_REGS:0,0 FLOAT_SSE_REGS:38000,38000 FLOAT_INT_REGS:38000,38000 INT_SSE_REGS:38000,38000 FLOAT_INT_SSE_REGS:38000,38000 MEM:16000,16000
  a66(r131,l2) costs: AREG:16000,16000 DREG:16000,16000 CREG:16000,16000 BREG:16000,16000 SIREG:16000,16000 DIREG:16000,16000 AD_REGS:16000,16000 CLOBBERED_REGS:16000,16000 Q_REGS:16000,16000 NON_Q_REGS:16000,16000 TLS_GOTBASE_REGS:16000,16000 GENERAL_REGS:16000,16000 FP_TOP_REG:26000,26000 FP_SECOND_REG:26000,26000 FLOAT_REGS:26000,26000 SSE_REGS:0,0 FLOAT_SSE_REGS:26000,26000 FLOAT_INT_REGS:26000,26000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:26000,26000 MEM:11000,11000
  a67(r161,l2) costs: AREG:16000,16000 DREG:16000,16000 CREG:16000,16000 BREG:16000,16000 SIREG:16000,16000 DIREG:16000,16000 AD_REGS:16000,16000 CLOBBERED_REGS:16000,16000 Q_REGS:16000,16000 NON_Q_REGS:16000,16000 TLS_GOTBASE_REGS:16000,16000 GENERAL_REGS:16000,16000 FP_TOP_REG:26000,26000 FP_SECOND_REG:26000,26000 FLOAT_REGS:26000,26000 SSE_REGS:0,0 FLOAT_SSE_REGS:26000,26000 FLOAT_INT_REGS:26000,26000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:26000,26000 MEM:12000,12000
  a68(r130,l2) costs: AREG:16000,16000 DREG:16000,16000 CREG:16000,16000 BREG:16000,16000 SIREG:16000,16000 DIREG:16000,16000 AD_REGS:16000,16000 CLOBBERED_REGS:16000,16000 Q_REGS:16000,16000 NON_Q_REGS:16000,16000 TLS_GOTBASE_REGS:16000,16000 GENERAL_REGS:16000,16000 FP_TOP_REG:26000,26000 FP_SECOND_REG:26000,26000 FLOAT_REGS:26000,26000 SSE_REGS:0,0 FLOAT_SSE_REGS:26000,26000 FLOAT_INT_REGS:26000,26000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:26000,26000 MEM:12000,12000
  a69(r183,l2) costs: AREG:24000,24000 DREG:24000,24000 CREG:24000,24000 BREG:24000,24000 SIREG:24000,24000 DIREG:24000,24000 AD_REGS:24000,24000 CLOBBERED_REGS:24000,24000 Q_REGS:24000,24000 NON_Q_REGS:24000,24000 TLS_GOTBASE_REGS:24000,24000 GENERAL_REGS:24000,24000 FP_TOP_REG:38000,38000 FP_SECOND_REG:38000,38000 FLOAT_REGS:38000,38000 SSE_FIRST_REG:2000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:25000,25000 FLOAT_INT_REGS:38000,38000 INT_SSE_REGS:25000,25000 FLOAT_INT_SSE_REGS:25000,25000 MEM:18000,18000
  a70(r160,l2) costs: AREG:24000,24000 DREG:24000,24000 CREG:24000,24000 BREG:24000,24000 SIREG:24000,24000 DIREG:24000,24000 AD_REGS:24000,24000 CLOBBERED_REGS:24000,24000 Q_REGS:24000,24000 NON_Q_REGS:24000,24000 TLS_GOTBASE_REGS:24000,24000 GENERAL_REGS:24000,24000 FP_TOP_REG:39000,39000 FP_SECOND_REG:39000,39000 FLOAT_REGS:39000,39000 SSE_FIRST_REG:2000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:26000,26000 FLOAT_INT_REGS:39000,39000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:26000,26000 MEM:6000,6000
  a71(r156,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a72(r101,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:39000,39000 ALL_REGS:538000,538000 MEM:16000,16000
  a73(r154,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:39000,39000 ALL_REGS:636000,636000 MEM:17000,17000
  a74(r153,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a75(r152,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a76(r88,l3) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4936,4936 NO_REX_SSE_REGS:4936,4936 SSE_REGS:4936,4936 MMX_REGS:8021,8021 INT_SSE_REGS:8021,8021 ALL_REGS:130804,130804 MEM:3085,3085
  a77(r94,l3) costs: GENERAL_REGS:1234,1234 SSE_FIRST_REG:24680,24680 NO_REX_SSE_REGS:24680,24680 SSE_REGS:24680,24680 MMX_REGS:40105,40105 INT_SSE_REGS:32084,32084 ALL_REGS:523216,523216 MEM:16659,16659
  a78(r136,l3) costs: GENERAL_REGS:1236,1236 SSE_FIRST_REG:19760,19760 NO_REX_SSE_REGS:19760,19760 SSE_REGS:19760,19760 MMX_REGS:32110,32110 INT_SSE_REGS:24076,24076 ALL_REGS:392624,392624 MEM:13586,13586
  a79(r139,l3) costs: AREG:1234,1234 DREG:2468,2468 CREG:2468,2468 BREG:2468,2468 SIREG:2468,2468 DIREG:2468,2468 AD_REGS:1234,1234 CLOBBERED_REGS:1234,1234 Q_REGS:1234,1234 NON_Q_REGS:2468,2468 TLS_GOTBASE_REGS:2468,2468 GENERAL_REGS:1234,1234 SSE_FIRST_REG:9872,9872 NO_REX_SSE_REGS:9872,9872 SSE_REGS:9872,9872 MMX_REGS:16042,16042 INT_SSE_REGS:8021,8021 ALL_REGS:130804,130804 MEM:7404,7404
  a80(r166,l3) costs: GENERAL_REGS:1236,1236 SSE_FIRST_REG:9888,9888 NO_REX_SSE_REGS:9888,9888 SSE_REGS:9888,9888 MMX_REGS:16068,16068 INT_SSE_REGS:8034,8034 ALL_REGS:131016,131016 MEM:7416,7416
  a81(r167,l3) costs: GENERAL_REGS:1236,1236 SSE_FIRST_REG:9888,9888 NO_REX_SSE_REGS:9888,9888 SSE_REGS:9888,9888 MMX_REGS:16068,16068 INT_SSE_REGS:8034,8034 ALL_REGS:131016,131016 MEM:7416,7416
  a82(r92,l3) costs: AREG:2468,2468 DREG:2468,2468 CREG:2468,2468 BREG:2468,2468 SIREG:1234,-617 DIREG:2468,2468 AD_REGS:2468,2468 CLOBBERED_REGS:1234,1234 Q_REGS:2468,2468 NON_Q_REGS:1234,1234 TLS_GOTBASE_REGS:1234,1234 GENERAL_REGS:1234,1234 SSE_FIRST_REG:19760,19760 NO_REX_SSE_REGS:19760,19760 SSE_REGS:19760,19760 MMX_REGS:31492,31492 INT_SSE_REGS:23471,23471 ALL_REGS:327328,327328 MEM:14820,14820
  a83(r181,l3) costs: AREG:1236,-618 DREG:2472,2472 CREG:2472,2472 BREG:2472,2472 SIREG:2472,2472 DIREG:2472,2472 AD_REGS:1236,1236 CLOBBERED_REGS:1236,1236 Q_REGS:1236,1236 NON_Q_REGS:2472,2472 TLS_GOTBASE_REGS:2472,2472 GENERAL_REGS:1236,1236 SSE_FIRST_REG:14832,14832 NO_REX_SSE_REGS:14832,14832 SSE_REGS:14832,14832 MMX_REGS:24102,24102 INT_SSE_REGS:16068,16068 ALL_REGS:262032,262032 MEM:10506,10506

   Insn 377(l0): point = 0
   Insn 376(l0): point = 2
   Insn 441(l0): point = 5
   Insn 224(l0): point = 8
   Insn 223(l0): point = 10
   Insn 257(l0): point = 12
   Insn 256(l0): point = 14
   Insn 230(l0): point = 16
   Insn 7(l0): point = 18
   Insn 216(l0): point = 20
   Insn 215(l0): point = 22
   Insn 214(l0): point = 24
   Insn 211(l0): point = 26
   Insn 425(l0): point = 28
   Insn 210(l0): point = 30
   Insn 209(l0): point = 32
   Insn 208(l0): point = 34
   Insn 207(l0): point = 36
   Insn 206(l0): point = 38
   Insn 205(l0): point = 40
   Insn 204(l0): point = 42
   Insn 203(l0): point = 44
   Insn 438(l0): point = 47
   Insn 178(l0): point = 50
   Insn 177(l0): point = 52
   Insn 176(l0): point = 54
   Insn 175(l0): point = 56
   Insn 174(l0): point = 58
   Insn 161(l0): point = 61
   Insn 398(l0): point = 63
   Insn 5(l0): point = 65
   Insn 157(l0): point = 67
   Insn 155(l0): point = 70
   Insn 154(l0): point = 72
   Insn 146(l0): point = 74
   Insn 144(l0): point = 76
   Insn 141(l0): point = 78
   Insn 423(l0): point = 80
   Insn 140(l0): point = 82
   Insn 139(l0): point = 84
   Insn 136(l0): point = 86
   Insn 130(l0): point = 89
   Insn 129(l0): point = 91
   Insn 128(l0): point = 93
   Insn 127(l0): point = 95
   Insn 108(l0): point = 97
   Insn 422(l0): point = 99
   Insn 107(l0): point = 101
   Insn 106(l0): point = 103
   Insn 100(l0): point = 105
   Insn 99(l0): point = 107
   Insn 98(l0): point = 109
   Insn 97(l0): point = 111
   Insn 96(l0): point = 113
   Insn 95(l0): point = 115
   Insn 94(l0): point = 117
   Insn 93(l0): point = 119
   Insn 86(l0): point = 121
   Insn 421(l0): point = 123
   Insn 85(l0): point = 125
   Insn 420(l0): point = 127
   Insn 84(l0): point = 129
   Insn 83(l0): point = 131
   Insn 77(l0): point = 134
   Insn 76(l0): point = 136
   Insn 75(l0): point = 138
   Insn 419(l0): point = 140
   Insn 74(l0): point = 142
   Insn 73(l0): point = 144
   Insn 70(l0): point = 146
   Insn 418(l0): point = 148
   Insn 69(l0): point = 150
   Insn 68(l0): point = 152
   Insn 435(l0): point = 155
   Insn 61(l0): point = 158
   Insn 60(l0): point = 160
   Insn 432(l0): point = 163
   Insn 54(l0): point = 166
   Insn 53(l0): point = 168
   Insn 429(l0): point = 171
   Insn 47(l0): point = 174
   Insn 46(l0): point = 176
   Insn 42(l0): point = 179
   Insn 41(l0): point = 181
   Insn 37(l0): point = 184
   Insn 32(l0): point = 187
   Insn 31(l0): point = 189
   Insn 30(l0): point = 191
   Insn 29(l0): point = 193
   Insn 16(l0): point = 196
   Insn 15(l0): point = 198
   Insn 11(l0): point = 200
   Insn 417(l0): point = 202
   Insn 2(l0): point = 204
   Insn 416(l0): point = 206
   Insn 6(l1): point = 209
   Insn 229(l1): point = 211
   Insn 339(l1): point = 214
   Insn 338(l1): point = 216
   Insn 331(l1): point = 219
   Insn 330(l1): point = 221
   Insn 327(l1): point = 223
   Insn 322(l1): point = 226
   Insn 444(l1): point = 229
   Insn 347(l1): point = 232
   Insn 346(l1): point = 234
   Insn 342(l1): point = 236
   Insn 248(l2): point = 239
   Insn 247(l2): point = 241
   Insn 246(l2): point = 243
   Insn 243(l2): point = 245
   Insn 241(l2): point = 247
   Insn 240(l2): point = 249
   Insn 235(l2): point = 251
   Insn 234(l2): point = 253
   Insn 314(l2): point = 256
   Insn 313(l2): point = 258
   Insn 312(l2): point = 260
   Insn 309(l2): point = 262
   Insn 307(l2): point = 264
   Insn 427(l2): point = 266
   Insn 305(l2): point = 268
   Insn 304(l2): point = 270
   Insn 297(l2): point = 273
   Insn 296(l2): point = 275
   Insn 295(l2): point = 277
   Insn 292(l2): point = 279
   Insn 290(l2): point = 281
   Insn 289(l2): point = 283
   Insn 287(l2): point = 285
   Insn 286(l2): point = 287
   Insn 272(l2): point = 289
   Insn 426(l2): point = 291
   Insn 271(l2): point = 293
   Insn 270(l2): point = 295
   Insn 264(l2): point = 297
   Insn 263(l2): point = 299
   Insn 262(l2): point = 301
   Insn 261(l2): point = 303
   Insn 412(l2): point = 305
   Insn 259(l2): point = 307
   Insn 258(l2): point = 309
   Insn 253(l2): point = 311
   Insn 252(l2): point = 313
   Insn 171(l3): point = 316
   Insn 170(l3): point = 318
   Insn 167(l3): point = 320
   Insn 424(l3): point = 322
   Insn 166(l3): point = 324
   Insn 165(l3): point = 326
   Insn 164(l3): point = 328
   Insn 163(l3): point = 330
   Insn 406(l3): point = 332
   Insn 194(l3): point = 335
   Insn 193(l3): point = 337
   Insn 191(l3): point = 339
   Insn 188(l3): point = 341
   Insn 186(l3): point = 343
   Insn 185(l3): point = 345
   Insn 184(l3): point = 347
   Insn 183(l3): point = 349
 a0(r139): [174..200] [155..170] [61..78] [47..49] [3..26]
 a1(r82): [8..24]
 a2(r172): [8..12]
 a3(r170): [8..14]
 a4(r169): [8..16]
 a5(r87): [8..18]
 a6(r99): [8..20]
 a7(r134): [8..22]
 a8(r83): [166..193] [158..162] [153..154] [132..133] [87..88] [8..46]
 a9(r182): [27..28]
 a10(r151): [33..40]
 a11(r150): [35..42]
 a12(r149): [37..44]
 a13(r167): [61..61]
 a14(r166): [61..63]
 a15(r94): [61..65]
 a16(r136): [61..67]
 a17(r89): [68..74]
 a18(r88): [61..86]
 a19(r140): [184..204] [158..162] [75..88]
 a20(r180): [79..80]
 a21(r147): [92..95]
 a22(r116): [94..97]
 a23(r129): [94..105]
 a24(r128): [96..107]
 a25(r179): [98..99]
 a26(r142): [104..125]
 a27(r143): [112..121]
 a28(r144): [114..119]
 a29(r145): [116..117]
 a30(r178): [122..123]
 a31(r177): [126..127]
 a32(r86): [137..138]
 a33(r176): [139..140]
 a34(r85): [145..146]
 a35(r175): [147..148]
 a36(r84): [177..191] [169..170] [161..162]
 a37(r174): [199..202]
 a38(r173): [205..206]
 a39(r82): [232..238] [214..226]
 a40(r83): [209..238]
 a41(r87): [209..238]
 a42(r99): [209..238]
 a43(r134): [209..238]
 a44(r139): [209..238]
 a45(r169): [209..238]
 a46(r170): [209..238]
 a47(r172): [209..238]
 a48(r90): [209..209]
 a49(r132): [209..211]
 a50(r83): [239..315]
 a51(r87): [239..315]
 a52(r90): [239..315]
 a53(r99): [239..315]
 a54(r132): [239..315]
 a55(r134): [273..277] [254..260]
 a56(r139): [239..315]
 a57(r169): [239..315]
 a58(r170): [239..315]
 a59(r172): [239..315]
 a60(r133): [286..315] [265..272] [239..243]
 a61(r184): [265..266]
 a62(r107): [296..315] [271..272] [239..245]
 a63(r157): [282..311]
 a64(r162): [282..283]
 a65(r121): [284..289]
 a66(r131): [284..297]
 a67(r161): [286..287]
 a68(r130): [288..299]
 a69(r183): [290..291]
 a70(r160): [304..309]
 a71(r156): [312..313]
 a72(r101): [314..315] [239..251]
 a73(r154): [244..247]
 a74(r153): [248..249]
 a75(r152): [252..253]
 a76(r88): [316..351]
 a77(r94): [316..351]
 a78(r136): [316..351]
 a79(r139): [316..351]
 a80(r166): [316..351]
 a81(r167): [316..351]
 a82(r92): [348..351] [316..320]
 a83(r181): [321..322]
 Rebuilding regno allocno list for 184
 Rebuilding regno allocno list for 183
 Rebuilding regno allocno list for 181
      Moving ranges of a59r172 to a47r172:  [239..315]
      Moving ranges of a47r172 to a2r172:  [209..315]
      Moving ranges of a58r170 to a46r170:  [239..315]
      Moving ranges of a46r170 to a3r170:  [209..315]
      Moving ranges of a57r169 to a45r169:  [239..315]
      Moving ranges of a45r169 to a4r169:  [209..315]
      Moving ranges of a81r167 to a13r167:  [316..351]
      Moving ranges of a80r166 to a14r166:  [316..351]
 Rebuilding regno allocno list for 162
 Rebuilding regno allocno list for 161
 Rebuilding regno allocno list for 160
 Rebuilding regno allocno list for 157
 Rebuilding regno allocno list for 156
 Rebuilding regno allocno list for 154
 Rebuilding regno allocno list for 153
 Rebuilding regno allocno list for 152
      Moving ranges of a79r139 to a0r139:  [316..351]
      Moving ranges of a56r139 to a44r139:  [239..315]
      Moving ranges of a44r139 to a0r139:  [209..315]
      Moving ranges of a78r136 to a16r136:  [316..351]
      Moving ranges of a55r134 to a43r134:  [273..277] [254..260]
      Moving ranges of a43r134 to a7r134:  [273..277] [254..260] [209..238]
 Rebuilding regno allocno list for 133
      Moving ranges of a54r132 to a49r132:  [239..315]
 Rebuilding regno allocno list for 132
 Rebuilding regno allocno list for 131
 Rebuilding regno allocno list for 130
 Rebuilding regno allocno list for 121
 Rebuilding regno allocno list for 107
 Rebuilding regno allocno list for 101
      Moving ranges of a53r99 to a42r99:  [239..315]
      Moving ranges of a42r99 to a6r99:  [209..315]
      Moving ranges of a77r94 to a15r94:  [316..351]
 Rebuilding regno allocno list for 92
      Moving ranges of a52r90 to a48r90:  [239..315]
 Rebuilding regno allocno list for 90
      Moving ranges of a76r88 to a18r88:  [316..351]
      Moving ranges of a51r87 to a41r87:  [239..315]
      Moving ranges of a41r87 to a5r87:  [209..315]
      Moving ranges of a50r83 to a40r83:  [239..315]
      Moving ranges of a40r83 to a8r83:  [209..315]
      Moving ranges of a39r82 to a1r82:  [232..238] [214..226]
Compressing live ranges: from 352 to 98 - 27%
Ranges after the compression:
 a0(r139): [54..97] [44..51] [6..13] [0..1]
 a1(r82): [56..59] [0..1]
 a2(r172): [54..91] [0..1]
 a3(r170): [54..91] [0..1]
 a4(r169): [54..91] [0..1]
 a5(r87): [54..91] [0..1]
 a6(r99): [54..91] [0..1]
 a7(r134): [74..75] [68..69] [54..59] [0..1]
 a8(r83): [54..91] [42..49] [32..33] [16..17] [0..5]
 a9(r182): [2..3]
 a10(r151): [4..5]
 a11(r150): [4..5]
 a12(r149): [4..5]
 a13(r167): [92..97] [8..8]
 a14(r166): [92..97] [8..9]
 a15(r94): [92..97] [8..9]
 a16(r136): [92..97] [8..9]
 a17(r89): [10..11]
 a18(r88): [92..97] [8..15]
 a19(r140): [48..51] [44..45] [12..17]
 a20(r180): [14..15]
 a21(r147): [18..19]
 a22(r116): [18..21]
 a23(r129): [18..25]
 a24(r128): [20..25]
 a25(r179): [22..23]
 a26(r142): [24..29]
 a27(r143): [26..27]
 a28(r144): [26..27]
 a29(r145): [26..27]
 a30(r178): [28..29]
 a31(r177): [30..31]
 a32(r86): [34..35]
 a33(r176): [36..37]
 a34(r85): [38..39]
 a35(r175): [40..41]
 a36(r84): [44..49]
 a37(r174): [50..51]
 a38(r173): [52..53]
 a48(r90): [60..91] [54..54]
 a49(r132): [60..91] [54..55]
 a60(r133): [78..91] [70..73] [60..61]
 a61(r184): [70..71]
 a62(r107): [84..91] [72..73] [60..63]
 a63(r157): [76..87]
 a64(r162): [76..77]
 a65(r121): [78..81]
 a66(r131): [78..85]
 a67(r161): [78..79]
 a68(r130): [80..85]
 a69(r183): [82..83]
 a70(r160): [86..87]
 a71(r156): [88..89]
 a72(r101): [90..91] [60..65]
 a73(r154): [62..63]
 a74(r153): [64..65]
 a75(r152): [66..67]
 a82(r92): [96..97] [92..93]
 a83(r181): [94..95]
+++Allocating 472 bytes for conflict table (uncompressed size 1344)
;; a0(r139,l0) conflicts: a1(r82,l0) a7(r134,l0) a2(r172,l0) a3(r170,l0) a4(r169,l0) a5(r87,l0) a6(r99,l0) a8(r83,l0) a13(r167,l0) a14(r166,l0) a15(r94,l0) a16(r136,l0) a18(r88,l0) a17(r89,l0) a19(r140,l0) a36(r84,l0) a37(r174,l0) a48(r90,l0) a49(r132,l0) a60(r133,l0) a72(r101,l0) a73(r154,l0) a74(r153,l0) a75(r152,l0) a63(r157,l0) a71(r156,l0) a82(r92,l0) a83(r181,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a1(r82,l0) conflicts: a7(r134,l0) a2(r172,l0) a3(r170,l0) a4(r169,l0) a5(r87,l0) a6(r99,l0) a8(r83,l0) a0(r139,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r172,l0) conflicts: a1(r82,l0) a7(r134,l0) a3(r170,l0) a4(r169,l0) a5(r87,l0) a6(r99,l0) a8(r83,l0) a0(r139,l0) a48(r90,l0) a49(r132,l0) a60(r133,l0) a72(r101,l0) a73(r154,l0) a74(r153,l0) a75(r152,l0) a63(r157,l0) a71(r156,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a3(r170,l0) conflicts: a1(r82,l0) a7(r134,l0) a2(r172,l0) a4(r169,l0) a5(r87,l0) a6(r99,l0) a8(r83,l0) a0(r139,l0) a48(r90,l0) a49(r132,l0) a60(r133,l0) a72(r101,l0) a73(r154,l0) a74(r153,l0) a75(r152,l0) a63(r157,l0) a71(r156,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a4(r169,l0) conflicts: a1(r82,l0) a7(r134,l0) a2(r172,l0) a3(r170,l0) a5(r87,l0) a6(r99,l0) a8(r83,l0) a0(r139,l0) a48(r90,l0) a49(r132,l0) a60(r133,l0) a72(r101,l0) a73(r154,l0) a74(r153,l0) a75(r152,l0) a63(r157,l0) a71(r156,l0)
;;     total conflict hard regs: 4 5
;;     conflict hard regs: 4 5

;; a5(r87,l0) conflicts: a1(r82,l0) a7(r134,l0) a2(r172,l0) a3(r170,l0) a4(r169,l0) a6(r99,l0) a8(r83,l0) a0(r139,l0) a48(r90,l0) a49(r132,l0) a60(r133,l0) a72(r101,l0) a73(r154,l0) a74(r153,l0) a75(r152,l0) a63(r157,l0) a71(r156,l0)
;;     total conflict hard regs: 4 5
;;     conflict hard regs: 4 5

;; a6(r99,l0) conflicts: a1(r82,l0) a7(r134,l0) a2(r172,l0) a3(r170,l0) a4(r169,l0) a5(r87,l0) a8(r83,l0) a0(r139,l0) a48(r90,l0) a49(r132,l0) a60(r133,l0) a72(r101,l0) a73(r154,l0) a74(r153,l0) a75(r152,l0) a63(r157,l0) a71(r156,l0)
;;     total conflict hard regs: 4 5
;;     conflict hard regs: 4 5

;; a7(r134,l0) conflicts: a1(r82,l0) a2(r172,l0) a3(r170,l0) a4(r169,l0) a5(r87,l0) a6(r99,l0) a8(r83,l0) a0(r139,l0) a48(r90,l0) a49(r132,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r83,l0) conflicts: a1(r82,l0) a7(r134,l0) a2(r172,l0) a3(r170,l0) a4(r169,l0) a5(r87,l0) a6(r99,l0) a0(r139,l0) a9(r182,l0) a10(r151,l0) a11(r150,l0) a12(r149,l0) a19(r140,l0) a36(r84,l0) a48(r90,l0) a49(r132,l0) a60(r133,l0) a72(r101,l0) a73(r154,l0) a74(r153,l0) a75(r152,l0) a63(r157,l0) a71(r156,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a9(r182,l0) conflicts: a8(r83,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r151,l0) conflicts: a8(r83,l0) a11(r150,l0) a12(r149,l0)
;;     total conflict hard regs: 1 2 4
;;     conflict hard regs: 1 2 4

;; a11(r150,l0) conflicts: a8(r83,l0) a10(r151,l0) a12(r149,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

;; a12(r149,l0) conflicts: a8(r83,l0) a10(r151,l0) a11(r150,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a13(r167,l0) conflicts: a0(r139,l0) a14(r166,l0) a15(r94,l0) a16(r136,l0) a18(r88,l0) a82(r92,l0) a83(r181,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a14(r166,l0) conflicts: a0(r139,l0) a13(r167,l0) a15(r94,l0) a16(r136,l0) a18(r88,l0) a82(r92,l0) a83(r181,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a15(r94,l0) conflicts: a0(r139,l0) a13(r167,l0) a14(r166,l0) a16(r136,l0) a18(r88,l0) a82(r92,l0) a83(r181,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a16(r136,l0) conflicts: a0(r139,l0) a13(r167,l0) a14(r166,l0) a15(r94,l0) a18(r88,l0) a82(r92,l0) a83(r181,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a17(r89,l0) conflicts: a0(r139,l0) a18(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r88,l0) conflicts: a0(r139,l0) a13(r167,l0) a14(r166,l0) a15(r94,l0) a16(r136,l0) a17(r89,l0) a19(r140,l0) a20(r180,l0) a82(r92,l0) a83(r181,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a19(r140,l0) conflicts: a8(r83,l0) a0(r139,l0) a18(r88,l0) a20(r180,l0) a36(r84,l0) a37(r174,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a20(r180,l0) conflicts: a18(r88,l0) a19(r140,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r147,l0) conflicts: a22(r116,l0) a23(r129,l0)
;;     total conflict hard regs: 21
;;     conflict hard regs: 21

;; a22(r116,l0) conflicts: a21(r147,l0) a23(r129,l0) a24(r128,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r129,l0) conflicts: a21(r147,l0) a22(r116,l0) a24(r128,l0) a25(r179,l0) a26(r142,l0)
;;     total conflict hard regs: 20
;;     conflict hard regs: 20

;; a24(r128,l0) conflicts: a22(r116,l0) a23(r129,l0) a25(r179,l0) a26(r142,l0)
;;     total conflict hard regs: 20
;;     conflict hard regs: 20

;; a25(r179,l0) conflicts: a23(r129,l0) a24(r128,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r142,l0) conflicts: a23(r129,l0) a24(r128,l0) a27(r143,l0) a30(r178,l0)
;;     total conflict hard regs: 20 21
;;     conflict hard regs: 20 21

;; a27(r143,l0) conflicts: a26(r142,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a28(r144,l0) conflicts: a29(r145,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a29(r145,l0) conflicts: a28(r144,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a30(r178,l0) conflicts: a26(r142,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a31(r177,l0) conflicts:
;;     total conflict hard regs: 21
;;     conflict hard regs: 21

;; a32(r86,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a33(r176,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a34(r85,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a35(r175,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a36(r84,l0) conflicts: a8(r83,l0) a0(r139,l0) a19(r140,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a37(r174,l0) conflicts: a0(r139,l0) a19(r140,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a38(r173,l0) conflicts:
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a48(r90,l0) conflicts: a7(r134,l0) a2(r172,l0) a3(r170,l0) a4(r169,l0) a5(r87,l0) a6(r99,l0) a8(r83,l0) a0(r139,l0) a49(r132,l0) a60(r133,l0) a72(r101,l0) a73(r154,l0) a74(r153,l0) a75(r152,l0) a63(r157,l0) a71(r156,l0)
;;     total conflict hard regs: 4 5
;;     conflict hard regs: 4 5

;; a49(r132,l0) conflicts: a7(r134,l0) a2(r172,l0) a3(r170,l0) a4(r169,l0) a5(r87,l0) a6(r99,l0) a8(r83,l0) a0(r139,l0) a48(r90,l0) a60(r133,l0) a72(r101,l0) a73(r154,l0) a74(r153,l0) a75(r152,l0) a63(r157,l0) a71(r156,l0)
;;     total conflict hard regs: 4 5
;;     conflict hard regs: 4 5

;; a60(r133,l0) conflicts: a2(r172,l0) a3(r170,l0) a4(r169,l0) a5(r87,l0) a6(r99,l0) a8(r83,l0) a0(r139,l0) a48(r90,l0) a49(r132,l0) a72(r101,l0) a63(r157,l0) a71(r156,l0)
;;     total conflict hard regs: 4 5
;;     conflict hard regs: 4 5

;; a61(r184,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a62(r107,l0) conflicts: a66(r131,l0) a68(r130,l0) a70(r160,l0)
;;     total conflict hard regs: 20
;;     conflict hard regs: 20

;; a63(r157,l0) conflicts: a2(r172,l0) a3(r170,l0) a4(r169,l0) a5(r87,l0) a6(r99,l0) a8(r83,l0) a0(r139,l0) a48(r90,l0) a49(r132,l0) a60(r133,l0)
;;     total conflict hard regs: 4 5
;;     conflict hard regs: 4 5

;; a64(r162,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a65(r121,l0) conflicts: a67(r161,l0) a66(r131,l0) a68(r130,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a66(r131,l0) conflicts: a62(r107,l0) a67(r161,l0) a65(r121,l0) a68(r130,l0) a69(r183,l0)
;;     total conflict hard regs: 20
;;     conflict hard regs: 20

;; a67(r161,l0) conflicts: a65(r121,l0) a66(r131,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a68(r130,l0) conflicts: a62(r107,l0) a65(r121,l0) a66(r131,l0) a69(r183,l0)
;;     total conflict hard regs: 20
;;     conflict hard regs: 20

;; a69(r183,l0) conflicts: a66(r131,l0) a68(r130,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a70(r160,l0) conflicts: a62(r107,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a71(r156,l0) conflicts: a2(r172,l0) a3(r170,l0) a4(r169,l0) a5(r87,l0) a6(r99,l0) a8(r83,l0) a0(r139,l0) a48(r90,l0) a49(r132,l0) a60(r133,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a72(r101,l0) conflicts: a2(r172,l0) a3(r170,l0) a4(r169,l0) a5(r87,l0) a6(r99,l0) a8(r83,l0) a0(r139,l0) a48(r90,l0) a49(r132,l0) a60(r133,l0) a73(r154,l0) a74(r153,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a73(r154,l0) conflicts: a2(r172,l0) a3(r170,l0) a4(r169,l0) a5(r87,l0) a6(r99,l0) a8(r83,l0) a0(r139,l0) a48(r90,l0) a49(r132,l0) a72(r101,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a74(r153,l0) conflicts: a2(r172,l0) a3(r170,l0) a4(r169,l0) a5(r87,l0) a6(r99,l0) a8(r83,l0) a0(r139,l0) a48(r90,l0) a49(r132,l0) a72(r101,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a75(r152,l0) conflicts: a2(r172,l0) a3(r170,l0) a4(r169,l0) a5(r87,l0) a6(r99,l0) a8(r83,l0) a0(r139,l0) a48(r90,l0) a49(r132,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a82(r92,l0) conflicts: a0(r139,l0) a13(r167,l0) a14(r166,l0) a15(r94,l0) a16(r136,l0) a18(r88,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a83(r181,l0) conflicts: a0(r139,l0) a13(r167,l0) a14(r166,l0) a15(r94,l0) a16(r136,l0) a18(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a63(r157)<->a71(r156)@125:shuffle
  cp1:a65(r121)<->a69(r183)@1000:move
  cp2:a67(r161)<->a68(r130)@1000:constraint
  cp3:a64(r162)<->a66(r131)@1000:constraint
  cp4:a64(r162)<->a65(r121)@1000:constraint
  cp5:a7(r134)<->a75(r152)@1000:constraint
  cp6:a72(r101)<->a75(r152)@125:shuffle
  cp7:a73(r154)<->a74(r153)@125:shuffle
  cp8:a0(r139)<->a9(r182)@76:move
  cp9:a82(r92)<->a83(r181)@618:move
  cp10:a16(r136)<->a17(r89)@8:shuffle
  cp11:a0(r139)<->a20(r180)@76:move
  cp12:a26(r142)<->a31(r177)@76:move
  cp13:a27(r143)<->a30(r178)@76:move
  cp14:a22(r116)<->a25(r179)@76:move
  cp15:a21(r147)<->a24(r128)@76:constraint
  cp16:a34(r85)<->a35(r175)@76:move
  cp17:a32(r86)<->a33(r176)@76:move
  cp18:a19(r140)<->a38(r173)@1000:move
  pref0:a61(r184)<-hr20@1500
  pref1:a69(r183)<-hr20@1500
  pref2:a9(r182)<-hr0@114
  pref3:a83(r181)<-hr0@927
  pref4:a20(r180)<-hr0@114
  pref5:a25(r179)<-hr20@114
  pref6:a31(r177)<-hr20@114
  pref7:a33(r176)<-hr20@114
  pref8:a35(r175)<-hr20@114
  pref9:a37(r174)<-hr4@1500
  pref10:a38(r173)<-hr5@1500
  pref11:a70(r160)<-hr20@1500
  pref12:a10(r151)<-hr5@114
  pref13:a11(r150)<-hr4@114
  pref14:a12(r149)<-hr1@114
  pref15:a21(r147)<-hr20@114
  pref16:a29(r145)<-hr4@114
  pref17:a28(r144)<-hr5@114
  pref18:a27(r143)<-hr20@114
  pref19:a26(r142)<-hr20@114
  pref20:a0(r139)<-hr0@1269
  pref21:a62(r107)<-hr20@3000
  pref22:a82(r92)<-hr4@925
  pref23:a32(r86)<-hr20@114
  pref24:a34(r85)<-hr20@114
  pref25:a8(r83)<-hr5@228
  pref26:a30(r178)<-hr21@152
  pref27:a23(r129)<-hr21@76
  pref28:a22(r116)<-hr21@76
  regions=4, blocks=32, points=98
    allocnos=84 (big 0), copies=19, conflicts=0, ranges=90

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 31 30 29 28 27 25 26 24 23 22 21 20 19 17 18 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r139 1r82 2r172 3r170 4r169 5r87 6r99 7r134 8r83 9r182 10r151 11r150 12r149 13r167 14r166 15r94 16r136 17r89 18r88 19r140 20r180 21r147 22r116 23r129 24r128 25r179 26r142 27r143 28r144 29r145 30r178 31r177 32r86 33r176 34r85 35r175 36r84 37r174 38r173 48r90 49r132 60r133 61r184 62r107 63r157 64r162 65r121 66r131 67r161 68r130 69r183 70r160 71r156 72r101 73r154 74r153 75r152 82r92 83r181
    modified regnos: 82 83 84 85 86 87 88 89 90 92 94 99 101 107 116 121 128 129 130 131 132 133 134 136 139 140 142 143 144 145 147 149 150 151 152 153 154 156 157 160 161 162 166 167 169 170 172 173 174 175 176 177 178 179 180 181 182 183 184
    border:
    Pressure: GENERAL_REGS=13 SSE_REGS=3
 Removing pref20:hr0@1269
 Removing pref25:hr5@228
 Removing pref19:hr20@114
 Removing pref21:hr20@3000
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 20-27 44-51)@193104
          2:( 21-27 44-51)@28000
            3:( 22-27 44-51)@6384
            4:( 21)@76
        5:( 0-6 36-43)@303712
          6:( 0-3 5 6 36-43)@38888
            7:( 0-3 6 36-43)@122612
              8:( 3 6 36-43)@124282
                9:( 3 6 40-43)@295644
      Spill a66(r131,l0)
      Allocno a0r139 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0-2 4 5 7-35 44-74)
      Allocno a1r82 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a2r172 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  5 7-35 44-74)
      Allocno a3r170 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  4 7-35 44-74)
      Allocno a4r169 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  4 5 7-35 44-74)
      Allocno a5r87 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  4 5 7-35 44-74)
      Allocno a6r99 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  4 5 7-35 44-74)
      Allocno a7r134 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a8r83 of GENERAL_REGS(15) has 10 avail. regs  3 6 36-43, node:  3 6 36-43 (confl regs =  0-2 4 5 7-35 44-74)
      Allocno a9r182 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a10r151 of GENERAL_REGS(15) has 12 avail. regs  0 3 5 6 36-43, ^node:  0-3 5 6 36-43 (confl regs =  1 2 4 7-35 44-74)
      Allocno a11r150 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 36-43, ^node:  0-6 36-43 (confl regs =  1 2 7-35 44-74)
      Allocno a12r149 of GENERAL_REGS(15) has 14 avail. regs  0 1 3-6 36-43, ^node:  0-6 36-43 (confl regs =  2 7-35 44-74)
      Allocno a13r167 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 1 4 5 7-35 44-74)
      Allocno a14r166 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0-2 4 5 7-35 44-74)
      Allocno a15r94 of GENERAL_REGS(15) has 10 avail. regs  3 6 36-43, node:  3 6 36-43 (confl regs =  0-2 4 5 7-35 44-74)
      Allocno a16r136 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0-2 4 5 7-35 44-74)
      Allocno a17r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a18r88 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0-2 4 5 7-35 44-74)
      Allocno a19r140 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 36-43, ^node:  0-3 6 36-43 (confl regs =  0 4 5 7-35 44-74)
      Allocno a20r180 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a21r147 of SSE_REGS(16) has 15 avail. regs  20 22-27 44-51, ^node:  20-27 44-51 (confl regs =  0-19 21 28-43 52-74)
      Allocno a22r116 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a23r129 of SSE_REGS(16) has 1 avail. regs  21, node:  21 (confl regs =  0-20 28-43 52-74)
      Allocno a24r128 of SSE_REGS(16) has 15 avail. regs  21-27 44-51, node:  21-27 44-51 (confl regs =  0-20 28-43 52-74)
      Allocno a25r179 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a26r142 of SSE_REGS(16) has 14 avail. regs  22-27 44-51, node:  22-27 44-51 (confl regs =  0-21 28-43 52-74)
      Allocno a27r143 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a28r144 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Allocno a29r145 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a30r178 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a31r177 of SSE_REGS(16) has 15 avail. regs  20 22-27 44-51, ^node:  20-27 44-51 (confl regs =  0-19 21 28-43 52-74)
      Allocno a32r86 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a33r176 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a34r85 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a35r175 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a36r84 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a37r174 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a38r173 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Allocno a48r90 of GENERAL_REGS(15) has 13 avail. regs  0-3 6 36-43, node:  0-3 6 36-43 (confl regs =  4 5 7-35 44-74)
      Allocno a49r132 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  4 5 7-35 44-74)
      Allocno a60r133 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  4 5 7-35 44-74)
      Allocno a61r184 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a62r107 of SSE_REGS(16) has 15 avail. regs  21-27 44-51, node:  21-27 44-51 (confl regs =  0-20 28-43 52-74)
      Allocno a63r157 of GENERAL_REGS(15) has 13 avail. regs  0-3 6 36-43, node:  0-3 6 36-43 (confl regs =  4 5 7-35 44-74)
      Allocno a64r162 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a65r121 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a67r161 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a68r130 of SSE_REGS(16) has 15 avail. regs  21-27 44-51, node:  21-27 44-51 (confl regs =  0-20 28-43 52-74)
      Allocno a69r183 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a70r160 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a71r156 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a72r101 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a73r154 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a74r153 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a75r152 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a82r92 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 36-43, ^node:  0-6 36-43 (confl regs =  1 7-35 44-74)
      Allocno a83r181 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Forming thread by copy 1:a65r121-a69r183 (freq=1000):
        Result (freq=5000): a65r121(3000) a69r183(2000)
      Forming thread by copy 2:a67r161-a68r130 (freq=1000):
        Result (freq=4000): a67r161(2000) a68r130(2000)
      Forming thread by copy 3:a64r162-a66r131 (freq=1000):
        Result (freq=4000): a64r162(2000) a66r131(2000)
      Forming thread by copy 5:a7r134-a75r152 (freq=1000):
        Result (freq=7711): a7r134(5711) a75r152(2000)
      Forming thread by copy 18:a19r140-a38r173 (freq=1000):
        Result (freq=3459): a19r140(1459) a38r173(2000)
      Forming thread by copy 9:a82r92-a83r181 (freq=618):
        Result (freq=3089): a82r92(1853) a83r181(1236)
      Forming thread by copy 0:a63r157-a71r156 (freq=125):
        Result (freq=5000): a63r157(3000) a71r156(2000)
      Forming thread by copy 6:a72r101-a75r152 (freq=125):
        Result (freq=10711): a72r101(3000) a7r134(5711) a75r152(2000)
      Forming thread by copy 7:a73r154-a74r153 (freq=125):
        Result (freq=5000): a73r154(3000) a74r153(2000)
      Forming thread by copy 12:a26r142-a31r177 (freq=76):
        Result (freq=304): a26r142(152) a31r177(152)
      Forming thread by copy 13:a27r143-a30r178 (freq=76):
        Result (freq=304): a27r143(152) a30r178(152)
      Forming thread by copy 14:a22r116-a25r179 (freq=76):
        Result (freq=380): a22r116(228) a25r179(152)
      Forming thread by copy 15:a21r147-a24r128 (freq=76):
        Result (freq=304): a21r147(152) a24r128(152)
      Forming thread by copy 16:a34r85-a35r175 (freq=76):
        Result (freq=304): a34r85(152) a35r175(152)
      Forming thread by copy 17:a32r86-a33r176 (freq=76):
        Result (freq=304): a32r86(152) a33r176(152)
      Pushing a17(r89,l0)(cost 0)
      Pushing a29(r145,l0)(cost 0)
      Pushing a28(r144,l0)(cost 0)
      Pushing a20(r180,l0)(cost 0)
      Pushing a12(r149,l0)(cost 0)
      Pushing a11(r150,l0)(cost 0)
      Pushing a10(r151,l0)(cost 0)
      Pushing a9(r182,l0)(cost 0)
      Pushing a35(r175,l0)(cost 0)
      Pushing a34(r85,l0)(cost 0)
      Pushing a33(r176,l0)(cost 0)
      Pushing a32(r86,l0)(cost 0)
      Pushing a30(r178,l0)(cost 0)
      Pushing a27(r143,l0)(cost 0)
      Pushing a31(r177,l0)(cost 0)
      Pushing a26(r142,l0)(cost 0)
      Pushing a21(r147,l0)(cost 0)
      Pushing a24(r128,l0)(cost 0)
      Pushing a25(r179,l0)(cost 0)
      Pushing a22(r116,l0)(cost 0)
        Making a23(r129,l0) colorable
      Pushing a23(r129,l0)(cost 76)
      Pushing a1(r82,l0)(cost 0)
      Pushing a70(r160,l0)(cost 0)
      Pushing a61(r184,l0)(cost 0)
      Pushing a37(r174,l0)(cost 0)
      Pushing a36(r84,l0)(cost 0)
      Pushing a15(r94,l0)(cost 0)
      Pushing a62(r107,l0)(cost 0)
      Pushing a83(r181,l0)(cost 0)
        Making a13(r167,l0) colorable
        Making a14(r166,l0) colorable
      Forming thread by copy 10:a16r136-a17r89 (freq=8):
        Result (freq=2064): a16r136(1920) a17r89(144)
        Making a16(r136,l0) colorable
      Pushing a14(r166,l0)(cost 5772)
        Making a18(r88,l0) colorable
      Pushing a13(r167,l0)(cost 6588)
      Pushing a18(r88,l0)(cost 5213)
      Pushing a16(r136,l0)(cost 12690)
      Pushing a82(r92,l0)(cost 0)
      Pushing a19(r140,l0)(cost 0)
      Pushing a38(r173,l0)(cost 0)
      Pushing a67(r161,l0)(cost 0)
      Pushing a68(r130,l0)(cost 0)
      Pushing a64(r162,l0)(cost 0)
      Pushing a74(r153,l0)(cost 0)
      Pushing a73(r154,l0)(cost 0)
        Making a48(r90,l0) colorable
      Pushing a69(r183,l0)(cost 0)
      Pushing a65(r121,l0)(cost 0)
      Pushing a71(r156,l0)(cost 0)
      Pushing a63(r157,l0)(cost 0)
      Pushing a48(r90,l0)(cost 38306)
        Making a8(r83,l0) colorable
      Pushing a8(r83,l0)(cost 34376)
      Pushing a75(r152,l0)(cost 0)
      Pushing a72(r101,l0)(cost 0)
      Pushing a7(r134,l0)(cost 0)
      Pushing a6(r99,l0)(potential spill: pri=6456, cost=6456)
      Pushing a2(r172,l0)(potential spill: pri=10456, cost=10456)
        Making a3(r170,l0) colorable
        Making a4(r169,l0) colorable
        Making a5(r87,l0) colorable
      Forming thread by copy 8:a0r139-a9r182 (freq=76):
        Result (freq=2919): a0r139(2767) a9r182(152)
      Forming thread by copy 11:a0r139-a20r180 (freq=76):
        Result (freq=3071): a0r139(2767) a20r180(152) a9r182(152)
        Making a0(r139,l0) colorable
        Making a49(r132,l0) colorable
        Making a60(r133,l0) colorable
      Pushing a3(r170,l0)(cost 10456)
      Pushing a4(r169,l0)(cost 12456)
      Pushing a49(r132,l0)(cost 21306)
      Pushing a5(r87,l0)(cost 14741)
      Pushing a60(r133,l0)(cost 18000)
      Pushing a0(r139,l0)(cost 23688)
      Popping a0(r139,l0)  -- assign reg 40
      Popping a60(r133,l0)  -- assign reg 3
      Popping a5(r87,l0)  -- assign reg 6
      Popping a49(r132,l0)  -- assign reg 41
      Popping a4(r169,l0)  -- assign reg 42
      Popping a3(r170,l0)  -- assign reg 43
      Popping a2(r172,l0)  -- spill
      Popping a6(r99,l0)  -- spill
      Popping a7(r134,l0)  -- assign reg 0
      Popping a72(r101,l0)  -- assign reg 0
      Popping a75(r152,l0)  -- assign reg 0
      Popping a8(r83,l0)  -- assign reg 36
      Popping a48(r90,l0)  -- assign reg 1
      Popping a63(r157,l0)  -- assign reg 0
      Popping a71(r156,l0)  -- assign reg 0
      Popping a65(r121,l0)  -- assign reg 20
      Popping a69(r183,l0)  -- assign reg 20
      Popping a73(r154,l0)  -- assign reg 2
      Popping a74(r153,l0)  -- assign reg 2
      Popping a64(r162,l0)  -- assign reg 20
      Popping a68(r130,l0)  -- assign reg 21
      Popping a67(r161,l0)  -- assign reg 21
      Popping a38(r173,l0)  -- assign reg 5
      Popping a19(r140,l0)  -- assign reg 3
      Popping a82(r92,l0)  -- assign reg 4
      Popping a16(r136,l0)  -- assign reg 3
      Popping a18(r88,l0)  -- assign reg 6
      Popping a13(r167,l0)  -- assign reg 41
      Popping a14(r166,l0)  -- assign reg 42
      Popping a83(r181,l0)  -- assign reg 0
      Popping a62(r107,l0)  -- assign reg 22
      Popping a15(r94,l0)  -- assign reg 43
      Popping a36(r84,l0)  -- assign reg 0
      Popping a37(r174,l0)  -- assign reg 4
      Popping a61(r184,l0)  -- assign reg 20
      Popping a70(r160,l0)  -- assign reg 20
      Popping a1(r82,l0)  -- assign reg 1
      Popping a23(r129,l0)  -- (memory is more profitable 988 vs 1086) spill!
      Popping a22(r116,l0)  -- assign reg 21
      Popping a25(r179,l0)  -- assign reg 20
      Popping a24(r128,l0)  -- assign reg 22
      Popping a21(r147,l0)  -- assign reg 20
      Popping a26(r142,l0)  -- assign reg 23
      Popping a31(r177,l0)  -- assign reg 20
      Popping a27(r143,l0)  -- assign reg 20
      Popping a30(r178,l0)  -- assign reg 21
      Popping a32(r86,l0)  -- assign reg 20
      Popping a33(r176,l0)  -- assign reg 20
      Popping a34(r85,l0)  -- assign reg 20
      Popping a35(r175,l0)  -- assign reg 20
      Popping a9(r182,l0)  -- assign reg 0
      Popping a10(r151,l0)  -- assign reg 5
      Popping a11(r150,l0)  -- assign reg 4
      Popping a12(r149,l0)  -- assign reg 1
      Popping a20(r180,l0)  -- assign reg 0
      Popping a28(r144,l0)  -- assign reg 5
      Popping a29(r145,l0)  -- assign reg 4
      Popping a17(r89,l0)  -- assign reg 3
Spilling a3r170 for a8r83
Assigning 43 to a8r83
Spilling a4r169 for a48r90
Assigning 42 to a48r90
       a3(r170,l0)  -- assign memory
       a4(r169,l0)  -- assign memory
Disposition:
    1:r82  l0     1    8:r83  l0    43   36:r84  l0     0   34:r85  l0    20
   32:r86  l0    20    5:r87  l0     6   18:r88  l0     6   17:r89  l0     3
   48:r90  l0    42   82:r92  l0     4   15:r94  l0    43    6:r99  l0   mem
   72:r101 l0     0   62:r107 l0    22   22:r116 l0    21   65:r121 l0    20
   24:r128 l0    22   23:r129 l0   mem   68:r130 l0    21   66:r131 l0   mem
   49:r132 l0    41   60:r133 l0     3    7:r134 l0     0   16:r136 l0     3
    0:r139 l0    40   19:r140 l0     3   26:r142 l0    23   27:r143 l0    20
   28:r144 l0     5   29:r145 l0     4   21:r147 l0    20   12:r149 l0     1
   11:r150 l0     4   10:r151 l0     5   75:r152 l0     0   74:r153 l0     2
   73:r154 l0     2   71:r156 l0     0   63:r157 l0     0   70:r160 l0    20
   67:r161 l0    21   64:r162 l0    20   14:r166 l0    42   13:r167 l0    41
    4:r169 l0   mem    3:r170 l0   mem    2:r172 l0   mem   38:r173 l0     5
   37:r174 l0     4   35:r175 l0    20   33:r176 l0    20   31:r177 l0    20
   30:r178 l0    21   25:r179 l0    20   20:r180 l0     0   83:r181 l0     0
    9:r182 l0     0   69:r183 l0    20   61:r184 l0    20
New iteration of spill/restore move
+++Costs: overall 97807, reg 41843, mem 55964, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_exp

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags] 20 [xmm0] 21 [xmm1]
;;  ref usage 	r0={17d,5u} r1={20d,4u} r2={19d,3u} r4={22d,7u} r5={25d,10u} r6={1d,31u} r7={1d,46u} r8={15d} r9={15d} r10={15d} r11={15d} r12={15d} r13={15d} r14={15d} r15={15d} r16={1d,30u} r17={49d,17u} r18={15d} r19={1d,39u,7e} r20={24d,14u} r21={17d,2u} r22={16d} r23={16d} r24={16d} r25={16d} r26={16d} r27={16d} r28={15d} r29={15d} r30={15d} r31={15d} r32={15d} r33={15d} r34={15d} r35={15d} r36={16d} r37={16d} r38={15d} r39={15d} r44={15d} r45={15d} r46={15d} r47={15d} r48={15d} r49={15d} r50={15d} r51={15d} r52={15d} r53={15d} r54={15d} r55={15d} r56={15d} r57={15d} r58={15d} r59={15d} r60={15d} r61={15d} r62={15d} r63={15d} r64={15d} r65={15d} r66={15d} r67={15d} r68={15d} r69={15d} r70={15d} r71={15d} r72={15d} r73={15d} r74={15d} r75={15d} r82={2d,4u} r83={1d,15u,2e} r84={1d,5u} r85={1d,2u} r86={1d,1u} r87={3d,8u} r88={1d,5u} r89={1d,2u} r90={3d,8u} r92={1d,3u} r94={2d,5u} r99={1d,3u} r101={1d,4u} r107={1d,3u} r116={1d,5u} r121={1d,5u} r128={1d,2u} r129={1d,2u} r130={1d,2u} r131={1d,2u} r132={1d,3u,1e} r133={1d,2u,2e} r134={3d,5u} r136={2d,2u} r139={3d,6u} r140={1d,4u} r142={1d,2u} r143={1d,2u} r144={1d,1u} r145={1d,1u} r147={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,2u} r156={1d,1u} r157={1d,3u,2e} r160={1d,1u} r161={1d,1u} r162={1d,1u} r166={1d,1u} r167={1d,1u} r169={1d,2u,1e} r170={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} 
;;    total ref usage 1530{1160d,355u,15e} in 286{271 regular + 15 call} insns.
(note 1 0 12 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 139 140 173 174
(note 12 1 416 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 416 12 2 2 (set (reg:DI 173)
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_math.c":123:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ arg ])
        (nil)))
(insn 2 416 417 2 (set (reg/v/f:DI 140 [ arg ])
        (reg:DI 173)) "cmodules/fbgc_math.c":123:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 173)
        (nil)))
(insn 417 2 3 2 (set (reg:SI 174)
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_math.c":123:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ argc ])
        (nil)))
(note 3 417 4 2 NOTE_INSN_DELETED)
(note 4 3 14 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 14 4 11 2 (debug_marker) "cmodules/fbgc_math.c":123:1 -1
     (nil))
(insn 11 14 15 2 (set (reg/v/f:DI 139 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":123:1 66 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 15 11 16 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 174)
            (const_int 1 [0x1]))) "cmodules/fbgc_math.c":123:1 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 174)
        (nil)))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 375)
            (pc))) "cmodules/fbgc_math.c":123:1 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 662283964 (nil)))
 -> 375)
;;  succ:       3 [38.3% (guessed)]  count:411457864 (estimated locally) (FALLTHRU)
;;              31 [61.7% (guessed)]  count:662283960 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 139 140

;; basic block 3, loop depth 0, count 411457868 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [38.3% (guessed)]  count:411457864 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 139 140
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 140
;; lr  def 	 17 [flags] 83 84
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 18 17 19 3 (var_location:SI D#18 (const_int 1 [0x1])) -1
     (nil))
(debug_insn 19 18 20 3 (var_location:DI arg (reg/v/f:DI 140 [ arg ])) -1
     (nil))
(debug_insn 20 19 21 3 (debug_marker:BLK) "cmodules/fbgc_math.c":123:1 -1
     (nil))
(debug_insn 21 20 22 3 (var_location:SI D#19 (debug_expr:SI D#18)) -1
     (nil))
(debug_insn 22 21 23 3 (var_location:SI argc (debug_expr:SI D#19)) -1
     (nil))
(debug_insn 23 22 24 3 (var_location:DI arg (reg/v/f:DI 140 [ arg ])) -1
     (nil))
(debug_insn 24 23 25 3 (var_location:SI argc (const_int 1 [0x1])) -1
     (nil))
(debug_insn 25 24 26 3 (var_location:DI fun (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>)) -1
     (nil))
(debug_insn 26 25 27 3 (var_location:DI zfun (symbol_ref:DI ("c_exp") [flags 0x3]  <function_decl 0x7f213dfa5c00 c_exp>)) -1
     (nil))
(debug_insn 27 26 28 3 (debug_marker:BLK) "cmodules/fbgc_math.c":50:22 -1
     (nil))
(debug_insn 28 27 29 3 (debug_marker) "cmodules/fbgc_math.c":53:2 -1
     (nil))
(insn 29 28 30 3 (set (reg/f:DI 83 [ _10 ])
        (mem/f:DI (reg/v/f:DI 140 [ arg ]) [3 *arg_5(D)+0 S8 A64])) "cmodules/fbgc_math.c":53:12 66 {*movdi_internal}
     (nil))
(insn 30 29 31 3 (set (reg:QI 84 [ _11 ])
        (mem:QI (reg/f:DI 83 [ _10 ]) [0 _10->type+0 S1 A8])) "cmodules/fbgc_math.c":53:15 69 {*movqi_internal}
     (nil))
(insn 31 30 32 3 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 84 [ _11 ])
            (const_int 7 [0x7]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (nil))
(jump_insn 32 31 33 3 (set (pc)
        (if_then_else (eq (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 198)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (int_list:REG_BR_PROB 214748374 (nil))
 -> 198)
;;  succ:       4 [80.0% (adjusted)]  count:329166293 (estimated locally) (FALLTHRU)
;;              20 [20.0% (adjusted)]  count:82291575 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 17 [flags] 19 [frame] 83 84 139 140

;; basic block 4, loop depth 0, count 411457868 (estimated locally), maybe hot
;; Invalid sum of incoming counts 329166293 (estimated locally), should be 411457868 (estimated locally)
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [80.0% (adjusted)]  count:329166293 (estimated locally) (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(6){ }u19(7){ }u20(16){ }u21(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 17 [flags] 19 [frame] 83 84 139 140
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 17 [flags] 19 [frame]
;; lr  def 	
(note 33 32 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 37 33 38 4 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 402653190 (nil)))
 -> 58)
;;  succ:       5 [62.5% (adjusted)]  count:257161168 (estimated locally) (FALLTHRU)
;;              10 [37.5% (adjusted)]  count:154296701 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 139 140

;; basic block 5, loop depth 0, count 411457868 (estimated locally), maybe hot
;; Invalid sum of incoming counts 257161168 (estimated locally), should be 411457868 (estimated locally)
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [62.5% (adjusted)]  count:257161168 (estimated locally) (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 139
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; lr  def 	 17 [flags]
(note 38 37 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 41 38 42 5 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 84 [ _11 ])
            (const_int 4 [0x4]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (nil))
(jump_insn 42 41 43 5 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 536870926 (nil)))
 -> 51)
;;  succ:       6 [50.0% (adjusted)]  count:205728931 (estimated locally) (FALLTHRU)
;;              8 [50.0% (adjusted)]  count:205728937 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 139

;; basic block 6, loop depth 0, count 411457868 (estimated locally), maybe hot
;; Invalid sum of incoming counts 205728931 (estimated locally), should be 411457868 (estimated locally)
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [50.0% (adjusted)]  count:205728931 (estimated locally) (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u29(6){ }u30(7){ }u31(16){ }u32(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 139
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; lr  def 	 17 [flags]
(note 43 42 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 46 43 47 6 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 84 [ _11 ])
            (const_int 2 [0x2]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 84 [ _11 ])
        (nil)))
(jump_insn 47 46 428 6 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 375)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 596523246 (nil)))
 -> 375)
;;  succ:       31 [55.6% (adjusted)]  count:228587706 (estimated locally)
;;              7 [44.4% (adjusted)]  count:182870162 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 139

;; basic block 7, loop depth 0, count 182870162 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL)
;;  pred:       6 [44.4% (adjusted)]  count:182870162 (estimated locally) (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 428 47 429 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 429 428 430 7 (set (pc)
        (label_ref 65)) 660 {jump}
     (nil)
 -> 65)
;;  succ:       12 [always]  count:182870162 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83

(barrier 430 429 51)
;; basic block 8, loop depth 0, count 411457868 (estimated locally), maybe hot
;; Invalid sum of incoming counts 205728937 (estimated locally), should be 411457868 (estimated locally)
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [50.0% (adjusted)]  count:205728937 (estimated locally)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u39(6){ }u40(7){ }u41(16){ }u42(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 139
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; lr  def 	 17 [flags]
(code_label 51 430 52 8 81 (nil) [1 uses])
(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 84 [ _11 ])
            (const_int 5 [0x5]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 84 [ _11 ])
        (nil)))
(jump_insn 54 53 431 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 858993454 (nil)))
 -> 80)
;;  succ:       9 [20.0% (adjusted)]  count:82291578 (estimated locally) (FALLTHRU)
;;              13 [80.0% (adjusted)]  count:329166290 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 139

;; basic block 9, loop depth 0, count 82291578 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (HOT_PARTITION, RTL)
;;  pred:       8 [20.0% (adjusted)]  count:82291578 (estimated locally) (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 139
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 431 54 432 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 432 431 433 9 (set (pc)
        (label_ref 375)) 660 {jump}
     (nil)
 -> 375)
;;  succ:       31 [always]  count:82291578 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 139

(barrier 433 432 58)
;; basic block 10, loop depth 0, count 411457868 (estimated locally), maybe hot
;; Invalid sum of incoming counts 154296701 (estimated locally), should be 411457868 (estimated locally)
;;  prev block 9, next block 11, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [37.5% (adjusted)]  count:154296701 (estimated locally)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u49(6){ }u50(7){ }u51(16){ }u52(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 139 140
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; lr  def 	 17 [flags]
(code_label 58 433 59 10 80 (nil) [1 uses])
(note 59 58 60 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 84 [ _11 ])
            (const_int 8 [0x8]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 84 [ _11 ])
        (nil)))
(jump_insn 61 60 434 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 133)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 715827886 (nil)))
 -> 133)
;;  succ:       11 [33.3% (adjusted)]  count:137152624 (estimated locally) (FALLTHRU)
;;              14 [66.7% (adjusted)]  count:274305244 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 139 140

;; basic block 11, loop depth 0, count 137152624 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (HOT_PARTITION, RTL)
;;  pred:       10 [33.3% (adjusted)]  count:137152624 (estimated locally) (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 139
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 434 61 435 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 435 434 436 11 (set (pc)
        (label_ref 375)) 660 {jump}
     (nil)
 -> 375)
;;  succ:       31 [always]  count:137152624 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 139

(barrier 436 435 65)
;; basic block 12, loop depth 0, count 82291576 (estimated locally), maybe hot
;; Invalid sum of incoming counts 182870162 (estimated locally), should be 82291576 (estimated locally)
;;  prev block 11, next block 13, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [always]  count:182870162 (estimated locally)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u59(6){ }u60(7){ }u61(16){ }u62(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 85 86 175 176
(code_label 65 436 66 12 82 (nil) [1 uses])
(note 66 65 67 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 67 66 68 12 (debug_marker) "cmodules/fbgc_math.c":58:4 -1
     (nil))
(insn 68 67 69 12 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _10 ])) "cmodules/fbgc_math.c":58:19 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ _10 ])
        (nil)))
(call_insn 69 68 418 12 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f213e3db700 convert_fbgc_object_to_double>) [0 convert_fbgc_object_to_double S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":58:19 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f213e3db700 convert_fbgc_object_to_double>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 418 69 70 12 (set (reg:DF 175)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":58:19 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (nil)))
(insn 70 418 71 12 (set (reg/v:DF 85 [ dbarg ])
        (reg:DF 175)) "cmodules/fbgc_math.c":58:19 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 175)
        (nil)))
(debug_insn 71 70 72 12 (var_location:DF dbarg (reg/v:DF 85 [ dbarg ])) "cmodules/fbgc_math.c":58:19 -1
     (nil))
(debug_insn 72 71 73 12 (debug_marker) "cmodules/fbgc_math.c":59:4 -1
     (nil))
(insn 73 72 74 12 (set (reg:DF 20 xmm0)
        (reg/v:DF 85 [ dbarg ])) "cmodules/fbgc_math.c":59:11 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg/v:DF 85 [ dbarg ])
        (nil)))
(call_insn 74 73 419 12 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":59:11 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 419 74 75 12 (set (reg:DF 176)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":59:11 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (nil)))
(insn 75 419 76 12 (set (reg:DF 86 [ _13 ])
        (reg:DF 176)) "cmodules/fbgc_math.c":59:11 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 176)
        (nil)))
(insn 76 75 77 12 (set (reg:DF 20 xmm0)
        (reg:DF 86 [ _13 ])) "cmodules/fbgc_math.c":59:11 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 86 [ _13 ])
        (nil)))
(call_insn/j 77 76 78 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f213e3e6d00 new_fbgc_double_object>) [0 new_fbgc_double_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":59:11 681 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f213e3e6d00 new_fbgc_double_object>)
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
;;  succ:       EXIT [always]  count:82291576 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 78 77 80)
;; basic block 13, loop depth 0, count 82291576 (estimated locally), maybe hot
;; Invalid sum of incoming counts 329166290 (estimated locally), should be 82291576 (estimated locally)
;;  prev block 12, next block 14, flags: (HOT_PARTITION, RTL)
;;  pred:       8 [80.0% (adjusted)]  count:329166290 (estimated locally)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u75(6){ }u76(7){ }u77(16){ }u78(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 116 128 129 142 143 144 145 147 177 178 179
(code_label 80 78 81 13 83 (nil) [1 uses])
(note 81 80 82 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 82 81 83 13 (debug_marker) "cmodules/fbgc_math.c":63:4 -1
     (nil))
(insn 83 82 84 13 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _10 ])) "cmodules/fbgc_math.c":63:27 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ _10 ])
        (nil)))
(call_insn 84 83 420 13 (set (parallel:TI [
                (expr_list:REG_DEP_TRUE (reg:DF 20 xmm0)
                    (const_int 0 [0]))
                (expr_list:REG_DEP_TRUE (reg:DF 21 xmm1)
                    (const_int 8 [0x8]))
            ])
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_complex") [flags 0x41]  <function_decl 0x7f213e3db800 convert_fbgc_object_to_complex>) [0 convert_fbgc_object_to_complex S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":63:27 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_complex") [flags 0x41]  <function_decl 0x7f213e3db800 convert_fbgc_object_to_complex>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 420 84 85 13 (set (reg:DF 177)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":63:27 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (nil)))
(insn 85 420 421 13 (set (reg:DF 142)
        (reg:DF 177)) "cmodules/fbgc_math.c":63:27 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 177)
        (nil)))
(insn 421 85 86 13 (set (reg:DF 178)
        (reg:DF 21 xmm1)) "cmodules/fbgc_math.c":63:27 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm1)
        (nil)))
(insn 86 421 396 13 (set (reg:DF 143)
        (reg:DF 178)) "cmodules/fbgc_math.c":63:27 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 178)
        (nil)))
(debug_insn 396 86 391 13 (var_location:DI D#37 (subreg:DI (reg:DF 142) 0)) -1
     (nil))
(debug_insn 391 396 395 13 (var_location:DI D#35 (debug_expr:DI D#37)) -1
     (nil))
(debug_insn 395 391 390 13 (var_location:DI D#36 (subreg:DI (reg:DF 143) 0)) -1
     (nil))
(debug_insn 390 395 90 13 (var_location:DI D#34 (debug_expr:DI D#36)) -1
     (nil))
(debug_insn 90 390 91 13 (debug_marker) "cmodules/fbgc_math.c":64:4 -1
     (nil))
(debug_insn 91 90 92 13 (var_location:DF z$real (subreg:DF (debug_expr:DI D#35) 0)) -1
     (nil))
(debug_insn 92 91 93 13 (var_location:DF D#32 (subreg:DF (debug_expr:DI D#34) 0)) -1
     (nil))
(insn 93 92 94 13 (parallel [
            (set (reg/f:DI 144)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))
(insn 94 93 95 13 (parallel [
            (set (reg/f:DI 145)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 95 94 96 13 (set (reg:DI 4 si)
        (reg/f:DI 145)) 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 145)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 96 95 97 13 (set (reg:DI 5 di)
        (reg/f:DI 144)) 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 144)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))
(insn 97 96 98 13 (set (reg:DF 20 xmm0)
        (reg:DF 143)) 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 143)
        (nil)))
(call_insn 98 97 99 13 (call (mem:QI (symbol_ref:DI ("sincos") [flags 0x41]  <function_decl 0x7f213e4ba400 __builtin_sincos>) [0 __builtin_sincos S1 A8])
        (const_int 0 [0])) 666 {*call}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("sincos") [flags 0x41]  <function_decl 0x7f213e4ba400 __builtin_sincos>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 99 98 100 13 (set (reg:DF 128 [ sincostmp_107 ])
        (mem/c:DF (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2  S8 A64])) 111 {*movdf_internal}
     (nil))
(insn 100 99 101 13 (set (reg:DF 129 [ sincostmp_107+8 ])
        (mem/c:DF (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [2  S8 A64])) 111 {*movdf_internal}
     (nil))
(debug_insn 101 100 102 13 (var_location:DF z$8 (debug_expr:DF D#32)) -1
     (nil))
(debug_insn 102 101 103 13 (debug_marker:BLK) "cmodules/fbgc_math.c":22:20 -1
     (nil))
(debug_insn 103 102 104 13 (var_location:DF z$imag (debug_expr:DF D#32)) -1
     (nil))
(debug_insn 104 103 105 13 (debug_marker) "cmodules/fbgc_math.c":24:2 -1
     (nil))
(debug_insn 105 104 106 13 (debug_marker) "cmodules/fbgc_math.c":25:2 -1
     (nil))
(insn 106 105 107 13 (set (reg:DF 20 xmm0)
        (reg:DF 142)) "cmodules/fbgc_math.c":25:13 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 142)
        (nil)))
(call_insn 107 106 422 13 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":25:13 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 422 107 108 13 (set (reg:DF 179)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":25:13 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (nil)))
(insn 108 422 109 13 (set (reg/v:DF 116 [ r ])
        (reg:DF 179)) "cmodules/fbgc_math.c":25:13 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 179)
        (nil)))
(debug_insn 109 108 110 13 (var_location:DF r (reg/v:DF 116 [ r ])) "cmodules/fbgc_math.c":25:13 -1
     (nil))
(debug_insn 110 109 111 13 (debug_marker) "cmodules/fbgc_math.c":26:2 -1
     (nil))
(debug_insn 111 110 112 13 (var_location:DF res$real (mult:DF (reg:DF 128 [ sincostmp_107 ])
        (reg/v:DF 116 [ r ]))) "cmodules/fbgc_math.c":26:11 -1
     (nil))
(debug_insn 112 111 113 13 (debug_marker) "cmodules/fbgc_math.c":27:2 -1
     (nil))
(debug_insn 113 112 114 13 (var_location:DF res$imag (mult:DF (reg:DF 129 [ sincostmp_107+8 ])
        (reg/v:DF 116 [ r ]))) "cmodules/fbgc_math.c":27:11 -1
     (nil))
(debug_insn 114 113 115 13 (debug_marker) "cmodules/fbgc_math.c":28:2 -1
     (nil))
(debug_insn 115 114 116 13 (var_location:DF D#1 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 116 115 117 13 (var_location:DF res$real (debug_expr:DF D#1)) -1
     (nil))
(debug_insn 117 116 118 13 (var_location:DF D#2 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 118 117 119 13 (var_location:DF res$imag (debug_expr:DF D#2)) -1
     (nil))
(debug_insn 119 118 120 13 (var_location:DF r (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":64:9 -1
     (nil))
(debug_insn 120 119 121 13 (var_location:DF z$imag (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":64:9 -1
     (nil))
(debug_insn 121 120 122 13 (var_location:DF D#29 (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":64:9 -1
     (nil))
(debug_insn 122 121 123 13 (var_location:DF z$real (debug_expr:DF D#29)) "cmodules/fbgc_math.c":64:9 -1
     (nil))
(debug_insn 123 122 124 13 (var_location:DF D#30 (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":64:9 -1
     (nil))
(debug_insn 124 123 125 13 (var_location:DF z$8 (debug_expr:DF D#30)) "cmodules/fbgc_math.c":64:9 -1
     (nil))
(debug_insn 125 124 126 13 (debug_marker) "cmodules/fbgc_math.c":65:4 -1
     (nil))
(note 126 125 127 13 NOTE_INSN_DELETED)
(insn 127 126 128 13 (set (reg:DF 147)
        (mult:DF (reg:DF 128 [ sincostmp_107 ])
            (reg/v:DF 116 [ r ]))) "cmodules/fbgc_math.c":26:14 818 {*fop_df_comm}
     (expr_list:REG_DEAD (reg:DF 128 [ sincostmp_107 ])
        (nil)))
(insn 128 127 129 13 (set (reg:DF 21 xmm1)
        (mult:DF (reg:DF 129 [ sincostmp_107+8 ])
            (reg/v:DF 116 [ r ]))) "cmodules/fbgc_math.c":65:11 818 {*fop_df_comm}
     (expr_list:REG_DEAD (reg:DF 129 [ sincostmp_107+8 ])
        (expr_list:REG_DEAD (reg/v:DF 116 [ r ])
            (nil))))
(insn 129 128 130 13 (set (reg:DF 20 xmm0)
        (reg:DF 147)) "cmodules/fbgc_math.c":65:11 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 147)
        (nil)))
(call_insn/j 130 129 131 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_complex_object") [flags 0x41]  <function_decl 0x7f213e3f0300 new_fbgc_complex_object>) [0 new_fbgc_complex_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":65:11 681 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm1)
        (expr_list:REG_DEAD (reg:DF 20 xmm0)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_complex_object") [flags 0x41]  <function_decl 0x7f213e3f0300 new_fbgc_complex_object>)
                (nil))))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (expr_list:DF (use (reg:DF 21 xmm1))
            (nil))))
;;  succ:       EXIT [always]  count:82291576 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 131 130 133)
;; basic block 14, loop depth 0, count 82291576 (estimated locally), maybe hot
;; Invalid sum of incoming counts 274305244 (estimated locally), should be 82291576 (estimated locally)
;;  prev block 13, next block 15, flags: (HOT_PARTITION, RTL)
;;  pred:       10 [66.7% (adjusted)]  count:274305244 (estimated locally)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u117(6){ }u118(7){ }u119(16){ }u120(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 140
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 140
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 88 89 139 180
(code_label 133 131 134 14 84 (nil) [1 uses])
(note 134 133 135 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 135 134 136 14 (debug_marker) "cmodules/fbgc_math.c":69:4 -1
     (nil))
(insn 136 135 137 14 (set (reg/v:SI 88 [ sz ])
        (mem:SI (plus:DI (reg/f:DI 83 [ _10 ])
                (const_int 13 [0xd])) [5 MEM[(struct fbgc_tuple_object *)_10].size+0 S4 A8])) "cmodules/fbgc_math.c":69:11 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ _10 ])
        (nil)))
(debug_insn 137 136 138 14 (var_location:SI sz (reg/v:SI 88 [ sz ])) "cmodules/fbgc_math.c":69:11 -1
     (nil))
(debug_insn 138 137 139 14 (debug_marker) "cmodules/fbgc_math.c":70:4 -1
     (nil))
(insn 139 138 140 14 (set (reg:SI 5 di)
        (reg/v:SI 88 [ sz ])) "cmodules/fbgc_math.c":70:34 67 {*movsi_internal}
     (nil))
(call_insn 140 139 423 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f213e3fec00 new_fbgc_tuple_object>) [0 new_fbgc_tuple_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":70:34 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f213e3fec00 new_fbgc_tuple_object>)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 423 140 141 14 (set (reg:DI 180)
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":70:34 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 141 423 142 14 (set (reg/v/f:DI 139 [ <retval> ])
        (reg:DI 180)) "cmodules/fbgc_math.c":70:34 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 180)
        (nil)))
(debug_insn 142 141 143 14 (var_location:DI res_tp (reg/v/f:DI 139 [ <retval> ])) "cmodules/fbgc_math.c":70:34 -1
     (nil))
(debug_insn 143 142 144 14 (debug_marker) "cmodules/fbgc_math.c":71:4 -1
     (nil))
(insn 144 143 145 14 (set (mem:SI (plus:DI (reg/v/f:DI 139 [ <retval> ])
                (const_int 13 [0xd])) [5 MEM[(struct fbgc_tuple_object *)res_tp_19].size+0 S4 A8])
        (reg/v:SI 88 [ sz ])) "cmodules/fbgc_math.c":71:35 67 {*movsi_internal}
     (nil))
(debug_insn 145 144 146 14 (debug_marker) "cmodules/fbgc_math.c":72:4 -1
     (nil))
(insn 146 145 147 14 (set (reg/f:DI 89 [ _20 ])
        (mem/f:DI (reg/v/f:DI 140 [ arg ]) [3 *arg_5(D)+0 S8 A64])) "cmodules/fbgc_math.c":72:39 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 140 [ arg ])
        (nil)))
(debug_insn 147 146 148 14 (var_location:DI D#31 (plus:DI (reg/f:DI 89 [ _20 ])
        (const_int 17 [0x11]))) "cmodules/fbgc_math.c":72:26 -1
     (nil))
(debug_insn 148 147 149 14 (var_location:DI tp_content (debug_expr:DI D#31)) "cmodules/fbgc_math.c":72:26 -1
     (nil))
(debug_insn 149 148 150 14 (debug_marker) "cmodules/fbgc_math.c":72:67 -1
     (nil))
(debug_insn 150 149 151 14 (debug_marker) "cmodules/fbgc_math.c":74:4 -1
     (nil))
(debug_insn 151 150 152 14 (debug_marker) "cmodules/fbgc_math.c":74:8 -1
     (nil))
(debug_insn 152 151 153 14 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 153 152 154 14 (debug_marker) "cmodules/fbgc_math.c":74:22 -1
     (nil))
(insn 154 153 155 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 88 [ sz ])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":74:4 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 155 154 156 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 375)
            (pc))) "cmodules/fbgc_math.c":74:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 375)
;;  succ:       15 [89.0% (guessed)]  count:73239503 (estimated locally) (FALLTHRU)
;;              31 [11.0% (guessed)]  count:9052073 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 89 139

;; basic block 15, loop depth 0, count 73239503 (estimated locally), maybe hot
;;  prev block 14, next block 16, flags: (HOT_PARTITION, RTL)
;;  pred:       14 [89.0% (guessed)]  count:73239503 (estimated locally) (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u134(6){ }u135(7){ }u136(16){ }u137(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 89 139
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 89
;; lr  def 	 17 [flags] 94 136 166 167
(note 156 155 157 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 157 156 5 15 (parallel [
            (set (reg:DI 136 [ ivtmp.93 ])
                (plus:DI (reg/f:DI 89 [ _20 ])
                    (const_int 17 [0x11])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _20 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 5 157 398 15 (set (reg/v:SI 94 [ i ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":74:15 67 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 398 5 161 15 (set (reg:DI 166)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>)
                    ] UNSPEC_GOTPCREL)) [11  S8 A8])) 66 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>)
                    ] UNSPEC_GOTPCREL)) [11  S8 A8])
        (nil)))
(insn 161 398 192 15 (set (reg/f:DI 167)
        (symbol_ref:DI ("c_exp") [flags 0x3]  <function_decl 0x7f213dfa5c00 c_exp>)) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref:DI ("c_exp") [flags 0x3]  <function_decl 0x7f213dfa5c00 c_exp>)
        (nil)))
;;  succ:       16 [always]  count:73239503 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 94 136 139 166 167

;; basic block 16, loop depth 1, count 663665780 (estimated locally), maybe hot
;;  prev block 15, next block 17, flags: (HOT_PARTITION, RTL)
;;  pred:       15 [always]  count:73239503 (estimated locally) (FALLTHRU)
;;              18 [89.0% (guessed)]  count:590426281 (estimated locally) (DFS_BACK)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u139(6){ }u140(7){ }u141(16){ }u142(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 94 136 139 166 167
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 136 166 167
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 92 181
(code_label 192 161 158 16 86 (nil) [1 uses])
(note 158 192 159 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(debug_insn 159 158 160 16 (var_location:SI i (reg/v:SI 94 [ i ])) -1
     (nil))
(debug_insn 160 159 406 16 (debug_marker) "cmodules/fbgc_math.c":76:5 -1
     (nil))
(insn 406 160 163 16 (set (reg:DI 2 cx)
        (reg/f:DI 167)) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (nil))
(insn 163 406 164 16 (set (reg:DI 1 dx)
        (reg:DI 166)) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>)
        (nil)))
(insn 164 163 165 16 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "cmodules/fbgc_math.c":76:35 67 {*movsi_internal}
     (nil))
(insn 165 164 166 16 (set (reg:DI 5 di)
        (reg:DI 136 [ ivtmp.93 ])) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (nil))
(call_insn 166 165 424 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("one_arg_math") [flags 0x3]  <function_decl 0x7f213dfac000 one_arg_math>) [0 one_arg_math S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":76:35 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("one_arg_math") [flags 0x3]  <function_decl 0x7f213dfac000 one_arg_math>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 424 166 167 16 (set (reg:DI 181)
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 167 424 168 16 (set (reg/v/f:DI 92 [ result ])
        (reg:DI 181)) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 181)
        (nil)))
(debug_insn 168 167 169 16 (var_location:DI result (reg/v/f:DI 92 [ result ])) "cmodules/fbgc_math.c":76:35 -1
     (nil))
(debug_insn 169 168 170 16 (debug_marker) "cmodules/fbgc_math.c":77:5 -1
     (nil))
(insn 170 169 171 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 92 [ result ])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":77:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 171 170 172 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 180)
            (pc))) "cmodules/fbgc_math.c":77:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 180)
;;  succ:       18 [100.0% (guessed)]  count:663400314 (estimated locally)
;;              17 [0.0% (guessed)]  count:265466 (estimated locally) (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 92 94 136 139 166 167

;; basic block 17, loop depth 0, count 265465 (estimated locally)
;;  prev block 16, next block 18, flags: (HOT_PARTITION, RTL)
;;  pred:       16 [0.0% (guessed)]  count:265466 (estimated locally) (FALLTHRU,LOOP_EXIT)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u156(6){ }u157(7){ }u158(16){ }u159(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 172 171 173 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(debug_insn 173 172 174 17 (debug_marker) "cmodules/fbgc_math.c":77:5 -1
     (nil))
(insn 174 173 175 17 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.5776") [flags 0x2]  <var_decl 0x7f213dfa6990 __PRETTY_FUNCTION__>)) "cmodules/fbgc_math.c":77:5 66 {*movdi_internal}
     (nil))
(insn 175 174 176 17 (set (reg:SI 1 dx)
        (const_int 77 [0x4d])) "cmodules/fbgc_math.c":77:5 67 {*movsi_internal}
     (nil))
(insn 176 175 177 17 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f213e0b5900 *.LC9>)) "cmodules/fbgc_math.c":77:5 66 {*movdi_internal}
     (nil))
(insn 177 176 178 17 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f213e0b5990 *.LC10>)) "cmodules/fbgc_math.c":77:5 66 {*movdi_internal}
     (nil))
(call_insn 178 177 179 17 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f213e2a1c00 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_math.c":77:5 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f213e2a1c00 __assert_fail>)
                        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                            (expr_list:REG_NORETURN (const_int 0 [0])
                                (expr_list:REG_EH_REGION (const_int 0 [0])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 179 178 180)
;; basic block 18, loop depth 1, count 663400315 (estimated locally), maybe hot
;;  prev block 17, next block 19, flags: (HOT_PARTITION, RTL)
;;  pred:       16 [100.0% (guessed)]  count:663400314 (estimated locally)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u165(6){ }u166(7){ }u167(16){ }u168(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 92 94 136 139 166 167
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 92 94 136 139
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 94 136
(code_label 180 179 181 18 85 (nil) [1 uses])
(note 181 180 182 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(debug_insn 182 181 183 18 (debug_marker) "cmodules/fbgc_math.c":78:5 -1
     (nil))
(insn 183 182 184 18 (set (reg:SI 1 dx)
        (reg/v:SI 94 [ i ])) "cmodules/fbgc_math.c":78:5 67 {*movsi_internal}
     (nil))
(insn 184 183 185 18 (set (reg:DI 4 si)
        (reg/v/f:DI 92 [ result ])) "cmodules/fbgc_math.c":78:5 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 92 [ result ])
        (nil)))
(insn 185 184 186 18 (set (reg:DI 5 di)
        (reg/v/f:DI 139 [ <retval> ])) "cmodules/fbgc_math.c":78:5 66 {*movdi_internal}
     (nil))
(call_insn 186 185 187 18 (call (mem:QI (symbol_ref:DI ("set_object_in_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f213e3fee00 set_object_in_fbgc_tuple_object>) [0 set_object_in_fbgc_tuple_object S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_math.c":78:5 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("set_object_in_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f213e3fee00 set_object_in_fbgc_tuple_object>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(debug_insn 187 186 188 18 (debug_marker) "cmodules/fbgc_math.c":74:31 -1
     (nil))
(insn 188 187 189 18 (parallel [
            (set (reg/v:SI 94 [ i ])
                (plus:SI (reg/v:SI 94 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":74:31 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 189 188 190 18 (var_location:SI i (reg/v:SI 94 [ i ])) -1
     (nil))
(debug_insn 190 189 191 18 (debug_marker) "cmodules/fbgc_math.c":74:22 -1
     (nil))
(insn 191 190 193 18 (parallel [
            (set (reg:DI 136 [ ivtmp.93 ])
                (plus:DI (reg:DI 136 [ ivtmp.93 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 193 191 194 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 88 [ sz ])
            (reg/v:SI 94 [ i ]))) "cmodules/fbgc_math.c":74:4 11 {*cmpsi_1}
     (nil))
(jump_insn 194 193 437 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 192)
            (pc))) "cmodules/fbgc_math.c":74:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 192)
;;  succ:       16 [89.0% (guessed)]  count:590426281 (estimated locally) (DFS_BACK)
;;              19 [11.0% (guessed)]  count:72974034 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 94 136 139 166 167

;; basic block 19, loop depth 0, count 72974034 (estimated locally), maybe hot
;;  prev block 18, next block 20, flags: (HOT_PARTITION, RTL)
;;  pred:       18 [11.0% (guessed)]  count:72974034 (estimated locally) (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 139
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 437 194 438 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(jump_insn 438 437 439 19 (set (pc)
        (label_ref 375)) 660 {jump}
     (nil)
 -> 375)
;;  succ:       31 [always]  count:72974034 (estimated locally) (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 139

(barrier 439 438 198)
;; basic block 20, loop depth 0, count 82291576 (estimated locally), maybe hot
;;  prev block 19, next block 21, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [20.0% (adjusted)]  count:82291575 (estimated locally)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u182(6){ }u183(7){ }u184(16){ }u185(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 82 87 99 134 139 149 150 151 169 170 172 182
(code_label 198 439 199 20 79 (nil) [1 uses])
(note 199 198 200 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(debug_insn 200 199 201 20 (debug_marker) "cmodules/fbgc_math.c":84:4 -1
     (nil))
(debug_insn 201 200 202 20 (var_location:DI m (reg/f:DI 83 [ _10 ])) "cmodules/fbgc_math.c":84:32 -1
     (nil))
(debug_insn 202 201 203 20 (debug_marker) "cmodules/fbgc_math.c":85:4 -1
     (nil))
(insn 203 202 204 20 (set (reg:SI 149 [ MEM[(struct fbgc_matrix_object *)_10].column ])
        (mem:SI (plus:DI (reg/f:DI 83 [ _10 ])
                (const_int 14 [0xe])) [5 MEM[(struct fbgc_matrix_object *)_10].column+0 S4 A8])) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 83 [ _10 ])
                (const_int 14 [0xe])) [5 MEM[(struct fbgc_matrix_object *)_10].column+0 S4 A8])
        (nil)))
(insn 204 203 205 20 (set (reg:SI 150 [ MEM[(struct fbgc_matrix_object *)_10].row ])
        (mem:SI (plus:DI (reg/f:DI 83 [ _10 ])
                (const_int 10 [0xa])) [5 MEM[(struct fbgc_matrix_object *)_10].row+0 S4 A8])) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 83 [ _10 ])
                (const_int 10 [0xa])) [5 MEM[(struct fbgc_matrix_object *)_10].row+0 S4 A8])
        (nil)))
(insn 205 204 206 20 (set (reg:SI 151 [ MEM[(struct fbgc_matrix_object *)_10].sub_type ])
        (zero_extend:SI (mem:QI (plus:DI (reg/f:DI 83 [ _10 ])
                    (const_int 9 [0x9])) [0 MEM[(struct fbgc_matrix_object *)_10].sub_type+0 S1 A8]))) "cmodules/fbgc_math.c":85:33 119 {*zero_extendqisi2}
     (nil))
(insn 206 205 207 20 (set (reg:SI 2 cx)
        (const_int 10 [0xa])) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (nil))
(insn 207 206 208 20 (set (reg:SI 1 dx)
        (reg:SI 149 [ MEM[(struct fbgc_matrix_object *)_10].column ])) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 149 [ MEM[(struct fbgc_matrix_object *)_10].column ])
        (nil)))
(insn 208 207 209 20 (set (reg:SI 4 si)
        (reg:SI 150 [ MEM[(struct fbgc_matrix_object *)_10].row ])) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 150 [ MEM[(struct fbgc_matrix_object *)_10].row ])
        (nil)))
(insn 209 208 210 20 (set (reg:SI 5 di)
        (reg:SI 151 [ MEM[(struct fbgc_matrix_object *)_10].sub_type ])) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 151 [ MEM[(struct fbgc_matrix_object *)_10].sub_type ])
        (nil)))
(call_insn 210 209 425 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_matrix_object") [flags 0x41]  <function_decl 0x7f213e3fe100 new_fbgc_matrix_object>) [0 new_fbgc_matrix_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":85:33 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_matrix_object") [flags 0x41]  <function_decl 0x7f213e3fe100 new_fbgc_matrix_object>)
                        (nil))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 425 210 211 20 (set (reg:DI 182)
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":85:33 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 211 425 212 20 (set (reg/v/f:DI 139 [ <retval> ])
        (reg:DI 182)) "cmodules/fbgc_math.c":85:33 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 182)
        (nil)))
(debug_insn 212 211 213 20 (var_location:DI res_m (reg/v/f:DI 139 [ <retval> ])) "cmodules/fbgc_math.c":85:33 -1
     (nil))
(debug_insn 213 212 214 20 (debug_marker) "cmodules/fbgc_math.c":87:4 -1
     (nil))
(insn 214 213 215 20 (set (reg:SI 82 [ prephitmp_7 ])
        (mem:SI (plus:DI (reg/f:DI 83 [ _10 ])
                (const_int 10 [0xa])) [5 MEM[(struct fbgc_matrix_object *)_10].row+0 S4 A8])) "cmodules/fbgc_math.c":87:17 67 {*movsi_internal}
     (nil))
(insn 215 214 216 20 (set (reg:SI 134 [ _139 ])
        (mem:SI (plus:DI (reg/f:DI 83 [ _10 ])
                (const_int 14 [0xe])) [5 MEM[(struct fbgc_matrix_object *)_10].column+0 S4 A8])) "cmodules/fbgc_math.c":87:24 67 {*movsi_internal}
     (nil))
(insn 216 215 217 20 (parallel [
            (set (reg/v:SI 99 [ rc ])
                (mult:SI (reg:SI 82 [ prephitmp_7 ])
                    (reg:SI 134 [ _139 ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":87:11 317 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 217 216 218 20 (var_location:SI rc (reg/v:SI 99 [ rc ])) "cmodules/fbgc_math.c":87:11 -1
     (nil))
(debug_insn 218 217 219 20 (debug_marker) "cmodules/fbgc_math.c":89:4 -1
     (nil))
(debug_insn 219 218 220 20 (debug_marker) "cmodules/fbgc_math.c":91:4 -1
     (nil))
(debug_insn 220 219 221 20 (debug_marker) "cmodules/fbgc_math.c":91:8 -1
     (nil))
(debug_insn 221 220 222 20 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 222 221 7 20 (debug_marker) "cmodules/fbgc_math.c":91:22 -1
     (nil))
(insn 7 222 230 20 (set (reg/v:SI 87 [ i ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":91:15 67 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 230 7 256 20 (parallel [
            (set (reg/f:DI 169 [ pretmp_151 ])
                (plus:DI (reg/v/f:DI 139 [ <retval> ])
                    (const_int 14 [0xe])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 256 230 257 20 (parallel [
            (set (reg/f:DI 170)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))
(insn 257 256 223 20 (parallel [
            (set (reg/f:DI 172)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 223 257 224 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 82 [ prephitmp_7 ])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":91:4 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 224 223 440 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 332)
            (pc))) "cmodules/fbgc_math.c":91:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 332)
;;  succ:       29 [89.0% (guessed)]  count:73239503 (estimated locally)
;;              21 [11.0% (guessed)]  count:9052073 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 87 99 134 139 169 170 172

;; basic block 21, loop depth 0, count 9052073 (estimated locally), maybe hot
;;  prev block 20, next block 22, flags: (HOT_PARTITION, RTL)
;;  pred:       20 [11.0% (guessed)]  count:9052073 (estimated locally) (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 139
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 440 224 441 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(jump_insn 441 440 442 21 (set (pc)
        (label_ref 375)) 660 {jump}
     (nil)
 -> 375)
;;  succ:       31 [always]  count:9052073 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 139

(barrier 442 441 337)
;; basic block 22, loop depth 1, count 592574083 (estimated locally), maybe hot
;;  prev block 21, next block 23, flags: (HOT_PARTITION, RTL)
;;  pred:       29 [99.8% (guessed)]  count:599636349 (estimated locally)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u214(6){ }u215(7){ }u216(16){ }u217(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 87 99 134 139 169 170 172
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  def 	 17 [flags] 90 132
(code_label 337 442 228 22 93 (nil) [1 uses])
(note 228 337 229 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 229 228 6 22 (parallel [
            (set (reg/f:DI 132 [ pretmp_124 ])
                (plus:DI (reg/f:DI 83 [ _10 ])
                    (const_int 14 [0xe])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 6 229 317 22 (set (reg/v:SI 90 [ j ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":92:16 67 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       23 [always]  count:592574083 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 87 90 99 132 134 139 169 170 172

;; basic block 23, loop depth 2, count 5387037060 (estimated locally), maybe hot
;;  prev block 22, next block 24, flags: (HOT_PARTITION, RTL)
;;  pred:       22 [always]  count:592574083 (estimated locally) (FALLTHRU)
;;              26 [89.0% (guessed)]  count:3164345581 (estimated locally) (DFS_BACK)
;;              24 [89.0% (guessed)]  count:1630117415 (estimated locally) (DFS_BACK)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u219(6){ }u220(7){ }u221(16){ }u222(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 87 90 99 132 134 139 169 170 172
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 87 90 132 134 169
;; lr  def 	 17 [flags] 101 107 133 152 153 154
(code_label 317 6 231 23 92 (nil) [2 uses])
(note 231 317 232 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(debug_insn 232 231 233 23 (var_location:SI j (reg/v:SI 90 [ j ])) -1
     (nil))
(debug_insn 233 232 234 23 (debug_marker) "cmodules/fbgc_math.c":93:6 -1
     (nil))
(insn 234 233 235 23 (parallel [
            (set (reg:SI 152)
                (mult:SI (reg:SI 134 [ _139 ])
                    (reg/v:SI 87 [ i ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":93:23 317 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 134 [ _139 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 235 234 236 23 (parallel [
            (set (reg/v:SI 101 [ index ])
                (plus:SI (reg:SI 152)
                    (reg/v:SI 90 [ j ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":93:13 190 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(debug_insn 236 235 237 23 (var_location:SI index (reg/v:SI 101 [ index ])) "cmodules/fbgc_math.c":93:13 -1
     (nil))
(debug_insn 237 236 238 23 (debug_marker) "cmodules/fbgc_math.c":94:6 -1
     (nil))
(debug_insn 238 237 239 23 (var_location:SI c_index (plus:SI (reg/v:SI 99 [ rc ])
        (reg/v:SI 101 [ index ]))) "cmodules/fbgc_math.c":94:13 -1
     (nil))
(debug_insn 239 238 240 23 (debug_marker) "cmodules/fbgc_math.c":96:6 -1
     (nil))
(insn 240 239 241 23 (set (reg:DI 153 [ index ])
        (zero_extend:DI (reg/v:SI 101 [ index ]))) "cmodules/fbgc_math.c":96:46 114 {*zero_extendsidi2}
     (nil))
(insn 241 240 242 23 (parallel [
            (set (reg:DI 154)
                (ashift:DI (reg:DI 153 [ index ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":96:46 520 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 153 [ index ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(note 242 241 243 23 NOTE_INSN_DELETED)
(insn 243 242 244 23 (set (reg:DF 107 [ _48 ])
        (mem:DF (plus:DI (plus:DI (reg/f:DI 132 [ pretmp_124 ])
                    (reg:DI 154))
                (const_int 4 [0x4])) [2 *_47+0 S8 A64])) "cmodules/fbgc_math.c":96:15 111 {*movdf_internal}
     (nil))
(debug_insn 244 243 245 23 (var_location:DF z$real (reg:DF 107 [ _48 ])) "cmodules/fbgc_math.c":96:13 -1
     (nil))
(debug_insn 245 244 246 23 (debug_marker) "cmodules/fbgc_math.c":97:6 -1
     (nil))
(insn 246 245 247 23 (set (reg/f:DI 133 [ _135 ])
        (plus:DI (plus:DI (reg/f:DI 169 [ pretmp_151 ])
                (reg:DI 154))
            (const_int 4 [0x4]))) 187 {*leadi}
     (expr_list:REG_DEAD (reg:DI 154)
        (nil)))
(insn 247 246 248 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 83 [ _10 ])
                    (const_int 9 [0x9])) [0 MEM[(struct fbgc_matrix_object *)_10].sub_type+0 S1 A8])
            (const_int 5 [0x5]))) "cmodules/fbgc_math.c":97:8 9 {*cmpqi_1}
     (nil))
(jump_insn 248 247 249 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 301)
            (pc))) "cmodules/fbgc_math.c":97:8 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 708669604 (nil)))
 -> 301)
;;  succ:       24 [34.0% (guessed)]  count:1831592620 (estimated locally) (FALLTHRU)
;;              26 [66.0% (guessed)]  count:3555444440 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 87 90 99 101 107 132 133 139 169 170 172

;; basic block 24, loop depth 2, count 1831592600 (estimated locally), maybe hot
;;  prev block 23, next block 25, flags: (HOT_PARTITION, RTL)
;;  pred:       23 [34.0% (guessed)]  count:1831592620 (estimated locally) (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u241(6){ }u242(7){ }u243(16){ }u244(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 87 90 99 101 107 132 133 139 169 170 172
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 90 99 101 107 132 133 169 170 172
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 90 121 130 131 134 156 157 160 161 162 183
(note 249 248 250 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(debug_insn 250 249 251 24 (debug_marker) "cmodules/fbgc_math.c":98:7 -1
     (nil))
(note 251 250 252 24 NOTE_INSN_DELETED)
(insn 252 251 253 24 (set (reg:DI 156 [ c_index ])
        (zero_extend:DI (plus:SI (reg/v:SI 99 [ rc ])
                (reg/v:SI 101 [ index ])))) "cmodules/fbgc_math.c":98:47 187 {*leadi}
     (expr_list:REG_DEAD (reg/v:SI 101 [ index ])
        (nil)))
(insn 253 252 255 24 (parallel [
            (set (reg:DI 157)
                (ashift:DI (reg:DI 156 [ c_index ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":98:47 520 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 156 [ c_index ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(debug_insn 255 253 258 24 (var_location:DF D#33 (mem:DF (plus:DI (plus:DI (reg/f:DI 132 [ pretmp_124 ])
                (reg:DI 157))
            (const_int 4 [0x4])) [2 *_53+0 S8 A64])) "cmodules/fbgc_math.c":98:16 -1
     (nil))
(insn 258 255 259 24 (set (reg:DF 160 [ *_53 ])
        (mem:DF (plus:DI (plus:DI (reg/f:DI 132 [ pretmp_124 ])
                    (reg:DI 157))
                (const_int 4 [0x4])) [2 *_53+0 S8 A64])) 111 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (plus:DI (reg/f:DI 132 [ pretmp_124 ])
                    (reg:DI 157))
                (const_int 4 [0x4])) [2 *_53+0 S8 A64])
        (nil)))
(insn 259 258 412 24 (set (reg:DI 4 si)
        (reg/f:DI 172)) 66 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 19 frame)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))
(insn 412 259 261 24 (set (reg:DI 5 di)
        (reg/f:DI 170)) 66 {*movdi_internal}
     (nil))
(insn 261 412 262 24 (set (reg:DF 20 xmm0)
        (reg:DF 160 [ *_53 ])) 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 160 [ *_53 ])
        (nil)))
(call_insn 262 261 263 24 (call (mem:QI (symbol_ref:DI ("sincos") [flags 0x41]  <function_decl 0x7f213e4ba400 __builtin_sincos>) [0 __builtin_sincos S1 A8])
        (const_int 0 [0])) 666 {*call}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("sincos") [flags 0x41]  <function_decl 0x7f213e4ba400 __builtin_sincos>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 263 262 264 24 (set (reg:DF 130 [ sincostmp_111 ])
        (mem/c:DF (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2  S8 A64])) 111 {*movdf_internal}
     (nil))
(insn 264 263 265 24 (set (reg:DF 131 [ sincostmp_111+8 ])
        (mem/c:DF (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [2  S8 A64])) 111 {*movdf_internal}
     (nil))
(debug_insn 265 264 266 24 (debug_marker) "cmodules/fbgc_math.c":99:7 -1
     (nil))
(debug_insn 266 265 267 24 (debug_marker:BLK) "cmodules/fbgc_math.c":22:20 -1
     (nil))
(debug_insn 267 266 268 24 (var_location:DF z$imag (debug_expr:DF D#33)) -1
     (nil))
(debug_insn 268 267 269 24 (debug_marker) "cmodules/fbgc_math.c":24:2 -1
     (nil))
(debug_insn 269 268 270 24 (debug_marker) "cmodules/fbgc_math.c":25:2 -1
     (nil))
(insn 270 269 271 24 (set (reg:DF 20 xmm0)
        (reg:DF 107 [ _48 ])) "cmodules/fbgc_math.c":25:13 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 107 [ _48 ])
        (nil)))
(call_insn 271 270 426 24 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":25:13 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 426 271 272 24 (set (reg:DF 183)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":25:13 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (nil)))
(insn 272 426 273 24 (set (reg/v:DF 121 [ r ])
        (reg:DF 183)) "cmodules/fbgc_math.c":25:13 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 183)
        (nil)))
(debug_insn 273 272 274 24 (var_location:DF r (reg/v:DF 121 [ r ])) "cmodules/fbgc_math.c":25:13 -1
     (nil))
(debug_insn 274 273 275 24 (debug_marker) "cmodules/fbgc_math.c":26:2 -1
     (nil))
(debug_insn 275 274 276 24 (var_location:DF res$real (mult:DF (reg:DF 130 [ sincostmp_111 ])
        (reg/v:DF 121 [ r ]))) "cmodules/fbgc_math.c":26:11 -1
     (nil))
(debug_insn 276 275 277 24 (debug_marker) "cmodules/fbgc_math.c":27:2 -1
     (nil))
(debug_insn 277 276 278 24 (var_location:DF res$imag (mult:DF (reg:DF 131 [ sincostmp_111+8 ])
        (reg/v:DF 121 [ r ]))) "cmodules/fbgc_math.c":27:11 -1
     (nil))
(debug_insn 278 277 279 24 (debug_marker) "cmodules/fbgc_math.c":28:2 -1
     (nil))
(debug_insn 279 278 280 24 (var_location:DF D#1 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 280 279 281 24 (var_location:DF res$real (debug_expr:DF D#1)) -1
     (nil))
(debug_insn 281 280 282 24 (var_location:DF D#2 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 282 281 283 24 (var_location:DF res$imag (debug_expr:DF D#2)) -1
     (nil))
(debug_insn 283 282 284 24 (var_location:DF r (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":99:36 -1
     (nil))
(debug_insn 284 283 285 24 (var_location:DF z$imag (clobber (const_int 0 [0]))) "cmodules/fbgc_math.c":99:36 -1
     (nil))
(debug_insn 285 284 286 24 (debug_marker) "cmodules/fbgc_math.c":100:7 -1
     (nil))
(insn 286 285 287 24 (set (reg:DF 161)
        (mult:DF (reg:DF 130 [ sincostmp_111 ])
            (reg/v:DF 121 [ r ]))) "cmodules/fbgc_math.c":26:14 818 {*fop_df_comm}
     (expr_list:REG_DEAD (reg:DF 130 [ sincostmp_111 ])
        (expr_list:REG_EQUIV (mem:DF (reg/f:DI 133 [ _135 ]) [2 MEM[(double *)_135]+0 S8 A64])
            (nil))))
(insn 287 286 288 24 (set (mem:DF (reg/f:DI 133 [ _135 ]) [2 MEM[(double *)_135]+0 S8 A64])
        (reg:DF 161)) "cmodules/fbgc_math.c":100:50 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 161)
        (expr_list:REG_DEAD (reg/f:DI 133 [ _135 ])
            (nil))))
(debug_insn 288 287 289 24 (debug_marker) "cmodules/fbgc_math.c":101:7 -1
     (nil))
(insn 289 288 290 24 (set (reg:DF 162)
        (mult:DF (reg:DF 131 [ sincostmp_111+8 ])
            (reg/v:DF 121 [ r ]))) "cmodules/fbgc_math.c":27:14 818 {*fop_df_comm}
     (expr_list:REG_DEAD (reg:DF 131 [ sincostmp_111+8 ])
        (expr_list:REG_DEAD (reg/v:DF 121 [ r ])
            (expr_list:REG_EQUIV (mem:DF (plus:DI (plus:DI (reg/f:DI 169 [ pretmp_151 ])
                            (reg:DI 157))
                        (const_int 4 [0x4])) [2 *_58+0 S8 A64])
                (nil)))))
(insn 290 289 291 24 (set (mem:DF (plus:DI (plus:DI (reg/f:DI 169 [ pretmp_151 ])
                    (reg:DI 157))
                (const_int 4 [0x4])) [2 *_58+0 S8 A64])
        (reg:DF 162)) "cmodules/fbgc_math.c":101:52 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 162)
        (expr_list:REG_DEAD (reg:DI 157)
            (nil))))
(debug_insn 291 290 292 24 (debug_marker) "cmodules/fbgc_math.c":92:36 -1
     (nil))
(insn 292 291 293 24 (parallel [
            (set (reg/v:SI 90 [ j ])
                (plus:SI (reg/v:SI 90 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":92:36 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 293 292 294 24 (var_location:SI j (reg/v:SI 90 [ j ])) -1
     (nil))
(debug_insn 294 293 295 24 (debug_marker) "cmodules/fbgc_math.c":92:23 -1
     (nil))
(insn 295 294 296 24 (set (reg:SI 134 [ _139 ])
        (mem:SI (plus:DI (reg/f:DI 83 [ _10 ])
                (const_int 14 [0xe])) [5 MEM[(struct fbgc_matrix_object *)_10].column+0 S4 A8])) "cmodules/fbgc_math.c":92:26 67 {*movsi_internal}
     (nil))
(insn 296 295 297 24 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 90 [ j ])
            (reg:SI 134 [ _139 ]))) "cmodules/fbgc_math.c":92:5 11 {*cmpsi_1}
     (nil))
(jump_insn 297 296 443 24 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 317)
            (pc))) "cmodules/fbgc_math.c":92:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 317)
;;  succ:       23 [89.0% (guessed)]  count:1630117415 (estimated locally) (DFS_BACK)
;;              25 [11.0% (guessed)]  count:201475185 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 87 90 99 132 134 139 169 170 172

;; basic block 25, loop depth 1, count 201475185 (estimated locally), maybe hot
;;  prev block 24, next block 26, flags: (HOT_PARTITION, RTL)
;;  pred:       24 [11.0% (guessed)]  count:201475185 (estimated locally) (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 87 99 134 139 169 170 172
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 443 297 444 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(jump_insn 444 443 445 25 (set (pc)
        (label_ref 320)) 660 {jump}
     (nil)
 -> 320)
;;  succ:       27 [always]  count:201475185 (estimated locally) (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 87 99 134 139 169 170 172

(barrier 445 444 301)
;; basic block 26, loop depth 2, count 3555444471 (estimated locally), maybe hot
;;  prev block 25, next block 27, flags: (HOT_PARTITION, RTL)
;;  pred:       23 [66.0% (guessed)]  count:3555444440 (estimated locally)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u288(6){ }u289(7){ }u290(16){ }u291(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 87 90 99 107 132 133 139 169 170 172
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 90 107 133
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 90 134 184
(code_label 301 445 302 26 89 (nil) [1 uses])
(note 302 301 303 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(debug_insn 303 302 304 26 (debug_marker) "cmodules/fbgc_math.c":103:11 -1
     (nil))
(insn 304 303 305 26 (set (reg:DF 20 xmm0)
        (reg:DF 107 [ _48 ])) "cmodules/fbgc_math.c":103:57 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 107 [ _48 ])
        (nil)))
(call_insn 305 304 427 26 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":103:57 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7f213e482700 exp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 427 305 306 26 (set (reg:DF 184)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":103:57 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (expr_list:REG_EQUIV (mem:DF (reg/f:DI 133 [ _135 ]) [2 MEM[(double *)_135]+0 S8 A64])
            (nil))))
(note 306 427 307 26 NOTE_INSN_DELETED)
(insn 307 306 308 26 (set (mem:DF (reg/f:DI 133 [ _135 ]) [2 MEM[(double *)_135]+0 S8 A64])
        (reg:DF 184)) "cmodules/fbgc_math.c":103:54 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 184)
        (expr_list:REG_DEAD (reg/f:DI 133 [ _135 ])
            (nil))))
(debug_insn 308 307 309 26 (debug_marker) "cmodules/fbgc_math.c":92:36 -1
     (nil))
(insn 309 308 310 26 (parallel [
            (set (reg/v:SI 90 [ j ])
                (plus:SI (reg/v:SI 90 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":92:36 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 310 309 311 26 (var_location:SI j (reg/v:SI 90 [ j ])) -1
     (nil))
(debug_insn 311 310 312 26 (debug_marker) "cmodules/fbgc_math.c":92:23 -1
     (nil))
(insn 312 311 313 26 (set (reg:SI 134 [ _139 ])
        (mem:SI (plus:DI (reg/f:DI 83 [ _10 ])
                (const_int 14 [0xe])) [5 MEM[(struct fbgc_matrix_object *)_10].column+0 S4 A8])) "cmodules/fbgc_math.c":92:26 67 {*movsi_internal}
     (nil))
(insn 313 312 314 26 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 134 [ _139 ])
            (reg/v:SI 90 [ j ]))) "cmodules/fbgc_math.c":92:5 11 {*cmpsi_1}
     (nil))
(jump_insn 314 313 320 26 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 317)
            (pc))) "cmodules/fbgc_math.c":92:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 317)
;;  succ:       23 [89.0% (guessed)]  count:3164345581 (estimated locally) (DFS_BACK)
;;              27 [11.0% (guessed)]  count:391098890 (estimated locally) (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 87 90 99 132 134 139 169 170 172

;; basic block 27, loop depth 1, count 592574075 (estimated locally), maybe hot
;;  prev block 26, next block 28, flags: (HOT_PARTITION, RTL)
;;  pred:       26 [11.0% (guessed)]  count:391098890 (estimated locally) (FALLTHRU,LOOP_EXIT)
;;              25 [always]  count:201475185 (estimated locally) (LOOP_EXIT)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u304(6){ }u305(7){ }u306(16){ }u307(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 87 99 134 139 169 170 172
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  def 	 82
(code_label 320 314 321 27 91 (nil) [1 uses])
(note 321 320 322 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 322 321 345 27 (set (reg:SI 82 [ prephitmp_7 ])
        (mem:SI (plus:DI (reg/f:DI 83 [ _10 ])
                (const_int 10 [0xa])) [5 MEM[(struct fbgc_matrix_object *)_10].row+0 S4 A8])) 67 {*movsi_internal}
     (nil))
;;  succ:       28 [always]  count:592574075 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 87 99 134 139 169 170 172

;; basic block 28, loop depth 1, count 592574078 (estimated locally), maybe hot
;; Invalid sum of incoming counts 657757224 (estimated locally), should be 592574078 (estimated locally)
;;  prev block 27, next block 29, flags: (HOT_PARTITION, RTL)
;;  pred:       27 [always]  count:592574075 (estimated locally) (FALLTHRU)
;;              30 [89.0% (guessed)]  count:65183149 (estimated locally)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u309(6){ }u310(7){ }u311(16){ }u312(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 87 99 134 139 169 170 172
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 87
;; lr  def 	 17 [flags] 87
(code_label 345 322 323 28 94 (nil) [1 uses])
(note 323 345 324 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(debug_insn 324 323 325 28 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 325 324 326 28 (var_location:SI j (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 326 325 327 28 (debug_marker) "cmodules/fbgc_math.c":91:32 -1
     (nil))
(insn 327 326 328 28 (parallel [
            (set (reg/v:SI 87 [ i ])
                (plus:SI (reg/v:SI 87 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":91:32 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 328 327 329 28 (var_location:SI i (reg/v:SI 87 [ i ])) -1
     (nil))
(debug_insn 329 328 330 28 (debug_marker) "cmodules/fbgc_math.c":91:22 -1
     (nil))
(insn 330 329 331 28 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 87 [ i ])
            (reg:SI 82 [ prephitmp_7 ]))) "cmodules/fbgc_math.c":91:4 11 {*cmpsi_1}
     (nil))
(jump_insn 331 330 332 28 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 375)
            (pc))) "cmodules/fbgc_math.c":91:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 375)
;;  succ:       29 [89.0% (guessed)]  count:527390930 (estimated locally) (FALLTHRU,DFS_BACK)
;;              31 [11.0% (guessed)]  count:65183148 (estimated locally) (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 87 99 134 139 169 170 172

;; basic block 29, loop depth 1, count 600630427 (estimated locally), maybe hot
;;  prev block 28, next block 30, flags: (HOT_PARTITION, RTL)
;;  pred:       20 [89.0% (guessed)]  count:73239503 (estimated locally)
;;              28 [89.0% (guessed)]  count:527390930 (estimated locally) (FALLTHRU,DFS_BACK)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u318(6){ }u319(7){ }u320(16){ }u321(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 87 99 134 139 169 170 172
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 134
;; lr  def 	 17 [flags]
(code_label 332 331 333 29 87 (nil) [1 uses])
(note 333 332 334 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(debug_insn 334 333 335 29 (var_location:SI i (reg/v:SI 87 [ i ])) -1
     (nil))
(debug_insn 335 334 336 29 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(debug_insn 336 335 338 29 (debug_marker) "cmodules/fbgc_math.c":92:23 -1
     (nil))
(insn 338 336 339 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 134 [ _139 ])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":92:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 339 338 340 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 337)
            (pc))) "cmodules/fbgc_math.c":92:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1071964724 (nil)))
 -> 337)
;;  succ:       22 [99.8% (guessed)]  count:599636349 (estimated locally)
;;              30 [0.2% (guessed)]  count:994078 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 87 99 134 139 169 170 172

;; basic block 30, loop depth 1, count 73239493 (estimated locally), maybe hot
;; Invalid sum of incoming counts 994078 (estimated locally), should be 73239493 (estimated locally)
;;  prev block 29, next block 31, flags: (HOT_PARTITION, RTL)
;;  pred:       29 [0.2% (guessed)]  count:994078 (estimated locally) (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u325(6){ }u326(7){ }u327(16){ }u328(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 87 99 134 139 169 170 172
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 87
;; lr  def 	 17 [flags] 87
(note 340 339 341 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(debug_insn 341 340 342 30 (debug_marker) "cmodules/fbgc_math.c":91:32 -1
     (nil))
(insn 342 341 343 30 (parallel [
            (set (reg/v:SI 87 [ i ])
                (plus:SI (reg/v:SI 87 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":91:32 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 343 342 344 30 (var_location:SI i (reg/v:SI 87 [ i ])) -1
     (nil))
(debug_insn 344 343 346 30 (debug_marker) "cmodules/fbgc_math.c":91:22 -1
     (nil))
(insn 346 344 347 30 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 82 [ prephitmp_7 ])
            (reg/v:SI 87 [ i ]))) "cmodules/fbgc_math.c":91:4 11 {*cmpsi_1}
     (nil))
(jump_insn 347 346 375 30 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 345)
            (pc))) "cmodules/fbgc_math.c":91:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 345)
;;  succ:       28 [89.0% (guessed)]  count:65183149 (estimated locally)
;;              31 [11.0% (guessed)]  count:8056344 (estimated locally) (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 87 99 134 139 169 170 172

;; basic block 31, loop depth 0, count 908893201 (estimated locally), maybe hot
;; Invalid sum of incoming counts 1274633540 (estimated locally), should be 908893201 (estimated locally)
;;  prev block 30, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [61.7% (guessed)]  count:662283960 (estimated locally)
;;              6 [55.6% (adjusted)]  count:228587706 (estimated locally)
;;              30 [11.0% (guessed)]  count:8056344 (estimated locally) (FALLTHRU,LOOP_EXIT)
;;              9 [always]  count:82291578 (estimated locally)
;;              14 [11.0% (guessed)]  count:9052073 (estimated locally)
;;              11 [always]  count:137152624 (estimated locally)
;;              19 [always]  count:72974034 (estimated locally) (LOOP_EXIT)
;;              28 [11.0% (guessed)]  count:65183148 (estimated locally) (LOOP_EXIT)
;;              21 [always]  count:9052073 (estimated locally)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u334(6){ }u335(7){ }u336(16){ }u337(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 139
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 139
;; lr  def 	 0 [ax]
(code_label 375 347 378 31 77 (nil) [8 uses])
(note 378 375 376 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 376 378 377 31 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 139 [ <retval> ])) "cmodules/fbgc_math.c":123:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 139 [ <retval> ])
        (nil)))
(insn 377 376 0 31 (use (reg/i:DI 0 ax)) "cmodules/fbgc_math.c":123:1 -1
     (nil))
;;  succ:       EXIT [always]  count:908893201 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function fbgc_cos (fbgc_cos, funcdef_no=60, decl_uid=5693, cgraph_uid=61, symbol_order=64)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 32 n_edges 47 count 43 (  1.3)
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
;;
;; Loop 3
;;  header 16, latch 18
;;  depth 1, outer 0
;;  nodes: 16 18
;;
;; Loop 1
;;  header 29, latch 28
;;  depth 1, outer 0
;;  nodes: 29 28 27 30 26 25 24 23 22
;;
;; Loop 2
;;  header 23, multiple latches: 26 24
;;  depth 2, outer 1
;;  nodes: 23 26 24
;; 2 succs { 3 31 }
;; 3 succs { 4 20 }
;; 4 succs { 5 10 }
;; 5 succs { 6 8 }
;; 6 succs { 31 7 }
;; 7 succs { 12 }
;; 8 succs { 9 13 }
;; 9 succs { 31 }
;; 10 succs { 11 14 }
;; 11 succs { 31 }
;; 12 succs { 1 }
;; 13 succs { 1 }
;; 14 succs { 15 31 }
;; 15 succs { 16 }
;; 16 succs { 18 17 }
;; 17 succs { }
;; 18 succs { 16 19 }
;; 19 succs { 31 }
;; 20 succs { 29 21 }
;; 21 succs { 31 }
;; 22 succs { 23 }
;; 23 succs { 24 26 }
;; 24 succs { 23 25 }
;; 25 succs { 27 }
;; 26 succs { 23 27 }
;; 27 succs { 28 }
;; 28 succs { 29 31 }
;; 29 succs { 22 30 }
;; 30 succs { 28 31 }
;; 31 succs { 1 }
Will split live ranges of parameters at BB 3
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
;;
;; Loop 3
;;  header 16, latch 18
;;  depth 1, outer 0
;;  nodes: 16 18
;;
;; Loop 1
;;  header 29, latch 28
;;  depth 1, outer 0
;;  nodes: 29 28 27 30 26 25 24 23 22
;;
;; Loop 2
;;  header 23, multiple latches: 26 24
;;  depth 2, outer 1
;;  nodes: 23 26 24
;; 2 succs { 3 31 }
;; 3 succs { 4 20 }
;; 4 succs { 5 10 }
;; 5 succs { 6 8 }
;; 6 succs { 31 7 }
;; 7 succs { 12 }
;; 8 succs { 9 13 }
;; 9 succs { 31 }
;; 10 succs { 11 14 }
;; 11 succs { 31 }
;; 12 succs { 1 }
;; 13 succs { 1 }
;; 14 succs { 15 31 }
;; 15 succs { 16 }
;; 16 succs { 18 17 }
;; 17 succs { }
;; 18 succs { 16 19 }
;; 19 succs { 31 }
;; 20 succs { 29 21 }
;; 21 succs { 31 }
;; 22 succs { 23 }
;; 23 succs { 24 26 }
;; 24 succs { 23 25 }
;; 25 succs { 27 }
;; 26 succs { 23 27 }
;; 27 succs { 28 }
;; 28 succs { 29 31 }
;; 29 succs { 22 30 }
;; 30 succs { 28 31 }
;; 31 succs { 1 }
Adding REG_EQUIV to insn 396 for source of insn 247
Adding REG_EQUIV to insn 398 for source of insn 267
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 175 uninteresting
Reg 130: def dominates all uses has unique first use
Reg 176: local to bb 2 def dominates all uses has unique first use
Reg 83 uninteresting (no unique first use)
Reg 177 uninteresting
Reg 84 uninteresting
Reg 178 uninteresting
Reg 85 uninteresting
Reg 179 uninteresting
Reg 132: local to bb 13 def dominates all uses has unique first use
Reg 180: local to bb 13 def dominates all uses has unique first use
Reg 181 uninteresting
Reg 138: local to bb 13 def dominates all uses has unique first use
Reg 182 uninteresting
Reg 88 uninteresting
Reg 183 uninteresting
Reg 89: def dominates all uses has unique first use
Ignoring reg 171, has equiv memory
Reg 173: def dominates all uses has unique first use
Reg 184 uninteresting
Reg 92 uninteresting
Ignoring reg 141, has equiv memory
Ignoring reg 142, has equiv memory
Reg 143: local to bb 20 def dominates all uses has unique first use
Reg 185 uninteresting
Reg 145 uninteresting
Reg 107 uninteresting (no unique first use)
Reg 148 uninteresting
Ignoring reg 186, has equiv memory
Reg 187: local to bb 24 def dominates all uses has unique first use
Ignoring reg 188, has equiv memory
Reg 89 not local to one basic block
Reg 130 not local to one basic block
Examining insn 85, def for 132
  all ok
Examining insn 98, def for 138
  all ok
Found def insn 181 for 143 to be not moveable
Reg 173 not local to one basic block
Found def insn 386 for 176 to be not moveable
Found def insn 390 for 180 to be not moveable
Found def insn 397 for 187 to be not moveable
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
;;
;; Loop 3
;;  header 16, latch 18
;;  depth 1, outer 0
;;  nodes: 16 18
;;
;; Loop 1
;;  header 29, latch 28
;;  depth 1, outer 0
;;  nodes: 29 28 27 30 26 25 24 23 22
;;
;; Loop 2
;;  header 23, multiple latches: 26 24
;;  depth 2, outer 1
;;  nodes: 23 26 24
;; 2 succs { 3 31 }
;; 3 succs { 4 20 }
;; 4 succs { 5 10 }
;; 5 succs { 6 8 }
;; 6 succs { 31 7 }
;; 7 succs { 12 }
;; 8 succs { 9 13 }
;; 9 succs { 31 }
;; 10 succs { 11 14 }
;; 11 succs { 31 }
;; 12 succs { 1 }
;; 13 succs { 1 }
;; 14 succs { 15 31 }
;; 15 succs { 16 }
;; 16 succs { 18 17 }
;; 17 succs { }
;; 18 succs { 16 19 }
;; 19 succs { 31 }
;; 20 succs { 29 21 }
;; 21 succs { 31 }
;; 22 succs { 23 }
;; 23 succs { 24 26 }
;; 24 succs { 23 25 }
;; 25 succs { 27 }
;; 26 succs { 23 27 }
;; 27 succs { 28 }
;; 28 succs { 29 31 }
;; 29 succs { 22 30 }
;; 30 succs { 28 31 }
;; 31 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 141: (insn_list:REG_DEP_TRUE 179 (nil))
init_insns for 142: (insn_list:REG_DEP_TRUE 180 (nil))
init_insns for 171: (insn_list:REG_DEP_TRUE 370 (nil))
init_insns for 173: (insn_list:REG_DEP_TRUE 137 (nil))
init_insns for 186: (insn_list:REG_DEP_TRUE 247 (nil))
init_insns for 188: (insn_list:REG_DEP_TRUE 267 (nil))

Pass 0 for finding pseudo/allocno costs

    a50 (r188,l2) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a53 (r187,l2) best SSE_REGS, allocno SSE_REGS
    a54 (r186,l2) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a7 (r185,l0) best AREG, allocno AREG
    a67 (r184,l3) best AREG, allocno AREG
    a18 (r183,l0) best AREG, allocno AREG
    a20 (r182,l0) best SSE_REGS, allocno SSE_REGS
    a21 (r181,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a22 (r180,l0) best SSE_REGS, allocno SSE_REGS
    a24 (r179,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a26 (r178,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a28 (r177,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a30 (r176,l0) best SIREG, allocno SIREG
    a31 (r175,l0) best DIREG, allocno DIREG
    a48 (r174,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a38 (r174,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a65 (r173,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a11 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a47 (r172,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a37 (r172,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a5 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a64 (r171,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a12 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a52 (r149,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a55 (r148,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a57 (r146,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a58 (r145,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a59 (r144,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a8 (r143,l0) best DIREG, allocno DIREG
    a9 (r142,l0) best SIREG, allocno SIREG
    a10 (r141,l0) best DREG, allocno DREG
    a19 (r138,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a23 (r132,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a17 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a63 (r129,l3) best AREG, allocno AREG
    a46 (r129,l2) best AREG, allocno AREG
    a36 (r129,l1) best AREG, allocno AREG
    a0 (r129,l0) best AREG, allocno AREG
    a62 (r124,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a14 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a49 (r121,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a45 (r120,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a40 (r120,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a35 (r119,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a44 (r118,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a34 (r118,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a51 (r107,l2) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a56 (r101,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a43 (r99,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a33 (r99,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a61 (r94,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a13 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a66 (r92,l3) best SIREG, allocno SIREG
    a42 (r90,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a39 (r90,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a15 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a60 (r88,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a16 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a25 (r85,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a27 (r84,l0) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a29 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a41 (r82,l2) best DIREG, allocno DIREG
    a32 (r82,l1) best DIREG, allocno DIREG
    a6 (r82,l0) best DIREG, allocno DIREG

  a0(r129,l0) costs: AREG:-846,388 DREG:1692,2926 CREG:1692,2926 BREG:1692,2926 SIREG:1692,2926 DIREG:1692,2926 AD_REGS:1692,2926 CLOBBERED_REGS:1692,2926 Q_REGS:1692,2926 NON_Q_REGS:1692,2926 TLS_GOTBASE_REGS:1692,2926 GENERAL_REGS:1692,2926 SSE_FIRST_REG:14896,19832 NO_REX_SSE_REGS:14896,19832 SSE_REGS:14896,19832 MMX_REGS:19886,27907 INT_SSE_REGS:19886,27907 ALL_REGS:326776,457580 MEM:7140,10842
  a1(r119,l0) costs: AREG:152,152 DREG:152,152 CREG:152,152 BREG:152,152 SIREG:152,152 DIREG:152,152 AD_REGS:152,152 CLOBBERED_REGS:152,152 Q_REGS:152,152 NON_Q_REGS:152,152 TLS_GOTBASE_REGS:152,152 GENERAL_REGS:152,152 SSE_FIRST_REG:1976,11336 NO_REX_SSE_REGS:1976,11336 SSE_REGS:1976,11336 MMX_REGS:3040,17699 INT_SSE_REGS:3040,17699 ALL_REGS:40432,230066 MEM:1444,7845
  a2(r174,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:608,16608 NO_REX_SSE_REGS:608,16608 SSE_REGS:608,16608 MMX_REGS:988,26988 INT_SSE_REGS:988,26988 ALL_REGS:16112,440112 MEM:456,12456
  a3(r118,l0) costs: AREG:0,2000 DREG:0,2000 CREG:0,2000 BREG:0,2000 SIREG:0,2000 DIREG:0,2000 AD_REGS:0,2000 CLOBBERED_REGS:0,2000 Q_REGS:0,2000 NON_Q_REGS:0,2000 TLS_GOTBASE_REGS:0,2000 GENERAL_REGS:0,2000 SSE_FIRST_REG:456,25312 NO_REX_SSE_REGS:456,25312 SSE_REGS:456,25312 MMX_REGS:456,39597 INT_SSE_REGS:456,39597 ALL_REGS:7600,615284 MEM:76,16361
  a4(r99,l0) costs: AREG:152,152 DREG:152,152 CREG:152,152 BREG:152,152 SIREG:152,152 DIREG:152,152 AD_REGS:152,152 CLOBBERED_REGS:152,152 Q_REGS:152,152 NON_Q_REGS:152,152 TLS_GOTBASE_REGS:152,152 GENERAL_REGS:152,152 SSE_FIRST_REG:760,8760 NO_REX_SSE_REGS:760,8760 SSE_REGS:760,8760 MMX_REGS:1140,14140 INT_SSE_REGS:1140,14140 ALL_REGS:16264,228264 MEM:608,6608
  a5(r172,l0) costs: AREG:152,2152 DREG:152,2152 CREG:152,2152 BREG:152,2152 SIREG:152,2152 DIREG:152,2152 AD_REGS:152,2152 CLOBBERED_REGS:152,2152 Q_REGS:152,2152 NON_Q_REGS:152,2152 TLS_GOTBASE_REGS:152,2152 GENERAL_REGS:152,2152 SSE_FIRST_REG:1368,39840 NO_REX_SSE_REGS:1368,39840 SSE_REGS:1368,39840 MMX_REGS:2052,62319 INT_SSE_REGS:2052,62319 ALL_REGS:24320,886828 MEM:988,27342
  a6(r82,l0) costs: AREG:304,304 DREG:304,304 CREG:304,304 BREG:304,304 SIREG:304,304 DIREG:-152,-152 AD_REGS:304,304 CLOBBERED_REGS:304,304 Q_REGS:304,304 NON_Q_REGS:304,304 TLS_GOTBASE_REGS:304,304 GENERAL_REGS:304,304 SSE_FIRST_REG:12208,37024 NO_REX_SSE_REGS:12208,37024 SSE_REGS:12208,37024 MMX_REGS:19455,59781 INT_SSE_REGS:19455,59781 ALL_REGS:282914,940538 MEM:9156,27768
  a7(r185,l0) costs: AREG:-76,-76 DREG:152,152 CREG:152,152 BREG:152,152 SIREG:152,152 DIREG:152,152 AD_REGS:152,152 CLOBBERED_REGS:152,152 Q_REGS:152,152 NON_Q_REGS:152,152 TLS_GOTBASE_REGS:152,152 GENERAL_REGS:152,152 SSE_FIRST_REG:608,608 NO_REX_SSE_REGS:608,608 SSE_REGS:608,608 MMX_REGS:1976,1976 INT_SSE_REGS:1976,1976 ALL_REGS:32224,32224 MEM:836,836
  a8(r143,l0) costs: AREG:152,152 DREG:152,152 CREG:152,152 BREG:152,152 SIREG:152,152 DIREG:-76,-76 AD_REGS:152,152 CLOBBERED_REGS:152,152 Q_REGS:152,152 NON_Q_REGS:152,152 TLS_GOTBASE_REGS:152,152 GENERAL_REGS:152,152 SSE_FIRST_REG:1216,1216 NO_REX_SSE_REGS:1216,1216 SSE_REGS:1216,1216 MMX_REGS:1976,1976 INT_SSE_REGS:1976,1976 ALL_REGS:32224,32224 MEM:912,912
  a9(r142,l0) costs: AREG:152,152 DREG:152,152 CREG:152,152 BREG:152,152 SIREG:-76,-76 DIREG:152,152 AD_REGS:152,152 CLOBBERED_REGS:152,152 Q_REGS:152,152 NON_Q_REGS:152,152 TLS_GOTBASE_REGS:152,152 GENERAL_REGS:152,152 SSE_FIRST_REG:1216,1216 NO_REX_SSE_REGS:1216,1216 SSE_REGS:1216,1216 MMX_REGS:1900,1900 INT_SSE_REGS:1900,1900 ALL_REGS:24168,24168 MEM:0,0
  a10(r141,l0) costs: AREG:152,152 DREG:-76,-76 CREG:152,152 BREG:152,152 SIREG:152,152 DIREG:152,152 AD_REGS:152,152 CLOBBERED_REGS:152,152 Q_REGS:152,152 NON_Q_REGS:152,152 TLS_GOTBASE_REGS:152,152 GENERAL_REGS:152,152 SSE_FIRST_REG:1216,1216 NO_REX_SSE_REGS:1216,1216 SSE_REGS:1216,1216 MMX_REGS:1900,1900 INT_SSE_REGS:1900,1900 ALL_REGS:24168,24168 MEM:0,0
  a11(r173,l0) costs: AREG:0,1236 DREG:0,1236 CREG:0,1236 BREG:0,1236 SIREG:0,1236 DIREG:0,1236 AD_REGS:0,1236 CLOBBERED_REGS:0,1236 Q_REGS:0,1236 NON_Q_REGS:0,1236 TLS_GOTBASE_REGS:0,1236 GENERAL_REGS:0,1236 SSE_FIRST_REG:544,5488 NO_REX_SSE_REGS:544,5488 SSE_REGS:544,5488 MMX_REGS:680,8714 INT_SSE_REGS:680,8714 ALL_REGS:7072,138088 MEM:340,4048
  a12(r171,l0) costs: AREG:0,1236 DREG:0,1236 CREG:0,1236 BREG:0,1236 SIREG:0,1236 DIREG:0,1236 AD_REGS:0,1236 CLOBBERED_REGS:0,1236 Q_REGS:0,1236 NON_Q_REGS:0,1236 TLS_GOTBASE_REGS:0,1236 GENERAL_REGS:0,1236 SSE_FIRST_REG:544,5488 NO_REX_SSE_REGS:544,5488 SSE_REGS:544,5488 MMX_REGS:816,8850 INT_SSE_REGS:816,8850 ALL_REGS:7208,138224 MEM:-408,3300
  a13(r94,l0) costs: AREG:0,1234 DREG:0,1234 CREG:0,1234 BREG:0,1234 SIREG:0,1234 DIREG:0,1234 AD_REGS:0,1234 CLOBBERED_REGS:0,1234 Q_REGS:0,1234 NON_Q_REGS:0,1234 TLS_GOTBASE_REGS:0,1234 GENERAL_REGS:0,1234 SSE_FIRST_REG:408,20152 NO_REX_SSE_REGS:408,20152 SSE_REGS:408,20152 MMX_REGS:408,32492 INT_SSE_REGS:408,32492 ALL_REGS:6800,530016 MEM:68,13025
  a14(r124,l0) costs: AREG:0,1236 DREG:0,1236 CREG:0,1236 BREG:0,1236 SIREG:0,1236 DIREG:0,1236 AD_REGS:0,1236 CLOBBERED_REGS:0,1236 Q_REGS:0,1236 NON_Q_REGS:0,1236 TLS_GOTBASE_REGS:0,1236 GENERAL_REGS:0,1236 SSE_FIRST_REG:544,15360 NO_REX_SSE_REGS:544,15360 SSE_REGS:544,15360 MMX_REGS:884,24960 INT_SSE_REGS:884,24960 ALL_REGS:14416,407040 MEM:340,10218
  a15(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1152,1152 NO_REX_SSE_REGS:1152,1152 SSE_REGS:1152,1152 MMX_REGS:1796,1796 INT_SSE_REGS:1796,1796 ALL_REGS:22472,22472 MEM:796,796
  a16(r88,l0) costs: AREG:152,152 DREG:152,152 CREG:152,152 BREG:152,152 SIREG:152,152 DIREG:152,152 AD_REGS:152,152 CLOBBERED_REGS:152,152 Q_REGS:152,152 NON_Q_REGS:152,152 TLS_GOTBASE_REGS:152,152 GENERAL_REGS:152,152 SSE_FIRST_REG:2432,7368 NO_REX_SSE_REGS:2432,7368 SSE_REGS:2432,7368 MMX_REGS:3876,11897 INT_SSE_REGS:3876,11897 ALL_REGS:56392,187196 MEM:1824,4909
  a17(r130,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:9672,9672 NO_REX_SSE_REGS:9672,9672 SSE_REGS:9672,9672 MMX_REGS:11967,11967 INT_SSE_REGS:11967,11967 ALL_REGS:197308,197308 MEM:3754,3754
  a18(r183,l0) costs: AREG:-76,-76 DREG:152,152 CREG:152,152 BREG:152,152 SIREG:152,152 DIREG:152,152 AD_REGS:152,152 CLOBBERED_REGS:152,152 Q_REGS:152,152 NON_Q_REGS:152,152 TLS_GOTBASE_REGS:152,152 GENERAL_REGS:152,152 SSE_FIRST_REG:608,608 NO_REX_SSE_REGS:608,608 SSE_REGS:608,608 MMX_REGS:1976,1976 INT_SSE_REGS:1976,1976 ALL_REGS:32224,32224 MEM:836,836
  a19(r138,l0) costs: AREG:608,608 DREG:608,608 CREG:608,608 BREG:608,608 SIREG:608,608 DIREG:608,608 AD_REGS:608,608 CLOBBERED_REGS:608,608 Q_REGS:608,608 NON_Q_REGS:608,608 TLS_GOTBASE_REGS:608,608 GENERAL_REGS:608,608 FP_TOP_REG:1444,1444 FP_SECOND_REG:1444,1444 FLOAT_REGS:1444,1444 SSE_FIRST_REG:-76,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1444,1444 FLOAT_INT_REGS:1444,1444 INT_SSE_REGS:1444,1444 FLOAT_INT_SSE_REGS:1444,1444 MEM:532,532
  a20(r182,l0) costs: AREG:1216,1216 DREG:1216,1216 CREG:1216,1216 BREG:1216,1216 SIREG:1216,1216 DIREG:1216,1216 AD_REGS:1216,1216 CLOBBERED_REGS:1216,1216 Q_REGS:1216,1216 NON_Q_REGS:1216,1216 TLS_GOTBASE_REGS:1216,1216 GENERAL_REGS:1216,1216 FP_TOP_REG:1976,1976 FP_SECOND_REG:1976,1976 FLOAT_REGS:1976,1976 SSE_FIRST_REG:304,304 NO_REX_SSE_REGS:304,304 SSE_REGS:304,304 FLOAT_SSE_REGS:1976,1976 FLOAT_INT_REGS:1976,1976 INT_SSE_REGS:1976,1976 FLOAT_INT_SSE_REGS:1976,1976 MEM:912,912
  a21(r181,l0) costs: AREG:608,608 DREG:608,608 CREG:608,608 BREG:608,608 SIREG:608,608 DIREG:608,608 AD_REGS:608,608 CLOBBERED_REGS:608,608 Q_REGS:608,608 NON_Q_REGS:608,608 TLS_GOTBASE_REGS:608,608 GENERAL_REGS:608,608 FP_TOP_REG:1444,1444 FP_SECOND_REG:1444,1444 FLOAT_REGS:1444,1444 SSE_FIRST_REG:-76,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1444,1444 FLOAT_INT_REGS:1444,1444 INT_SSE_REGS:1444,1444 FLOAT_INT_SSE_REGS:1444,1444 MEM:532,532
  a22(r180,l0) costs: AREG:1216,1216 DREG:1216,1216 CREG:1216,1216 BREG:1216,1216 SIREG:1216,1216 DIREG:1216,1216 AD_REGS:1216,1216 CLOBBERED_REGS:1216,1216 Q_REGS:1216,1216 NON_Q_REGS:1216,1216 TLS_GOTBASE_REGS:1216,1216 GENERAL_REGS:1216,1216 FP_TOP_REG:1976,1976 FP_SECOND_REG:1976,1976 FLOAT_REGS:1976,1976 SSE_FIRST_REG:304,304 NO_REX_SSE_REGS:304,304 SSE_REGS:304,304 FLOAT_SSE_REGS:1976,1976 FLOAT_INT_REGS:1976,1976 INT_SSE_REGS:1976,1976 FLOAT_INT_SSE_REGS:1976,1976 MEM:912,912
  a23(r132,l0) costs: AREG:608,608 DREG:608,608 CREG:608,608 BREG:608,608 SIREG:608,608 DIREG:608,608 AD_REGS:608,608 CLOBBERED_REGS:608,608 Q_REGS:608,608 NON_Q_REGS:608,608 TLS_GOTBASE_REGS:608,608 GENERAL_REGS:608,608 FP_TOP_REG:1444,1444 FP_SECOND_REG:1444,1444 FLOAT_REGS:1444,1444 SSE_FIRST_REG:-76,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1444,1444 FLOAT_INT_REGS:1444,1444 INT_SSE_REGS:1444,1444 FLOAT_INT_SSE_REGS:1444,1444 MEM:532,532
  a24(r179,l0) costs: AREG:608,608 DREG:608,608 CREG:608,608 BREG:608,608 SIREG:608,608 DIREG:608,608 AD_REGS:608,608 CLOBBERED_REGS:608,608 Q_REGS:608,608 NON_Q_REGS:608,608 TLS_GOTBASE_REGS:608,608 GENERAL_REGS:608,608 FP_TOP_REG:1444,1444 FP_SECOND_REG:1444,1444 FLOAT_REGS:1444,1444 SSE_FIRST_REG:-76,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1444,1444 FLOAT_INT_REGS:1444,1444 INT_SSE_REGS:1444,1444 FLOAT_INT_SSE_REGS:1444,1444 MEM:532,532
  a25(r85,l0) costs: AREG:608,608 DREG:608,608 CREG:608,608 BREG:608,608 SIREG:608,608 DIREG:608,608 AD_REGS:608,608 CLOBBERED_REGS:608,608 Q_REGS:608,608 NON_Q_REGS:608,608 TLS_GOTBASE_REGS:608,608 GENERAL_REGS:608,608 FP_TOP_REG:1444,1444 FP_SECOND_REG:1444,1444 FLOAT_REGS:1444,1444 SSE_FIRST_REG:-76,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1444,1444 FLOAT_INT_REGS:1444,1444 INT_SSE_REGS:1444,1444 FLOAT_INT_SSE_REGS:1444,1444 MEM:532,532
  a26(r178,l0) costs: AREG:608,608 DREG:608,608 CREG:608,608 BREG:608,608 SIREG:608,608 DIREG:608,608 AD_REGS:608,608 CLOBBERED_REGS:608,608 Q_REGS:608,608 NON_Q_REGS:608,608 TLS_GOTBASE_REGS:608,608 GENERAL_REGS:608,608 FP_TOP_REG:1444,1444 FP_SECOND_REG:1444,1444 FLOAT_REGS:1444,1444 SSE_FIRST_REG:-76,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1444,1444 FLOAT_INT_REGS:1444,1444 INT_SSE_REGS:1444,1444 FLOAT_INT_SSE_REGS:1444,1444 MEM:532,532
  a27(r84,l0) costs: AREG:608,608 DREG:608,608 CREG:608,608 BREG:608,608 SIREG:608,608 DIREG:608,608 AD_REGS:608,608 CLOBBERED_REGS:608,608 Q_REGS:608,608 NON_Q_REGS:608,608 TLS_GOTBASE_REGS:608,608 GENERAL_REGS:608,608 FP_TOP_REG:1444,1444 FP_SECOND_REG:1444,1444 FLOAT_REGS:1444,1444 SSE_FIRST_REG:-76,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1444,1444 FLOAT_INT_REGS:1444,1444 INT_SSE_REGS:1444,1444 FLOAT_INT_SSE_REGS:1444,1444 MEM:532,532
  a28(r177,l0) costs: AREG:608,608 DREG:608,608 CREG:608,608 BREG:608,608 SIREG:608,608 DIREG:608,608 AD_REGS:608,608 CLOBBERED_REGS:608,608 Q_REGS:608,608 NON_Q_REGS:608,608 TLS_GOTBASE_REGS:608,608 GENERAL_REGS:608,608 FP_TOP_REG:1444,1444 FP_SECOND_REG:1444,1444 FLOAT_REGS:1444,1444 SSE_FIRST_REG:-76,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1444,1444 FLOAT_INT_REGS:1444,1444 INT_SSE_REGS:1444,1444 FLOAT_INT_SSE_REGS:1444,1444 MEM:532,532
  a29(r83,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 MEM:11873,11873
  a30(r176,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:-1000,-1000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a31(r175,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:-1000,-1000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a32(r82,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8816,24816 NO_REX_SSE_REGS:8816,24816 SSE_REGS:8816,24816 MMX_REGS:14326,40326 INT_SSE_REGS:14326,40326 ALL_REGS:233624,657624 MEM:6612,18612
  a33(r99,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,8000 NO_REX_SSE_REGS:0,8000 SSE_REGS:0,8000 MMX_REGS:0,13000 INT_SSE_REGS:0,13000 ALL_REGS:0,212000 MEM:0,6000
  a34(r118,l1) costs: AREG:0,2000 DREG:0,2000 CREG:0,2000 BREG:0,2000 SIREG:0,2000 DIREG:0,2000 AD_REGS:0,2000 CLOBBERED_REGS:0,2000 Q_REGS:0,2000 NON_Q_REGS:0,2000 TLS_GOTBASE_REGS:0,2000 GENERAL_REGS:0,2000 SSE_FIRST_REG:14856,24856 NO_REX_SSE_REGS:14856,24856 SSE_REGS:14856,24856 MMX_REGS:24141,39141 INT_SSE_REGS:24141,39141 ALL_REGS:393684,607684 MEM:9285,16285
  a35(r119,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:9360,9360 NO_REX_SSE_REGS:9360,9360 SSE_REGS:9360,9360 MMX_REGS:14659,14659 INT_SSE_REGS:14659,14659 ALL_REGS:189634,189634 MEM:6401,6401
  a36(r129,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a37(r172,l1) costs: AREG:0,2000 DREG:0,2000 CREG:0,2000 BREG:0,2000 SIREG:0,2000 DIREG:0,2000 AD_REGS:0,2000 CLOBBERED_REGS:0,2000 Q_REGS:0,2000 NON_Q_REGS:0,2000 TLS_GOTBASE_REGS:0,2000 GENERAL_REGS:0,2000 SSE_FIRST_REG:4472,38472 NO_REX_SSE_REGS:4472,38472 SSE_REGS:4472,38472 MMX_REGS:7267,60267 INT_SSE_REGS:7267,60267 ALL_REGS:118508,862508 MEM:3354,26354
  a38(r174,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,16000 NO_REX_SSE_REGS:0,16000 SSE_REGS:0,16000 MMX_REGS:0,26000 INT_SSE_REGS:0,26000 ALL_REGS:0,424000 MEM:0,12000
  a39(r90,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3306,59306 NO_REX_SSE_REGS:3306,59306 SSE_REGS:3306,59306 MMX_REGS:3306,94306 INT_SSE_REGS:3306,94306 ALL_REGS:55100,1539100 MEM:551,35551
  a40(r120,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4408,20408 NO_REX_SSE_REGS:4408,20408 SSE_REGS:4408,20408 MMX_REGS:7163,33163 INT_SSE_REGS:7163,33163 ALL_REGS:116812,540812 MEM:3306,15306
  a41(r82,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:12000,12000
  a42(r90,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:56000,56000 NO_REX_SSE_REGS:56000,56000 SSE_REGS:56000,56000 MMX_REGS:91000,91000 INT_SSE_REGS:91000,91000 ALL_REGS:1484000,1484000 MEM:35000,35000
  a43(r99,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:13000,13000 INT_SSE_REGS:13000,13000 ALL_REGS:212000,212000 MEM:6000,6000
  a44(r118,l2) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:10000,10000 NO_REX_SSE_REGS:10000,10000 SSE_REGS:10000,10000 MMX_REGS:15000,15000 INT_SSE_REGS:15000,15000 ALL_REGS:214000,214000 MEM:7000,7000
  a45(r120,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:12000,12000
  a46(r129,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a47(r172,l2) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:34000,34000 NO_REX_SSE_REGS:34000,34000 SSE_REGS:34000,34000 MMX_REGS:53000,53000 INT_SSE_REGS:53000,53000 ALL_REGS:744000,744000 MEM:23000,23000
  a48(r174,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:12000,12000
  a49(r121,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:39000,39000 ALL_REGS:636000,636000 MEM:18000,18000
  a50(r188,l2) costs: AREG:10000,10000 DREG:10000,10000 CREG:10000,10000 BREG:10000,10000 SIREG:10000,10000 DIREG:10000,10000 AD_REGS:10000,10000 CLOBBERED_REGS:10000,10000 Q_REGS:10000,10000 NON_Q_REGS:10000,10000 TLS_GOTBASE_REGS:10000,10000 GENERAL_REGS:10000,10000 FP_TOP_REG:25000,25000 FP_SECOND_REG:25000,25000 FLOAT_REGS:25000,25000 SSE_FIRST_REG:-1000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:25000,25000 FLOAT_INT_REGS:25000,25000 INT_SSE_REGS:25000,25000 FLOAT_INT_SSE_REGS:25000,25000 MEM:12000,12000
  a51(r107,l2) costs: AREG:18000,18000 DREG:18000,18000 CREG:18000,18000 BREG:18000,18000 SIREG:18000,18000 DIREG:18000,18000 AD_REGS:18000,18000 CLOBBERED_REGS:18000,18000 Q_REGS:18000,18000 NON_Q_REGS:18000,18000 TLS_GOTBASE_REGS:18000,18000 GENERAL_REGS:18000,18000 FP_TOP_REG:38000,38000 FP_SECOND_REG:38000,38000 FLOAT_REGS:38000,38000 SSE_FIRST_REG:-2000,-2000 NO_REX_SSE_REGS:4000,4000 SSE_REGS:4000,4000 FLOAT_SSE_REGS:38000,38000 FLOAT_INT_REGS:38000,38000 INT_SSE_REGS:38000,38000 FLOAT_INT_SSE_REGS:38000,38000 MEM:18000,18000
  a52(r149,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:39000,39000 ALL_REGS:636000,636000 MEM:17000,17000
  a53(r187,l2) costs: AREG:10000,10000 DREG:10000,10000 CREG:10000,10000 BREG:10000,10000 SIREG:10000,10000 DIREG:10000,10000 AD_REGS:10000,10000 CLOBBERED_REGS:10000,10000 Q_REGS:10000,10000 NON_Q_REGS:10000,10000 TLS_GOTBASE_REGS:10000,10000 GENERAL_REGS:10000,10000 FP_TOP_REG:25000,25000 FP_SECOND_REG:25000,25000 FLOAT_REGS:25000,25000 SSE_FIRST_REG:2000,2000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:25000,25000 FLOAT_INT_REGS:25000,25000 INT_SSE_REGS:25000,25000 FLOAT_INT_SSE_REGS:25000,25000 MEM:12000,12000
  a54(r186,l2) costs: AREG:10000,10000 DREG:10000,10000 CREG:10000,10000 BREG:10000,10000 SIREG:10000,10000 DIREG:10000,10000 AD_REGS:10000,10000 CLOBBERED_REGS:10000,10000 Q_REGS:10000,10000 NON_Q_REGS:10000,10000 TLS_GOTBASE_REGS:10000,10000 GENERAL_REGS:10000,10000 FP_TOP_REG:25000,25000 FP_SECOND_REG:25000,25000 FLOAT_REGS:25000,25000 SSE_FIRST_REG:-1000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:25000,25000 FLOAT_INT_REGS:25000,25000 INT_SSE_REGS:25000,25000 FLOAT_INT_SSE_REGS:25000,25000 MEM:12000,12000
  a55(r148,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a56(r101,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:32000,32000 INT_SSE_REGS:32000,32000 ALL_REGS:524000,524000 MEM:12000,12000
  a57(r146,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:39000,39000 ALL_REGS:636000,636000 MEM:17000,17000
  a58(r145,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:21000,21000 INT_SSE_REGS:21000,21000 ALL_REGS:314000,314000 MEM:8000,8000
  a59(r144,l2) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:18000,18000 NO_REX_SSE_REGS:18000,18000 SSE_REGS:18000,18000 MMX_REGS:28000,28000 INT_SSE_REGS:28000,28000 ALL_REGS:426000,426000 MEM:13000,13000
  a60(r88,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4936,4936 NO_REX_SSE_REGS:4936,4936 SSE_REGS:4936,4936 MMX_REGS:8021,8021 INT_SSE_REGS:8021,8021 ALL_REGS:130804,130804 MEM:3085,3085
  a61(r94,l3) costs: AREG:1234,1234 DREG:1234,1234 CREG:1234,1234 BREG:1234,1234 SIREG:1234,1234 DIREG:1234,1234 AD_REGS:1234,1234 CLOBBERED_REGS:1234,1234 Q_REGS:1234,1234 NON_Q_REGS:1234,1234 TLS_GOTBASE_REGS:1234,1234 GENERAL_REGS:1234,1234 SSE_FIRST_REG:19744,19744 NO_REX_SSE_REGS:19744,19744 SSE_REGS:19744,19744 MMX_REGS:32084,32084 INT_SSE_REGS:32084,32084 ALL_REGS:523216,523216 MEM:12957,12957
  a62(r124,l3) costs: AREG:1236,1236 DREG:1236,1236 CREG:1236,1236 BREG:1236,1236 SIREG:1236,1236 DIREG:1236,1236 AD_REGS:1236,1236 CLOBBERED_REGS:1236,1236 Q_REGS:1236,1236 NON_Q_REGS:1236,1236 TLS_GOTBASE_REGS:1236,1236 GENERAL_REGS:1236,1236 SSE_FIRST_REG:14816,14816 NO_REX_SSE_REGS:14816,14816 SSE_REGS:14816,14816 MMX_REGS:24076,24076 INT_SSE_REGS:24076,24076 ALL_REGS:392624,392624 MEM:9878,9878
  a63(r129,l3) costs: AREG:1234,1234 DREG:1234,1234 CREG:1234,1234 BREG:1234,1234 SIREG:1234,1234 DIREG:1234,1234 AD_REGS:1234,1234 CLOBBERED_REGS:1234,1234 Q_REGS:1234,1234 NON_Q_REGS:1234,1234 TLS_GOTBASE_REGS:1234,1234 GENERAL_REGS:1234,1234 SSE_FIRST_REG:4936,4936 NO_REX_SSE_REGS:4936,4936 SSE_REGS:4936,4936 MMX_REGS:8021,8021 INT_SSE_REGS:8021,8021 ALL_REGS:130804,130804 MEM:3702,3702
  a64(r171,l3) costs: AREG:1236,1236 DREG:1236,1236 CREG:1236,1236 BREG:1236,1236 SIREG:1236,1236 DIREG:1236,1236 AD_REGS:1236,1236 CLOBBERED_REGS:1236,1236 Q_REGS:1236,1236 NON_Q_REGS:1236,1236 TLS_GOTBASE_REGS:1236,1236 GENERAL_REGS:1236,1236 SSE_FIRST_REG:4944,4944 NO_REX_SSE_REGS:4944,4944 SSE_REGS:4944,4944 MMX_REGS:8034,8034 INT_SSE_REGS:8034,8034 ALL_REGS:131016,131016 MEM:3708,3708
  a65(r173,l3) costs: AREG:1236,1236 DREG:1236,1236 CREG:1236,1236 BREG:1236,1236 SIREG:1236,1236 DIREG:1236,1236 AD_REGS:1236,1236 CLOBBERED_REGS:1236,1236 Q_REGS:1236,1236 NON_Q_REGS:1236,1236 TLS_GOTBASE_REGS:1236,1236 GENERAL_REGS:1236,1236 SSE_FIRST_REG:4944,4944 NO_REX_SSE_REGS:4944,4944 SSE_REGS:4944,4944 MMX_REGS:8034,8034 INT_SSE_REGS:8034,8034 ALL_REGS:131016,131016 MEM:3708,3708
  a66(r92,l3) costs: AREG:1234,1234 DREG:1234,1234 CREG:1234,1234 BREG:1234,1234 SIREG:-617,-617 DIREG:1234,1234 AD_REGS:1234,1234 CLOBBERED_REGS:1234,1234 Q_REGS:1234,1234 NON_Q_REGS:1234,1234 TLS_GOTBASE_REGS:1234,1234 GENERAL_REGS:1234,1234 SSE_FIRST_REG:13588,13588 NO_REX_SSE_REGS:13588,13588 SSE_REGS:13588,13588 MMX_REGS:19763,19763 INT_SSE_REGS:19763,19763 ALL_REGS:323620,323620 MEM:8028,8028
  a67(r184,l3) costs: AREG:-618,-618 DREG:1236,1236 CREG:1236,1236 BREG:1236,1236 SIREG:1236,1236 DIREG:1236,1236 AD_REGS:1236,1236 CLOBBERED_REGS:1236,1236 Q_REGS:1236,1236 NON_Q_REGS:1236,1236 TLS_GOTBASE_REGS:1236,1236 GENERAL_REGS:1236,1236 SSE_FIRST_REG:4944,4944 NO_REX_SSE_REGS:4944,4944 SSE_REGS:4944,4944 MMX_REGS:16068,16068 INT_SSE_REGS:16068,16068 ALL_REGS:262032,262032 MEM:6798,6798


Pass 1 for finding pseudo/allocno costs

    r188: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r187: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r186: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r185: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r181: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r180: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    r179: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r178: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r177: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r176: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r143: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r132: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r129: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a63 (r129,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a46 (r129,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a36 (r129,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r107: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r92: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r85: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r84: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r82: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r82,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a32 (r82,l1) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r129,l0) costs: AREG:1692,388 DREG:3384,5852 CREG:3384,5852 BREG:3384,5852 SIREG:3384,5852 DIREG:3384,5852 AD_REGS:1692,2926 CLOBBERED_REGS:1692,2926 Q_REGS:1692,2926 NON_Q_REGS:3384,5852 TLS_GOTBASE_REGS:3384,5852 GENERAL_REGS:1692,2926 SSE_FIRST_REG:23968,33840 NO_REX_SSE_REGS:23968,33840 SSE_REGS:23968,33840 MMX_REGS:37796,53838 INT_SSE_REGS:26798,34819 ALL_REGS:333688,464492 MEM:17976,25380
  a1(r119,l0) costs: GENERAL_REGS:152,152 SSE_FIRST_REG:1976,11336 NO_REX_SSE_REGS:1976,11336 SSE_REGS:1976,11336 MMX_REGS:3116,18326 INT_SSE_REGS:3116,18326 ALL_REGS:40888,233828 MEM:1444,7845
  a2(r174,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:608,16608 NO_REX_SSE_REGS:608,16608 SSE_REGS:608,16608 MMX_REGS:988,26988 INT_SSE_REGS:988,26988 ALL_REGS:16112,440112 MEM:456,12456
  a3(r118,l0) costs: GENERAL_REGS:0,2000 SSE_FIRST_REG:608,25464 NO_REX_SSE_REGS:608,25464 SSE_REGS:608,25464 MMX_REGS:912,40053 INT_SSE_REGS:912,40053 ALL_REGS:8056,615740 MEM:456,16741
  a4(r99,l0) costs: GENERAL_REGS:152,152 SSE_FIRST_REG:760,8760 NO_REX_SSE_REGS:760,8760 SSE_REGS:760,8760 MMX_REGS:1140,14140 INT_SSE_REGS:1140,14140 ALL_REGS:16264,228264 MEM:608,6608
  a5(r172,l0) costs: GENERAL_REGS:152,2152 SSE_FIRST_REG:1368,39840 NO_REX_SSE_REGS:1368,39840 SSE_REGS:1368,39840 MMX_REGS:2128,63395 INT_SSE_REGS:2128,63395 ALL_REGS:24776,893284 MEM:988,27342
  a6(r82,l0) costs: AREG:608,608 DREG:608,608 CREG:608,608 BREG:608,608 SIREG:608,608 DIREG:304,-152 AD_REGS:608,608 CLOBBERED_REGS:304,304 Q_REGS:608,608 NON_Q_REGS:304,304 TLS_GOTBASE_REGS:304,304 GENERAL_REGS:304,304 SSE_FIRST_REG:13424,38240 NO_REX_SSE_REGS:13424,38240 SSE_REGS:13424,38240 MMX_REGS:21814,62140 INT_SSE_REGS:19838,60164 ALL_REGS:285212,942836 MEM:10068,28680
  a7(r185,l0) costs: AREG:152,-76 DREG:304,304 CREG:304,304 BREG:304,304 SIREG:304,304 DIREG:304,304 AD_REGS:152,152 CLOBBERED_REGS:152,152 Q_REGS:152,152 NON_Q_REGS:304,304 TLS_GOTBASE_REGS:304,304 GENERAL_REGS:152,152 SSE_FIRST_REG:1824,1824 NO_REX_SSE_REGS:1824,1824 SSE_REGS:1824,1824 MMX_REGS:2964,2964 INT_SSE_REGS:1976,1976 ALL_REGS:32224,32224 MEM:1292,1292
  a8(r143,l0) costs: AREG:304,304 DREG:304,304 CREG:304,304 BREG:304,304 SIREG:304,304 DIREG:152,-76 AD_REGS:304,304 CLOBBERED_REGS:152,152 Q_REGS:304,304 NON_Q_REGS:152,152 TLS_GOTBASE_REGS:152,152 GENERAL_REGS:152,152 SSE_FIRST_REG:1824,1824 NO_REX_SSE_REGS:1824,1824 SSE_REGS:1824,1824 MMX_REGS:2964,2964 INT_SSE_REGS:1976,1976 ALL_REGS:32224,32224 MEM:1368,1368
  a9(r142,l0) costs: AREG:304,304 DREG:304,304 CREG:304,304 BREG:304,304 SIREG:152,-76 DIREG:304,304 AD_REGS:304,304 CLOBBERED_REGS:152,152 Q_REGS:304,304 NON_Q_REGS:152,152 TLS_GOTBASE_REGS:152,152 GENERAL_REGS:152,152 SSE_FIRST_REG:1824,1824 NO_REX_SSE_REGS:1824,1824 SSE_REGS:1824,1824 MMX_REGS:2964,2964 INT_SSE_REGS:1976,1976 ALL_REGS:24624,24624 MEM:456,456
  a10(r141,l0) costs: AREG:304,304 DREG:152,-76 CREG:304,304 BREG:304,304 SIREG:304,304 DIREG:304,304 AD_REGS:152,152 CLOBBERED_REGS:152,152 Q_REGS:152,152 NON_Q_REGS:304,304 TLS_GOTBASE_REGS:152,152 GENERAL_REGS:152,152 SSE_FIRST_REG:1824,1824 NO_REX_SSE_REGS:1824,1824 SSE_REGS:1824,1824 MMX_REGS:2964,2964 INT_SSE_REGS:1976,1976 ALL_REGS:24624,24624 MEM:456,456
  a11(r173,l0) costs: GENERAL_REGS:0,1236 SSE_FIRST_REG:544,10432 NO_REX_SSE_REGS:544,10432 SSE_REGS:544,10432 MMX_REGS:884,16952 INT_SSE_REGS:884,8918 ALL_REGS:7480,138496 MEM:408,7824
  a12(r171,l0) costs: GENERAL_REGS:0,1236 SSE_FIRST_REG:544,10432 NO_REX_SSE_REGS:544,10432 SSE_REGS:544,10432 MMX_REGS:884,16952 INT_SSE_REGS:884,8918 ALL_REGS:7616,138632 MEM:-408,7008
  a13(r94,l0) costs: GENERAL_REGS:0,1234 SSE_FIRST_REG:544,25224 NO_REX_SSE_REGS:544,25224 SSE_REGS:544,25224 MMX_REGS:816,40921 INT_SSE_REGS:816,32900 ALL_REGS:7208,530424 MEM:408,17067
  a14(r124,l0) costs: GENERAL_REGS:0,1236 SSE_FIRST_REG:544,20304 NO_REX_SSE_REGS:544,20304 SSE_REGS:544,20304 MMX_REGS:884,32994 INT_SSE_REGS:884,24960 ALL_REGS:14416,407040 MEM:340,13926
  a15(r89,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1152,1152 NO_REX_SSE_REGS:1152,1152 SSE_REGS:1152,1152 MMX_REGS:1872,1872 INT_SSE_REGS:1872,1872 ALL_REGS:22928,22928 MEM:796,796
  a16(r88,l0) costs: GENERAL_REGS:152,152 SSE_FIRST_REG:3040,7976 NO_REX_SSE_REGS:3040,7976 SSE_REGS:3040,7976 MMX_REGS:4940,12961 INT_SSE_REGS:3952,11973 ALL_REGS:56848,187652 MEM:2280,5365
  a17(r130,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11672,11672 NO_REX_SSE_REGS:11672,11672 SSE_REGS:11672,11672 MMX_REGS:17967,17967 INT_SSE_REGS:17967,17967 ALL_REGS:203308,203308 MEM:8754,8754
  a18(r183,l0) costs: AREG:152,-76 DREG:304,304 CREG:304,304 BREG:304,304 SIREG:304,304 DIREG:304,304 AD_REGS:152,152 CLOBBERED_REGS:152,152 Q_REGS:152,152 NON_Q_REGS:304,304 TLS_GOTBASE_REGS:304,304 GENERAL_REGS:152,152 SSE_FIRST_REG:1824,1824 NO_REX_SSE_REGS:1824,1824 SSE_REGS:1824,1824 MMX_REGS:2964,2964 INT_SSE_REGS:1976,1976 ALL_REGS:32224,32224 MEM:1292,1292
  a19(r138,l0) costs: AREG:1824,1824 DREG:1824,1824 CREG:1824,1824 BREG:1824,1824 SIREG:1824,1824 DIREG:1824,1824 AD_REGS:1824,1824 CLOBBERED_REGS:1824,1824 Q_REGS:1824,1824 NON_Q_REGS:1824,1824 TLS_GOTBASE_REGS:1824,1824 GENERAL_REGS:1824,1824 FP_TOP_REG:2888,2888 FP_SECOND_REG:2888,2888 FLOAT_REGS:2888,2888 SSE_FIRST_REG:152,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1900,1900 FLOAT_INT_REGS:2888,2888 INT_SSE_REGS:1900,1900 FLOAT_INT_SSE_REGS:1900,1900 MEM:1368,1368
  a20(r182,l0) costs: AREG:2432,2432 DREG:2432,2432 CREG:2432,2432 BREG:2432,2432 SIREG:2432,2432 DIREG:2432,2432 AD_REGS:2432,2432 CLOBBERED_REGS:2432,2432 Q_REGS:2432,2432 NON_Q_REGS:2432,2432 TLS_GOTBASE_REGS:2432,2432 GENERAL_REGS:2432,2432 FP_TOP_REG:3952,3952 FP_SECOND_REG:3952,3952 FLOAT_REGS:3952,3952 SSE_REGS:304,304 FLOAT_SSE_REGS:1976,1976 FLOAT_INT_REGS:3952,3952 INT_SSE_REGS:1976,1976 FLOAT_INT_SSE_REGS:1976,1976 MEM:1824,1824
  a21(r181,l0) costs: AREG:1824,1824 DREG:1824,1824 CREG:1824,1824 BREG:1824,1824 SIREG:1824,1824 DIREG:1824,1824 AD_REGS:1824,1824 CLOBBERED_REGS:1824,1824 Q_REGS:1824,1824 NON_Q_REGS:1824,1824 TLS_GOTBASE_REGS:1824,1824 GENERAL_REGS:1824,1824 FP_TOP_REG:2888,2888 FP_SECOND_REG:2888,2888 FLOAT_REGS:2888,2888 SSE_FIRST_REG:152,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1900,1900 FLOAT_INT_REGS:2888,2888 INT_SSE_REGS:1900,1900 FLOAT_INT_SSE_REGS:1900,1900 MEM:1368,1368
  a22(r180,l0) costs: AREG:2432,2432 DREG:2432,2432 CREG:2432,2432 BREG:2432,2432 SIREG:2432,2432 DIREG:2432,2432 AD_REGS:2432,2432 CLOBBERED_REGS:2432,2432 Q_REGS:2432,2432 NON_Q_REGS:2432,2432 TLS_GOTBASE_REGS:2432,2432 GENERAL_REGS:2432,2432 FP_TOP_REG:3952,3952 FP_SECOND_REG:3952,3952 FLOAT_REGS:3952,3952 SSE_REGS:304,304 FLOAT_SSE_REGS:1976,1976 FLOAT_INT_REGS:3952,3952 INT_SSE_REGS:1976,1976 FLOAT_INT_SSE_REGS:1976,1976 MEM:1824,1824
  a23(r132,l0) costs: AREG:1824,1824 DREG:1824,1824 CREG:1824,1824 BREG:1824,1824 SIREG:1824,1824 DIREG:1824,1824 AD_REGS:1824,1824 CLOBBERED_REGS:1824,1824 Q_REGS:1824,1824 NON_Q_REGS:1824,1824 TLS_GOTBASE_REGS:1824,1824 GENERAL_REGS:1824,1824 FP_TOP_REG:2888,2888 FP_SECOND_REG:2888,2888 FLOAT_REGS:2888,2888 SSE_FIRST_REG:152,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1900,1900 FLOAT_INT_REGS:2888,2888 INT_SSE_REGS:1900,1900 FLOAT_INT_SSE_REGS:1900,1900 MEM:1368,1368
  a24(r179,l0) costs: AREG:1824,1824 DREG:1824,1824 CREG:1824,1824 BREG:1824,1824 SIREG:1824,1824 DIREG:1824,1824 AD_REGS:1824,1824 CLOBBERED_REGS:1824,1824 Q_REGS:1824,1824 NON_Q_REGS:1824,1824 TLS_GOTBASE_REGS:1824,1824 GENERAL_REGS:1824,1824 FP_TOP_REG:2888,2888 FP_SECOND_REG:2888,2888 FLOAT_REGS:2888,2888 SSE_FIRST_REG:152,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1900,1900 FLOAT_INT_REGS:2888,2888 INT_SSE_REGS:1900,1900 FLOAT_INT_SSE_REGS:1900,1900 MEM:1368,1368
  a25(r85,l0) costs: AREG:1824,1824 DREG:1824,1824 CREG:1824,1824 BREG:1824,1824 SIREG:1824,1824 DIREG:1824,1824 AD_REGS:1824,1824 CLOBBERED_REGS:1824,1824 Q_REGS:1824,1824 NON_Q_REGS:1824,1824 TLS_GOTBASE_REGS:1824,1824 GENERAL_REGS:1824,1824 FP_TOP_REG:2888,2888 FP_SECOND_REG:2888,2888 FLOAT_REGS:2888,2888 SSE_FIRST_REG:152,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1900,1900 FLOAT_INT_REGS:2888,2888 INT_SSE_REGS:1900,1900 FLOAT_INT_SSE_REGS:1900,1900 MEM:1368,1368
  a26(r178,l0) costs: AREG:1824,1824 DREG:1824,1824 CREG:1824,1824 BREG:1824,1824 SIREG:1824,1824 DIREG:1824,1824 AD_REGS:1824,1824 CLOBBERED_REGS:1824,1824 Q_REGS:1824,1824 NON_Q_REGS:1824,1824 TLS_GOTBASE_REGS:1824,1824 GENERAL_REGS:1824,1824 FP_TOP_REG:2888,2888 FP_SECOND_REG:2888,2888 FLOAT_REGS:2888,2888 SSE_FIRST_REG:152,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1900,1900 FLOAT_INT_REGS:2888,2888 INT_SSE_REGS:1900,1900 FLOAT_INT_SSE_REGS:1900,1900 MEM:1368,1368
  a27(r84,l0) costs: AREG:1824,1824 DREG:1824,1824 CREG:1824,1824 BREG:1824,1824 SIREG:1824,1824 DIREG:1824,1824 AD_REGS:1824,1824 CLOBBERED_REGS:1824,1824 Q_REGS:1824,1824 NON_Q_REGS:1824,1824 TLS_GOTBASE_REGS:1824,1824 GENERAL_REGS:1824,1824 FP_TOP_REG:2888,2888 FP_SECOND_REG:2888,2888 FLOAT_REGS:2888,2888 SSE_FIRST_REG:152,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1900,1900 FLOAT_INT_REGS:2888,2888 INT_SSE_REGS:1900,1900 FLOAT_INT_SSE_REGS:1900,1900 MEM:1368,1368
  a28(r177,l0) costs: AREG:1824,1824 DREG:1824,1824 CREG:1824,1824 BREG:1824,1824 SIREG:1824,1824 DIREG:1824,1824 AD_REGS:1824,1824 CLOBBERED_REGS:1824,1824 Q_REGS:1824,1824 NON_Q_REGS:1824,1824 TLS_GOTBASE_REGS:1824,1824 GENERAL_REGS:1824,1824 FP_TOP_REG:2888,2888 FP_SECOND_REG:2888,2888 FLOAT_REGS:2888,2888 SSE_FIRST_REG:152,-76 NO_REX_SSE_REGS:152,152 SSE_REGS:152,152 FLOAT_SSE_REGS:1900,1900 FLOAT_INT_REGS:2888,2888 INT_SSE_REGS:1900,1900 FLOAT_INT_SSE_REGS:1900,1900 MEM:1368,1368
  a29(r83,l0) costs: GENERAL_REGS:0,0 MEM:11873,11873
  a30(r176,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:2000,-1000 DIREG:4000,4000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000
  a31(r175,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:2000,-1000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000
  a32(r82,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8816,24816 NO_REX_SSE_REGS:8816,24816 SSE_REGS:8816,24816 MMX_REGS:14326,40326 INT_SSE_REGS:14326,40326 ALL_REGS:233624,657624 MEM:6612,18612
  a33(r99,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,8000 NO_REX_SSE_REGS:0,8000 SSE_REGS:0,8000 MMX_REGS:0,13000 INT_SSE_REGS:0,13000 ALL_REGS:0,212000 MEM:0,6000
  a34(r118,l1) costs: GENERAL_REGS:0,2000 SSE_FIRST_REG:14856,24856 NO_REX_SSE_REGS:14856,24856 SSE_REGS:14856,24856 MMX_REGS:24141,39141 INT_SSE_REGS:24141,39141 ALL_REGS:393684,607684 MEM:9285,16285
  a35(r119,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:9360,9360 NO_REX_SSE_REGS:9360,9360 SSE_REGS:9360,9360 MMX_REGS:15210,15210 INT_SSE_REGS:15210,15210 ALL_REGS:192940,192940 MEM:6401,6401
  a36(r129,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a37(r172,l1) costs: GENERAL_REGS:0,2000 SSE_FIRST_REG:4472,38472 NO_REX_SSE_REGS:4472,38472 SSE_REGS:4472,38472 MMX_REGS:7267,61267 INT_SSE_REGS:7267,61267 ALL_REGS:118508,868508 MEM:3354,26354
  a38(r174,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,16000 NO_REX_SSE_REGS:0,16000 SSE_REGS:0,16000 MMX_REGS:0,26000 INT_SSE_REGS:0,26000 ALL_REGS:0,424000 MEM:0,12000
  a39(r90,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4408,60408 NO_REX_SSE_REGS:4408,60408 SSE_REGS:4408,60408 MMX_REGS:6612,97612 INT_SSE_REGS:6612,97612 ALL_REGS:58406,1542406 MEM:3306,38306
  a40(r120,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4408,20408 NO_REX_SSE_REGS:4408,20408 SSE_REGS:4408,20408 MMX_REGS:7163,33163 INT_SSE_REGS:7163,33163 ALL_REGS:116812,540812 MEM:3306,15306
  a41(r82,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:12000,12000
  a42(r90,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:56000,56000 NO_REX_SSE_REGS:56000,56000 SSE_REGS:56000,56000 MMX_REGS:91000,91000 INT_SSE_REGS:91000,91000 ALL_REGS:1484000,1484000 MEM:35000,35000
  a43(r99,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:13000,13000 INT_SSE_REGS:13000,13000 ALL_REGS:212000,212000 MEM:6000,6000
  a44(r118,l2) costs: GENERAL_REGS:2000,2000 SSE_FIRST_REG:10000,10000 NO_REX_SSE_REGS:10000,10000 SSE_REGS:10000,10000 MMX_REGS:15000,15000 INT_SSE_REGS:15000,15000 ALL_REGS:214000,214000 MEM:7000,7000
  a45(r120,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:12000,12000
  a46(r129,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a47(r172,l2) costs: GENERAL_REGS:2000,2000 SSE_FIRST_REG:34000,34000 NO_REX_SSE_REGS:34000,34000 SSE_REGS:34000,34000 MMX_REGS:54000,54000 INT_SSE_REGS:54000,54000 ALL_REGS:750000,750000 MEM:23000,23000
  a48(r174,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:12000,12000
  a49(r121,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:39000,39000 ALL_REGS:636000,636000 MEM:18000,18000
  a50(r188,l2) costs: AREG:24000,24000 DREG:24000,24000 CREG:24000,24000 BREG:24000,24000 SIREG:24000,24000 DIREG:24000,24000 AD_REGS:24000,24000 CLOBBERED_REGS:24000,24000 Q_REGS:24000,24000 NON_Q_REGS:24000,24000 TLS_GOTBASE_REGS:24000,24000 GENERAL_REGS:24000,24000 FP_TOP_REG:39000,39000 FP_SECOND_REG:39000,39000 FLOAT_REGS:39000,39000 SSE_FIRST_REG:2000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:26000,26000 FLOAT_INT_REGS:39000,39000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:26000,26000 MEM:18000,18000
  a51(r107,l2) costs: AREG:40000,40000 DREG:40000,40000 CREG:40000,40000 BREG:40000,40000 SIREG:40000,40000 DIREG:40000,40000 AD_REGS:40000,40000 CLOBBERED_REGS:40000,40000 Q_REGS:40000,40000 NON_Q_REGS:40000,40000 TLS_GOTBASE_REGS:40000,40000 GENERAL_REGS:40000,40000 FP_TOP_REG:65000,65000 FP_SECOND_REG:65000,65000 FLOAT_REGS:65000,65000 SSE_FIRST_REG:4000,-2000 NO_REX_SSE_REGS:4000,4000 SSE_REGS:4000,4000 FLOAT_SSE_REGS:39000,39000 FLOAT_INT_REGS:65000,65000 INT_SSE_REGS:39000,39000 FLOAT_INT_SSE_REGS:39000,39000 MEM:30000,30000
  a52(r149,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:39000,39000 ALL_REGS:636000,636000 MEM:17000,17000
  a53(r187,l2) costs: AREG:24000,24000 DREG:24000,24000 CREG:24000,24000 BREG:24000,24000 SIREG:24000,24000 DIREG:24000,24000 AD_REGS:24000,24000 CLOBBERED_REGS:24000,24000 Q_REGS:24000,24000 NON_Q_REGS:24000,24000 TLS_GOTBASE_REGS:24000,24000 GENERAL_REGS:24000,24000 FP_TOP_REG:39000,39000 FP_SECOND_REG:39000,39000 FLOAT_REGS:39000,39000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:26000,26000 FLOAT_INT_REGS:39000,39000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:26000,26000 MEM:18000,18000
  a54(r186,l2) costs: AREG:24000,24000 DREG:24000,24000 CREG:24000,24000 BREG:24000,24000 SIREG:24000,24000 DIREG:24000,24000 AD_REGS:24000,24000 CLOBBERED_REGS:24000,24000 Q_REGS:24000,24000 NON_Q_REGS:24000,24000 TLS_GOTBASE_REGS:24000,24000 GENERAL_REGS:24000,24000 FP_TOP_REG:39000,39000 FP_SECOND_REG:39000,39000 FLOAT_REGS:39000,39000 SSE_FIRST_REG:2000,-1000 NO_REX_SSE_REGS:2000,2000 SSE_REGS:2000,2000 FLOAT_SSE_REGS:26000,26000 FLOAT_INT_REGS:39000,39000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:26000,26000 MEM:18000,18000
  a55(r148,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a56(r101,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:39000,39000 ALL_REGS:538000,538000 MEM:16000,16000
  a57(r146,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:39000,39000 ALL_REGS:636000,636000 MEM:17000,17000
  a58(r145,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a59(r144,l2) costs: GENERAL_REGS:2000,2000 SSE_FIRST_REG:18000,18000 NO_REX_SSE_REGS:18000,18000 SSE_REGS:18000,18000 MMX_REGS:28000,28000 INT_SSE_REGS:28000,28000 ALL_REGS:426000,426000 MEM:13000,13000
  a60(r88,l3) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4936,4936 NO_REX_SSE_REGS:4936,4936 SSE_REGS:4936,4936 MMX_REGS:8021,8021 INT_SSE_REGS:8021,8021 ALL_REGS:130804,130804 MEM:3085,3085
  a61(r94,l3) costs: GENERAL_REGS:1234,1234 SSE_FIRST_REG:24680,24680 NO_REX_SSE_REGS:24680,24680 SSE_REGS:24680,24680 MMX_REGS:40105,40105 INT_SSE_REGS:32084,32084 ALL_REGS:523216,523216 MEM:16659,16659
  a62(r124,l3) costs: GENERAL_REGS:1236,1236 SSE_FIRST_REG:19760,19760 NO_REX_SSE_REGS:19760,19760 SSE_REGS:19760,19760 MMX_REGS:32110,32110 INT_SSE_REGS:24076,24076 ALL_REGS:392624,392624 MEM:13586,13586
  a63(r129,l3) costs: AREG:1234,1234 DREG:2468,2468 CREG:2468,2468 BREG:2468,2468 SIREG:2468,2468 DIREG:2468,2468 AD_REGS:1234,1234 CLOBBERED_REGS:1234,1234 Q_REGS:1234,1234 NON_Q_REGS:2468,2468 TLS_GOTBASE_REGS:2468,2468 GENERAL_REGS:1234,1234 SSE_FIRST_REG:9872,9872 NO_REX_SSE_REGS:9872,9872 SSE_REGS:9872,9872 MMX_REGS:16042,16042 INT_SSE_REGS:8021,8021 ALL_REGS:130804,130804 MEM:7404,7404
  a64(r171,l3) costs: GENERAL_REGS:1236,1236 SSE_FIRST_REG:9888,9888 NO_REX_SSE_REGS:9888,9888 SSE_REGS:9888,9888 MMX_REGS:16068,16068 INT_SSE_REGS:8034,8034 ALL_REGS:131016,131016 MEM:7416,7416
  a65(r173,l3) costs: GENERAL_REGS:1236,1236 SSE_FIRST_REG:9888,9888 NO_REX_SSE_REGS:9888,9888 SSE_REGS:9888,9888 MMX_REGS:16068,16068 INT_SSE_REGS:8034,8034 ALL_REGS:131016,131016 MEM:7416,7416
  a66(r92,l3) costs: AREG:2468,2468 DREG:2468,2468 CREG:2468,2468 BREG:2468,2468 SIREG:1234,-617 DIREG:2468,2468 AD_REGS:2468,2468 CLOBBERED_REGS:1234,1234 Q_REGS:2468,2468 NON_Q_REGS:1234,1234 TLS_GOTBASE_REGS:1234,1234 GENERAL_REGS:1234,1234 SSE_FIRST_REG:19760,19760 NO_REX_SSE_REGS:19760,19760 SSE_REGS:19760,19760 MMX_REGS:31492,31492 INT_SSE_REGS:23471,23471 ALL_REGS:327328,327328 MEM:14820,14820
  a67(r184,l3) costs: AREG:1236,-618 DREG:2472,2472 CREG:2472,2472 BREG:2472,2472 SIREG:2472,2472 DIREG:2472,2472 AD_REGS:1236,1236 CLOBBERED_REGS:1236,1236 Q_REGS:1236,1236 NON_Q_REGS:2472,2472 TLS_GOTBASE_REGS:2472,2472 GENERAL_REGS:1236,1236 SSE_FIRST_REG:14832,14832 NO_REX_SSE_REGS:14832,14832 SSE_REGS:14832,14832 MMX_REGS:24102,24102 INT_SSE_REGS:16068,16068 ALL_REGS:262032,262032 MEM:10506,10506

   Insn 338(l0): point = 0
   Insn 337(l0): point = 2
   Insn 412(l0): point = 5
   Insn 200(l0): point = 8
   Insn 199(l0): point = 10
   Insn 206(l0): point = 12
   Insn 7(l0): point = 14
   Insn 192(l0): point = 16
   Insn 191(l0): point = 18
   Insn 190(l0): point = 20
   Insn 187(l0): point = 22
   Insn 395(l0): point = 24
   Insn 186(l0): point = 26
   Insn 185(l0): point = 28
   Insn 184(l0): point = 30
   Insn 183(l0): point = 32
   Insn 182(l0): point = 34
   Insn 181(l0): point = 36
   Insn 180(l0): point = 38
   Insn 179(l0): point = 40
   Insn 409(l0): point = 43
   Insn 154(l0): point = 46
   Insn 153(l0): point = 48
   Insn 152(l0): point = 50
   Insn 151(l0): point = 52
   Insn 150(l0): point = 54
   Insn 137(l0): point = 57
   Insn 370(l0): point = 59
   Insn 5(l0): point = 61
   Insn 133(l0): point = 63
   Insn 131(l0): point = 66
   Insn 130(l0): point = 68
   Insn 122(l0): point = 70
   Insn 120(l0): point = 72
   Insn 117(l0): point = 74
   Insn 393(l0): point = 76
   Insn 116(l0): point = 78
   Insn 115(l0): point = 80
   Insn 112(l0): point = 82
   Insn 106(l0): point = 85
   Insn 105(l0): point = 87
   Insn 104(l0): point = 89
   Insn 392(l0): point = 91
   Insn 98(l0): point = 93
   Insn 391(l0): point = 95
   Insn 97(l0): point = 97
   Insn 96(l0): point = 99
   Insn 95(l0): point = 101
   Insn 390(l0): point = 103
   Insn 85(l0): point = 105
   Insn 389(l0): point = 107
   Insn 84(l0): point = 109
   Insn 83(l0): point = 111
   Insn 77(l0): point = 114
   Insn 76(l0): point = 116
   Insn 75(l0): point = 118
   Insn 388(l0): point = 120
   Insn 74(l0): point = 122
   Insn 73(l0): point = 124
   Insn 70(l0): point = 126
   Insn 387(l0): point = 128
   Insn 69(l0): point = 130
   Insn 68(l0): point = 132
   Insn 406(l0): point = 135
   Insn 61(l0): point = 138
   Insn 60(l0): point = 140
   Insn 403(l0): point = 143
   Insn 54(l0): point = 146
   Insn 53(l0): point = 148
   Insn 400(l0): point = 151
   Insn 47(l0): point = 154
   Insn 46(l0): point = 156
   Insn 42(l0): point = 159
   Insn 41(l0): point = 161
   Insn 37(l0): point = 164
   Insn 32(l0): point = 167
   Insn 31(l0): point = 169
   Insn 30(l0): point = 171
   Insn 29(l0): point = 173
   Insn 16(l0): point = 176
   Insn 15(l0): point = 178
   Insn 11(l0): point = 180
   Insn 386(l0): point = 182
   Insn 2(l0): point = 184
   Insn 385(l0): point = 186
   Insn 6(l1): point = 189
   Insn 205(l1): point = 191
   Insn 299(l1): point = 194
   Insn 298(l1): point = 196
   Insn 291(l1): point = 199
   Insn 290(l1): point = 201
   Insn 287(l1): point = 203
   Insn 282(l1): point = 206
   Insn 415(l1): point = 209
   Insn 307(l1): point = 212
   Insn 306(l1): point = 214
   Insn 302(l1): point = 216
   Insn 224(l2): point = 219
   Insn 223(l2): point = 221
   Insn 222(l2): point = 223
   Insn 219(l2): point = 225
   Insn 217(l2): point = 227
   Insn 216(l2): point = 229
   Insn 211(l2): point = 231
   Insn 210(l2): point = 233
   Insn 274(l2): point = 236
   Insn 273(l2): point = 238
   Insn 269(l2): point = 240
   Insn 267(l2): point = 242
   Insn 398(l2): point = 244
   Insn 265(l2): point = 246
   Insn 264(l2): point = 248
   Insn 257(l2): point = 251
   Insn 256(l2): point = 253
   Insn 255(l2): point = 255
   Insn 252(l2): point = 257
   Insn 249(l2): point = 259
   Insn 247(l2): point = 261
   Insn 397(l2): point = 263
   Insn 396(l2): point = 265
   Insn 240(l2): point = 267
   Insn 239(l2): point = 269
   Insn 238(l2): point = 271
   Insn 229(l2): point = 273
   Insn 228(l2): point = 275
   Insn 147(l3): point = 278
   Insn 146(l3): point = 280
   Insn 143(l3): point = 282
   Insn 394(l3): point = 284
   Insn 142(l3): point = 286
   Insn 141(l3): point = 288
   Insn 140(l3): point = 290
   Insn 139(l3): point = 292
   Insn 380(l3): point = 294
   Insn 170(l3): point = 297
   Insn 169(l3): point = 299
   Insn 167(l3): point = 301
   Insn 164(l3): point = 303
   Insn 162(l3): point = 305
   Insn 161(l3): point = 307
   Insn 160(l3): point = 309
   Insn 159(l3): point = 311
 a0(r129): [154..180] [135..150] [57..74] [43..45] [3..22]
 a1(r119): [8..20]
 a2(r174): [8..12]
 a3(r118): [8..14]
 a4(r99): [8..16]
 a5(r172): [8..18]
 a6(r82): [146..173] [138..142] [133..134] [112..113] [83..84] [8..42]
 a7(r185): [23..24]
 a8(r143): [29..36]
 a9(r142): [31..38]
 a10(r141): [33..40]
 a11(r173): [57..57]
 a12(r171): [57..59]
 a13(r94): [57..61]
 a14(r124): [57..63]
 a15(r89): [64..70]
 a16(r88): [57..82]
 a17(r130): [164..184] [138..142] [71..84]
 a18(r183): [75..76]
 a19(r138): [88..93]
 a20(r182): [90..91]
 a21(r181): [94..95]
 a22(r180): [100..103]
 a23(r132): [102..105]
 a24(r179): [106..107]
 a25(r85): [117..118]
 a26(r178): [119..120]
 a27(r84): [125..126]
 a28(r177): [127..128]
 a29(r83): [157..171] [149..150] [141..142]
 a30(r176): [179..182]
 a31(r175): [185..186]
 a32(r82): [189..218]
 a33(r99): [189..218]
 a34(r118): [189..218]
 a35(r119): [212..218] [194..206]
 a36(r129): [189..218]
 a37(r172): [189..218]
 a38(r174): [189..218]
 a39(r90): [189..189]
 a40(r120): [189..191]
 a41(r82): [219..277]
 a42(r90): [219..277]
 a43(r99): [219..277]
 a44(r118): [219..277]
 a45(r120): [219..277]
 a46(r129): [219..277]
 a47(r172): [219..255]
 a48(r174): [219..277]
 a49(r121): [262..277] [243..250] [219..223]
 a50(r188): [243..244]
 a51(r107): [272..277] [249..250] [219..225]
 a52(r149): [260..273]
 a53(r187): [260..263]
 a54(r186): [262..265]
 a55(r148): [274..275]
 a56(r101): [276..277] [219..231]
 a57(r146): [224..227]
 a58(r145): [228..229]
 a59(r144): [232..233]
 a60(r88): [278..313]
 a61(r94): [278..313]
 a62(r124): [278..313]
 a63(r129): [278..313]
 a64(r171): [278..313]
 a65(r173): [278..313]
 a66(r92): [310..313] [278..282]
 a67(r184): [283..284]
 Rebuilding regno allocno list for 188
 Rebuilding regno allocno list for 187
 Rebuilding regno allocno list for 186
 Rebuilding regno allocno list for 184
      Moving ranges of a48r174 to a38r174:  [219..277]
      Moving ranges of a38r174 to a2r174:  [189..277]
      Moving ranges of a65r173 to a11r173:  [278..313]
      Moving ranges of a47r172 to a37r172:  [219..255]
      Moving ranges of a37r172 to a5r172:  [189..255]
      Moving ranges of a64r171 to a12r171:  [278..313]
 Rebuilding regno allocno list for 149
 Rebuilding regno allocno list for 148
 Rebuilding regno allocno list for 146
 Rebuilding regno allocno list for 145
 Rebuilding regno allocno list for 144
      Moving ranges of a63r129 to a0r129:  [278..313]
      Moving ranges of a46r129 to a36r129:  [219..277]
      Moving ranges of a36r129 to a0r129:  [189..277]
      Moving ranges of a62r124 to a14r124:  [278..313]
 Rebuilding regno allocno list for 121
      Moving ranges of a45r120 to a40r120:  [219..277]
 Rebuilding regno allocno list for 120
      Moving ranges of a35r119 to a1r119:  [212..218] [194..206]
      Moving ranges of a44r118 to a34r118:  [219..277]
      Moving ranges of a34r118 to a3r118:  [189..277]
 Rebuilding regno allocno list for 107
 Rebuilding regno allocno list for 101
      Moving ranges of a43r99 to a33r99:  [219..277]
      Moving ranges of a33r99 to a4r99:  [189..277]
      Moving ranges of a61r94 to a13r94:  [278..313]
 Rebuilding regno allocno list for 92
      Moving ranges of a42r90 to a39r90:  [219..277]
 Rebuilding regno allocno list for 90
      Moving ranges of a60r88 to a16r88:  [278..313]
      Moving ranges of a41r82 to a32r82:  [219..277]
      Moving ranges of a32r82 to a6r82:  [189..277]
Compressing live ranges: from 314 to 80 - 25%
Ranges after the compression:
 a0(r129): [48..79] [38..45] [6..13] [0..1]
 a1(r119): [50..53] [0..1]
 a2(r174): [48..73] [0..1]
 a3(r118): [48..73] [0..1]
 a4(r99): [48..73] [0..1]
 a5(r172): [48..65] [0..1]
 a6(r82): [48..73] [36..43] [26..27] [16..17] [0..5]
 a7(r185): [2..3]
 a8(r143): [4..5]
 a9(r142): [4..5]
 a10(r141): [4..5]
 a11(r173): [74..79] [8..8]
 a12(r171): [74..79] [8..9]
 a13(r94): [74..79] [8..9]
 a14(r124): [74..79] [8..9]
 a15(r89): [10..11]
 a16(r88): [74..79] [8..15]
 a17(r130): [42..45] [38..39] [12..17]
 a18(r183): [14..15]
 a19(r138): [18..19]
 a20(r182): [18..19]
 a21(r181): [20..21]
 a22(r180): [22..23]
 a23(r132): [22..23]
 a24(r179): [24..25]
 a25(r85): [28..29]
 a26(r178): [30..31]
 a27(r84): [32..33]
 a28(r177): [34..35]
 a29(r83): [38..43]
 a30(r176): [44..45]
 a31(r175): [46..47]
 a39(r90): [54..73] [48..48]
 a40(r120): [54..73] [48..49]
 a49(r121): [62..73] [54..55]
 a50(r188): [62..63]
 a51(r107): [68..73] [64..65] [54..57]
 a52(r149): [66..69]
 a53(r187): [66..67]
 a54(r186): [66..67]
 a55(r148): [70..71]
 a56(r101): [72..73] [54..59]
 a57(r146): [56..57]
 a58(r145): [58..59]
 a59(r144): [60..61]
 a66(r92): [78..79] [74..75]
 a67(r184): [76..77]
+++Allocating 376 bytes for conflict table (uncompressed size 1088)
;; a0(r129,l0) conflicts: a1(r119,l0) a5(r172,l0) a2(r174,l0) a3(r118,l0) a4(r99,l0) a6(r82,l0) a11(r173,l0) a12(r171,l0) a13(r94,l0) a14(r124,l0) a16(r88,l0) a15(r89,l0) a17(r130,l0) a29(r83,l0) a30(r176,l0) a39(r90,l0) a40(r120,l0) a49(r121,l0) a56(r101,l0) a57(r146,l0) a58(r145,l0) a59(r144,l0) a52(r149,l0) a55(r148,l0) a66(r92,l0) a67(r184,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a1(r119,l0) conflicts: a5(r172,l0) a2(r174,l0) a3(r118,l0) a4(r99,l0) a6(r82,l0) a0(r129,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r174,l0) conflicts: a1(r119,l0) a5(r172,l0) a3(r118,l0) a4(r99,l0) a6(r82,l0) a0(r129,l0) a39(r90,l0) a40(r120,l0) a49(r121,l0) a56(r101,l0) a57(r146,l0) a58(r145,l0) a59(r144,l0) a52(r149,l0) a55(r148,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r118,l0) conflicts: a1(r119,l0) a5(r172,l0) a2(r174,l0) a4(r99,l0) a6(r82,l0) a0(r129,l0) a39(r90,l0) a40(r120,l0) a49(r121,l0) a56(r101,l0) a57(r146,l0) a58(r145,l0) a59(r144,l0) a52(r149,l0) a55(r148,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r99,l0) conflicts: a1(r119,l0) a5(r172,l0) a2(r174,l0) a3(r118,l0) a6(r82,l0) a0(r129,l0) a39(r90,l0) a40(r120,l0) a49(r121,l0) a56(r101,l0) a57(r146,l0) a58(r145,l0) a59(r144,l0) a52(r149,l0) a55(r148,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r172,l0) conflicts: a1(r119,l0) a2(r174,l0) a3(r118,l0) a4(r99,l0) a6(r82,l0) a0(r129,l0) a39(r90,l0) a40(r120,l0) a49(r121,l0) a56(r101,l0) a57(r146,l0) a58(r145,l0) a59(r144,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r82,l0) conflicts: a1(r119,l0) a5(r172,l0) a2(r174,l0) a3(r118,l0) a4(r99,l0) a0(r129,l0) a7(r185,l0) a8(r143,l0) a9(r142,l0) a10(r141,l0) a17(r130,l0) a29(r83,l0) a39(r90,l0) a40(r120,l0) a49(r121,l0) a56(r101,l0) a57(r146,l0) a58(r145,l0) a59(r144,l0) a52(r149,l0) a55(r148,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a7(r185,l0) conflicts: a6(r82,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r143,l0) conflicts: a6(r82,l0) a9(r142,l0) a10(r141,l0)
;;     total conflict hard regs: 1 2 4
;;     conflict hard regs: 1 2 4

;; a9(r142,l0) conflicts: a6(r82,l0) a8(r143,l0) a10(r141,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

;; a10(r141,l0) conflicts: a6(r82,l0) a8(r143,l0) a9(r142,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a11(r173,l0) conflicts: a0(r129,l0) a12(r171,l0) a13(r94,l0) a14(r124,l0) a16(r88,l0) a66(r92,l0) a67(r184,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a12(r171,l0) conflicts: a0(r129,l0) a11(r173,l0) a13(r94,l0) a14(r124,l0) a16(r88,l0) a66(r92,l0) a67(r184,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a13(r94,l0) conflicts: a0(r129,l0) a11(r173,l0) a12(r171,l0) a14(r124,l0) a16(r88,l0) a66(r92,l0) a67(r184,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a14(r124,l0) conflicts: a0(r129,l0) a11(r173,l0) a12(r171,l0) a13(r94,l0) a16(r88,l0) a66(r92,l0) a67(r184,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a15(r89,l0) conflicts: a0(r129,l0) a16(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r88,l0) conflicts: a0(r129,l0) a11(r173,l0) a12(r171,l0) a13(r94,l0) a14(r124,l0) a15(r89,l0) a17(r130,l0) a18(r183,l0) a66(r92,l0) a67(r184,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a17(r130,l0) conflicts: a6(r82,l0) a0(r129,l0) a16(r88,l0) a18(r183,l0) a29(r83,l0) a30(r176,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a18(r183,l0) conflicts: a16(r88,l0) a17(r130,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r138,l0) conflicts: a20(r182,l0)
;;     total conflict hard regs: 21
;;     conflict hard regs: 21

;; a20(r182,l0) conflicts: a19(r138,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r181,l0) conflicts:
;;     total conflict hard regs: 21
;;     conflict hard regs: 21

;; a22(r180,l0) conflicts: a23(r132,l0)
;;     total conflict hard regs: 20
;;     conflict hard regs: 20

;; a23(r132,l0) conflicts: a22(r180,l0)
;;     total conflict hard regs: 21
;;     conflict hard regs: 21

;; a24(r179,l0) conflicts:
;;     total conflict hard regs: 21
;;     conflict hard regs: 21

;; a25(r85,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r178,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a27(r84,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a28(r177,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a29(r83,l0) conflicts: a6(r82,l0) a0(r129,l0) a17(r130,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a30(r176,l0) conflicts: a0(r129,l0) a17(r130,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a31(r175,l0) conflicts:
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a39(r90,l0) conflicts: a5(r172,l0) a2(r174,l0) a3(r118,l0) a4(r99,l0) a6(r82,l0) a0(r129,l0) a40(r120,l0) a49(r121,l0) a56(r101,l0) a57(r146,l0) a58(r145,l0) a59(r144,l0) a52(r149,l0) a55(r148,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a40(r120,l0) conflicts: a5(r172,l0) a2(r174,l0) a3(r118,l0) a4(r99,l0) a6(r82,l0) a0(r129,l0) a39(r90,l0) a49(r121,l0) a56(r101,l0) a57(r146,l0) a58(r145,l0) a59(r144,l0) a52(r149,l0) a55(r148,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a49(r121,l0) conflicts: a5(r172,l0) a2(r174,l0) a3(r118,l0) a4(r99,l0) a6(r82,l0) a0(r129,l0) a39(r90,l0) a40(r120,l0) a56(r101,l0) a52(r149,l0) a55(r148,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a50(r188,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a51(r107,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a52(r149,l0) conflicts: a2(r174,l0) a3(r118,l0) a4(r99,l0) a6(r82,l0) a0(r129,l0) a39(r90,l0) a40(r120,l0) a49(r121,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a53(r187,l0) conflicts: a54(r186,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a54(r186,l0) conflicts: a53(r187,l0)
;;     total conflict hard regs: 21
;;     conflict hard regs: 21

;; a55(r148,l0) conflicts: a2(r174,l0) a3(r118,l0) a4(r99,l0) a6(r82,l0) a0(r129,l0) a39(r90,l0) a40(r120,l0) a49(r121,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a56(r101,l0) conflicts: a5(r172,l0) a2(r174,l0) a3(r118,l0) a4(r99,l0) a6(r82,l0) a0(r129,l0) a39(r90,l0) a40(r120,l0) a49(r121,l0) a57(r146,l0) a58(r145,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a57(r146,l0) conflicts: a5(r172,l0) a2(r174,l0) a3(r118,l0) a4(r99,l0) a6(r82,l0) a0(r129,l0) a39(r90,l0) a40(r120,l0) a56(r101,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a58(r145,l0) conflicts: a5(r172,l0) a2(r174,l0) a3(r118,l0) a4(r99,l0) a6(r82,l0) a0(r129,l0) a39(r90,l0) a40(r120,l0) a56(r101,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a59(r144,l0) conflicts: a5(r172,l0) a2(r174,l0) a3(r118,l0) a4(r99,l0) a6(r82,l0) a0(r129,l0) a39(r90,l0) a40(r120,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a66(r92,l0) conflicts: a0(r129,l0) a11(r173,l0) a12(r171,l0) a13(r94,l0) a14(r124,l0) a16(r88,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a67(r184,l0) conflicts: a0(r129,l0) a11(r173,l0) a12(r171,l0) a13(r94,l0) a14(r124,l0) a16(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a52(r149)<->a55(r148)@125:shuffle
  cp1:a56(r101)<->a59(r144)@125:shuffle
  cp2:a57(r146)<->a58(r145)@125:shuffle
  cp3:a0(r129)<->a7(r185)@76:move
  cp4:a66(r92)<->a67(r184)@618:move
  cp5:a14(r124)<->a15(r89)@8:shuffle
  cp6:a0(r129)<->a18(r183)@76:move
  cp7:a23(r132)<->a24(r179)@76:move
  cp8:a19(r138)<->a21(r181)@76:move
  cp9:a27(r84)<->a28(r177)@76:move
  cp10:a25(r85)<->a26(r178)@76:move
  cp11:a17(r130)<->a31(r175)@1000:move
  pref0:a50(r188)<-hr20@1500
  pref1:a54(r186)<-hr20@1500
  pref2:a7(r185)<-hr0@114
  pref3:a67(r184)<-hr0@927
  pref4:a18(r183)<-hr0@114
  pref5:a21(r181)<-hr20@114
  pref6:a24(r179)<-hr20@114
  pref7:a26(r178)<-hr20@114
  pref8:a28(r177)<-hr20@114
  pref9:a30(r176)<-hr4@1500
  pref10:a31(r175)<-hr5@1500
  pref11:a8(r143)<-hr5@114
  pref12:a9(r142)<-hr4@114
  pref13:a10(r141)<-hr1@114
  pref14:a19(r138)<-hr20@114
  pref15:a23(r132)<-hr20@114
  pref16:a0(r129)<-hr0@1269
  pref17:a51(r107)<-hr20@3000
  pref18:a66(r92)<-hr4@925
  pref19:a25(r85)<-hr20@114
  pref20:a27(r84)<-hr20@114
  pref21:a6(r82)<-hr5@228
  pref22:a22(r180)<-hr21@304
  pref23:a20(r182)<-hr21@304
  pref24:a53(r187)<-hr21@2000
  regions=4, blocks=32, points=80
    allocnos=68 (big 0), copies=12, conflicts=0, ranges=73

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 31 30 29 28 27 25 26 24 23 22 21 20 19 17 18 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r129 1r119 2r174 3r118 4r99 5r172 6r82 7r185 8r143 9r142 10r141 11r173 12r171 13r94 14r124 15r89 16r88 17r130 18r183 19r138 20r182 21r181 22r180 23r132 24r179 25r85 26r178 27r84 28r177 29r83 30r176 31r175 39r90 40r120 49r121 50r188 51r107 52r149 53r187 54r186 55r148 56r101 57r146 58r145 59r144 66r92 67r184
    modified regnos: 82 83 84 85 88 89 90 92 94 99 101 107 118 119 120 121 124 129 130 132 138 141 142 143 144 145 146 148 149 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188
    border:
    Pressure: GENERAL_REGS=10 SSE_REGS=2
 Removing pref16:hr0@1269
 Removing pref21:hr5@228
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 20-27 44-51)@157808
          2:( 20 22-27 44-51)@49552
        3:( 0-6 36-43)@397436
          4:( 0-3 5 6 36-43)@36000
            5:( 0 2 3 5 6 36-43)@30874
              6:( 3 6 36-43)@97386
                7:( 3 6 40-43)@241820
      Allocno a0r129 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0-2 4 5 7-35 44-74)
      Allocno a1r119 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a2r174 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  7-35 44-74)
      Allocno a3r118 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  7-35 44-74)
      Allocno a4r99 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  7-35 44-74)
      Allocno a5r172 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a6r82 of GENERAL_REGS(15) has 10 avail. regs  3 6 36-43, node:  3 6 36-43 (confl regs =  0-2 4 5 7-35 44-74)
      Allocno a7r185 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a8r143 of GENERAL_REGS(15) has 12 avail. regs  0 3 5 6 36-43, ^node:  0 2 3 5 6 36-43 (confl regs =  1 2 4 7-35 44-74)
      Allocno a9r142 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 36-43, ^node:  0-6 36-43 (confl regs =  1 2 7-35 44-74)
      Allocno a10r141 of GENERAL_REGS(15) has 14 avail. regs  0 1 3-6 36-43, ^node:  0-6 36-43 (confl regs =  2 7-35 44-74)
      Allocno a11r173 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 1 4 5 7-35 44-74)
      Allocno a12r171 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0-2 4 5 7-35 44-74)
      Allocno a13r94 of GENERAL_REGS(15) has 10 avail. regs  3 6 36-43, node:  3 6 36-43 (confl regs =  0-2 4 5 7-35 44-74)
      Allocno a14r124 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0-2 4 5 7-35 44-74)
      Allocno a15r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a16r88 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0-2 4 5 7-35 44-74)
      Allocno a17r130 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 36-43, ^node:  0-3 5 6 36-43 (confl regs =  0 4 5 7-35 44-74)
      Allocno a18r183 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a19r138 of SSE_REGS(16) has 15 avail. regs  20 22-27 44-51, node:  20 22-27 44-51 (confl regs =  0-19 21 28-43 52-74)
      Allocno a20r182 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a21r181 of SSE_REGS(16) has 15 avail. regs  20 22-27 44-51, node:  20 22-27 44-51 (confl regs =  0-19 21 28-43 52-74)
      Allocno a22r180 of SSE_REGS(16) has 15 avail. regs  21-27 44-51, ^node:  20-27 44-51 (confl regs =  0-20 28-43 52-74)
      Allocno a23r132 of SSE_REGS(16) has 15 avail. regs  20 22-27 44-51, node:  20 22-27 44-51 (confl regs =  0-19 21 28-43 52-74)
      Allocno a24r179 of SSE_REGS(16) has 15 avail. regs  20 22-27 44-51, node:  20 22-27 44-51 (confl regs =  0-19 21 28-43 52-74)
      Allocno a25r85 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a26r178 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a27r84 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a28r177 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a29r83 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a30r176 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a31r175 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Allocno a39r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a40r120 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  7-35 44-74)
      Allocno a49r121 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  7-35 44-74)
      Allocno a50r188 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a51r107 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a52r149 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a53r187 of SSE_REGS(16) has 16 avail. regs  20-27 44-51, node:  20-27 44-51 (confl regs =  0-19 28-43 52-74)
      Allocno a54r186 of SSE_REGS(16) has 15 avail. regs  20 22-27 44-51, node:  20 22-27 44-51 (confl regs =  0-19 21 28-43 52-74)
      Allocno a55r148 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a56r101 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a57r146 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a58r145 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a59r144 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a66r92 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 36-43, ^node:  0-6 36-43 (confl regs =  1 7-35 44-74)
      Allocno a67r184 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Forming thread by copy 11:a17r130-a31r175 (freq=1000):
        Result (freq=3459): a17r130(1459) a31r175(2000)
      Forming thread by copy 4:a66r92-a67r184 (freq=618):
        Result (freq=3089): a66r92(1853) a67r184(1236)
      Forming thread by copy 0:a52r149-a55r148 (freq=125):
        Result (freq=5000): a52r149(3000) a55r148(2000)
      Forming thread by copy 1:a56r101-a59r144 (freq=125):
        Result (freq=5000): a56r101(3000) a59r144(2000)
      Forming thread by copy 2:a57r146-a58r145 (freq=125):
        Result (freq=5000): a57r146(3000) a58r145(2000)
      Forming thread by copy 7:a23r132-a24r179 (freq=76):
        Result (freq=304): a23r132(152) a24r179(152)
      Forming thread by copy 8:a19r138-a21r181 (freq=76):
        Result (freq=304): a19r138(152) a21r181(152)
      Forming thread by copy 9:a27r84-a28r177 (freq=76):
        Result (freq=304): a27r84(152) a28r177(152)
      Forming thread by copy 10:a25r85-a26r178 (freq=76):
        Result (freq=304): a25r85(152) a26r178(152)
      Pushing a15(r89,l0)(cost 0)
      Pushing a22(r180,l0)(cost 0)
      Pushing a20(r182,l0)(cost 0)
      Pushing a18(r183,l0)(cost 0)
      Pushing a10(r141,l0)(cost 0)
      Pushing a9(r142,l0)(cost 0)
      Pushing a8(r143,l0)(cost 0)
      Pushing a7(r185,l0)(cost 0)
      Pushing a28(r177,l0)(cost 0)
      Pushing a27(r84,l0)(cost 0)
      Pushing a26(r178,l0)(cost 0)
      Pushing a25(r85,l0)(cost 0)
      Pushing a24(r179,l0)(cost 0)
      Pushing a23(r132,l0)(cost 0)
      Pushing a21(r181,l0)(cost 0)
      Pushing a19(r138,l0)(cost 0)
      Pushing a1(r119,l0)(cost 0)
      Pushing a54(r186,l0)(cost 0)
      Pushing a53(r187,l0)(cost 0)
      Pushing a50(r188,l0)(cost 0)
      Pushing a30(r176,l0)(cost 0)
      Pushing a29(r83,l0)(cost 0)
      Pushing a13(r94,l0)(cost 0)
      Pushing a51(r107,l0)(cost 0)
      Pushing a67(r184,l0)(cost 0)
        Making a11(r173,l0) colorable
        Making a12(r171,l0) colorable
      Forming thread by copy 5:a14r124-a15r89 (freq=8):
        Result (freq=2064): a14r124(1920) a15r89(144)
        Making a14(r124,l0) colorable
      Pushing a12(r171,l0)(cost 5772)
        Making a16(r88,l0) colorable
      Pushing a11(r173,l0)(cost 6588)
      Pushing a16(r88,l0)(cost 5213)
      Pushing a14(r124,l0)(cost 12690)
      Pushing a66(r92,l0)(cost 0)
      Pushing a17(r130,l0)(cost 0)
      Pushing a31(r175,l0)(cost 0)
      Pushing a5(r172,l0)(cost 0)
      Pushing a58(r145,l0)(cost 0)
      Pushing a57(r146,l0)(cost 0)
      Pushing a59(r144,l0)(cost 0)
      Pushing a56(r101,l0)(cost 0)
        Making a6(r82,l0) colorable
      Pushing a6(r82,l0)(cost 28376)
      Pushing a55(r148,l0)(cost 0)
      Pushing a52(r149,l0)(cost 0)
      Pushing a39(r90,l0)(cost 0)
        Making a2(r174,l0) colorable
        Making a3(r118,l0) colorable
        Making a4(r99,l0) colorable
      Forming thread by copy 3:a0r129-a7r185 (freq=76):
        Result (freq=2919): a0r129(2767) a7r185(152)
      Forming thread by copy 6:a0r129-a18r183 (freq=76):
        Result (freq=3071): a0r129(2767) a18r183(152) a7r185(152)
        Making a0(r129,l0) colorable
        Making a40(r120,l0) colorable
        Making a49(r121,l0) colorable
      Pushing a4(r99,l0)(cost 6456)
      Pushing a2(r174,l0)(cost 12456)
      Pushing a40(r120,l0)(cost 15306)
      Pushing a3(r118,l0)(cost 14741)
      Pushing a49(r121,l0)(cost 18000)
      Pushing a0(r129,l0)(cost 23688)
      Popping a0(r129,l0)  -- assign reg 40
      Popping a49(r121,l0)  -- assign reg 3
      Popping a3(r118,l0)  -- assign reg 6
      Popping a40(r120,l0)  -- assign reg 41
      Popping a2(r174,l0)  -- assign reg 42
      Popping a4(r99,l0)  -- assign reg 43
      Popping a39(r90,l0)  -- assign reg 0
      Popping a52(r149,l0)  -- assign reg 1
      Popping a55(r148,l0)  -- assign reg 1
      Popping a6(r82,l0)  -- assign reg 36
      Popping a56(r101,l0)  -- assign reg 1
      Popping a59(r144,l0)  -- assign reg 1
      Popping a57(r146,l0)  -- assign reg 2
      Popping a58(r145,l0)  -- assign reg 2
      Popping a5(r172,l0)  -- assign reg 4
      Popping a31(r175,l0)  -- assign reg 5
      Popping a17(r130,l0)  -- assign reg 3
      Popping a66(r92,l0)  -- assign reg 4
      Popping a14(r124,l0)  -- assign reg 3
      Popping a16(r88,l0)  -- assign reg 6
      Popping a11(r173,l0)  -- assign reg 41
      Popping a12(r171,l0)  -- assign reg 42
      Popping a67(r184,l0)  -- assign reg 0
      Popping a51(r107,l0)  -- assign reg 20
      Popping a13(r94,l0)  -- assign reg 43
      Popping a29(r83,l0)  -- assign reg 0
      Popping a30(r176,l0)  -- assign reg 4
      Popping a50(r188,l0)  -- assign reg 20
      Popping a53(r187,l0)  -- assign reg 21
      Popping a54(r186,l0)  -- assign reg 20
      Popping a1(r119,l0)  -- assign reg 0
      Popping a19(r138,l0)  -- assign reg 20
      Popping a21(r181,l0)  -- assign reg 20
      Popping a23(r132,l0)  -- assign reg 20
      Popping a24(r179,l0)  -- assign reg 20
      Popping a25(r85,l0)  -- assign reg 20
      Popping a26(r178,l0)  -- assign reg 20
      Popping a27(r84,l0)  -- assign reg 20
      Popping a28(r177,l0)  -- assign reg 20
      Popping a7(r185,l0)  -- assign reg 0
      Popping a8(r143,l0)  -- assign reg 5
      Popping a9(r142,l0)  -- assign reg 4
      Popping a10(r141,l0)  -- assign reg 1
      Popping a18(r183,l0)  -- assign reg 0
      Popping a20(r182,l0)  -- assign reg 21
      Popping a22(r180,l0)  -- assign reg 21
      Popping a15(r89,l0)  -- assign reg 3
Spilling a4r99 for a5r172
Assigning 43 to a5r172
Spilling a2r174 for a6r82
Assigning 42 to a6r82
Spilling a3r118 for a39r90
Assigning 6 to a39r90
Assigning 43 to a52r149
       a4(r99,l0)  -- assign memory
       a2(r174,l0)  -- assign memory
       a3(r118,l0)  -- assign memory
Disposition:
    6:r82  l0    42   29:r83  l0     0   27:r84  l0    20   25:r85  l0    20
   16:r88  l0     6   15:r89  l0     3   39:r90  l0     6   66:r92  l0     4
   13:r94  l0    43    4:r99  l0   mem   56:r101 l0     1   51:r107 l0    20
    3:r118 l0   mem    1:r119 l0     0   40:r120 l0    41   49:r121 l0     3
   14:r124 l0     3    0:r129 l0    40   17:r130 l0     3   23:r132 l0    20
   19:r138 l0    20   10:r141 l0     1    9:r142 l0     4    8:r143 l0     5
   59:r144 l0     1   58:r145 l0     2   57:r146 l0     2   55:r148 l0     1
   52:r149 l0    43   12:r171 l0    42    5:r172 l0    43   11:r173 l0    41
    2:r174 l0   mem   31:r175 l0     5   30:r176 l0     4   28:r177 l0    20
   26:r178 l0    20   24:r179 l0    20   22:r180 l0    21   21:r181 l0    20
   20:r182 l0    21   18:r183 l0     0   67:r184 l0     0    7:r185 l0     0
   54:r186 l0    20   53:r187 l0    21   50:r188 l0    20
New iteration of spill/restore move
+++Costs: overall 36368, reg 563, mem 35805, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_cos

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags] 20 [xmm0] 21 [xmm1]
;;  ref usage 	r0={15d,5u} r1={18d,4u} r2={17d,3u} r4={18d,5u} r5={21d,8u} r6={1d,31u} r7={1d,44u} r8={13d} r9={13d} r10={13d} r11={13d} r12={13d} r13={13d} r14={13d} r15={13d} r16={1d,30u} r17={43d,17u} r18={13d} r19={1d,31u} r20={20d,12u} r21={17d,6u} r22={14d} r23={14d} r24={14d} r25={14d} r26={14d} r27={14d} r28={13d} r29={13d} r30={13d} r31={13d} r32={13d} r33={13d} r34={13d} r35={13d} r36={14d} r37={14d} r38={13d} r39={13d} r44={13d} r45={13d} r46={13d} r47={13d} r48={13d} r49={13d} r50={13d} r51={13d} r52={13d} r53={13d} r54={13d} r55={13d} r56={13d} r57={13d} r58={13d} r59={13d} r60={13d} r61={13d} r62={13d} r63={13d} r64={13d} r65={13d} r66={13d} r67={13d} r68={13d} r69={13d} r70={13d} r71={13d} r72={13d} r73={13d} r74={13d} r75={13d} r82={1d,14u,2e} r83={1d,5u} r84={1d,2u} r85={1d,1u} r88={1d,5u} r89={1d,2u} r90={3d,8u} r92={1d,3u} r94={2d,5u} r99={1d,3u} r101={1d,4u} r107={1d,3u} r118={3d,8u} r119={2d,4u} r120={1d,2u} r121={1d,2u,2e} r124={2d,2u} r129={3d,6u} r130={1d,4u} r132={1d,1u} r138={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,2u} r148={1d,1u} r149={1d,2u} r171={1d,1u} r172={2d,5u} r173={1d,1u} r174={1d,2u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} 
;;    total ref usage 1323{1005d,314u,4e} in 223{210 regular + 13 call} insns.
(note 1 0 12 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 129 130 175 176
(note 12 1 385 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 385 12 2 2 (set (reg:DI 175)
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_math.c":121:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ arg ])
        (nil)))
(insn 2 385 386 2 (set (reg/v/f:DI 130 [ arg ])
        (reg:DI 175)) "cmodules/fbgc_math.c":121:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 175)
        (nil)))
(insn 386 2 3 2 (set (reg:SI 176)
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_math.c":121:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ argc ])
        (nil)))
(note 3 386 4 2 NOTE_INSN_DELETED)
(note 4 3 14 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 14 4 11 2 (debug_marker) "cmodules/fbgc_math.c":121:1 -1
     (nil))
(insn 11 14 15 2 (set (reg/v/f:DI 129 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":121:1 66 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 15 11 16 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 176)
            (const_int 1 [0x1]))) "cmodules/fbgc_math.c":121:1 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 176)
        (nil)))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 336)
            (pc))) "cmodules/fbgc_math.c":121:1 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 662283964 (nil)))
 -> 336)
;;  succ:       3 [38.3% (guessed)]  count:411457864 (estimated locally) (FALLTHRU)
;;              31 [61.7% (guessed)]  count:662283960 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 129 130

;; basic block 3, loop depth 0, count 411457868 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [38.3% (guessed)]  count:411457864 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 129 130
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 130
;; lr  def 	 17 [flags] 82 83
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 18 17 19 3 (var_location:SI D#14 (const_int 1 [0x1])) -1
     (nil))
(debug_insn 19 18 20 3 (var_location:DI arg (reg/v/f:DI 130 [ arg ])) -1
     (nil))
(debug_insn 20 19 21 3 (debug_marker:BLK) "cmodules/fbgc_math.c":121:1 -1
     (nil))
(debug_insn 21 20 22 3 (var_location:SI D#15 (debug_expr:SI D#14)) -1
     (nil))
(debug_insn 22 21 23 3 (var_location:SI argc (debug_expr:SI D#15)) -1
     (nil))
(debug_insn 23 22 24 3 (var_location:DI arg (reg/v/f:DI 130 [ arg ])) -1
     (nil))
(debug_insn 24 23 25 3 (var_location:SI argc (const_int 1 [0x1])) -1
     (nil))
(debug_insn 25 24 26 3 (var_location:DI fun (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7f213e47d900 cos>)) -1
     (nil))
(debug_insn 26 25 27 3 (var_location:DI zfun (symbol_ref:DI ("c_cos") [flags 0x3]  <function_decl 0x7f213dfa5e00 c_cos>)) -1
     (nil))
(debug_insn 27 26 28 3 (debug_marker:BLK) "cmodules/fbgc_math.c":50:22 -1
     (nil))
(debug_insn 28 27 29 3 (debug_marker) "cmodules/fbgc_math.c":53:2 -1
     (nil))
(insn 29 28 30 3 (set (reg/f:DI 82 [ _10 ])
        (mem/f:DI (reg/v/f:DI 130 [ arg ]) [3 *arg_5(D)+0 S8 A64])) "cmodules/fbgc_math.c":53:12 66 {*movdi_internal}
     (nil))
(insn 30 29 31 3 (set (reg:QI 83 [ _11 ])
        (mem:QI (reg/f:DI 82 [ _10 ]) [0 _10->type+0 S1 A8])) "cmodules/fbgc_math.c":53:15 69 {*movqi_internal}
     (nil))
(insn 31 30 32 3 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 83 [ _11 ])
            (const_int 7 [0x7]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (nil))
(jump_insn 32 31 33 3 (set (pc)
        (if_then_else (eq (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 174)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (int_list:REG_BR_PROB 214748374 (nil))
 -> 174)
;;  succ:       4 [80.0% (adjusted)]  count:329166293 (estimated locally) (FALLTHRU)
;;              20 [20.0% (adjusted)]  count:82291575 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 17 [flags] 19 [frame] 82 83 129 130

;; basic block 4, loop depth 0, count 411457868 (estimated locally), maybe hot
;; Invalid sum of incoming counts 329166293 (estimated locally), should be 411457868 (estimated locally)
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [80.0% (adjusted)]  count:329166293 (estimated locally) (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(6){ }u19(7){ }u20(16){ }u21(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 17 [flags] 19 [frame] 82 83 129 130
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 17 [flags] 19 [frame]
;; lr  def 	
(note 33 32 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 37 33 38 4 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 402653190 (nil)))
 -> 58)
;;  succ:       5 [62.5% (adjusted)]  count:257161168 (estimated locally) (FALLTHRU)
;;              10 [37.5% (adjusted)]  count:154296701 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 129 130

;; basic block 5, loop depth 0, count 411457868 (estimated locally), maybe hot
;; Invalid sum of incoming counts 257161168 (estimated locally), should be 411457868 (estimated locally)
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [62.5% (adjusted)]  count:257161168 (estimated locally) (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 129
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  def 	 17 [flags]
(note 38 37 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 41 38 42 5 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 83 [ _11 ])
            (const_int 4 [0x4]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (nil))
(jump_insn 42 41 43 5 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 536870926 (nil)))
 -> 51)
;;  succ:       6 [50.0% (adjusted)]  count:205728931 (estimated locally) (FALLTHRU)
;;              8 [50.0% (adjusted)]  count:205728937 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 129

;; basic block 6, loop depth 0, count 411457868 (estimated locally), maybe hot
;; Invalid sum of incoming counts 205728931 (estimated locally), should be 411457868 (estimated locally)
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [50.0% (adjusted)]  count:205728931 (estimated locally) (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u29(6){ }u30(7){ }u31(16){ }u32(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 129
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  def 	 17 [flags]
(note 43 42 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 46 43 47 6 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 83 [ _11 ])
            (const_int 2 [0x2]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 83 [ _11 ])
        (nil)))
(jump_insn 47 46 399 6 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 336)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 596523246 (nil)))
 -> 336)
;;  succ:       31 [55.6% (adjusted)]  count:228587706 (estimated locally)
;;              7 [44.4% (adjusted)]  count:182870162 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 129

;; basic block 7, loop depth 0, count 182870162 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL)
;;  pred:       6 [44.4% (adjusted)]  count:182870162 (estimated locally) (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 399 47 400 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 400 399 401 7 (set (pc)
        (label_ref 65)) 660 {jump}
     (nil)
 -> 65)
;;  succ:       12 [always]  count:182870162 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82

(barrier 401 400 51)
;; basic block 8, loop depth 0, count 411457868 (estimated locally), maybe hot
;; Invalid sum of incoming counts 205728937 (estimated locally), should be 411457868 (estimated locally)
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [50.0% (adjusted)]  count:205728937 (estimated locally)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u39(6){ }u40(7){ }u41(16){ }u42(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 129
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  def 	 17 [flags]
(code_label 51 401 52 8 111 (nil) [1 uses])
(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _11 ])
            (const_int 5 [0x5]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 83 [ _11 ])
        (nil)))
(jump_insn 54 53 402 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 858993454 (nil)))
 -> 80)
;;  succ:       9 [20.0% (adjusted)]  count:82291578 (estimated locally) (FALLTHRU)
;;              13 [80.0% (adjusted)]  count:329166290 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 129

;; basic block 9, loop depth 0, count 82291578 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (HOT_PARTITION, RTL)
;;  pred:       8 [20.0% (adjusted)]  count:82291578 (estimated locally) (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 129
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 402 54 403 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 403 402 404 9 (set (pc)
        (label_ref 336)) 660 {jump}
     (nil)
 -> 336)
;;  succ:       31 [always]  count:82291578 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 129

(barrier 404 403 58)
;; basic block 10, loop depth 0, count 411457868 (estimated locally), maybe hot
;; Invalid sum of incoming counts 154296701 (estimated locally), should be 411457868 (estimated locally)
;;  prev block 9, next block 11, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [37.5% (adjusted)]  count:154296701 (estimated locally)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u49(6){ }u50(7){ }u51(16){ }u52(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 129 130
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  def 	 17 [flags]
(code_label 58 404 59 10 110 (nil) [1 uses])
(note 59 58 60 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _11 ])
            (const_int 8 [0x8]))) "cmodules/fbgc_math.c":53:2 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 83 [ _11 ])
        (nil)))
(jump_insn 61 60 405 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) "cmodules/fbgc_math.c":53:2 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 715827886 (nil)))
 -> 109)
;;  succ:       11 [33.3% (adjusted)]  count:137152624 (estimated locally) (FALLTHRU)
;;              14 [66.7% (adjusted)]  count:274305244 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 129 130

;; basic block 11, loop depth 0, count 137152624 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (HOT_PARTITION, RTL)
;;  pred:       10 [33.3% (adjusted)]  count:137152624 (estimated locally) (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 129
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 405 61 406 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 406 405 407 11 (set (pc)
        (label_ref 336)) 660 {jump}
     (nil)
 -> 336)
;;  succ:       31 [always]  count:137152624 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 129

(barrier 407 406 65)
;; basic block 12, loop depth 0, count 82291576 (estimated locally), maybe hot
;; Invalid sum of incoming counts 182870162 (estimated locally), should be 82291576 (estimated locally)
;;  prev block 11, next block 13, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [always]  count:182870162 (estimated locally)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u59(6){ }u60(7){ }u61(16){ }u62(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 84 85 177 178
(code_label 65 407 66 12 112 (nil) [1 uses])
(note 66 65 67 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 67 66 68 12 (debug_marker) "cmodules/fbgc_math.c":58:4 -1
     (nil))
(insn 68 67 69 12 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _10 ])) "cmodules/fbgc_math.c":58:19 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 82 [ _10 ])
        (nil)))
(call_insn 69 68 387 12 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f213e3db700 convert_fbgc_object_to_double>) [0 convert_fbgc_object_to_double S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":58:19 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f213e3db700 convert_fbgc_object_to_double>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 387 69 70 12 (set (reg:DF 177)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":58:19 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (nil)))
(insn 70 387 71 12 (set (reg/v:DF 84 [ dbarg ])
        (reg:DF 177)) "cmodules/fbgc_math.c":58:19 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 177)
        (nil)))
(debug_insn 71 70 72 12 (var_location:DF dbarg (reg/v:DF 84 [ dbarg ])) "cmodules/fbgc_math.c":58:19 -1
     (nil))
(debug_insn 72 71 73 12 (debug_marker) "cmodules/fbgc_math.c":59:4 -1
     (nil))
(insn 73 72 74 12 (set (reg:DF 20 xmm0)
        (reg/v:DF 84 [ dbarg ])) "cmodules/fbgc_math.c":59:11 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg/v:DF 84 [ dbarg ])
        (nil)))
(call_insn/u 74 73 388 12 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7f213e47d900 cos>) [0 __builtin_cos S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":59:11 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7f213e47d900 cos>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 388 74 75 12 (set (reg:DF 178)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":59:11 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (nil)))
(insn 75 388 76 12 (set (reg:DF 85 [ _13 ])
        (reg:DF 178)) "cmodules/fbgc_math.c":59:11 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 178)
        (nil)))
(insn 76 75 77 12 (set (reg:DF 20 xmm0)
        (reg:DF 85 [ _13 ])) "cmodules/fbgc_math.c":59:11 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 85 [ _13 ])
        (nil)))
(call_insn/j 77 76 78 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f213e3e6d00 new_fbgc_double_object>) [0 new_fbgc_double_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":59:11 681 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f213e3e6d00 new_fbgc_double_object>)
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
;;  succ:       EXIT [always]  count:82291576 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 78 77 80)
;; basic block 13, loop depth 0, count 82291576 (estimated locally), maybe hot
;; Invalid sum of incoming counts 329166290 (estimated locally), should be 82291576 (estimated locally)
;;  prev block 12, next block 14, flags: (HOT_PARTITION, RTL)
;;  pred:       8 [80.0% (adjusted)]  count:329166290 (estimated locally)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u75(6){ }u76(7){ }u77(16){ }u78(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 132 138 179 180 181 182
(code_label 80 78 81 13 113 (nil) [1 uses])
(note 81 80 82 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 82 81 83 13 (debug_marker) "cmodules/fbgc_math.c":63:4 -1
     (nil))
(insn 83 82 84 13 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _10 ])) "cmodules/fbgc_math.c":63:27 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 82 [ _10 ])
        (nil)))
(call_insn 84 83 389 13 (set (parallel:TI [
                (expr_list:REG_DEP_TRUE (reg:DF 20 xmm0)
                    (const_int 0 [0]))
                (expr_list:REG_DEP_TRUE (reg:DF 21 xmm1)
                    (const_int 8 [0x8]))
            ])
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_complex") [flags 0x41]  <function_decl 0x7f213e3db800 convert_fbgc_object_to_complex>) [0 convert_fbgc_object_to_complex S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":63:27 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_complex") [flags 0x41]  <function_decl 0x7f213e3db800 convert_fbgc_object_to_complex>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 389 84 85 13 (set (reg:DF 179)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":63:27 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (nil)))
(insn 85 389 390 13 (set (reg:DF 132)
        (reg:DF 179)) "cmodules/fbgc_math.c":63:27 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 179)
        (nil)))
(insn 390 85 86 13 (set (reg:DF 180)
        (reg:DF 21 xmm1)) "cmodules/fbgc_math.c":63:27 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm1)
        (nil)))
(note 86 390 90 13 NOTE_INSN_DELETED)
(debug_insn 90 86 95 13 (debug_marker) "cmodules/fbgc_math.c":64:4 -1
     (nil))
(insn 95 90 96 13 (set (reg:DF 20 xmm0)
        (reg:DF 132)) "cmodules/fbgc_math.c":64:9 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 132)
        (nil)))
(insn 96 95 97 13 (set (reg:DF 21 xmm1)
        (reg:DF 180)) "cmodules/fbgc_math.c":64:9 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 180)
        (nil)))
(call_insn 97 96 391 13 (set (parallel:TI [
                (expr_list:REG_DEP_TRUE (reg:DF 20 xmm0)
                    (const_int 0 [0]))
                (expr_list:REG_DEP_TRUE (reg:DF 21 xmm1)
                    (const_int 8 [0x8]))
            ])
        (call (mem:QI (symbol_ref:DI ("c_cos") [flags 0x3]  <function_decl 0x7f213dfa5e00 c_cos>) [0 c_cos S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":64:9 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("c_cos") [flags 0x3]  <function_decl 0x7f213dfa5e00 c_cos>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:DF 21 xmm1))
        (expr_list (use (reg:DF 20 xmm0))
            (nil))))
(insn 391 97 98 13 (set (reg:DF 181)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":64:9 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (nil)))
(insn 98 391 392 13 (set (reg:DF 138)
        (reg:DF 181)) "cmodules/fbgc_math.c":64:9 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 181)
        (nil)))
(insn 392 98 99 13 (set (reg:DF 182)
        (reg:DF 21 xmm1)) "cmodules/fbgc_math.c":64:9 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm1)
        (nil)))
(note 99 392 103 13 NOTE_INSN_DELETED)
(debug_insn 103 99 104 13 (debug_marker) "cmodules/fbgc_math.c":65:4 -1
     (nil))
(insn 104 103 105 13 (set (reg:DF 21 xmm1)
        (reg:DF 182)) "cmodules/fbgc_math.c":65:11 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 182)
        (nil)))
(insn 105 104 106 13 (set (reg:DF 20 xmm0)
        (reg:DF 138)) "cmodules/fbgc_math.c":65:11 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 138)
        (nil)))
(call_insn/j 106 105 107 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_complex_object") [flags 0x41]  <function_decl 0x7f213e3f0300 new_fbgc_complex_object>) [0 new_fbgc_complex_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":65:11 681 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm1)
        (expr_list:REG_DEAD (reg:DF 20 xmm0)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_complex_object") [flags 0x41]  <function_decl 0x7f213e3f0300 new_fbgc_complex_object>)
                (nil))))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (expr_list:DF (use (reg:DF 21 xmm1))
            (nil))))
;;  succ:       EXIT [always]  count:82291576 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 107 106 109)
;; basic block 14, loop depth 0, count 82291576 (estimated locally), maybe hot
;; Invalid sum of incoming counts 274305244 (estimated locally), should be 82291576 (estimated locally)
;;  prev block 13, next block 15, flags: (HOT_PARTITION, RTL)
;;  pred:       10 [66.7% (adjusted)]  count:274305244 (estimated locally)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u96(6){ }u97(7){ }u98(16){ }u99(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 130
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 130
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 88 89 129 183
(code_label 109 107 110 14 114 (nil) [1 uses])
(note 110 109 111 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 111 110 112 14 (debug_marker) "cmodules/fbgc_math.c":69:4 -1
     (nil))
(insn 112 111 113 14 (set (reg/v:SI 88 [ sz ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _10 ])
                (const_int 13 [0xd])) [5 MEM[(struct fbgc_tuple_object *)_10].size+0 S4 A8])) "cmodules/fbgc_math.c":69:11 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 82 [ _10 ])
        (nil)))
(debug_insn 113 112 114 14 (var_location:SI sz (reg/v:SI 88 [ sz ])) "cmodules/fbgc_math.c":69:11 -1
     (nil))
(debug_insn 114 113 115 14 (debug_marker) "cmodules/fbgc_math.c":70:4 -1
     (nil))
(insn 115 114 116 14 (set (reg:SI 5 di)
        (reg/v:SI 88 [ sz ])) "cmodules/fbgc_math.c":70:34 67 {*movsi_internal}
     (nil))
(call_insn 116 115 393 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f213e3fec00 new_fbgc_tuple_object>) [0 new_fbgc_tuple_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":70:34 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f213e3fec00 new_fbgc_tuple_object>)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 393 116 117 14 (set (reg:DI 183)
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":70:34 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 117 393 118 14 (set (reg/v/f:DI 129 [ <retval> ])
        (reg:DI 183)) "cmodules/fbgc_math.c":70:34 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 183)
        (nil)))
(debug_insn 118 117 119 14 (var_location:DI res_tp (reg/v/f:DI 129 [ <retval> ])) "cmodules/fbgc_math.c":70:34 -1
     (nil))
(debug_insn 119 118 120 14 (debug_marker) "cmodules/fbgc_math.c":71:4 -1
     (nil))
(insn 120 119 121 14 (set (mem:SI (plus:DI (reg/v/f:DI 129 [ <retval> ])
                (const_int 13 [0xd])) [5 MEM[(struct fbgc_tuple_object *)res_tp_19].size+0 S4 A8])
        (reg/v:SI 88 [ sz ])) "cmodules/fbgc_math.c":71:35 67 {*movsi_internal}
     (nil))
(debug_insn 121 120 122 14 (debug_marker) "cmodules/fbgc_math.c":72:4 -1
     (nil))
(insn 122 121 123 14 (set (reg/f:DI 89 [ _20 ])
        (mem/f:DI (reg/v/f:DI 130 [ arg ]) [3 *arg_5(D)+0 S8 A64])) "cmodules/fbgc_math.c":72:39 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 130 [ arg ])
        (nil)))
(debug_insn 123 122 124 14 (var_location:DI D#38 (plus:DI (reg/f:DI 89 [ _20 ])
        (const_int 17 [0x11]))) "cmodules/fbgc_math.c":72:26 -1
     (nil))
(debug_insn 124 123 125 14 (var_location:DI tp_content (debug_expr:DI D#38)) "cmodules/fbgc_math.c":72:26 -1
     (nil))
(debug_insn 125 124 126 14 (debug_marker) "cmodules/fbgc_math.c":72:67 -1
     (nil))
(debug_insn 126 125 127 14 (debug_marker) "cmodules/fbgc_math.c":74:4 -1
     (nil))
(debug_insn 127 126 128 14 (debug_marker) "cmodules/fbgc_math.c":74:8 -1
     (nil))
(debug_insn 128 127 129 14 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 129 128 130 14 (debug_marker) "cmodules/fbgc_math.c":74:22 -1
     (nil))
(insn 130 129 131 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 88 [ sz ])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":74:4 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 131 130 132 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 336)
            (pc))) "cmodules/fbgc_math.c":74:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 336)
;;  succ:       15 [89.0% (guessed)]  count:73239503 (estimated locally) (FALLTHRU)
;;              31 [11.0% (guessed)]  count:9052073 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 89 129

;; basic block 15, loop depth 0, count 73239503 (estimated locally), maybe hot
;;  prev block 14, next block 16, flags: (HOT_PARTITION, RTL)
;;  pred:       14 [89.0% (guessed)]  count:73239503 (estimated locally) (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u113(6){ }u114(7){ }u115(16){ }u116(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 89 129
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 89
;; lr  def 	 17 [flags] 94 124 171 173
(note 132 131 133 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 5 15 (parallel [
            (set (reg:DI 124 [ ivtmp.110 ])
                (plus:DI (reg/f:DI 89 [ _20 ])
                    (const_int 17 [0x11])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _20 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 5 133 370 15 (set (reg/v:SI 94 [ i ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":74:15 67 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 370 5 137 15 (set (reg:DI 171)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7f213e47d900 cos>)
                    ] UNSPEC_GOTPCREL)) [11  S8 A8])) 66 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7f213e47d900 cos>)
                    ] UNSPEC_GOTPCREL)) [11  S8 A8])
        (nil)))
(insn 137 370 168 15 (set (reg/f:DI 173)
        (symbol_ref:DI ("c_cos") [flags 0x3]  <function_decl 0x7f213dfa5e00 c_cos>)) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref:DI ("c_cos") [flags 0x3]  <function_decl 0x7f213dfa5e00 c_cos>)
        (nil)))
;;  succ:       16 [always]  count:73239503 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 94 124 129 171 173

;; basic block 16, loop depth 1, count 663665780 (estimated locally), maybe hot
;;  prev block 15, next block 17, flags: (HOT_PARTITION, RTL)
;;  pred:       15 [always]  count:73239503 (estimated locally) (FALLTHRU)
;;              18 [89.0% (guessed)]  count:590426281 (estimated locally) (DFS_BACK)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u118(6){ }u119(7){ }u120(16){ }u121(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 94 124 129 171 173
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 124 171 173
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 92 184
(code_label 168 137 134 16 116 (nil) [1 uses])
(note 134 168 135 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(debug_insn 135 134 136 16 (var_location:SI i (reg/v:SI 94 [ i ])) -1
     (nil))
(debug_insn 136 135 380 16 (debug_marker) "cmodules/fbgc_math.c":76:5 -1
     (nil))
(insn 380 136 139 16 (set (reg:DI 2 cx)
        (reg/f:DI 173)) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (nil))
(insn 139 380 140 16 (set (reg:DI 1 dx)
        (reg:DI 171)) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7f213e47d900 cos>)
        (nil)))
(insn 140 139 141 16 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "cmodules/fbgc_math.c":76:35 67 {*movsi_internal}
     (nil))
(insn 141 140 142 16 (set (reg:DI 5 di)
        (reg:DI 124 [ ivtmp.110 ])) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (nil))
(call_insn 142 141 394 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("one_arg_math") [flags 0x3]  <function_decl 0x7f213dfac000 one_arg_math>) [0 one_arg_math S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":76:35 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("one_arg_math") [flags 0x3]  <function_decl 0x7f213dfac000 one_arg_math>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 394 142 143 16 (set (reg:DI 184)
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 143 394 144 16 (set (reg/v/f:DI 92 [ result ])
        (reg:DI 184)) "cmodules/fbgc_math.c":76:35 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 184)
        (nil)))
(debug_insn 144 143 145 16 (var_location:DI result (reg/v/f:DI 92 [ result ])) "cmodules/fbgc_math.c":76:35 -1
     (nil))
(debug_insn 145 144 146 16 (debug_marker) "cmodules/fbgc_math.c":77:5 -1
     (nil))
(insn 146 145 147 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 92 [ result ])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":77:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 147 146 148 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 156)
            (pc))) "cmodules/fbgc_math.c":77:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 156)
;;  succ:       18 [100.0% (guessed)]  count:663400314 (estimated locally)
;;              17 [0.0% (guessed)]  count:265466 (estimated locally) (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 92 94 124 129 171 173

;; basic block 17, loop depth 0, count 265465 (estimated locally)
;;  prev block 16, next block 18, flags: (HOT_PARTITION, RTL)
;;  pred:       16 [0.0% (guessed)]  count:265466 (estimated locally) (FALLTHRU,LOOP_EXIT)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u135(6){ }u136(7){ }u137(16){ }u138(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 148 147 149 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(debug_insn 149 148 150 17 (debug_marker) "cmodules/fbgc_math.c":77:5 -1
     (nil))
(insn 150 149 151 17 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.5776") [flags 0x2]  <var_decl 0x7f213dfa6990 __PRETTY_FUNCTION__>)) "cmodules/fbgc_math.c":77:5 66 {*movdi_internal}
     (nil))
(insn 151 150 152 17 (set (reg:SI 1 dx)
        (const_int 77 [0x4d])) "cmodules/fbgc_math.c":77:5 67 {*movsi_internal}
     (nil))
(insn 152 151 153 17 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f213e0b5900 *.LC9>)) "cmodules/fbgc_math.c":77:5 66 {*movdi_internal}
     (nil))
(insn 153 152 154 17 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f213e0b5990 *.LC10>)) "cmodules/fbgc_math.c":77:5 66 {*movdi_internal}
     (nil))
(call_insn 154 153 155 17 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f213e2a1c00 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_math.c":77:5 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f213e2a1c00 __assert_fail>)
                        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                            (expr_list:REG_NORETURN (const_int 0 [0])
                                (expr_list:REG_EH_REGION (const_int 0 [0])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 155 154 156)
;; basic block 18, loop depth 1, count 663400315 (estimated locally), maybe hot
;;  prev block 17, next block 19, flags: (HOT_PARTITION, RTL)
;;  pred:       16 [100.0% (guessed)]  count:663400314 (estimated locally)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u144(6){ }u145(7){ }u146(16){ }u147(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 92 94 124 129 171 173
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 92 94 124 129
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 94 124
(code_label 156 155 157 18 115 (nil) [1 uses])
(note 157 156 158 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(debug_insn 158 157 159 18 (debug_marker) "cmodules/fbgc_math.c":78:5 -1
     (nil))
(insn 159 158 160 18 (set (reg:SI 1 dx)
        (reg/v:SI 94 [ i ])) "cmodules/fbgc_math.c":78:5 67 {*movsi_internal}
     (nil))
(insn 160 159 161 18 (set (reg:DI 4 si)
        (reg/v/f:DI 92 [ result ])) "cmodules/fbgc_math.c":78:5 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 92 [ result ])
        (nil)))
(insn 161 160 162 18 (set (reg:DI 5 di)
        (reg/v/f:DI 129 [ <retval> ])) "cmodules/fbgc_math.c":78:5 66 {*movdi_internal}
     (nil))
(call_insn 162 161 163 18 (call (mem:QI (symbol_ref:DI ("set_object_in_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f213e3fee00 set_object_in_fbgc_tuple_object>) [0 set_object_in_fbgc_tuple_object S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_math.c":78:5 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("set_object_in_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f213e3fee00 set_object_in_fbgc_tuple_object>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(debug_insn 163 162 164 18 (debug_marker) "cmodules/fbgc_math.c":74:31 -1
     (nil))
(insn 164 163 165 18 (parallel [
            (set (reg/v:SI 94 [ i ])
                (plus:SI (reg/v:SI 94 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":74:31 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 165 164 166 18 (var_location:SI i (reg/v:SI 94 [ i ])) -1
     (nil))
(debug_insn 166 165 167 18 (debug_marker) "cmodules/fbgc_math.c":74:22 -1
     (nil))
(insn 167 166 169 18 (parallel [
            (set (reg:DI 124 [ ivtmp.110 ])
                (plus:DI (reg:DI 124 [ ivtmp.110 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 169 167 170 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 88 [ sz ])
            (reg/v:SI 94 [ i ]))) "cmodules/fbgc_math.c":74:4 11 {*cmpsi_1}
     (nil))
(jump_insn 170 169 408 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 168)
            (pc))) "cmodules/fbgc_math.c":74:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 168)
;;  succ:       16 [89.0% (guessed)]  count:590426281 (estimated locally) (DFS_BACK)
;;              19 [11.0% (guessed)]  count:72974034 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 94 124 129 171 173

;; basic block 19, loop depth 0, count 72974034 (estimated locally), maybe hot
;;  prev block 18, next block 20, flags: (HOT_PARTITION, RTL)
;;  pred:       18 [11.0% (guessed)]  count:72974034 (estimated locally) (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 129
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 408 170 409 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(jump_insn 409 408 410 19 (set (pc)
        (label_ref 336)) 660 {jump}
     (nil)
 -> 336)
;;  succ:       31 [always]  count:72974034 (estimated locally) (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 129

(barrier 410 409 174)
;; basic block 20, loop depth 0, count 82291576 (estimated locally), maybe hot
;;  prev block 19, next block 21, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [20.0% (adjusted)]  count:82291575 (estimated locally)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u161(6){ }u162(7){ }u163(16){ }u164(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 99 118 119 129 141 142 143 172 174 185
(code_label 174 410 175 20 109 (nil) [1 uses])
(note 175 174 176 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(debug_insn 176 175 177 20 (debug_marker) "cmodules/fbgc_math.c":84:4 -1
     (nil))
(debug_insn 177 176 178 20 (var_location:DI m (reg/f:DI 82 [ _10 ])) "cmodules/fbgc_math.c":84:32 -1
     (nil))
(debug_insn 178 177 179 20 (debug_marker) "cmodules/fbgc_math.c":85:4 -1
     (nil))
(insn 179 178 180 20 (set (reg:SI 141 [ MEM[(struct fbgc_matrix_object *)_10].column ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _10 ])
                (const_int 14 [0xe])) [5 MEM[(struct fbgc_matrix_object *)_10].column+0 S4 A8])) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 82 [ _10 ])
                (const_int 14 [0xe])) [5 MEM[(struct fbgc_matrix_object *)_10].column+0 S4 A8])
        (nil)))
(insn 180 179 181 20 (set (reg:SI 142 [ MEM[(struct fbgc_matrix_object *)_10].row ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _10 ])
                (const_int 10 [0xa])) [5 MEM[(struct fbgc_matrix_object *)_10].row+0 S4 A8])) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 82 [ _10 ])
                (const_int 10 [0xa])) [5 MEM[(struct fbgc_matrix_object *)_10].row+0 S4 A8])
        (nil)))
(insn 181 180 182 20 (set (reg:SI 143 [ MEM[(struct fbgc_matrix_object *)_10].sub_type ])
        (zero_extend:SI (mem:QI (plus:DI (reg/f:DI 82 [ _10 ])
                    (const_int 9 [0x9])) [0 MEM[(struct fbgc_matrix_object *)_10].sub_type+0 S1 A8]))) "cmodules/fbgc_math.c":85:33 119 {*zero_extendqisi2}
     (nil))
(insn 182 181 183 20 (set (reg:SI 2 cx)
        (const_int 10 [0xa])) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (nil))
(insn 183 182 184 20 (set (reg:SI 1 dx)
        (reg:SI 141 [ MEM[(struct fbgc_matrix_object *)_10].column ])) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 141 [ MEM[(struct fbgc_matrix_object *)_10].column ])
        (nil)))
(insn 184 183 185 20 (set (reg:SI 4 si)
        (reg:SI 142 [ MEM[(struct fbgc_matrix_object *)_10].row ])) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 142 [ MEM[(struct fbgc_matrix_object *)_10].row ])
        (nil)))
(insn 185 184 186 20 (set (reg:SI 5 di)
        (reg:SI 143 [ MEM[(struct fbgc_matrix_object *)_10].sub_type ])) "cmodules/fbgc_math.c":85:33 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 143 [ MEM[(struct fbgc_matrix_object *)_10].sub_type ])
        (nil)))
(call_insn 186 185 395 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_matrix_object") [flags 0x41]  <function_decl 0x7f213e3fe100 new_fbgc_matrix_object>) [0 new_fbgc_matrix_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":85:33 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_matrix_object") [flags 0x41]  <function_decl 0x7f213e3fe100 new_fbgc_matrix_object>)
                        (nil))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 395 186 187 20 (set (reg:DI 185)
        (reg:DI 0 ax)) "cmodules/fbgc_math.c":85:33 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 187 395 188 20 (set (reg/v/f:DI 129 [ <retval> ])
        (reg:DI 185)) "cmodules/fbgc_math.c":85:33 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 185)
        (nil)))
(debug_insn 188 187 189 20 (var_location:DI res_m (reg/v/f:DI 129 [ <retval> ])) "cmodules/fbgc_math.c":85:33 -1
     (nil))
(debug_insn 189 188 190 20 (debug_marker) "cmodules/fbgc_math.c":87:4 -1
     (nil))
(insn 190 189 191 20 (set (reg:SI 119 [ prephitmp_106 ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _10 ])
                (const_int 10 [0xa])) [5 MEM[(struct fbgc_matrix_object *)_10].row+0 S4 A8])) "cmodules/fbgc_math.c":87:17 67 {*movsi_internal}
     (nil))
(insn 191 190 192 20 (set (reg:SI 172 [ _125 ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _10 ])
                (const_int 14 [0xe])) [5 MEM[(struct fbgc_matrix_object *)_10].column+0 S4 A8])) "cmodules/fbgc_math.c":87:24 67 {*movsi_internal}
     (nil))
(insn 192 191 193 20 (parallel [
            (set (reg/v:SI 99 [ rc ])
                (mult:SI (reg:SI 119 [ prephitmp_106 ])
                    (reg:SI 172 [ _125 ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":87:11 317 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 193 192 194 20 (var_location:SI rc (reg/v:SI 99 [ rc ])) "cmodules/fbgc_math.c":87:11 -1
     (nil))
(debug_insn 194 193 195 20 (debug_marker) "cmodules/fbgc_math.c":89:4 -1
     (nil))
(debug_insn 195 194 196 20 (debug_marker) "cmodules/fbgc_math.c":91:4 -1
     (nil))
(debug_insn 196 195 197 20 (debug_marker) "cmodules/fbgc_math.c":91:8 -1
     (nil))
(debug_insn 197 196 198 20 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 198 197 7 20 (debug_marker) "cmodules/fbgc_math.c":91:22 -1
     (nil))
(insn 7 198 206 20 (set (reg/v:SI 118 [ i ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":91:15 67 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 206 7 199 20 (parallel [
            (set (reg/f:DI 174 [ pretmp_137 ])
                (plus:DI (reg/v/f:DI 129 [ <retval> ])
                    (const_int 14 [0xe])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 199 206 200 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 119 [ prephitmp_106 ])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":91:4 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 200 199 411 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 292)
            (pc))) "cmodules/fbgc_math.c":91:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 292)
;;  succ:       29 [89.0% (guessed)]  count:73239503 (estimated locally)
;;              21 [11.0% (guessed)]  count:9052073 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 99 118 119 129 172 174

;; basic block 21, loop depth 0, count 9052073 (estimated locally), maybe hot
;;  prev block 20, next block 22, flags: (HOT_PARTITION, RTL)
;;  pred:       20 [11.0% (guessed)]  count:9052073 (estimated locally) (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 129
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 411 200 412 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(jump_insn 412 411 413 21 (set (pc)
        (label_ref 336)) 660 {jump}
     (nil)
 -> 336)
;;  succ:       31 [always]  count:9052073 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 129

(barrier 413 412 297)
;; basic block 22, loop depth 1, count 592574083 (estimated locally), maybe hot
;;  prev block 21, next block 23, flags: (HOT_PARTITION, RTL)
;;  pred:       29 [99.8% (guessed)]  count:599636349 (estimated locally)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u191(6){ }u192(7){ }u193(16){ }u194(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 99 118 129 172 174
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82
;; lr  def 	 17 [flags] 90 120
(code_label 297 413 204 22 123 (nil) [1 uses])
(note 204 297 205 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 205 204 6 22 (parallel [
            (set (reg/f:DI 120 [ pretmp_111 ])
                (plus:DI (reg/f:DI 82 [ _10 ])
                    (const_int 14 [0xe])))
            (clobber (reg:CC 17 flags))
        ]) 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 6 205 277 22 (set (reg/v:SI 90 [ j ])
        (const_int 0 [0])) "cmodules/fbgc_math.c":92:16 67 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       23 [always]  count:592574083 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 90 99 118 120 129 172 174

;; basic block 23, loop depth 2, count 5387037060 (estimated locally), maybe hot
;;  prev block 22, next block 24, flags: (HOT_PARTITION, RTL)
;;  pred:       22 [always]  count:592574083 (estimated locally) (FALLTHRU)
;;              26 [89.0% (guessed)]  count:3164345581 (estimated locally) (DFS_BACK)
;;              24 [89.0% (guessed)]  count:1630117415 (estimated locally) (DFS_BACK)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u196(6){ }u197(7){ }u198(16){ }u199(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 90 99 118 120 129 172 174
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 90 118 120 172 174
;; lr  def 	 17 [flags] 101 107 121 144 145 146
(code_label 277 6 207 23 122 (nil) [2 uses])
(note 207 277 208 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(debug_insn 208 207 209 23 (var_location:SI j (reg/v:SI 90 [ j ])) -1
     (nil))
(debug_insn 209 208 210 23 (debug_marker) "cmodules/fbgc_math.c":93:6 -1
     (nil))
(insn 210 209 211 23 (parallel [
            (set (reg:SI 144)
                (mult:SI (reg:SI 172 [ _125 ])
                    (reg/v:SI 118 [ i ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":93:23 317 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 211 210 212 23 (parallel [
            (set (reg/v:SI 101 [ index ])
                (plus:SI (reg:SI 144)
                    (reg/v:SI 90 [ j ])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":93:13 190 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(debug_insn 212 211 213 23 (var_location:SI index (reg/v:SI 101 [ index ])) "cmodules/fbgc_math.c":93:13 -1
     (nil))
(debug_insn 213 212 214 23 (debug_marker) "cmodules/fbgc_math.c":94:6 -1
     (nil))
(debug_insn 214 213 215 23 (var_location:SI c_index (plus:SI (reg/v:SI 99 [ rc ])
        (reg/v:SI 101 [ index ]))) "cmodules/fbgc_math.c":94:13 -1
     (nil))
(debug_insn 215 214 216 23 (debug_marker) "cmodules/fbgc_math.c":96:6 -1
     (nil))
(insn 216 215 217 23 (set (reg:DI 145 [ index ])
        (zero_extend:DI (reg/v:SI 101 [ index ]))) "cmodules/fbgc_math.c":96:46 114 {*zero_extendsidi2}
     (nil))
(insn 217 216 218 23 (parallel [
            (set (reg:DI 146)
                (ashift:DI (reg:DI 145 [ index ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":96:46 520 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 145 [ index ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(note 218 217 219 23 NOTE_INSN_DELETED)
(insn 219 218 220 23 (set (reg:DF 107 [ _48 ])
        (mem:DF (plus:DI (plus:DI (reg/f:DI 120 [ pretmp_111 ])
                    (reg:DI 146))
                (const_int 4 [0x4])) [2 *_47+0 S8 A64])) "cmodules/fbgc_math.c":96:15 111 {*movdf_internal}
     (nil))
(debug_insn 220 219 221 23 (var_location:DF z$real (reg:DF 107 [ _48 ])) "cmodules/fbgc_math.c":96:13 -1
     (nil))
(debug_insn 221 220 222 23 (debug_marker) "cmodules/fbgc_math.c":97:6 -1
     (nil))
(insn 222 221 223 23 (set (reg/f:DI 121 [ _121 ])
        (plus:DI (plus:DI (reg/f:DI 174 [ pretmp_137 ])
                (reg:DI 146))
            (const_int 4 [0x4]))) 187 {*leadi}
     (expr_list:REG_DEAD (reg:DI 146)
        (nil)))
(insn 223 222 224 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 82 [ _10 ])
                    (const_int 9 [0x9])) [0 MEM[(struct fbgc_matrix_object *)_10].sub_type+0 S1 A8])
            (const_int 5 [0x5]))) "cmodules/fbgc_math.c":97:8 9 {*cmpqi_1}
     (nil))
(jump_insn 224 223 225 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 261)
            (pc))) "cmodules/fbgc_math.c":97:8 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 708669604 (nil)))
 -> 261)
;;  succ:       24 [34.0% (guessed)]  count:1831592620 (estimated locally) (FALLTHRU)
;;              26 [66.0% (guessed)]  count:3555444440 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 90 99 101 107 118 120 121 129 172 174

;; basic block 24, loop depth 2, count 1831592600 (estimated locally), maybe hot
;;  prev block 23, next block 25, flags: (HOT_PARTITION, RTL)
;;  pred:       23 [34.0% (guessed)]  count:1831592620 (estimated locally) (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u218(6){ }u219(7){ }u220(16){ }u221(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 90 99 101 107 118 120 121 129 174
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 90 99 101 107 120 121 174
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 90 148 149 172 186 187
(note 225 224 226 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(debug_insn 226 225 227 24 (debug_marker) "cmodules/fbgc_math.c":98:7 -1
     (nil))
(note 227 226 228 24 NOTE_INSN_DELETED)
(insn 228 227 229 24 (set (reg:DI 148 [ c_index ])
        (zero_extend:DI (plus:SI (reg/v:SI 99 [ rc ])
                (reg/v:SI 101 [ index ])))) "cmodules/fbgc_math.c":98:47 187 {*leadi}
     (expr_list:REG_DEAD (reg/v:SI 101 [ index ])
        (nil)))
(insn 229 228 232 24 (parallel [
            (set (reg:DI 149)
                (ashift:DI (reg:DI 148 [ c_index ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":98:47 520 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 148 [ c_index ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(debug_insn 232 229 237 24 (debug_marker) "cmodules/fbgc_math.c":99:7 -1
     (nil))
(note 237 232 238 24 NOTE_INSN_DELETED)
(insn 238 237 239 24 (set (reg:DF 20 xmm0)
        (reg:DF 107 [ _48 ])) "cmodules/fbgc_math.c":99:36 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 107 [ _48 ])
        (nil)))
(insn 239 238 240 24 (set (reg:DF 21 xmm1)
        (mem:DF (plus:DI (plus:DI (reg/f:DI 120 [ pretmp_111 ])
                    (reg:DI 149))
                (const_int 4 [0x4])) [2 *_53+0 S8 A64])) "cmodules/fbgc_math.c":99:36 111 {*movdf_internal}
     (nil))
(call_insn 240 239 396 24 (set (parallel:TI [
                (expr_list:REG_DEP_TRUE (reg:DF 20 xmm0)
                    (const_int 0 [0]))
                (expr_list:REG_DEP_TRUE (reg:DF 21 xmm1)
                    (const_int 8 [0x8]))
            ])
        (call (mem:QI (symbol_ref:DI ("c_cos") [flags 0x3]  <function_decl 0x7f213dfa5e00 c_cos>) [0 c_cos S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":99:36 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("c_cos") [flags 0x3]  <function_decl 0x7f213dfa5e00 c_cos>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:DF 21 xmm1))
        (expr_list (use (reg:DF 20 xmm0))
            (nil))))
(insn 396 240 241 24 (set (reg:DF 186)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":99:36 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (expr_list:REG_EQUIV (mem:DF (reg/f:DI 121 [ _121 ]) [2 MEM[(double *)_121]+0 S8 A64])
            (nil))))
(note 241 396 397 24 NOTE_INSN_DELETED)
(insn 397 241 242 24 (set (reg:DF 187)
        (reg:DF 21 xmm1)) "cmodules/fbgc_math.c":99:36 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm1)
        (nil)))
(note 242 397 246 24 NOTE_INSN_DELETED)
(debug_insn 246 242 247 24 (debug_marker) "cmodules/fbgc_math.c":100:7 -1
     (nil))
(insn 247 246 248 24 (set (mem:DF (reg/f:DI 121 [ _121 ]) [2 MEM[(double *)_121]+0 S8 A64])
        (reg:DF 186)) "cmodules/fbgc_math.c":100:50 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 186)
        (expr_list:REG_DEAD (reg/f:DI 121 [ _121 ])
            (nil))))
(debug_insn 248 247 249 24 (debug_marker) "cmodules/fbgc_math.c":101:7 -1
     (nil))
(insn 249 248 251 24 (set (mem:DF (plus:DI (plus:DI (reg/f:DI 174 [ pretmp_137 ])
                    (reg:DI 149))
                (const_int 4 [0x4])) [2 *_58+0 S8 A64])
        (reg:DF 187)) "cmodules/fbgc_math.c":101:52 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 187)
        (expr_list:REG_DEAD (reg:DI 149)
            (nil))))
(debug_insn 251 249 252 24 (debug_marker) "cmodules/fbgc_math.c":92:36 -1
     (nil))
(insn 252 251 253 24 (parallel [
            (set (reg/v:SI 90 [ j ])
                (plus:SI (reg/v:SI 90 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":92:36 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 253 252 254 24 (var_location:SI j (reg/v:SI 90 [ j ])) -1
     (nil))
(debug_insn 254 253 255 24 (debug_marker) "cmodules/fbgc_math.c":92:23 -1
     (nil))
(insn 255 254 256 24 (set (reg:SI 172 [ _125 ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _10 ])
                (const_int 14 [0xe])) [5 MEM[(struct fbgc_matrix_object *)_10].column+0 S4 A8])) "cmodules/fbgc_math.c":92:26 67 {*movsi_internal}
     (nil))
(insn 256 255 257 24 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 90 [ j ])
            (reg:SI 172 [ _125 ]))) "cmodules/fbgc_math.c":92:5 11 {*cmpsi_1}
     (nil))
(jump_insn 257 256 414 24 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 277)
            (pc))) "cmodules/fbgc_math.c":92:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 277)
;;  succ:       23 [89.0% (guessed)]  count:1630117415 (estimated locally) (DFS_BACK)
;;              25 [11.0% (guessed)]  count:201475185 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 90 99 118 120 129 172 174

;; basic block 25, loop depth 1, count 201475185 (estimated locally), maybe hot
;;  prev block 24, next block 26, flags: (HOT_PARTITION, RTL)
;;  pred:       24 [11.0% (guessed)]  count:201475185 (estimated locally) (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 99 118 129 172 174
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 414 257 415 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(jump_insn 415 414 416 25 (set (pc)
        (label_ref 280)) 660 {jump}
     (nil)
 -> 280)
;;  succ:       27 [always]  count:201475185 (estimated locally) (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 99 118 129 172 174

(barrier 416 415 261)
;; basic block 26, loop depth 2, count 3555444471 (estimated locally), maybe hot
;;  prev block 25, next block 27, flags: (HOT_PARTITION, RTL)
;;  pred:       23 [66.0% (guessed)]  count:3555444440 (estimated locally)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u247(6){ }u248(7){ }u249(16){ }u250(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 90 99 107 118 120 121 129 172 174
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 90 107 121 172
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 90 188
(code_label 261 416 262 26 119 (nil) [1 uses])
(note 262 261 263 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(debug_insn 263 262 264 26 (debug_marker) "cmodules/fbgc_math.c":103:11 -1
     (nil))
(insn 264 263 265 26 (set (reg:DF 20 xmm0)
        (reg:DF 107 [ _48 ])) "cmodules/fbgc_math.c":103:57 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 107 [ _48 ])
        (nil)))
(call_insn/u 265 264 398 26 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7f213e47d900 cos>) [0 __builtin_cos S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":103:57 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7f213e47d900 cos>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
(insn 398 265 266 26 (set (reg:DF 188)
        (reg:DF 20 xmm0)) "cmodules/fbgc_math.c":103:57 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (expr_list:REG_EQUIV (mem:DF (reg/f:DI 121 [ _121 ]) [2 MEM[(double *)_121]+0 S8 A64])
            (nil))))
(note 266 398 267 26 NOTE_INSN_DELETED)
(insn 267 266 268 26 (set (mem:DF (reg/f:DI 121 [ _121 ]) [2 MEM[(double *)_121]+0 S8 A64])
        (reg:DF 188)) "cmodules/fbgc_math.c":103:54 111 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 188)
        (expr_list:REG_DEAD (reg/f:DI 121 [ _121 ])
            (nil))))
(debug_insn 268 267 269 26 (debug_marker) "cmodules/fbgc_math.c":92:36 -1
     (nil))
(insn 269 268 270 26 (parallel [
            (set (reg/v:SI 90 [ j ])
                (plus:SI (reg/v:SI 90 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":92:36 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 270 269 271 26 (var_location:SI j (reg/v:SI 90 [ j ])) -1
     (nil))
(debug_insn 271 270 273 26 (debug_marker) "cmodules/fbgc_math.c":92:23 -1
     (nil))
(insn 273 271 274 26 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 172 [ _125 ])
            (reg/v:SI 90 [ j ]))) "cmodules/fbgc_math.c":92:5 11 {*cmpsi_1}
     (nil))
(jump_insn 274 273 280 26 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 277)
            (pc))) "cmodules/fbgc_math.c":92:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 277)
;;  succ:       23 [89.0% (guessed)]  count:3164345581 (estimated locally) (DFS_BACK)
;;              27 [11.0% (guessed)]  count:391098890 (estimated locally) (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 90 99 118 120 129 172 174

;; basic block 27, loop depth 1, count 592574075 (estimated locally), maybe hot
;;  prev block 26, next block 28, flags: (HOT_PARTITION, RTL)
;;  pred:       26 [11.0% (guessed)]  count:391098890 (estimated locally) (FALLTHRU,LOOP_EXIT)
;;              25 [always]  count:201475185 (estimated locally) (LOOP_EXIT)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u262(6){ }u263(7){ }u264(16){ }u265(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 99 118 129 172 174
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82
;; lr  def 	 119
(code_label 280 274 281 27 121 (nil) [1 uses])
(note 281 280 282 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 282 281 305 27 (set (reg:SI 119 [ prephitmp_106 ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _10 ])
                (const_int 10 [0xa])) [5 MEM[(struct fbgc_matrix_object *)_10].row+0 S4 A8])) 67 {*movsi_internal}
     (nil))
;;  succ:       28 [always]  count:592574075 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 99 118 119 129 172 174

;; basic block 28, loop depth 1, count 592574078 (estimated locally), maybe hot
;; Invalid sum of incoming counts 657757224 (estimated locally), should be 592574078 (estimated locally)
;;  prev block 27, next block 29, flags: (HOT_PARTITION, RTL)
;;  pred:       27 [always]  count:592574075 (estimated locally) (FALLTHRU)
;;              30 [89.0% (guessed)]  count:65183149 (estimated locally)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u267(6){ }u268(7){ }u269(16){ }u270(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 99 118 119 129 172 174
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 118 119
;; lr  def 	 17 [flags] 118
(code_label 305 282 283 28 124 (nil) [1 uses])
(note 283 305 284 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(debug_insn 284 283 285 28 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 285 284 286 28 (var_location:SI j (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 286 285 287 28 (debug_marker) "cmodules/fbgc_math.c":91:32 -1
     (nil))
(insn 287 286 288 28 (parallel [
            (set (reg/v:SI 118 [ i ])
                (plus:SI (reg/v:SI 118 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":91:32 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 288 287 289 28 (var_location:SI i (reg/v:SI 118 [ i ])) -1
     (nil))
(debug_insn 289 288 290 28 (debug_marker) "cmodules/fbgc_math.c":91:22 -1
     (nil))
(insn 290 289 291 28 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 118 [ i ])
            (reg:SI 119 [ prephitmp_106 ]))) "cmodules/fbgc_math.c":91:4 11 {*cmpsi_1}
     (nil))
(jump_insn 291 290 292 28 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 336)
            (pc))) "cmodules/fbgc_math.c":91:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 336)
;;  succ:       29 [89.0% (guessed)]  count:527390930 (estimated locally) (FALLTHRU,DFS_BACK)
;;              31 [11.0% (guessed)]  count:65183148 (estimated locally) (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 99 118 119 129 172 174

;; basic block 29, loop depth 1, count 600630427 (estimated locally), maybe hot
;;  prev block 28, next block 30, flags: (HOT_PARTITION, RTL)
;;  pred:       20 [89.0% (guessed)]  count:73239503 (estimated locally)
;;              28 [89.0% (guessed)]  count:527390930 (estimated locally) (FALLTHRU,DFS_BACK)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u276(6){ }u277(7){ }u278(16){ }u279(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 99 118 119 129 172 174
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 172
;; lr  def 	 17 [flags]
(code_label 292 291 293 29 117 (nil) [1 uses])
(note 293 292 294 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(debug_insn 294 293 295 29 (var_location:SI i (reg/v:SI 118 [ i ])) -1
     (nil))
(debug_insn 295 294 296 29 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(debug_insn 296 295 298 29 (debug_marker) "cmodules/fbgc_math.c":92:23 -1
     (nil))
(insn 298 296 299 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 172 [ _125 ])
            (const_int 0 [0]))) "cmodules/fbgc_math.c":92:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 299 298 300 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 297)
            (pc))) "cmodules/fbgc_math.c":92:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1071964724 (nil)))
 -> 297)
;;  succ:       22 [99.8% (guessed)]  count:599636349 (estimated locally)
;;              30 [0.2% (guessed)]  count:994078 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 99 118 119 129 172 174

;; basic block 30, loop depth 1, count 73239493 (estimated locally), maybe hot
;; Invalid sum of incoming counts 994078 (estimated locally), should be 73239493 (estimated locally)
;;  prev block 29, next block 31, flags: (HOT_PARTITION, RTL)
;;  pred:       29 [0.2% (guessed)]  count:994078 (estimated locally) (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u283(6){ }u284(7){ }u285(16){ }u286(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 99 118 119 129 172 174
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 118 119
;; lr  def 	 17 [flags] 118
(note 300 299 301 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(debug_insn 301 300 302 30 (debug_marker) "cmodules/fbgc_math.c":91:32 -1
     (nil))
(insn 302 301 303 30 (parallel [
            (set (reg/v:SI 118 [ i ])
                (plus:SI (reg/v:SI 118 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_math.c":91:32 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 303 302 304 30 (var_location:SI i (reg/v:SI 118 [ i ])) -1
     (nil))
(debug_insn 304 303 306 30 (debug_marker) "cmodules/fbgc_math.c":91:22 -1
     (nil))
(insn 306 304 307 30 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 119 [ prephitmp_106 ])
            (reg/v:SI 118 [ i ]))) "cmodules/fbgc_math.c":91:4 11 {*cmpsi_1}
     (nil))
(jump_insn 307 306 336 30 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 305)
            (pc))) "cmodules/fbgc_math.c":91:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 305)
;;  succ:       28 [89.0% (guessed)]  count:65183149 (estimated locally)
;;              31 [11.0% (guessed)]  count:8056344 (estimated locally) (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 99 118 119 129 172 174

;; basic block 31, loop depth 0, count 908893201 (estimated locally), maybe hot
;; Invalid sum of incoming counts 1274633540 (estimated locally), should be 908893201 (estimated locally)
;;  prev block 30, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [61.7% (guessed)]  count:662283960 (estimated locally)
;;              6 [55.6% (adjusted)]  count:228587706 (estimated locally)
;;              28 [11.0% (guessed)]  count:65183148 (estimated locally) (LOOP_EXIT)
;;              9 [always]  count:82291578 (estimated locally)
;;              14 [11.0% (guessed)]  count:9052073 (estimated locally)
;;              11 [always]  count:137152624 (estimated locally)
;;              30 [11.0% (guessed)]  count:8056344 (estimated locally) (FALLTHRU,LOOP_EXIT)
;;              19 [always]  count:72974034 (estimated locally) (LOOP_EXIT)
;;              21 [always]  count:9052073 (estimated locally)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u292(6){ }u293(7){ }u294(16){ }u295(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 129
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 129
;; lr  def 	 0 [ax]
(code_label 336 307 339 31 107 (nil) [8 uses])
(note 339 336 337 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 337 339 338 31 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 129 [ <retval> ])) "cmodules/fbgc_math.c":121:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 129 [ <retval> ])
        (nil)))
(insn 338 337 0 31 (use (reg/i:DI 0 ax)) "cmodules/fbgc_math.c":121:1 -1
     (nil))
;;  succ:       EXIT [always]  count:908893201 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

