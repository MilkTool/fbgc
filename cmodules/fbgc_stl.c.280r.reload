
;; Function fbgc_stl_initializer (fbgc_stl_initializer, funcdef_no=65, decl_uid=5685, cgraph_uid=66, symbol_order=77)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 12:  (0) r  (1) Z {*movdi_internal}
	   Spilling non-eliminable hard regs: 7

********** Pseudo live ranges #1: **********


********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #2: **********


********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=8)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)


fbgc_stl_initializer

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} 
;;    total ref usage 21{17d,4u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 5 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 12 2 (debug_marker) "cmodules/fbgc_stl.c":166:2 -1
     (nil))
(insn 12 7 13 2 (set (reg/i:DI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":167:1 66 {*movdi_internal}
     (nil))
(insn 13 12 15 2 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":167:1 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(note 15 13 0 NOTE_INSN_DELETED)

;; Function fbgc_tuple (fbgc_tuple, funcdef_no=62, decl_uid=5705, cgraph_uid=63, symbol_order=71)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-40, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 16:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 17:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) qm  (1) qn {*cmpqi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 8:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (1) UBsBz {*sibcall_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 54:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 74:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 83:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 87:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 91:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=8,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=628,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=10: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=11: Bad operand -- refuse
            alt=12: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=13,overall=609,losers=1,rld_nregs=1
          alt=14,overall=0,losers=0,rld_nregs=0
	 Choosing alt 14 in insn 6:  (0) v  (1) m {*movdf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 96:  (0) v  (1) r {*floatsidf2}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 103:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=121 from oldreg=111, assigning class GENERAL_REGS to r121
  103: {r121:SI=r121:SI-r101:SI;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  198: r121:SI=r98:SI
    Inserting insn reload after:
  199: r111:SI=r121:SI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 104:  (0) v  (1) r {*floatsidf2}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 105:  (0) x  (1) 0  (2) xm {*fop_df_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =r  (1) v {fix_truncdfsi_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 119:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 138:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 148:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 150:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (1) rBwBz {*call_value}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 7:  (0) r  (1) Z {*movdi_internal}
	   Spilling non-eliminable hard regs: 7

********** Pseudo live ranges #1: **********

  BB 18
   Insn 158: point = 0, n_alt = -1
   Insn 157: point = 0, n_alt = -2
  BB 14
   Insn 192: point = 2, n_alt = -1
   Insn 119: point = 2, n_alt = 1
  BB 16
   Insn 195: point = 4, n_alt = -1
  BB 15
   Insn 139: point = 5, n_alt = -1
   Insn 138: point = 5, n_alt = 0
   Insn 135: point = 5, n_alt = 0
   Insn 133: point = 6, n_alt = 0
   Insn 132: point = 6, n_alt = -2
   Insn 131: point = 6, n_alt = -2
   Insn 130: point = 7, n_alt = -2
   Insn 129: point = 7, n_alt = -2
   Insn 189: point = 9, n_alt = -2
   Insn 128: point = 10, n_alt = 0
   Insn 127: point = 10, n_alt = -2
  BB 13
   Insn 116: point = 11, n_alt = -1
   Insn 115: point = 11, n_alt = 0
   Insn 109: point = 11, n_alt = -2
   Insn 188: point = 13, n_alt = -2
   Insn 108: point = 14, n_alt = 0
   Insn 107: point = 14, n_alt = -2
   Insn 106: point = 14, n_alt = 0
   Insn 105: point = 16, n_alt = 2
   Insn 104: point = 18, n_alt = 1
   Insn 199: point = 20, n_alt = -2
	Hard reg 0 is preferable by r121 with profit 110
   Insn 103: point = 22, n_alt = 0
   Insn 198: point = 23, n_alt = -2
	Hard reg 0 is preferable by r121 with profit 110
	Hard reg 6 is preferable by r121 with profit 110
  BB 12
   Insn 96: point = 25, n_alt = 1
   Insn 95: point = 26, n_alt = 0
  BB 11
   Insn 93: point = 29, n_alt = -1
   Insn 92: point = 29, n_alt = 0
   Insn 6: point = 29, n_alt = 14
   Insn 91: point = 30, n_alt = 3
   Insn 88: point = 32, n_alt = 0
   Insn 87: point = 34, n_alt = 3
   Insn 84: point = 35, n_alt = 0
   Insn 83: point = 37, n_alt = 3
  BB 10
   Insn 190: point = 39, n_alt = -1
   Insn 74: point = 39, n_alt = 1
  BB 9
   Insn 70: point = 41, n_alt = -1
   Insn 69: point = 41, n_alt = 0
   Insn 67: point = 41, n_alt = 0
   Insn 63: point = 42, n_alt = 0
   Insn 62: point = 42, n_alt = -2
   Insn 61: point = 42, n_alt = -2
   Insn 60: point = 43, n_alt = -2
   Insn 59: point = 44, n_alt = -2
   Insn 187: point = 46, n_alt = -2
   Insn 58: point = 47, n_alt = 0
   Insn 57: point = 47, n_alt = -2
   Insn 56: point = 47, n_alt = -2
   Insn 55: point = 47, n_alt = -2
   Insn 54: point = 47, n_alt = 0
   Insn 53: point = 48, n_alt = -2
  BB 8
   Insn 5: point = 50, n_alt = 0
  BB 7
   Insn 49: point = 52, n_alt = -1
   Insn 48: point = 52, n_alt = 0
   Insn 47: point = 52, n_alt = 0
   Insn 41: point = 53, n_alt = -2
   Insn 186: point = 55, n_alt = -2
   Insn 40: point = 56, n_alt = 0
   Insn 39: point = 56, n_alt = -2
   Insn 38: point = 57, n_alt = 0
  BB 17
   Insn 7: point = 59, n_alt = 2
   Insn 151: point = 60, n_alt = 0
   Insn 150: point = 60, n_alt = 3
   Insn 149: point = 60, n_alt = 0
   Insn 148: point = 60, n_alt = 4
   Insn 147: point = 60, n_alt = -2
  BB 6
   Insn 30: point = 62, n_alt = 0
   Insn 29: point = 62, n_alt = -2
   Insn 28: point = 63, n_alt = 0
  BB 5
   Insn 25: point = 66, n_alt = -1
   Insn 24: point = 66, n_alt = 0
   Insn 8: point = 67, n_alt = 2
  BB 4
   Insn 22: point = 69, n_alt = -1
   Insn 21: point = 69, n_alt = 0
  BB 3
   Insn 19: point = 70, n_alt = -1
   Insn 18: point = 70, n_alt = 0
   Insn 17: point = 70, n_alt = 4
   Insn 16: point = 71, n_alt = 3
  BB 2
   Insn 13: point = 74, n_alt = -1
   Insn 12: point = 74, n_alt = 0
   Insn 3: point = 74, n_alt = -2
   Insn 185: point = 76, n_alt = -2
   Insn 2: point = 77, n_alt = -2
   Insn 184: point = 79, n_alt = -2
 r82: [64..71] [41..58] [31..38]
 r83: [66..70]
 r87: [41..50]
 r88: [42..44]
 r89: [52..52] [39..41]
 r92: [27..30]
 r96: [2..14]
 r97: [6..7]
 r98: [5..32]
 r99: [29..29] [17..25]
 r101: [5..35]
 r102: [43..48]
 r104: [66..67] [59..59] [39..53] [0..11]
 r105: [72..77]
 r106: [69..74] [60..61] [29..38] [5..26]
 r107: [62..63]
 r108: [56..57]
 r109: [36..37]
 r110: [33..34]
 r111: [19..20]
 r112: [17..18]
 r113: [15..16]
 r115: [78..79]
 r116: [75..76]
 r117: [54..55]
 r118: [45..46]
 r119: [12..13]
 r120: [8..9]
 r121: [21..23]
Compressing live ranges: from 80 to 50 - 62%
Ranges after the compression:
 r82: [40..43] [24..34] [17..22]
 r83: [40..43]
 r87: [24..28]
 r88: [25..26]
 r89: [29..29] [23..24]
 r92: [14..16]
 r96: [0..5]
 r97: [0..1]
 r98: [0..18]
 r99: [15..15] [8..13]
 r101: [0..20]
 r102: [25..28]
 r104: [40..41] [35..35] [23..30] [0..3]
 r105: [44..47]
 r106: [42..45] [36..37] [15..22] [0..13]
 r107: [38..39]
 r108: [33..34]
 r109: [21..22]
 r110: [19..20]
 r111: [10..11]
 r112: [8..9]
 r113: [6..7]
 r115: [48..49]
 r116: [46..47]
 r117: [31..32]
 r118: [27..28]
 r119: [4..5]
 r120: [2..3]
 r121: [12..13]

********** Inheritance #1: **********

EBB 2 3 4 5
EBB 6
EBB 7 8
EBB 9
EBB 10
EBB 11 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18

********** Pseudo live ranges #2: **********

  BB 18
   Insn 158: point = 0, n_alt = -1
   Insn 157: point = 0, n_alt = -2
  BB 14
   Insn 192: point = 2, n_alt = -1
   Insn 119: point = 2, n_alt = 1
  BB 16
   Insn 195: point = 4, n_alt = -1
  BB 15
   Insn 139: point = 5, n_alt = -1
   Insn 138: point = 5, n_alt = 0
   Insn 135: point = 5, n_alt = 0
   Insn 133: point = 6, n_alt = 0
   Insn 132: point = 6, n_alt = -2
   Insn 131: point = 6, n_alt = -2
   Insn 130: point = 7, n_alt = -2
   Insn 129: point = 7, n_alt = -2
   Insn 189: point = 9, n_alt = -2
   Insn 128: point = 10, n_alt = 0
   Insn 127: point = 10, n_alt = -2
  BB 13
   Insn 116: point = 11, n_alt = -1
   Insn 115: point = 11, n_alt = 0
   Insn 109: point = 11, n_alt = -2
   Insn 188: point = 13, n_alt = -2
   Insn 108: point = 14, n_alt = 0
   Insn 107: point = 14, n_alt = -2
   Insn 106: point = 14, n_alt = 0
   Insn 105: point = 16, n_alt = 2
   Insn 104: point = 18, n_alt = 1
   Insn 199: point = 20, n_alt = -2
	Hard reg 0 is preferable by r121 with profit 110
   Insn 103: point = 22, n_alt = 0
   Insn 198: point = 23, n_alt = -2
	Hard reg 0 is preferable by r121 with profit 110
	Hard reg 6 is preferable by r121 with profit 110
  BB 12
   Insn 96: point = 25, n_alt = 1
   Insn 95: point = 26, n_alt = 0
  BB 11
   Insn 93: point = 29, n_alt = -1
   Insn 92: point = 29, n_alt = 0
   Insn 6: point = 29, n_alt = 14
   Insn 91: point = 30, n_alt = 3
   Insn 88: point = 32, n_alt = 0
   Insn 87: point = 34, n_alt = 3
   Insn 84: point = 35, n_alt = 0
   Insn 83: point = 37, n_alt = 3
  BB 10
   Insn 190: point = 39, n_alt = -1
   Insn 74: point = 39, n_alt = 1
  BB 9
   Insn 70: point = 41, n_alt = -1
   Insn 69: point = 41, n_alt = 0
   Insn 67: point = 41, n_alt = 0
   Insn 63: point = 42, n_alt = 0
   Insn 62: point = 42, n_alt = -2
   Insn 61: point = 42, n_alt = -2
   Insn 60: point = 43, n_alt = -2
   Insn 59: point = 44, n_alt = -2
   Insn 187: point = 46, n_alt = -2
   Insn 58: point = 47, n_alt = 0
   Insn 57: point = 47, n_alt = -2
   Insn 56: point = 47, n_alt = -2
   Insn 55: point = 47, n_alt = -2
   Insn 54: point = 47, n_alt = 0
   Insn 53: point = 48, n_alt = -2
  BB 8
   Insn 5: point = 50, n_alt = 0
  BB 7
   Insn 49: point = 52, n_alt = -1
   Insn 48: point = 52, n_alt = 0
   Insn 47: point = 52, n_alt = 0
   Insn 41: point = 53, n_alt = -2
   Insn 186: point = 55, n_alt = -2
   Insn 40: point = 56, n_alt = 0
   Insn 39: point = 56, n_alt = -2
   Insn 38: point = 57, n_alt = 0
  BB 17
   Insn 7: point = 59, n_alt = 2
   Insn 151: point = 60, n_alt = 0
   Insn 150: point = 60, n_alt = 3
   Insn 149: point = 60, n_alt = 0
   Insn 148: point = 60, n_alt = 4
   Insn 147: point = 60, n_alt = -2
  BB 6
   Insn 30: point = 62, n_alt = 0
   Insn 29: point = 62, n_alt = -2
   Insn 28: point = 63, n_alt = 0
  BB 5
   Insn 25: point = 66, n_alt = -1
   Insn 24: point = 66, n_alt = 0
   Insn 8: point = 67, n_alt = 2
  BB 4
   Insn 22: point = 69, n_alt = -1
   Insn 21: point = 69, n_alt = 0
  BB 3
   Insn 19: point = 70, n_alt = -1
   Insn 18: point = 70, n_alt = 0
   Insn 17: point = 70, n_alt = 4
   Insn 16: point = 71, n_alt = 3
  BB 2
   Insn 13: point = 74, n_alt = -1
   Insn 12: point = 74, n_alt = 0
   Insn 3: point = 74, n_alt = -2
   Insn 185: point = 76, n_alt = -2
   Insn 2: point = 77, n_alt = -2
   Insn 184: point = 79, n_alt = -2
 r82: [64..71] [41..58] [31..38]
 r83: [66..70]
 r87: [41..50]
 r88: [42..44]
 r89: [52..52] [39..41]
 r92: [27..30]
 r96: [2..14]
 r97: [6..7]
 r98: [5..32]
 r99: [29..29] [17..25]
 r101: [5..35]
 r102: [43..48]
 r104: [66..67] [59..59] [39..53] [0..11]
 r105: [72..77]
 r106: [69..74] [60..61] [29..38] [5..26]
 r107: [62..63]
 r108: [56..57]
 r109: [36..37]
 r110: [33..34]
 r111: [19..20]
 r112: [17..18]
 r113: [15..16]
 r115: [78..79]
 r116: [75..76]
 r117: [54..55]
 r118: [45..46]
 r119: [12..13]
 r120: [8..9]
 r121: [21..23]
Compressing live ranges: from 80 to 50 - 62%
Ranges after the compression:
 r82: [40..43] [24..34] [17..22]
 r83: [40..43]
 r87: [24..28]
 r88: [25..26]
 r89: [29..29] [23..24]
 r92: [14..16]
 r96: [0..5]
 r97: [0..1]
 r98: [0..18]
 r99: [15..15] [8..13]
 r101: [0..20]
 r102: [25..28]
 r104: [40..41] [35..35] [23..30] [0..3]
 r105: [44..47]
 r106: [42..45] [36..37] [15..22] [0..13]
 r107: [38..39]
 r108: [33..34]
 r109: [21..22]
 r110: [19..20]
 r111: [10..11]
 r112: [8..9]
 r113: [6..7]
 r115: [48..49]
 r116: [46..47]
 r117: [31..32]
 r118: [27..28]
 r119: [4..5]
 r120: [2..3]
 r121: [12..13]

********** Assignment #1: **********

	 Assigning to 121 (cl=GENERAL_REGS, orig=111, freq=330, tfirst=121, tfreq=330)...
	   Assign 0 to reload r121 (freq=330)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=48)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-40, prev_offset=0)
changing reg in insn 16
changing reg in insn 91
changing reg in insn 87
changing reg in insn 83
changing reg in insn 81
changing reg in insn 67
changing reg in insn 57
changing reg in insn 47
changing reg in insn 38
changing reg in insn 36
changing reg in insn 28
changing reg in insn 17
changing reg in insn 87
changing reg in insn 83
changing reg in insn 38
changing reg in insn 17
changing reg in insn 24
changing reg in insn 21
changing reg in insn 18
changing reg in insn 54
changing reg in insn 5
changing reg in insn 69
changing reg in insn 65
changing reg in insn 55
changing reg in insn 54
changing reg in insn 53
changing reg in insn 51
changing reg in insn 59
changing reg in insn 61
changing reg in insn 67
changing reg in insn 47
changing reg in insn 74
changing reg in insn 69
changing reg in insn 48
changing reg in insn 91
changing reg in insn 95
changing reg in insn 92
changing reg in insn 106
changing reg in insn 119
changing reg in insn 107
changing reg in insn 129
changing reg in insn 131
changing reg in insn 88
changing reg in insn 138
changing reg in insn 115
changing reg in insn 101
changing reg in insn 89
changing reg in insn 6
changing reg in insn 96
changing reg in insn 105
changing reg in insn 101
changing reg in insn 135
changing reg in insn 84
changing reg in insn 138
changing reg in insn 136
changing reg in insn 135
changing reg in insn 130
changing reg in insn 127
changing reg in insn 125
changing reg in insn 115
changing reg in insn 113
changing reg in insn 103
changing reg in insn 101
changing reg in insn 85
changing reg in insn 53
changing reg in insn 60
changing reg in insn 56
changing reg in insn 109
changing reg in insn 41
changing reg in insn 8
changing reg in insn 7
changing reg in insn 157
changing reg in insn 132
changing reg in insn 119
changing reg in insn 110
changing reg in insn 74
changing reg in insn 62
changing reg in insn 42
changing reg in insn 2
changing reg in insn 16
changing reg in insn 3
changing reg in insn 95
changing reg in insn 147
changing reg in insn 135
changing reg in insn 99
changing reg in insn 96
changing reg in insn 12
changing reg in insn 28
changing reg in insn 29
changing reg in insn 38
changing reg in insn 39
changing reg in insn 83
changing reg in insn 84
changing reg in insn 87
changing reg in insn 88
changing reg in insn 104
changing reg in insn 104
changing reg in insn 105
changing reg in insn 105
changing reg in insn 106
changing reg in insn 184
changing reg in insn 2
changing reg in insn 185
changing reg in insn 3
changing reg in insn 186
changing reg in insn 41
changing reg in insn 187
changing reg in insn 59
changing reg in insn 188
changing reg in insn 109
changing reg in insn 189
changing reg in insn 129
deleting insn with uid = 184.
deleting insn with uid = 2.
deleting insn with uid = 185.
deleting insn with uid = 29.
deleting insn with uid = 39.
deleting insn with uid = 186.
deleting insn with uid = 187.
deleting insn with uid = 61.
deleting insn with uid = 199.
deleting insn with uid = 188.
deleting insn with uid = 189.
deleting insn with uid = 131.


try_optimize_cfg iteration 1

Forwarding edge 15->16 to 14 failed.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 58.
verify found no changes in insn with uid = 63.
verify found no changes in insn with uid = 108.
verify found no changes in insn with uid = 128.
verify found no changes in insn with uid = 133.
verify found no changes in insn with uid = 151.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 19 n_edges 27 count 20 (  1.1)
df_worklist_dataflow_doublequeue: n_basic_blocks 19 n_edges 27 count 21 (  1.1)


fbgc_tuple

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [xmm0] 21 [xmm1] 40 [r12] 41 [r13] 42 [r14]
;;  ref usage 	r0={19d,19u} r1={13d,4u} r2={9d} r3={4d,17u} r4={13d,5u} r5={17d,9u} r6={1d,5u} r7={1d,26u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r17={20d,9u} r18={8d} r20={11d,2u} r21={11d,2u} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={9d} r37={9d} r38={8d} r39={8d} r40={4d,7u} r41={3d,7u} r42={2d,13u,3e} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} 
;;    total ref usage 736{608d,125u,3e} in 118{110 regular + 8 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 656996803 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [always]  count:656996803 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 17 [flags] 41 [r13]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 17 [flags] 41 [r13]
;; live  kill	
(note 9 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 3 9 4 2 (set (reg/v:SI 41 r13 [orig:106 argc ] [106])
        (reg:SI 4 si [116])) "cmodules/fbgc_stl.c":99:39 67 {*movsi_internal}
     (nil))
(note 4 3 11 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 11 4 12 2 (debug_marker) "cmodules/fbgc_stl.c":100:2 -1
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 41 r13 [orig:106 argc ] [106])
            (const_int 1 [0x1]))) "cmodules/fbgc_stl.c":100:4 11 {*cmpsi_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) "cmodules/fbgc_stl.c":100:4 659 {*jcc}
     (int_list:REG_BR_PROB 301614084 (nil))
 -> 144)
;;  succ:       3 [71.9% (guessed)]  count:472446400 (estimated locally) (FALLTHRU)
;;              17 [28.1% (guessed)]  count:184550403 (estimated locally)
;; lr  out 	 5 [di] 7 [sp] 41 [r13]
;; live  out 	 5 [di] 7 [sp] 41 [r13]

;; basic block 3, loop depth 0, count 472446400 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [71.9% (guessed)]  count:472446400 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp] 41 [r13]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 42 [r14]
;; live  in  	 5 [di] 7 [sp] 41 [r13]
;; live  gen 	 0 [ax] 17 [flags] 42 [r14]
;; live  kill	
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 15 14 16 3 (debug_marker) "cmodules/fbgc_stl.c":101:3 -1
     (nil))
(insn 16 15 17 3 (set (reg/f:DI 42 r14 [orig:82 _1 ] [82])
        (mem/f:DI (reg/v/f:DI 5 di [orig:105 arg ] [105]) [1 *arg_29(D)+0 S8 A64])) "cmodules/fbgc_stl.c":101:13 66 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:QI 0 ax [orig:83 _2 ] [83])
        (mem:QI (reg/f:DI 42 r14 [orig:82 _1 ] [82]) [0 _1->type+0 S1 A8])) "cmodules/fbgc_stl.c":101:16 69 {*movqi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:83 _2 ] [83])
            (const_int 6 [0x6]))) "cmodules/fbgc_stl.c":101:3 9 {*cmpqi_1}
     (nil))
(jump_insn 19 18 20 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "cmodules/fbgc_stl.c":101:3 659 {*jcc}
     (int_list:REG_BR_PROB 268435462 (nil))
 -> 33)
;;  succ:       4 [75.0% (adjusted)]  count:354334800 (estimated locally) (FALLTHRU)
;;              7 [25.0% (adjusted)]  count:118111600 (estimated locally)
;; lr  out 	 0 [ax] 7 [sp] 41 [r13] 42 [r14]
;; live  out 	 0 [ax] 7 [sp] 41 [r13] 42 [r14]

;; basic block 4, loop depth 0, count 472446400 (estimated locally), maybe hot
;; Invalid sum of incoming counts 354334800 (estimated locally), should be 472446400 (estimated locally)
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [75.0% (adjusted)]  count:354334800 (estimated locally) (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp] 41 [r13] 42 [r14]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 7 [sp] 41 [r13] 42 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:83 _2 ] [83])
            (const_int 14 [0xe]))) "cmodules/fbgc_stl.c":101:3 9 {*cmpqi_1}
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) "cmodules/fbgc_stl.c":101:3 659 {*jcc}
     (int_list:REG_BR_PROB 357913950 (nil))
 -> 78)
;;  succ:       5 [66.7% (adjusted)]  count:314964265 (estimated locally) (FALLTHRU)
;;              11 [33.3% (adjusted)]  count:157482135 (estimated locally)
;; lr  out 	 0 [ax] 7 [sp] 41 [r13] 42 [r14]
;; live  out 	 0 [ax] 7 [sp] 41 [r13] 42 [r14]

;; basic block 5, loop depth 0, count 472446400 (estimated locally), maybe hot
;; Invalid sum of incoming counts 314964265 (estimated locally), should be 472446400 (estimated locally)
;;  prev block 4, next block 6, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 [66.7% (adjusted)]  count:314964265 (estimated locally) (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp] 42 [r14]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags] 40 [r12]
;; live  in  	 0 [ax] 7 [sp] 42 [r14]
;; live  gen 	 17 [flags] 40 [r12]
;; live  kill	
(note 23 22 8 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 8 23 24 5 (set (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])
        (const_int 0 [0])) "cmodules/fbgc_stl.c":101:3 66 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 24 8 25 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:83 _2 ] [83])
            (const_int 3 [0x3]))) "cmodules/fbgc_stl.c":101:3 9 {*cmpqi_1}
     (nil))
(jump_insn 25 24 26 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 156)
            (pc))) "cmodules/fbgc_stl.c":101:3 659 {*jcc}
     (int_list:REG_BR_PROB 715827886 (nil))
 -> 156)
;;  succ:       18 [66.7% (adjusted)]  count:314964265 (estimated locally)
;;              6 [33.3% (adjusted)]  count:157482135 (estimated locally) (FALLTHRU)
;; lr  out 	 7 [sp] 40 [r12] 42 [r14]
;; live  out 	 7 [sp] 40 [r12] 42 [r14]

;; basic block 6, loop depth 0, count 118111600 (estimated locally), maybe hot
;; Invalid sum of incoming counts 157482135 (estimated locally), should be 118111600 (estimated locally)
;;  prev block 5, next block 7, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       5 [33.3% (adjusted)]  count:157482135 (estimated locally) (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r14]
;; lr  use 	 7 [sp] 42 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 7 [sp] 42 [r14]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 27 26 28 6 (debug_marker) "cmodules/fbgc_stl.c":104:5 -1
     (nil))
(insn 28 27 30 6 (set (reg:SI 5 di [orig:107 MEM[(struct fbgc_int_object *)_1].content ] [107])
        (mem:SI (plus:DI (reg/f:DI 42 r14 [orig:82 _1 ] [82])
                (const_int 9 [0x9])) [6 MEM[(struct fbgc_int_object *)_1].content+0 S4 A8])) "cmodules/fbgc_stl.c":104:12 67 {*movsi_internal}
     (nil))
(call_insn/j 30 28 31 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80bc00 new_fbgc_tuple_object>) [0 new_fbgc_tuple_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":104:12 681 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80bc00 new_fbgc_tuple_object>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:118111600 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 31 30 33)
;; basic block 7, loop depth 0, count 118111600 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [25.0% (adjusted)]  count:118111600 (estimated locally)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r14]
;; lr  use 	 7 [sp] 42 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 7 [sp] 42 [r14]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 40 [r12]
;; live  kill	
(code_label 33 31 34 7 5 (nil) [1 uses])
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 35 34 36 7 (debug_marker) "cmodules/fbgc_stl.c":108:5 -1
     (nil))
(debug_insn 36 35 37 7 (var_location:DI s (reg/f:DI 42 r14 [orig:82 _1 ] [82])) "cmodules/fbgc_stl.c":108:26 -1
     (nil))
(debug_insn 37 36 38 7 (debug_marker) "cmodules/fbgc_stl.c":109:5 -1
     (nil))
(insn 38 37 40 7 (set (reg:SI 5 di [orig:108 MEM[(struct fbgc_str_object *)_1].len ] [108])
        (mem:SI (plus:DI (reg/f:DI 42 r14 [orig:82 _1 ] [82])
                (const_int 9 [0x9])) [6 MEM[(struct fbgc_str_object *)_1].len+0 S4 A8])) "cmodules/fbgc_stl.c":109:31 67 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 42 r14 [orig:82 _1 ] [82])
                (const_int 9 [0x9])) [6 MEM[(struct fbgc_str_object *)_1].len+0 S4 A8])
        (nil)))
(call_insn 40 38 41 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80bc00 new_fbgc_tuple_object>) [0 new_fbgc_tuple_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":109:31 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80bc00 new_fbgc_tuple_object>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 41 40 42 7 (set (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])
        (reg:DI 0 ax [117])) "cmodules/fbgc_stl.c":109:31 66 {*movdi_internal}
     (nil))
(debug_insn 42 41 43 7 (var_location:DI t (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])) "cmodules/fbgc_stl.c":109:31 -1
     (nil))
(debug_insn 43 42 44 7 (debug_marker) "cmodules/fbgc_stl.c":110:5 -1
     (nil))
(debug_insn 44 43 45 7 (debug_marker) "cmodules/fbgc_stl.c":110:9 -1
     (nil))
(debug_insn 45 44 46 7 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 46 45 47 7 (debug_marker) "cmodules/fbgc_stl.c":110:20 -1
     (nil))
(insn 47 46 48 7 (set (reg:SI 0 ax [orig:89 _8 ] [89])
        (mem:SI (plus:DI (reg/f:DI 42 r14 [orig:82 _1 ] [82])
                (const_int 9 [0x9])) [6 MEM[(struct fbgc_str_object *)_1].len+0 S4 A8])) "cmodules/fbgc_stl.c":110:24 67 {*movsi_internal}
     (nil))
(insn 48 47 49 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:89 _8 ] [89])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":110:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 49 48 164 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 71)
            (pc))) "cmodules/fbgc_stl.c":110:5 659 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 71)
;;  succ:       8 [89.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU)
;;              10 [11.0% (guessed)]  count:12992276 (estimated locally)
;; lr  out 	 0 [ax] 7 [sp] 40 [r12] 42 [r14]
;; live  out 	 0 [ax] 7 [sp] 40 [r12] 42 [r14]

;; basic block 8, loop depth 0, count 105119324 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       7 [89.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 40 [r12] 42 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp] 40 [r12] 42 [r14]
;; live  gen 	 3 [bx]
;; live  kill	
(note 164 49 5 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 5 164 68 8 (set (reg/v:SI 3 bx [orig:87 _6 ] [87])
        (const_int 0 [0])) "cmodules/fbgc_stl.c":110:13 67 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       9 [always]  count:105119324 (estimated locally) (FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 40 [r12] 42 [r14]
;; live  out 	 3 [bx] 7 [sp] 40 [r12] 42 [r14]

;; basic block 9, loop depth 0, count 955630224 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       8 [always]  count:105119324 (estimated locally) (FALLTHRU)
;;              9 [89.0% (guessed)]  count:850510900 (estimated locally) (DFS_BACK)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 40 [r12] 42 [r14]
;; lr  use 	 3 [bx] 7 [sp] 40 [r12] 42 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 41 [r13] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 3 [bx] 7 [sp] 40 [r12] 42 [r14]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 17 [flags] 41 [r13]
;; live  kill	 17 [flags]
(code_label 68 5 50 9 9 (nil) [1 uses])
(note 50 68 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 51 50 52 9 (var_location:SI i (reg/v:SI 3 bx [orig:87 _6 ] [87])) -1
     (nil))
(debug_insn 52 51 53 9 (debug_marker) "cmodules/fbgc_stl.c":111:6 -1
     (nil))
(insn 53 52 54 9 (set (reg/v:SI 41 r13 [orig:102 i ] [102])
        (reg/v:SI 3 bx [orig:87 _6 ] [87])) 67 {*movsi_internal}
     (nil))
(insn 54 53 55 9 (parallel [
            (set (reg/v:SI 3 bx [orig:87 _6 ] [87])
                (plus:SI (reg/v:SI 3 bx [orig:87 _6 ] [87])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":111:6 190 {*addsi_1}
     (nil))
(insn 55 54 56 9 (set (reg:SI 1 dx)
        (reg/v:SI 3 bx [orig:87 _6 ] [87])) "cmodules/fbgc_stl.c":111:6 67 {*movsi_internal}
     (nil))
(insn 56 55 57 9 (set (reg:SI 4 si)
        (reg/v:SI 41 r13 [orig:102 i ] [102])) "cmodules/fbgc_stl.c":111:6 67 {*movsi_internal}
     (nil))
(insn 57 56 58 9 (set (reg:DI 5 di)
        (reg/f:DI 42 r14 [orig:82 _1 ] [82])) "cmodules/fbgc_stl.c":111:6 66 {*movdi_internal}
     (nil))
(call_insn 58 57 59 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_object_in_fbgc_str_object") [flags 0x41]  <function_decl 0x7f626c806400 get_object_in_fbgc_str_object>) [0 get_object_in_fbgc_str_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":111:6 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("get_object_in_fbgc_str_object") [flags 0x41]  <function_decl 0x7f626c806400 get_object_in_fbgc_str_object>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 59 58 60 9 (set (reg/f:DI 4 si [orig:88 _7 ] [88])
        (reg:DI 0 ax [118])) "cmodules/fbgc_stl.c":111:6 66 {*movdi_internal}
     (nil))
(insn 60 59 62 9 (set (reg:SI 1 dx)
        (reg/v:SI 41 r13 [orig:102 i ] [102])) "cmodules/fbgc_stl.c":111:6 67 {*movsi_internal}
     (nil))
(insn 62 60 63 9 (set (reg:DI 5 di)
        (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])) "cmodules/fbgc_stl.c":111:6 66 {*movdi_internal}
     (nil))
(call_insn 63 62 64 9 (call (mem:QI (symbol_ref:DI ("set_object_in_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80be00 set_object_in_fbgc_tuple_object>) [0 set_object_in_fbgc_tuple_object S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_stl.c":111:6 666 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("set_object_in_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80be00 set_object_in_fbgc_tuple_object>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(debug_insn 64 63 65 9 (debug_marker) "cmodules/fbgc_stl.c":110:52 -1
     (nil))
(debug_insn 65 64 66 9 (var_location:SI i (reg/v:SI 3 bx [orig:87 _6 ] [87])) -1
     (nil))
(debug_insn 66 65 67 9 (debug_marker) "cmodules/fbgc_stl.c":110:20 -1
     (nil))
(insn 67 66 69 9 (set (reg:SI 0 ax [orig:89 _8 ] [89])
        (mem:SI (plus:DI (reg/f:DI 42 r14 [orig:82 _1 ] [82])
                (const_int 9 [0x9])) [6 MEM[(struct fbgc_str_object *)_1].len+0 S4 A8])) "cmodules/fbgc_stl.c":110:24 67 {*movsi_internal}
     (nil))
(insn 69 67 70 9 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax [orig:89 _8 ] [89])
            (reg/v:SI 3 bx [orig:87 _6 ] [87]))) "cmodules/fbgc_stl.c":110:5 11 {*cmpsi_1}
     (nil))
(jump_insn 70 69 71 9 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 68)
            (pc))) "cmodules/fbgc_stl.c":110:5 659 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 68)
;;  succ:       9 [89.0% (guessed)]  count:850510900 (estimated locally) (DFS_BACK)
;;              10 [11.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU,LOOP_EXIT)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 40 [r12] 42 [r14]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 40 [r12] 42 [r14]

;; basic block 10, loop depth 0, count 118111601 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       7 [11.0% (guessed)]  count:12992276 (estimated locally)
;;              9 [11.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU,LOOP_EXIT)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp] 40 [r12]
;; lr  use 	 0 [ax] 7 [sp] 40 [r12]
;; lr  def 	
;; live  in  	 0 [ax] 7 [sp] 40 [r12]
;; live  gen 	
;; live  kill	
(code_label 71 70 72 10 8 (nil) [1 uses])
(note 72 71 73 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 73 72 74 10 (debug_marker) "cmodules/fbgc_stl.c":113:5 -1
     (nil))
(insn 74 73 75 10 (set (mem:SI (plus:DI (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])
                (const_int 13 [0xd])) [6 MEM[(struct fbgc_tuple_object *)t_42].size+0 S4 A8])
        (reg:SI 0 ax [orig:89 _8 ] [89])) "cmodules/fbgc_stl.c":113:31 67 {*movsi_internal}
     (nil))
(debug_insn 75 74 190 10 (debug_marker) "cmodules/fbgc_stl.c":115:5 -1
     (nil))
(jump_insn 190 75 191 10 (set (pc)
        (label_ref 156)) "cmodules/fbgc_stl.c":115:12 660 {jump}
     (nil)
 -> 156)
;;  succ:       18 [always]  count:118111601 (estimated locally)
;; lr  out 	 7 [sp] 40 [r12]
;; live  out 	 7 [sp] 40 [r12]

(barrier 191 190 78)
;; basic block 11, loop depth 0, count 118111600 (estimated locally), maybe hot
;; Invalid sum of incoming counts 157482135 (estimated locally), should be 118111600 (estimated locally)
;;  prev block 10, next block 12, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 [33.3% (adjusted)]  count:157482135 (estimated locally)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r13] 42 [r14]
;; lr  use 	 7 [sp] 42 [r14]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 17 [flags] 21 [xmm1]
;; live  in  	 7 [sp] 41 [r13] 42 [r14]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 17 [flags] 21 [xmm1]
;; live  kill	
(code_label 78 191 79 11 6 (nil) [1 uses])
(note 79 78 80 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 80 79 81 11 (debug_marker) "cmodules/fbgc_stl.c":120:5 -1
     (nil))
(debug_insn 81 80 82 11 (var_location:DI ran (reg/f:DI 42 r14 [orig:82 _1 ] [82])) "cmodules/fbgc_stl.c":120:32 -1
     (nil))
(debug_insn 82 81 83 11 (debug_marker) "cmodules/fbgc_stl.c":121:5 -1
     (nil))
(insn 83 82 84 11 (set (reg/f:DI 0 ax [orig:109 MEM[(struct fbgc_range_object *)_1].start ] [109])
        (mem/f:DI (plus:DI (reg/f:DI 42 r14 [orig:82 _1 ] [82])
                (const_int 9 [0x9])) [1 MEM[(struct fbgc_range_object *)_1].start+0 S8 A8])) "cmodules/fbgc_stl.c":121:9 66 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 42 r14 [orig:82 _1 ] [82])
                (const_int 9 [0x9])) [1 MEM[(struct fbgc_range_object *)_1].start+0 S8 A8])
        (nil)))
(insn 84 83 85 11 (set (reg/v:SI 3 bx [orig:101 start ] [101])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:109 MEM[(struct fbgc_range_object *)_1].start ] [109])
                (const_int 9 [0x9])) [6 MEM[(struct fbgc_int_object *)_10].content+0 S4 A8])) "cmodules/fbgc_stl.c":121:9 67 {*movsi_internal}
     (nil))
(debug_insn 85 84 86 11 (var_location:SI start (reg/v:SI 3 bx [orig:101 start ] [101])) "cmodules/fbgc_stl.c":121:9 -1
     (nil))
(debug_insn 86 85 87 11 (debug_marker) "cmodules/fbgc_stl.c":122:5 -1
     (nil))
(insn 87 86 88 11 (set (reg/f:DI 0 ax [orig:110 MEM[(struct fbgc_range_object *)_1].end ] [110])
        (mem/f:DI (plus:DI (reg/f:DI 42 r14 [orig:82 _1 ] [82])
                (const_int 17 [0x11])) [1 MEM[(struct fbgc_range_object *)_1].end+0 S8 A8])) "cmodules/fbgc_stl.c":122:9 66 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 42 r14 [orig:82 _1 ] [82])
                (const_int 17 [0x11])) [1 MEM[(struct fbgc_range_object *)_1].end+0 S8 A8])
        (nil)))
(insn 88 87 89 11 (set (reg/v:SI 6 bp [orig:98 end ] [98])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:110 MEM[(struct fbgc_range_object *)_1].end ] [110])
                (const_int 9 [0x9])) [6 MEM[(struct fbgc_int_object *)_11].content+0 S4 A8])) "cmodules/fbgc_stl.c":122:9 67 {*movsi_internal}
     (nil))
(debug_insn 89 88 90 11 (var_location:SI end (reg/v:SI 6 bp [orig:98 end ] [98])) "cmodules/fbgc_stl.c":122:9 -1
     (nil))
(debug_insn 90 89 91 11 (debug_marker) "cmodules/fbgc_stl.c":123:5 -1
     (nil))
(insn 91 90 6 11 (set (reg/f:DI 0 ax [orig:92 _12 ] [92])
        (mem/f:DI (plus:DI (reg/f:DI 42 r14 [orig:82 _1 ] [82])
                (const_int 25 [0x19])) [1 MEM[(struct fbgc_range_object *)_1].step+0 S8 A8])) "cmodules/fbgc_stl.c":123:19 66 {*movdi_internal}
     (nil))
(insn 6 91 92 11 (set (reg:DF 21 xmm1 [orig:99 _32 ] [99])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S8 A64])) 111 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 92 6 93 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:92 _12 ] [92])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":123:38 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 93 92 94 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 97)
            (pc))) "cmodules/fbgc_stl.c":123:38 659 {*jcc}
     (int_list:REG_BR_PROB 322122548 (nil))
 -> 97)
;;  succ:       12 [70.0% (guessed)]  count:82678120 (estimated locally) (FALLTHRU)
;;              13 [30.0% (guessed)]  count:35433480 (estimated locally)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 21 [xmm1] 41 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 21 [xmm1] 41 [r13]

;; basic block 12, loop depth 0, count 82678120 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       11 [70.0% (guessed)]  count:82678120 (estimated locally) (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 21 [xmm1] 41 [r13]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 21 [xmm1] 41 [r13]
;; live  kill	
(note 94 93 95 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 12 (set (reg/v:SI 41 r13 [orig:106 argc ] [106])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:92 _12 ] [92])
                (const_int 9 [0x9])) [6 MEM[(struct fbgc_int_object *)_12].content+0 S4 A8])) "cmodules/fbgc_stl.c":123:38 67 {*movsi_internal}
     (nil))
(insn 96 95 97 12 (set (reg:DF 21 xmm1 [orig:99 _32 ] [99])
        (float:DF (reg/v:SI 41 r13 [orig:106 argc ] [106]))) 172 {*floatsidf2}
     (nil))
;;  succ:       13 [always]  count:82678120 (estimated locally) (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 21 [xmm1] 41 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 21 [xmm1] 41 [r13]

;; basic block 13, loop depth 0, count 118111600 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       11 [30.0% (guessed)]  count:35433480 (estimated locally)
;;              12 [always]  count:82678120 (estimated locally) (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 21 [xmm1] 41 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 21 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 42 [r14] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 21 [xmm1] 41 [r13]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 20 [xmm0] 40 [r12] 42 [r14]
;; live  kill	 17 [flags]
(code_label 97 96 98 13 10 (nil) [1 uses])
(note 98 97 99 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 99 98 100 13 (var_location:SI step (reg/v:SI 41 r13 [orig:106 argc ] [106])) "cmodules/fbgc_stl.c":123:9 -1
     (nil))
(debug_insn 100 99 101 13 (debug_marker) "cmodules/fbgc_stl.c":125:5 -1
     (nil))
(debug_insn 101 100 102 13 (var_location:SI sz (fix:SI (div:DF (float:DF (minus:SI (reg/v:SI 6 bp [orig:98 end ] [98])
                    (reg/v:SI 3 bx [orig:101 start ] [101])))
            (reg:DF 21 xmm1 [orig:99 _32 ] [99])))) "cmodules/fbgc_stl.c":125:9 -1
     (nil))
(debug_insn 102 101 198 13 (debug_marker) "cmodules/fbgc_stl.c":127:5 -1
     (nil))
(insn 198 102 103 13 (set (reg:SI 0 ax [111])
        (reg/v:SI 6 bp [orig:98 end ] [98])) "cmodules/fbgc_stl.c":125:26 67 {*movsi_internal}
     (nil))
(insn 103 198 104 13 (parallel [
            (set (reg:SI 0 ax [111])
                (minus:SI (reg:SI 0 ax [111])
                    (reg/v:SI 3 bx [orig:101 start ] [101])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":125:26 246 {*subsi_1}
     (nil))
(insn 104 103 105 13 (set (reg:DF 20 xmm0 [112])
        (float:DF (reg:SI 0 ax [111]))) "cmodules/fbgc_stl.c":125:14 172 {*floatsidf2}
     (nil))
(insn 105 104 106 13 (set (reg:DF 20 xmm0 [113])
        (div:DF (reg:DF 20 xmm0 [112])
            (reg:DF 21 xmm1 [orig:99 _32 ] [99]))) "cmodules/fbgc_stl.c":125:33 822 {*fop_df_1}
     (nil))
(insn 106 105 107 13 (set (reg:SI 42 r14 [orig:96 sz.3_17 ] [96])
        (fix:SI (reg:DF 20 xmm0 [113]))) "cmodules/fbgc_stl.c":125:9 153 {fix_truncdfsi_sse}
     (nil))
(insn 107 106 108 13 (set (reg:SI 5 di)
        (reg:SI 42 r14 [orig:96 sz.3_17 ] [96])) "cmodules/fbgc_stl.c":127:31 67 {*movsi_internal}
     (nil))
(call_insn 108 107 109 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80bc00 new_fbgc_tuple_object>) [0 new_fbgc_tuple_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":127:31 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80bc00 new_fbgc_tuple_object>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 109 108 110 13 (set (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])
        (reg:DI 0 ax [119])) "cmodules/fbgc_stl.c":127:31 66 {*movdi_internal}
     (nil))
(debug_insn 110 109 111 13 (var_location:DI tp (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])) "cmodules/fbgc_stl.c":127:31 -1
     (nil))
(debug_insn 111 110 112 13 (debug_marker) "cmodules/fbgc_stl.c":128:5 -1
     (nil))
(debug_insn 112 111 113 13 (debug_marker) "cmodules/fbgc_stl.c":128:9 -1
     (nil))
(debug_insn 113 112 114 13 (var_location:SI i (reg/v:SI 3 bx [orig:101 start ] [101])) -1
     (nil))
(debug_insn 114 113 115 13 (debug_marker) "cmodules/fbgc_stl.c":128:24 -1
     (nil))
(insn 115 114 116 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 3 bx [orig:101 start ] [101])
            (reg/v:SI 6 bp [orig:98 end ] [98]))) "cmodules/fbgc_stl.c":128:5 11 {*cmpsi_1}
     (nil))
(jump_insn 116 115 140 13 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 123)
            (pc))) "cmodules/fbgc_stl.c":128:5 659 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 123)
;;  succ:       15 [89.0% (guessed)]  count:105119324 (estimated locally)
;;              14 [11.0% (guessed)]  count:12992276 (estimated locally) (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

;; basic block 14, loop depth 0, count 118111601 (estimated locally), maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       13 [11.0% (guessed)]  count:12992276 (estimated locally) (FALLTHRU)
;;              16 [always]  count:105119324 (estimated locally) (LOOP_EXIT)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 40 [r12] 42 [r14]
;; lr  use 	 7 [sp] 40 [r12] 42 [r14]
;; lr  def 	
;; live  in  	 7 [sp] 40 [r12] 42 [r14]
;; live  gen 	
;; live  kill	
(code_label 140 116 117 14 12 (nil) [1 uses])
(note 117 140 118 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 118 117 119 14 (debug_marker) "cmodules/fbgc_stl.c":132:5 -1
     (nil))
(insn 119 118 120 14 (set (mem:SI (plus:DI (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])
                (const_int 13 [0xd])) [6 MEM[(struct fbgc_tuple_object *)tp_36].size+0 S4 A8])
        (reg:SI 42 r14 [orig:96 sz.3_17 ] [96])) "cmodules/fbgc_stl.c":132:32 67 {*movsi_internal}
     (nil))
(debug_insn 120 119 192 14 (debug_marker) "cmodules/fbgc_stl.c":134:5 -1
     (nil))
(jump_insn 192 120 193 14 (set (pc)
        (label_ref 156)) "cmodules/fbgc_stl.c":134:12 660 {jump}
     (nil)
 -> 156)
;;  succ:       18 [always]  count:118111601 (estimated locally)
;; lr  out 	 7 [sp] 40 [r12]
;; live  out 	 7 [sp] 40 [r12]

(barrier 193 192 123)
;; basic block 15, loop depth 0, count 955630224 (estimated locally), maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       13 [89.0% (guessed)]  count:105119324 (estimated locally)
;;              15 [89.0% (guessed)]  count:850510900 (estimated locally) (DFS_BACK)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label 123 193 124 15 11 (nil) [2 uses])
(note 124 123 125 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(debug_insn 125 124 126 15 (var_location:SI i (reg/v:SI 3 bx [orig:101 start ] [101])) -1
     (nil))
(debug_insn 126 125 127 15 (debug_marker) "cmodules/fbgc_stl.c":129:6 -1
     (nil))
(insn 127 126 128 15 (set (reg:SI 5 di)
        (reg/v:SI 3 bx [orig:101 start ] [101])) "cmodules/fbgc_stl.c":129:6 67 {*movsi_internal}
     (nil))
(call_insn 128 127 129 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_int_object") [flags 0x41]  <function_decl 0x7f626c7fa500 new_fbgc_int_object>) [0 new_fbgc_int_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":129:6 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_int_object") [flags 0x41]  <function_decl 0x7f626c7fa500 new_fbgc_int_object>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 129 128 130 15 (set (reg/f:DI 4 si [orig:97 _18 ] [97])
        (reg:DI 0 ax [120])) "cmodules/fbgc_stl.c":129:6 66 {*movdi_internal}
     (nil))
(insn 130 129 132 15 (set (reg:SI 1 dx)
        (reg/v:SI 3 bx [orig:101 start ] [101])) "cmodules/fbgc_stl.c":129:6 67 {*movsi_internal}
     (nil))
(insn 132 130 133 15 (set (reg:DI 5 di)
        (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])) "cmodules/fbgc_stl.c":129:6 66 {*movdi_internal}
     (nil))
(call_insn 133 132 134 15 (call (mem:QI (symbol_ref:DI ("set_object_in_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80be00 set_object_in_fbgc_tuple_object>) [0 set_object_in_fbgc_tuple_object S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_stl.c":129:6 666 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("set_object_in_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80be00 set_object_in_fbgc_tuple_object>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(debug_insn 134 133 135 15 (debug_marker) "cmodules/fbgc_stl.c":128:31 -1
     (nil))
(insn 135 134 136 15 (parallel [
            (set (reg/v:SI 3 bx [orig:101 start ] [101])
                (plus:SI (reg/v:SI 3 bx [orig:101 start ] [101])
                    (reg/v:SI 41 r13 [orig:106 argc ] [106])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":128:32 190 {*addsi_1}
     (nil))
(debug_insn 136 135 137 15 (var_location:SI i (reg/v:SI 3 bx [orig:101 start ] [101])) -1
     (nil))
(debug_insn 137 136 138 15 (debug_marker) "cmodules/fbgc_stl.c":128:24 -1
     (nil))
(insn 138 137 139 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 6 bp [orig:98 end ] [98])
            (reg/v:SI 3 bx [orig:101 start ] [101]))) "cmodules/fbgc_stl.c":128:5 11 {*cmpsi_1}
     (nil))
(jump_insn 139 138 194 15 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 123)
            (pc))) "cmodules/fbgc_stl.c":128:5 659 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 123)
;;  succ:       15 [89.0% (guessed)]  count:850510900 (estimated locally) (DFS_BACK)
;;              16 [11.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

;; basic block 16, loop depth 0, count 105119324 (estimated locally), maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       15 [11.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 40 [r12] 42 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp] 40 [r12] 42 [r14]
;; live  gen 	
;; live  kill	
(note 194 139 195 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(jump_insn 195 194 196 16 (set (pc)
        (label_ref 140)) 660 {jump}
     (nil)
 -> 140)
;;  succ:       14 [always]  count:105119324 (estimated locally) (LOOP_EXIT)
;; lr  out 	 7 [sp] 40 [r12] 42 [r14]
;; live  out 	 7 [sp] 40 [r12] 42 [r14]

(barrier 196 195 144)
;; basic block 17, loop depth 0, count 184550402 (estimated locally), maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [28.1% (guessed)]  count:184550403 (estimated locally)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r13]
;; lr  use 	 7 [sp] 41 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 7 [sp] 41 [r13]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 40 [r12]
;; live  kill	
(code_label 144 196 145 17 4 (nil) [1 uses])
(note 145 144 146 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(debug_insn 146 145 147 17 (debug_marker) "cmodules/fbgc_stl.c":139:7 -1
     (nil))
(insn 147 146 148 17 (set (reg:SI 1 dx)
        (reg/v:SI 41 r13 [orig:106 argc ] [106])) "cmodules/fbgc_stl.c":139:7 67 {*movsi_internal}
     (nil))
(insn 148 147 149 17 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f626c3ef510 *.LC1>)) "cmodules/fbgc_stl.c":139:7 66 {*movdi_internal}
     (nil))
(insn 149 148 150 17 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_stl.c":139:7 67 {*movsi_internal}
     (nil))
(insn 150 149 151 17 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":139:7 69 {*movqi_internal}
     (nil))
(call_insn 151 150 7 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":139:7 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 7 151 156 17 (set (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])
        (const_int 0 [0])) "cmodules/fbgc_stl.c":140:9 66 {*movdi_internal}
     (nil))
;;  succ:       18 [always]  count:184550402 (estimated locally) (FALLTHRU)
;; lr  out 	 7 [sp] 40 [r12]
;; live  out 	 7 [sp] 40 [r12]

;; basic block 18, loop depth 0, count 538885205 (estimated locally), maybe hot
;; Invalid sum of incoming counts 735737869 (estimated locally), should be 538885205 (estimated locally)
;;  prev block 17, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       5 [66.7% (adjusted)]  count:314964265 (estimated locally)
;;              17 [always]  count:184550402 (estimated locally) (FALLTHRU)
;;              10 [always]  count:118111601 (estimated locally)
;;              14 [always]  count:118111601 (estimated locally)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 40 [r12]
;; lr  use 	 7 [sp] 40 [r12]
;; lr  def 	 0 [ax]
;; live  in  	 7 [sp] 40 [r12]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 156 7 159 18 3 (nil) [3 uses])
(note 159 156 157 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 157 159 158 18 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])) "cmodules/fbgc_stl.c":141:1 66 {*movdi_internal}
     (nil))
(insn 158 157 197 18 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":141:1 -1
     (nil))
;;  succ:       EXIT [always]  count:538885205 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(note 197 158 0 NOTE_INSN_DELETED)

;; Function fbgc_len (fbgc_len, funcdef_no=56, decl_uid=5689, cgraph_uid=57, symbol_order=59)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (1) UBsBz {*sibcall_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 26:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 28:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (1) rBwBz {*call_value}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 35:  (0) r  (1) Z {*movdi_internal}
	   Spilling non-eliminable hard regs: 7

********** Pseudo live ranges #1: **********

  BB 4
   Insn 36: point = 0, n_alt = -1
   Insn 35: point = 0, n_alt = 2
   Insn 29: point = 0, n_alt = 0
   Insn 28: point = 0, n_alt = 3
   Insn 27: point = 0, n_alt = 0
   Insn 26: point = 0, n_alt = 4
   Insn 25: point = 0, n_alt = -2
  BB 3
   Insn 19: point = 2, n_alt = 0
   Insn 18: point = 2, n_alt = 3
  BB 2
   Insn 10: point = 4, n_alt = -1
   Insn 9: point = 4, n_alt = 0
   Insn 3: point = 4, n_alt = -2
   Insn 39: point = 6, n_alt = -2
   Insn 2: point = 7, n_alt = -2
   Insn 38: point = 9, n_alt = -2
 r84: [2..7]
 r85: [4..4] [0..1]
 r87: [8..9]
 r88: [5..6]
Compressing live ranges: from 10 to 8 - 80%
Ranges after the compression:
 r84: [2..5]
 r85: [3..3] [0..1]
 r87: [6..7]
 r88: [4..5]

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4

********** Pseudo live ranges #2: **********

  BB 4
   Insn 36: point = 0, n_alt = -1
   Insn 35: point = 0, n_alt = 2
   Insn 29: point = 0, n_alt = 0
   Insn 28: point = 0, n_alt = 3
   Insn 27: point = 0, n_alt = 0
   Insn 26: point = 0, n_alt = 4
   Insn 25: point = 0, n_alt = -2
  BB 3
   Insn 19: point = 2, n_alt = 0
   Insn 18: point = 2, n_alt = 3
  BB 2
   Insn 10: point = 4, n_alt = -1
   Insn 9: point = 4, n_alt = 0
   Insn 3: point = 4, n_alt = -2
   Insn 39: point = 6, n_alt = -2
   Insn 2: point = 7, n_alt = -2
   Insn 38: point = 9, n_alt = -2
 r84: [2..7]
 r85: [4..4] [0..1]
 r87: [8..9]
 r88: [5..6]
Compressing live ranges: from 10 to 8 - 80%
Ranges after the compression:
 r84: [2..5]
 r85: [3..3] [0..1]
 r87: [6..7]
 r88: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-8, prev_offset=0)
changing reg in insn 2
changing reg in insn 18
changing reg in insn 13
changing reg in insn 3
changing reg in insn 25
changing reg in insn 9
changing reg in insn 38
changing reg in insn 2
changing reg in insn 39
changing reg in insn 3
deleting insn with uid = 38.
deleting insn with uid = 2.
deleting insn with uid = 39.
deleting insn with uid = 25.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)


fbgc_len

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,3u} r1={4d,2u} r2={3d} r4={4d,2u} r5={5d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={3d,1u} r18={2d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 175{157d,18u,0e} in 20{18 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
(note 6 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 3 6 4 2 (set (reg/v:SI 1 dx [orig:85 argc ] [85])
        (reg:SI 4 si [88])) "cmodules/fbgc_stl.c":18:1 67 {*movsi_internal}
     (nil))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 4 9 2 (debug_marker) "cmodules/fbgc_stl.c":19:2 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:85 argc ] [85])
            (const_int 1 [0x1]))) "cmodules/fbgc_stl.c":19:4 11 {*cmpsi_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) "cmodules/fbgc_stl.c":19:4 659 {*jcc}
     (int_list:REG_BR_PROB 650902300 (nil))
 -> 22)
;;  succ:       3 [39.4% (guessed)]  count:422839528 (estimated locally) (FALLTHRU)
;;              4 [60.6% (guessed)]  count:650902296 (estimated locally)
;; lr  out 	 1 [dx] 5 [di] 7 [sp]
;; live  out 	 1 [dx] 5 [di] 7 [sp]

;; basic block 3, loop depth 0, count 422839530 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [39.4% (guessed)]  count:422839528 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 12 11 13 3 (var_location:SI D#1 (const_int 1 [0x1])) -1
     (nil))
(debug_insn 13 12 14 3 (var_location:DI arg (reg/v/f:DI 5 di [orig:84 arg ] [84])) -1
     (nil))
(debug_insn 14 13 15 3 (debug_marker:BLK) "cmodules/fbgc_stl.c":17:1 -1
     (nil))
(debug_insn 15 14 16 3 (var_location:SI D#2 (debug_expr:SI D#1)) -1
     (nil))
(debug_insn 16 15 17 3 (var_location:SI argc (debug_expr:SI D#2)) -1
     (nil))
(debug_insn 17 16 18 3 (debug_marker) "cmodules/fbgc_stl.c":20:3 -1
     (nil))
(insn 18 17 19 3 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 5 di [orig:84 arg ] [84]) [1 *arg_6(D)+0 S8 A64])) "cmodules/fbgc_stl.c":20:10 66 {*movdi_internal}
     (nil))
(call_insn/j 19 18 20 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_length_fbgc_object") [flags 0x41]  <function_decl 0x7f626c7e8a00 get_length_fbgc_object>) [0 get_length_fbgc_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":20:10 681 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("get_length_fbgc_object") [flags 0x41]  <function_decl 0x7f626c7e8a00 get_length_fbgc_object>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:422839530 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 20 19 22)
;; basic block 4, loop depth 0, count 650902295 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [60.6% (guessed)]  count:650902296 (estimated locally)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(code_label 22 20 23 4 25 (nil) [1 uses])
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 24 23 26 4 (debug_marker) "cmodules/fbgc_stl.c":22:7 -1
     (nil))
(insn 26 24 27 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f626c44e3f0 *.LC2>)) "cmodules/fbgc_stl.c":22:7 66 {*movdi_internal}
     (nil))
(insn 27 26 28 4 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_stl.c":22:7 67 {*movsi_internal}
     (nil))
(insn 28 27 29 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":22:7 69 {*movqi_internal}
     (nil))
(call_insn 29 28 30 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":22:7 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(debug_insn 30 29 35 4 (debug_marker) "cmodules/fbgc_stl.c":23:2 -1
     (nil))
(insn 35 30 36 4 (set (reg/i:DI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":24:1 66 {*movdi_internal}
     (nil))
(insn 36 35 40 4 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":24:1 -1
     (nil))
;;  succ:       EXIT [always]  count:650902295 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(note 40 36 0 NOTE_INSN_DELETED)

;; Function fbgc_id (fbgc_id, funcdef_no=58, decl_uid=5697, cgraph_uid=59, symbol_order=63)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 22:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 23:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 25:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 26:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 34:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 36:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (1) rBwBz {*call_value}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 49:  (0) r  (1) Z {*movdi_internal}
	   Spilling non-eliminable hard regs: 7

********** Pseudo live ranges #1: **********

  BB 5
   Insn 50: point = 0, n_alt = -1
   Insn 49: point = 0, n_alt = 2
  BB 3
   Insn 54: point = 0, n_alt = -1
   Insn 27: point = 0, n_alt = 0
   Insn 26: point = 0, n_alt = 3
   Insn 25: point = 0, n_alt = 3
   Insn 24: point = 0, n_alt = 0
   Insn 23: point = 0, n_alt = 4
   Insn 22: point = 0, n_alt = 3
  BB 4
   Insn 37: point = 2, n_alt = 0
   Insn 36: point = 2, n_alt = 3
   Insn 35: point = 2, n_alt = 0
   Insn 34: point = 2, n_alt = 4
   Insn 33: point = 2, n_alt = -2
  BB 2
   Insn 9: point = 4, n_alt = -1
   Insn 8: point = 4, n_alt = 0
   Insn 3: point = 4, n_alt = -2
   Insn 53: point = 6, n_alt = -2
   Insn 2: point = 7, n_alt = -2
   Insn 52: point = 9, n_alt = -2
 r85: [4..7] [0..1]
 r86: [2..4]
 r89: [8..9]
 r90: [5..6]
Compressing live ranges: from 10 to 8 - 80%
Ranges after the compression:
 r85: [3..5] [0..1]
 r86: [2..3]
 r89: [6..7]
 r90: [4..5]

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5

********** Pseudo live ranges #2: **********

  BB 5
   Insn 50: point = 0, n_alt = -1
   Insn 49: point = 0, n_alt = 2
  BB 3
   Insn 54: point = 0, n_alt = -1
   Insn 27: point = 0, n_alt = 0
   Insn 26: point = 0, n_alt = 3
   Insn 25: point = 0, n_alt = 3
   Insn 24: point = 0, n_alt = 0
   Insn 23: point = 0, n_alt = 4
   Insn 22: point = 0, n_alt = 3
  BB 4
   Insn 37: point = 2, n_alt = 0
   Insn 36: point = 2, n_alt = 3
   Insn 35: point = 2, n_alt = 0
   Insn 34: point = 2, n_alt = 4
   Insn 33: point = 2, n_alt = -2
  BB 2
   Insn 9: point = 4, n_alt = -1
   Insn 8: point = 4, n_alt = 0
   Insn 3: point = 4, n_alt = -2
   Insn 53: point = 6, n_alt = -2
   Insn 2: point = 7, n_alt = -2
   Insn 52: point = 9, n_alt = -2
 r85: [4..7] [0..1]
 r86: [2..4]
 r89: [8..9]
 r90: [5..6]
Compressing live ranges: from 10 to 8 - 80%
Ranges after the compression:
 r85: [3..5] [0..1]
 r86: [2..3]
 r89: [6..7]
 r90: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-8, prev_offset=0)
changing reg in insn 2
changing reg in insn 22
changing reg in insn 12
changing reg in insn 3
changing reg in insn 33
changing reg in insn 8
changing reg in insn 52
changing reg in insn 2
changing reg in insn 53
changing reg in insn 3
deleting insn with uid = 52.
deleting insn with uid = 2.
deleting insn with uid = 53.
deleting insn with uid = 33.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)


fbgc_id

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,4u} r1={5d,3u} r2={4d,1u} r4={5d,3u} r5={5d,4u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={3d,1u} r18={2d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 184{161d,23u,0e} in 33{31 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 3 5 4 2 (set (reg/v:SI 1 dx [orig:86 argc ] [86])
        (reg:SI 4 si [90])) "cmodules/fbgc_stl.c":63:33 67 {*movsi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 8 2 (debug_marker) "cmodules/fbgc_stl.c":64:2 -1
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:86 argc ] [86])
            (const_int 1 [0x1]))) "cmodules/fbgc_stl.c":64:4 11 {*cmpsi_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "cmodules/fbgc_stl.c":64:4 659 {*jcc}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 30)
;;  succ:       3 [34.0% (guessed)]  count:365072224 (estimated locally) (FALLTHRU)
;;              4 [66.0% (guessed)]  count:708669600 (estimated locally)
;; lr  out 	 1 [dx] 5 [di] 7 [sp]
;; live  out 	 1 [dx] 5 [di] 7 [sp]

;; basic block 3, loop depth 0, count 365072220 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [34.0% (guessed)]  count:365072224 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 11 10 12 3 (var_location:SI D#3 (const_int 1 [0x1])) -1
     (nil))
(debug_insn 12 11 13 3 (var_location:DI arg (reg/v/f:DI 5 di [orig:85 arg ] [85])) -1
     (nil))
(debug_insn 13 12 14 3 (debug_marker:BLK) "cmodules/fbgc_stl.c":63:1 -1
     (nil))
(debug_insn 14 13 15 3 (var_location:SI D#4 (debug_expr:SI D#3)) -1
     (nil))
(debug_insn 15 14 16 3 (var_location:SI argc (debug_expr:SI D#4)) -1
     (nil))
(debug_insn 16 15 17 3 (debug_marker) "cmodules/fbgc_stl.c":65:3 -1
     (nil))
(debug_insn 17 16 18 3 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7f626ca21240 stdout>) [2 stdout+0 S8 A64])) "cmodules/fbgc_stl.c":65:3 -1
     (nil))
(debug_insn 18 17 19 3 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f626c44ec60 *.LC3>)) "cmodules/fbgc_stl.c":65:3 -1
     (nil))
(debug_insn 19 18 20 3 (debug_marker:BLK) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":98:1 -1
     (nil))
(debug_insn 20 19 22 3 (debug_marker) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:3 -1
     (nil))
(insn 22 20 23 3 (set (reg:DI 2 cx)
        (mem/f:DI (reg/v/f:DI 5 di [orig:85 arg ] [85]) [1 *arg_4(D)+0 S8 A64])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:10 66 {*movdi_internal}
     (nil))
(insn 23 22 24 3 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f626c44ec60 *.LC3>)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:10 66 {*movdi_internal}
     (nil))
(insn 24 23 25 3 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:10 67 {*movsi_internal}
     (nil))
(insn 25 24 26 3 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7f626ca21240 stdout>) [2 stdout+0 S8 A64])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:10 66 {*movdi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:10 69 {*movqi_internal}
     (nil))
(call_insn 27 26 54 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f626c919100 __fprintf_chk>) [0 __builtin___fprintf_chk S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:10 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f626c919100 __fprintf_chk>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(jump_insn 54 27 55 3 (set (pc)
        (label_ref 38)) 660 {jump}
     (nil)
 -> 38)
;;  succ:       5 [always]  count:365072220 (estimated locally)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 55 54 30)
;; basic block 4, loop depth 0, count 708669605 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [66.0% (guessed)]  count:708669600 (estimated locally)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(code_label 30 55 31 4 30 (nil) [1 uses])
(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 32 31 34 4 (debug_marker) "cmodules/fbgc_stl.c":67:7 -1
     (nil))
(insn 34 32 35 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f626c44ecf0 *.LC4>)) "cmodules/fbgc_stl.c":67:7 66 {*movdi_internal}
     (nil))
(insn 35 34 36 4 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_stl.c":67:7 67 {*movsi_internal}
     (nil))
(insn 36 35 37 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":67:7 69 {*movqi_internal}
     (nil))
(call_insn 37 36 38 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":67:7 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
;;  succ:       5 [always]  count:708669605 (estimated locally) (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

;; basic block 5, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 4, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 [always]  count:708669605 (estimated locally) (FALLTHRU)
;;              3 [always]  count:365072220 (estimated locally)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 38 37 39 5 31 (nil) [1 uses])
(note 39 38 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 40 39 41 5 (var_location:DI arg (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 41 40 42 5 (var_location:SI argc (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 42 41 43 5 (var_location:DI __stream (clobber (const_int 0 [0]))) "cmodules/fbgc_stl.c":65:3 -1
     (nil))
(debug_insn 43 42 44 5 (var_location:DI __fmt (clobber (const_int 0 [0]))) "cmodules/fbgc_stl.c":65:3 -1
     (nil))
(debug_insn 44 43 49 5 (debug_marker) "cmodules/fbgc_stl.c":68:2 -1
     (nil))
(insn 49 44 50 5 (set (reg/i:DI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":69:1 66 {*movdi_internal}
     (nil))
(insn 50 49 56 5 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":69:1 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(note 56 50 0 NOTE_INSN_DELETED)

;; Function fbgc_load (fbgc_load, funcdef_no=57, decl_uid=5693, cgraph_uid=58, symbol_order=61)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-24, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 9:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 24:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 26:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (1) UBsBz {*sibcall_value}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) qm {zero_extendqidi2}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 42:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 47:  (0) =qm  (1) %0  (2) qn {*addqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) rm  (1) re {*cmpsi_1}
      Removing equiv init insn 59 (freq=55)
   59: r114:DI=[r107:DI+0x8]
      REG_EQUIV [r107:DI+0x8]
deleting insn with uid = 59.
Changing pseudo 114 in operand 1 of insn 60 on equiv [r107:DI+0x8]
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=11,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=11,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=20,losers=2 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=20,losers=2 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
	 Choosing alt 3 in insn 60:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=128, assigning class GENERAL_REGS to r128
   60: {r113:DI=r128:DI+0xd;clobber flags:CC;}
      REG_DEAD r114:DI
      REG_UNUSED flags:CC
      REG_EQUAL [r107:DI+0x8]+0xd
    Inserting insn reload before:
  147: r128:DI=[r107:DI+0x8]

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 147:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 61:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (1) rBwBz {*call_value}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=16,losers=2,rld_nregs=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 6:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 69:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 70:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 72:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (1) UBsBz {*sibcall_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) =r  (1) qm {zero_extendqidi2}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 83:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 84:  (0) =r  (1) %0  (2) rme {*adddi_1}
      Removing equiv init insn 85 (freq=298)
   85: r121:DI=[r107:DI]
      REG_EQUIV [r107:DI]
deleting insn with uid = 85.
Changing pseudo 121 in operand 1 of insn 86 on equiv [r107:DI]
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=11,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=11,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=20,losers=2 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=20,losers=2 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
	 Choosing alt 3 in insn 86:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=129, assigning class GENERAL_REGS to r129
   86: {r120:DI=r129:DI+0xd;clobber flags:CC;}
      REG_DEAD r121:DI
      REG_UNUSED flags:CC
      REG_EQUAL [r107:DI]+0xd
    Inserting insn reload before:
  148: r129:DI=[r107:DI]

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 148:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 94:  (0) =qm  (1) %0  (2) qn {*addqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) rm  (1) re {*cmpsi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 8:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 7:  (0) r  (1) Z {*movdi_internal}
	   Spilling non-eliminable hard regs: 7

********** Pseudo live ranges #1: **********

  BB 15
   Insn 113: point = 0, n_alt = -1
   Insn 112: point = 0, n_alt = -2
  BB 13
   Insn 144: point = 2, n_alt = -1
   Insn 8: point = 2, n_alt = 2
  BB 12
   Insn 142: point = 3, n_alt = -1
  BB 11
   Insn 100: point = 4, n_alt = -1
   Insn 99: point = 4, n_alt = 0
   Insn 98: point = 5, n_alt = 0
   Insn 94: point = 6, n_alt = 0
   Insn 91: point = 7, n_alt = -2
   Insn 140: point = 9, n_alt = -2
   Insn 90: point = 10, n_alt = 0
   Insn 89: point = 10, n_alt = -2
   Insn 88: point = 11, n_alt = -2
   Insn 87: point = 12, n_alt = 0
   Insn 86: point = 12, n_alt = 3
   Insn 148: point = 14, n_alt = 3
   Insn 84: point = 15, n_alt = 0
   Insn 83: point = 17, n_alt = 3
   Insn 82: point = 19, n_alt = 0
  BB 14
   Insn 7: point = 21, n_alt = 2
  BB 4
   Insn 28: point = 22, n_alt = 0
   Insn 27: point = 22, n_alt = -2
   Insn 26: point = 23, n_alt = 2
   Insn 25: point = 23, n_alt = 0
   Insn 24: point = 23, n_alt = 0
  BB 3
   Insn 21: point = 26, n_alt = -1
   Insn 20: point = 26, n_alt = 0
   Insn 9: point = 26, n_alt = 2
   Insn 19: point = 27, n_alt = 3
  BB 10
   Insn 74: point = 30, n_alt = 0
   Insn 73: point = 30, n_alt = -2
   Insn 72: point = 31, n_alt = 2
   Insn 71: point = 31, n_alt = 0
   Insn 70: point = 31, n_alt = 0
   Insn 69: point = 33, n_alt = 3
  BB 9
   Insn 66: point = 36, n_alt = -1
   Insn 65: point = 36, n_alt = 0
   Insn 6: point = 37, n_alt = 3
   Insn 139: point = 38, n_alt = -2
   Insn 63: point = 39, n_alt = 0
   Insn 62: point = 39, n_alt = -2
   Insn 61: point = 40, n_alt = 4
   Insn 60: point = 40, n_alt = 3
   Insn 147: point = 42, n_alt = 3
  BB 8
   Insn 53: point = 44, n_alt = -1
   Insn 52: point = 44, n_alt = 0
   Insn 51: point = 45, n_alt = 0
   Insn 47: point = 46, n_alt = 0
  BB 7
   Insn 44: point = 48, n_alt = -1
   Insn 43: point = 48, n_alt = 0
   Insn 42: point = 49, n_alt = 3
   Insn 41: point = 51, n_alt = 0
  BB 6
   Insn 5: point = 53, n_alt = 3
  BB 5
   Insn 37: point = 55, n_alt = -1
  BB 2
   Insn 16: point = 56, n_alt = -1
   Insn 15: point = 56, n_alt = 0
   Insn 3: point = 56, n_alt = -2
   Insn 138: point = 58, n_alt = -2
   Insn 2: point = 59, n_alt = -2
   Insn 137: point = 61, n_alt = -2
 r82: [24..27]
 r91: [44..53]
 r104: [36..37] [4..20]
 r106: [26..26] [21..21] [0..7]
 r107: [34..59] [28..29] [4..20]
 r108: [36..56] [4..20]
 r109: [22..23]
 r110: [50..51]
 r111: [48..49]
 r112: [44..45]
 r113: [39..40]
 r115: [30..31]
 r116: [32..33]
 r117: [18..19]
 r118: [11..15]
 r119: [16..17]
 r120: [10..12]
 r122: [4..5]
 r124: [60..61]
 r125: [57..58]
 r126: [36..38]
 r127: [8..9]
 r128: [41..42]
 r129: [13..14]
Compressing live ranges: from 62 to 40 - 64%
Ranges after the compression:
 r82: [15..17]
 r91: [30..35]
 r104: [24..25] [0..11]
 r106: [16..16] [12..12] [0..1]
 r107: [24..37] [18..19] [0..11]
 r108: [24..35] [0..11]
 r109: [13..14]
 r110: [34..35]
 r111: [32..33]
 r112: [30..31]
 r113: [26..27]
 r115: [20..21]
 r116: [22..23]
 r117: [10..11]
 r118: [4..7]
 r119: [8..9]
 r120: [4..5]
 r122: [0..1]
 r124: [38..39]
 r125: [36..37]
 r126: [24..25]
 r127: [2..3]
 r128: [28..29]
 r129: [6..7]

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5 6
EBB 7 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15

********** Pseudo live ranges #2: **********

  BB 15
   Insn 113: point = 0, n_alt = -1
   Insn 112: point = 0, n_alt = -2
  BB 13
   Insn 144: point = 2, n_alt = -1
   Insn 8: point = 2, n_alt = 2
  BB 12
   Insn 142: point = 3, n_alt = -1
  BB 11
   Insn 100: point = 4, n_alt = -1
   Insn 99: point = 4, n_alt = 0
   Insn 98: point = 5, n_alt = 0
   Insn 94: point = 6, n_alt = 0
   Insn 91: point = 7, n_alt = -2
   Insn 140: point = 9, n_alt = -2
   Insn 90: point = 10, n_alt = 0
   Insn 89: point = 10, n_alt = -2
   Insn 88: point = 11, n_alt = -2
   Insn 87: point = 12, n_alt = 0
   Insn 86: point = 12, n_alt = 3
   Insn 148: point = 14, n_alt = 3
   Insn 84: point = 15, n_alt = 0
   Insn 83: point = 17, n_alt = 3
   Insn 82: point = 19, n_alt = 0
  BB 14
   Insn 7: point = 21, n_alt = 2
  BB 4
   Insn 28: point = 22, n_alt = 0
   Insn 27: point = 22, n_alt = -2
   Insn 26: point = 23, n_alt = 2
   Insn 25: point = 23, n_alt = 0
   Insn 24: point = 23, n_alt = 0
  BB 3
   Insn 21: point = 26, n_alt = -1
   Insn 20: point = 26, n_alt = 0
   Insn 9: point = 26, n_alt = 2
   Insn 19: point = 27, n_alt = 3
  BB 10
   Insn 74: point = 30, n_alt = 0
   Insn 73: point = 30, n_alt = -2
   Insn 72: point = 31, n_alt = 2
   Insn 71: point = 31, n_alt = 0
   Insn 70: point = 31, n_alt = 0
   Insn 69: point = 33, n_alt = 3
  BB 9
   Insn 66: point = 36, n_alt = -1
   Insn 65: point = 36, n_alt = 0
   Insn 6: point = 37, n_alt = 3
   Insn 139: point = 38, n_alt = -2
   Insn 63: point = 39, n_alt = 0
   Insn 62: point = 39, n_alt = -2
   Insn 61: point = 40, n_alt = 4
   Insn 60: point = 40, n_alt = 3
   Insn 147: point = 42, n_alt = 3
  BB 8
   Insn 53: point = 44, n_alt = -1
   Insn 52: point = 44, n_alt = 0
   Insn 51: point = 45, n_alt = 0
   Insn 47: point = 46, n_alt = 0
  BB 7
   Insn 44: point = 48, n_alt = -1
   Insn 43: point = 48, n_alt = 0
   Insn 42: point = 49, n_alt = 3
   Insn 41: point = 51, n_alt = 0
  BB 6
   Insn 5: point = 53, n_alt = 3
  BB 5
   Insn 37: point = 55, n_alt = -1
  BB 2
   Insn 16: point = 56, n_alt = -1
   Insn 15: point = 56, n_alt = 0
   Insn 3: point = 56, n_alt = -2
   Insn 138: point = 58, n_alt = -2
   Insn 2: point = 59, n_alt = -2
   Insn 137: point = 61, n_alt = -2
 r82: [24..27]
 r91: [44..53]
 r104: [36..37] [4..20]
 r106: [26..26] [21..21] [0..7]
 r107: [34..59] [28..29] [4..20]
 r108: [36..56] [4..20]
 r109: [22..23]
 r110: [50..51]
 r111: [48..49]
 r112: [44..45]
 r113: [39..40]
 r115: [30..31]
 r116: [32..33]
 r117: [18..19]
 r118: [11..15]
 r119: [16..17]
 r120: [10..12]
 r122: [4..5]
 r124: [60..61]
 r125: [57..58]
 r126: [36..38]
 r127: [8..9]
 r128: [41..42]
 r129: [13..14]
Compressing live ranges: from 62 to 40 - 64%
Ranges after the compression:
 r82: [15..17]
 r91: [30..35]
 r104: [24..25] [0..11]
 r106: [16..16] [12..12] [0..1]
 r107: [24..37] [18..19] [0..11]
 r108: [24..35] [0..11]
 r109: [13..14]
 r110: [34..35]
 r111: [32..33]
 r112: [30..31]
 r113: [26..27]
 r115: [20..21]
 r116: [22..23]
 r117: [10..11]
 r118: [4..7]
 r119: [8..9]
 r120: [4..5]
 r122: [0..1]
 r124: [38..39]
 r125: [36..37]
 r126: [24..25]
 r127: [2..3]
 r128: [28..29]
 r129: [6..7]

********** Assignment #1: **********

	 Assigning to 129 (cl=GENERAL_REGS, orig=129, freq=596, tfirst=129, tfreq=596)...
	   Assign 0 to reload r129 (freq=596)
	 Assigning to 128 (cl=GENERAL_REGS, orig=128, freq=110, tfirst=128, tfreq=110)...
	   Assign 0 to reload r128 (freq=110)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-24, prev_offset=0)
changing reg in insn 19
changing reg in insn 24
changing reg in insn 20
changing reg in insn 47
changing reg in insn 5
changing reg in insn 51
changing reg in insn 48
changing reg in insn 47
changing reg in insn 41
changing reg in insn 39
changing reg in insn 94
changing reg in insn 6
changing reg in insn 98
changing reg in insn 95
changing reg in insn 94
changing reg in insn 82
changing reg in insn 79
changing reg in insn 91
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 112
changing reg in insn 96
changing reg in insn 92
changing reg in insn 2
changing reg in insn 83
changing reg in insn 69
changing reg in insn 55
changing reg in insn 42
changing reg in insn 19
changing reg in insn 86
changing reg in insn 60
changing reg in insn 3
changing reg in insn 99
changing reg in insn 56
changing reg in insn 52
changing reg in insn 15
changing reg in insn 24
changing reg in insn 27
changing reg in insn 41
changing reg in insn 42
changing reg in insn 42
changing reg in insn 43
changing reg in insn 51
changing reg in insn 52
changing reg in insn 60
changing reg in insn 62
changing reg in insn 70
changing reg in insn 73
changing reg in insn 69
changing reg in insn 70
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 88
changing reg in insn 83
changing reg in insn 84
changing reg in insn 86
changing reg in insn 89
changing reg in insn 98
changing reg in insn 99
changing reg in insn 137
changing reg in insn 2
changing reg in insn 138
changing reg in insn 3
changing reg in insn 139
changing reg in insn 65
changing reg in insn 140
changing reg in insn 91
deleting insn with uid = 137.
deleting insn with uid = 138.
deleting insn with uid = 27.
deleting insn with uid = 62.
deleting insn with uid = 139.
deleting insn with uid = 73.
deleting insn with uid = 88.
deleting insn with uid = 89.
deleting insn with uid = 140.
deleting insn with uid = 91.
deleting insn with uid = 112.


try_optimize_cfg iteration 1

Forwarding edge 11->12 to 15 failed.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 63.
verify found no changes in insn with uid = 74.
verify found no changes in insn with uid = 90.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 16 n_edges 22 count 17 (  1.1)
df_worklist_dataflow_doublequeue: n_basic_blocks 16 n_edges 22 count 18 (  1.1)


fbgc_load

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 40 [r12]
;;  ref usage 	r0={13d,13u} r1={12d,7u} r2={5d} r3={1d,7u,2e} r4={10d,6u} r5={11d,8u} r6={1d,4u} r7={1d,19u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={17d,7u} r18={4d} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={5d} r37={5d} r38={4d} r39={4d} r40={2d,5u} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} 
;;    total ref usage 405{327d,76u,2e} in 80{76 regular + 4 call} insns.
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 223437739 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [always]  count:223437739 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 5 [di] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 17 [flags]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 17 [flags]
;; live  kill	
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 3 bx [orig:107 arg ] [107])
        (reg:DI 5 di [124])) "cmodules/fbgc_stl.c":27:1 66 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 6 bp [orig:108 argc ] [108])
        (reg:SI 4 si [125])) "cmodules/fbgc_stl.c":27:1 67 {*movsi_internal}
     (nil))
(note 4 3 12 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 12 4 13 2 (debug_marker) "cmodules/fbgc_stl.c":34:2 -1
     (nil))
(debug_insn 13 12 14 2 (var_location:DI res (const_int 0 [0])) "cmodules/fbgc_stl.c":34:23 -1
     (nil))
(debug_insn 14 13 15 2 (debug_marker) "cmodules/fbgc_stl.c":36:2 -1
     (nil))
(insn 15 14 16 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 6 bp [orig:108 argc ] [108])
            (const_int 1 [0x1]))) "cmodules/fbgc_stl.c":36:4 11 {*cmpsi_1}
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (ne (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "cmodules/fbgc_stl.c":36:4 659 {*jcc}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 31)
;;  succ:       3 [34.0% (guessed)]  count:75968832 (estimated locally) (FALLTHRU)
;;              5 [66.0% (guessed)]  count:147468907 (estimated locally)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 17 [flags]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 17 [flags]

;; basic block 3, loop depth 0, count 75968831 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [34.0% (guessed)]  count:75968832 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 18 17 19 3 (debug_marker) "cmodules/fbgc_stl.c":37:3 -1
     (nil))
(insn 19 18 9 3 (set (reg/f:DI 5 di [orig:82 _1 ] [82])
        (mem/f:DI (reg/v/f:DI 3 bx [orig:107 arg ] [107]) [1 *arg_17(D)+0 S8 A64])) "cmodules/fbgc_stl.c":37:9 66 {*movdi_internal}
     (nil))
(insn 9 19 20 3 (set (reg/v/f:DI 0 ax [orig:106 <retval> ] [106])
        (const_int 0 [0])) "cmodules/fbgc_stl.c":34:23 66 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 20 9 21 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 5 di [orig:82 _1 ] [82]) [0 _1->type+0 S1 A8])
            (const_int 6 [0x6]))) "cmodules/fbgc_stl.c":37:5 9 {*cmpqi_1}
     (nil))
(jump_insn 21 20 22 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 111)
            (pc))) "cmodules/fbgc_stl.c":37:5 659 {*jcc}
     (int_list:REG_BR_PROB 813466812 (nil))
 -> 111)
;;  succ:       4 [24.2% (guessed)]  count:18414844 (estimated locally) (FALLTHRU)
;;              15 [75.8% (guessed)]  count:57553987 (estimated locally)
;; lr  out 	 0 [ax] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 5 [di] 7 [sp]

;; basic block 4, loop depth 0, count 18414845 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [24.2% (guessed)]  count:18414844 (estimated locally) (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 23 22 24 4 (debug_marker) "cmodules/fbgc_stl.c":38:4 -1
     (nil))
(insn 24 23 25 4 (parallel [
            (set (reg/f:DI 5 di [109])
                (plus:DI (reg/f:DI 5 di [orig:82 _1 ] [82])
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":38:28 191 {*adddi_1}
     (nil))
(insn 25 24 26 4 (set (reg:SI 1 dx)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":38:11 67 {*movsi_internal}
     (nil))
(insn 26 25 28 4 (set (reg:DI 4 si)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":38:11 66 {*movdi_internal}
     (nil))
(call_insn/j 28 26 29 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fbgc_load_module") [flags 0x41]  <function_decl 0x7f626c82cb00 fbgc_load_module>) [0 fbgc_load_module S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":38:11 681 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fbgc_load_module") [flags 0x41]  <function_decl 0x7f626c82cb00 fbgc_load_module>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       EXIT [always]  count:18414845 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 29 28 31)
;; basic block 5, loop depth 0, count 147468908 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [66.0% (guessed)]  count:147468907 (estimated locally)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 17 [flags]
;; lr  use 	 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 17 [flags]
;; live  gen 	
;; live  kill	
(code_label 31 29 32 5 35 (nil) [1 uses])
(note 32 31 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 33 32 37 5 (debug_marker) "cmodules/fbgc_stl.c":40:7 -1
     (nil))
(jump_insn 37 33 120 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 124)
            (pc))) "cmodules/fbgc_stl.c":40:9 659 {*jcc}
     (int_list:REG_BR_PROB 237404324 (nil))
 -> 124)
;;  succ:       6 [77.9% (guessed)]  count:114863532 (estimated locally) (FALLTHRU)
;;              13 [22.1% (guessed)]  count:32605376 (estimated locally)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

;; basic block 6, loop depth 0, count 114863532 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       5 [77.9% (guessed)]  count:114863532 (estimated locally) (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(note 120 37 5 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 5 120 50 6 (set (reg/v:QI 0 ax [orig:91 i ] [91])
        (const_int 0 [0])) "cmodules/fbgc_stl.c":41:15 69 {*movqi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       7 [always]  count:114863532 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]

;; basic block 7, loop depth 0, count 1014686024 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       6 [always]  count:114863532 (estimated locally) (FALLTHRU)
;;              8 [94.5% (guessed)]  count:906139987 (estimated locally) (DFS_BACK)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
(code_label 50 5 38 7 37 (nil) [1 uses])
(note 38 50 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 39 38 40 7 (var_location:QI i (reg/v:QI 0 ax [orig:91 i ] [91])) -1
     (nil))
(debug_insn 40 39 41 7 (debug_marker) "cmodules/fbgc_stl.c":42:4 -1
     (nil))
(insn 41 40 42 7 (set (reg:DI 1 dx [orig:110 i ] [110])
        (zero_extend:DI (reg/v:QI 0 ax [orig:91 i ] [91]))) "cmodules/fbgc_stl.c":42:10 115 {zero_extendqidi2}
     (nil))
(insn 42 41 43 7 (set (reg/f:DI 1 dx [orig:111 *_7 ] [111])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:110 i ] [110])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 3 bx [orig:107 arg ] [107])) [1 *_7+0 S8 A64])) "cmodules/fbgc_stl.c":42:13 66 {*movdi_internal}
     (nil))
(insn 43 42 44 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 1 dx [orig:111 *_7 ] [111]) [0 _8->type+0 S1 A8])
            (const_int 6 [0x6]))) "cmodules/fbgc_stl.c":42:6 9 {*cmpqi_1}
     (nil))
(jump_insn 44 43 45 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 128)
            (pc))) "cmodules/fbgc_stl.c":42:6 659 {*jcc}
     (int_list:REG_BR_PROB 59055804 (nil))
 -> 128)
;;  succ:       14 [5.5% (guessed)]  count:55807731 (estimated locally) (LOOP_EXIT)
;;              8 [94.5% (guessed)]  count:958878293 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]

;; basic block 8, loop depth 0, count 958878293 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       7 [94.5% (guessed)]  count:958878293 (estimated locally) (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	 17 [flags]
(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 46 45 47 8 (debug_marker) "cmodules/fbgc_stl.c":41:30 -1
     (nil))
(insn 47 46 48 8 (parallel [
            (set (reg/v:QI 0 ax [orig:91 i ] [91])
                (plus:QI (reg/v:QI 0 ax [orig:91 i ] [91])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":41:30 194 {*addqi_1}
     (nil))
(debug_insn 48 47 49 8 (var_location:QI i (reg/v:QI 0 ax [orig:91 i ] [91])) -1
     (nil))
(debug_insn 49 48 51 8 (debug_marker) "cmodules/fbgc_stl.c":41:22 -1
     (nil))
(insn 51 49 52 8 (set (reg:SI 1 dx [orig:112 i ] [112])
        (zero_extend:SI (reg/v:QI 0 ax [orig:91 i ] [91]))) "cmodules/fbgc_stl.c":41:23 119 {*zero_extendqisi2}
     (nil))
(insn 52 51 53 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1 dx [orig:112 i ] [112])
            (reg/v:SI 6 bp [orig:108 argc ] [108]))) "cmodules/fbgc_stl.c":41:3 11 {*cmpsi_1}
     (nil))
(jump_insn 53 52 54 8 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 50)
            (pc))) "cmodules/fbgc_stl.c":41:3 659 {*jcc}
     (int_list:REG_BR_PROB 1014686028 (nil))
 -> 50)
;;  succ:       7 [94.5% (guessed)]  count:906139987 (estimated locally) (DFS_BACK)
;;              9 [5.5% (guessed)]  count:52738306 (estimated locally) (FALLTHRU,LOOP_EXIT)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]

;; basic block 9, loop depth 0, count 59055800 (estimated locally), maybe hot
;; Invalid sum of incoming counts 52738306 (estimated locally), should be 59055800 (estimated locally)
;;  prev block 8, next block 10, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       8 [5.5% (guessed)]  count:52738306 (estimated locally) (FALLTHRU,LOOP_EXIT)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 40 [r12]
;; live  kill	 17 [flags]
(note 54 53 55 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 55 54 56 9 (var_location:DI arg (reg/v/f:DI 3 bx [orig:107 arg ] [107])) -1
     (nil))
(debug_insn 56 55 57 9 (var_location:SI argc (reg/v:SI 6 bp [orig:108 argc ] [108])) -1
     (nil))
(debug_insn 57 56 58 9 (debug_marker:BLK) "cmodules/fbgc_stl.c":26:1 -1
     (nil))
(debug_insn 58 57 59 9 (debug_marker) "cmodules/fbgc_stl.c":45:3 -1
     (nil))
(note 59 58 147 9 NOTE_INSN_DELETED)
(insn 147 59 60 9 (set (reg:DI 0 ax [128])
        (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:107 arg ] [107])
                (const_int 8 [0x8])) [1 MEM[(struct fbgc_object * *)arg_17(D) + 8B]+0 S8 A64])) "cmodules/fbgc_stl.c":45:17 66 {*movdi_internal}
     (nil))
(insn 60 147 61 9 (parallel [
            (set (reg/f:DI 5 di [113])
                (plus:DI (reg:DI 0 ax [128])
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":45:17 191 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:107 arg ] [107])
                    (const_int 8 [0x8])) [1 MEM[(struct fbgc_object * *)arg_17(D) + 8B]+0 S8 A64])
            (const_int 13 [0xd]))
        (nil)))
(insn 61 60 63 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f626c461d80 *.LC5>)) "cmodules/fbgc_stl.c":45:7 66 {*movdi_internal}
     (nil))
(call_insn 63 61 64 9 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("my_strcmp") [flags 0x41]  <function_decl 0x7f626c806900 my_strcmp>) [0 my_strcmp S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":45:7 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("my_strcmp") [flags 0x41]  <function_decl 0x7f626c806900 my_strcmp>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(note 64 63 6 9 NOTE_INSN_DELETED)
(insn 6 64 65 9 (set (reg/v:QI 40 r12 [orig:104 i ] [104])
        (const_int 1 [0x1])) "cmodules/fbgc_stl.c":50:16 69 {*movqi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 65 6 66 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [126])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":45:5 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 66 65 67 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 77)
            (pc))) "cmodules/fbgc_stl.c":45:5 659 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 77)
;;  succ:       10 [33.0% (guessed)]  count:19488414 (estimated locally) (FALLTHRU)
;;              11 [67.0% (guessed)]  count:39567386 (estimated locally)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12]

;; basic block 10, loop depth 0, count 19488414 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       9 [33.0% (guessed)]  count:19488414 (estimated locally) (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(note 67 66 68 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 68 67 69 10 (debug_marker) "cmodules/fbgc_stl.c":46:4 -1
     (nil))
(insn 69 68 70 10 (set (reg/f:DI 5 di [orig:116 *arg_17(D) ] [116])
        (mem/f:DI (reg/v/f:DI 3 bx [orig:107 arg ] [107]) [1 *arg_17(D)+0 S8 A64])) "cmodules/fbgc_stl.c":46:27 66 {*movdi_internal}
     (nil))
(insn 70 69 71 10 (parallel [
            (set (reg/f:DI 5 di [115])
                (plus:DI (reg/f:DI 5 di [orig:116 *arg_17(D) ] [116])
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":46:27 191 {*adddi_1}
     (nil))
(insn 71 70 72 10 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "cmodules/fbgc_stl.c":46:10 67 {*movsi_internal}
     (nil))
(insn 72 71 74 10 (set (reg:DI 4 si)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":46:10 66 {*movdi_internal}
     (nil))
(call_insn/j 74 72 75 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fbgc_load_module") [flags 0x41]  <function_decl 0x7f626c82cb00 fbgc_load_module>) [0 fbgc_load_module S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":46:10 681 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fbgc_load_module") [flags 0x41]  <function_decl 0x7f626c82cb00 fbgc_load_module>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       EXIT [always]  count:19488414 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 75 74 77)
;; basic block 11, loop depth 0, count 320136127 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       9 [67.0% (guessed)]  count:39567386 (estimated locally)
;;              11 [89.0% (guessed)]  count:284921153 (estimated locally) (DFS_BACK)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 40 [r12]
;; live  kill	 17 [flags]
(code_label 77 75 78 11 38 (nil) [2 uses])
(note 78 77 79 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 79 78 80 11 (var_location:QI i (reg/v:QI 40 r12 [orig:104 i ] [104])) -1
     (nil))
(debug_insn 80 79 81 11 (var_location:DI res (const_int 0 [0])) -1
     (nil))
(debug_insn 81 80 82 11 (debug_marker) "cmodules/fbgc_stl.c":51:5 -1
     (nil))
(insn 82 81 83 11 (set (reg:DI 0 ax [orig:117 i ] [117])
        (zero_extend:DI (reg/v:QI 40 r12 [orig:104 i ] [104]))) "cmodules/fbgc_stl.c":51:60 115 {zero_extendqidi2}
     (nil))
(insn 83 82 84 11 (set (reg/f:DI 4 si [orig:119 *_30 ] [119])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:117 i ] [117])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 3 bx [orig:107 arg ] [107])) [1 *_30+0 S8 A64])) "cmodules/fbgc_stl.c":51:60 66 {*movdi_internal}
     (nil))
(insn 84 83 85 11 (parallel [
            (set (reg/f:DI 4 si [118])
                (plus:DI (reg/f:DI 4 si [orig:119 *_30 ] [119])
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":51:60 191 {*adddi_1}
     (nil))
(note 85 84 148 11 NOTE_INSN_DELETED)
(insn 148 85 86 11 (set (reg:DI 0 ax [129])
        (mem/f:DI (reg/v/f:DI 3 bx [orig:107 arg ] [107]) [1 *arg_17(D)+0 S8 A64])) "cmodules/fbgc_stl.c":51:28 66 {*movdi_internal}
     (nil))
(insn 86 148 87 11 (parallel [
            (set (reg/f:DI 5 di [120])
                (plus:DI (reg:DI 0 ax [129])
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":51:28 191 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f:DI (reg/v/f:DI 3 bx [orig:107 arg ] [107]) [1 *arg_17(D)+0 S8 A64])
            (const_int 13 [0xd]))
        (nil)))
(insn 87 86 90 11 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) "cmodules/fbgc_stl.c":51:11 67 {*movsi_internal}
     (nil))
(call_insn 90 87 92 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fbgc_load_module") [flags 0x41]  <function_decl 0x7f626c82cb00 fbgc_load_module>) [0 fbgc_load_module S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":51:11 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fbgc_load_module") [flags 0x41]  <function_decl 0x7f626c82cb00 fbgc_load_module>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(debug_insn 92 90 93 11 (var_location:DI res (reg/v/f:DI 0 ax [orig:106 <retval> ] [106])) "cmodules/fbgc_stl.c":51:11 -1
     (nil))
(debug_insn 93 92 94 11 (debug_marker) "cmodules/fbgc_stl.c":50:31 -1
     (nil))
(insn 94 93 95 11 (parallel [
            (set (reg/v:QI 40 r12 [orig:104 i ] [104])
                (plus:QI (reg/v:QI 40 r12 [orig:104 i ] [104])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":50:31 194 {*addqi_1}
     (nil))
(debug_insn 95 94 96 11 (var_location:QI i (reg/v:QI 40 r12 [orig:104 i ] [104])) -1
     (nil))
(debug_insn 96 95 97 11 (var_location:DI res (reg/v/f:DI 0 ax [orig:106 <retval> ] [106])) -1
     (nil))
(debug_insn 97 96 98 11 (debug_marker) "cmodules/fbgc_stl.c":50:23 -1
     (nil))
(insn 98 97 99 11 (set (reg:SI 1 dx [orig:122 i ] [122])
        (zero_extend:SI (reg/v:QI 40 r12 [orig:104 i ] [104]))) "cmodules/fbgc_stl.c":50:24 119 {*zero_extendqisi2}
     (nil))
(insn 99 98 100 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 6 bp [orig:108 argc ] [108])
            (reg:SI 1 dx [orig:122 i ] [122]))) "cmodules/fbgc_stl.c":50:4 11 {*cmpsi_1}
     (nil))
(jump_insn 100 99 141 11 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 77)
            (pc))) "cmodules/fbgc_stl.c":50:4 659 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 77)
;;  succ:       11 [89.0% (guessed)]  count:284921153 (estimated locally) (DFS_BACK)
;;              12 [11.0% (guessed)]  count:35214974 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]

;; basic block 12, loop depth 0, count 35214974 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       11 [11.0% (guessed)]  count:35214974 (estimated locally) (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	
;; live  kill	
(note 141 100 142 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(jump_insn 142 141 143 12 (set (pc)
        (label_ref 111)) 660 {jump}
     (nil)
 -> 111)
;;  succ:       15 [always]  count:35214974 (estimated locally) (LOOP_EXIT)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 143 142 124)
;; basic block 13, loop depth 0, count 32605376 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       5 [22.1% (guessed)]  count:32605376 (estimated locally)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 124 143 123 13 40 (nil) [1 uses])
(note 123 124 8 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 8 123 144 13 (set (reg/v/f:DI 0 ax [orig:106 <retval> ] [106])
        (const_int 0 [0])) "cmodules/fbgc_stl.c":34:23 66 {*movdi_internal}
     (nil))
(jump_insn 144 8 145 13 (set (pc)
        (label_ref 111)) 660 {jump}
     (nil)
 -> 111)
;;  succ:       15 [always]  count:32605376 (estimated locally)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 145 144 128)
;; basic block 14, loop depth 0, count 55807731 (estimated locally), maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       7 [5.5% (guessed)]  count:55807731 (estimated locally) (LOOP_EXIT)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 128 145 127 14 41 (nil) [1 uses])
(note 127 128 7 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 7 127 103 14 (set (reg/v/f:DI 0 ax [orig:106 <retval> ] [106])
        (const_int 0 [0])) "cmodules/fbgc_stl.c":34:23 66 {*movdi_internal}
     (nil))
(debug_insn 103 7 104 14 (var_location:DI arg (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 104 103 105 14 (var_location:SI argc (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 105 104 106 14 (var_location:DI res (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 106 105 107 14 (var_location:QI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 107 106 108 14 (var_location:QI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 108 107 111 14 (var_location:DI res (clobber (const_int 0 [0]))) -1
     (nil))
;;  succ:       15 [always]  count:55807731 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 15, loop depth 0, count 185534479 (estimated locally), maybe hot
;; Invalid sum of incoming counts 181182068 (estimated locally), should be 185534479 (estimated locally)
;;  prev block 14, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       14 [always]  count:55807731 (estimated locally) (FALLTHRU)
;;              12 [always]  count:35214974 (estimated locally) (LOOP_EXIT)
;;              3 [75.8% (guessed)]  count:57553987 (estimated locally)
;;              13 [always]  count:32605376 (estimated locally)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	
;; live  kill	
(code_label 111 108 114 15 34 (nil) [3 uses])
(note 114 111 113 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 113 114 146 15 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":59:1 -1
     (nil))
;;  succ:       EXIT [always]  count:185534479 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(note 146 113 0 NOTE_INSN_DELETED)

;; Function fbgc_type (fbgc_type, funcdef_no=59, decl_uid=5717, cgraph_uid=60, symbol_order=65)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (1) UBsBz {*sibcall_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 28:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 30:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (1) rBwBz {*call_value}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 37:  (0) r  (1) Z {*movdi_internal}
	   Spilling non-eliminable hard regs: 7

********** Pseudo live ranges #1: **********

  BB 4
   Insn 38: point = 0, n_alt = -1
   Insn 37: point = 0, n_alt = 2
   Insn 31: point = 0, n_alt = 0
   Insn 30: point = 0, n_alt = 3
   Insn 29: point = 0, n_alt = 0
   Insn 28: point = 0, n_alt = 4
   Insn 27: point = 0, n_alt = -2
  BB 3
   Insn 21: point = 2, n_alt = 0
   Insn 20: point = 2, n_alt = -2
   Insn 19: point = 3, n_alt = 0
   Insn 18: point = 5, n_alt = 3
  BB 2
   Insn 10: point = 8, n_alt = -1
   Insn 9: point = 8, n_alt = 0
   Insn 3: point = 8, n_alt = -2
   Insn 41: point = 10, n_alt = -2
   Insn 2: point = 11, n_alt = -2
   Insn 40: point = 13, n_alt = -2
 r86: [6..11]
 r87: [8..8] [0..1]
 r88: [4..5]
 r89: [2..3]
 r91: [12..13]
 r92: [9..10]
Compressing live ranges: from 14 to 12 - 85%
Ranges after the compression:
 r86: [6..9]
 r87: [7..7] [0..1]
 r88: [4..5]
 r89: [2..3]
 r91: [10..11]
 r92: [8..9]

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4

********** Pseudo live ranges #2: **********

  BB 4
   Insn 38: point = 0, n_alt = -1
   Insn 37: point = 0, n_alt = 2
   Insn 31: point = 0, n_alt = 0
   Insn 30: point = 0, n_alt = 3
   Insn 29: point = 0, n_alt = 0
   Insn 28: point = 0, n_alt = 4
   Insn 27: point = 0, n_alt = -2
  BB 3
   Insn 21: point = 2, n_alt = 0
   Insn 20: point = 2, n_alt = -2
   Insn 19: point = 3, n_alt = 0
   Insn 18: point = 5, n_alt = 3
  BB 2
   Insn 10: point = 8, n_alt = -1
   Insn 9: point = 8, n_alt = 0
   Insn 3: point = 8, n_alt = -2
   Insn 41: point = 10, n_alt = -2
   Insn 2: point = 11, n_alt = -2
   Insn 40: point = 13, n_alt = -2
 r86: [6..11]
 r87: [8..8] [0..1]
 r88: [4..5]
 r89: [2..3]
 r91: [12..13]
 r92: [9..10]
Compressing live ranges: from 14 to 12 - 85%
Ranges after the compression:
 r86: [6..9]
 r87: [7..7] [0..1]
 r88: [4..5]
 r89: [2..3]
 r91: [10..11]
 r92: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-8, prev_offset=0)
changing reg in insn 2
changing reg in insn 18
changing reg in insn 13
changing reg in insn 3
changing reg in insn 27
changing reg in insn 9
changing reg in insn 18
changing reg in insn 19
changing reg in insn 19
changing reg in insn 20
changing reg in insn 40
changing reg in insn 2
changing reg in insn 41
changing reg in insn 3
deleting insn with uid = 40.
deleting insn with uid = 2.
deleting insn with uid = 41.
deleting insn with uid = 20.
deleting insn with uid = 27.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)


fbgc_type

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,4u} r1={4d,2u} r2={3d} r4={4d,2u} r5={5d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={3d,1u} r18={2d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 177{158d,19u,0e} in 21{19 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
(note 6 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 3 6 4 2 (set (reg/v:SI 1 dx [orig:87 argc ] [87])
        (reg:SI 4 si [92])) "cmodules/fbgc_stl.c":72:37 67 {*movsi_internal}
     (nil))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 4 9 2 (debug_marker) "cmodules/fbgc_stl.c":73:2 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:87 argc ] [87])
            (const_int 1 [0x1]))) "cmodules/fbgc_stl.c":73:4 11 {*cmpsi_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) "cmodules/fbgc_stl.c":73:4 659 {*jcc}
     (int_list:REG_BR_PROB 650902300 (nil))
 -> 24)
;;  succ:       3 [39.4% (guessed)]  count:422839528 (estimated locally) (FALLTHRU)
;;              4 [60.6% (guessed)]  count:650902296 (estimated locally)
;; lr  out 	 1 [dx] 5 [di] 7 [sp]
;; live  out 	 1 [dx] 5 [di] 7 [sp]

;; basic block 3, loop depth 0, count 422839530 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [39.4% (guessed)]  count:422839528 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 12 11 13 3 (var_location:SI D#5 (const_int 1 [0x1])) -1
     (nil))
(debug_insn 13 12 14 3 (var_location:DI arg (reg/v/f:DI 5 di [orig:86 arg ] [86])) -1
     (nil))
(debug_insn 14 13 15 3 (debug_marker:BLK) "cmodules/fbgc_stl.c":72:1 -1
     (nil))
(debug_insn 15 14 16 3 (var_location:SI D#6 (debug_expr:SI D#5)) -1
     (nil))
(debug_insn 16 15 17 3 (var_location:SI argc (debug_expr:SI D#6)) -1
     (nil))
(debug_insn 17 16 18 3 (debug_marker) "cmodules/fbgc_stl.c":74:3 -1
     (nil))
(insn 18 17 19 3 (set (reg/f:DI 0 ax [orig:88 *arg_6(D) ] [88])
        (mem/f:DI (reg/v/f:DI 5 di [orig:86 arg ] [86]) [1 *arg_6(D)+0 S8 A64])) "cmodules/fbgc_stl.c":74:36 66 {*movdi_internal}
     (nil))
(insn 19 18 21 3 (set (reg:SI 5 di [orig:89 _9->type ] [89])
        (zero_extend:SI (mem:QI (reg/f:DI 0 ax [orig:88 *arg_6(D) ] [88]) [0 _9->type+0 S1 A8]))) "cmodules/fbgc_stl.c":74:10 119 {*zero_extendqisi2}
     (nil))
(call_insn/j 21 19 22 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_int_object") [flags 0x41]  <function_decl 0x7f626c7fa500 new_fbgc_int_object>) [0 new_fbgc_int_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":74:10 681 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_int_object") [flags 0x41]  <function_decl 0x7f626c7fa500 new_fbgc_int_object>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:422839530 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 22 21 24)
;; basic block 4, loop depth 0, count 650902295 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [60.6% (guessed)]  count:650902296 (estimated locally)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(code_label 24 22 25 4 53 (nil) [1 uses])
(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 26 25 28 4 (debug_marker) "cmodules/fbgc_stl.c":76:7 -1
     (nil))
(insn 28 26 29 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f626c44ecf0 *.LC4>)) "cmodules/fbgc_stl.c":76:7 66 {*movdi_internal}
     (nil))
(insn 29 28 30 4 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_stl.c":76:7 67 {*movsi_internal}
     (nil))
(insn 30 29 31 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":76:7 69 {*movqi_internal}
     (nil))
(call_insn 31 30 32 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":76:7 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(debug_insn 32 31 37 4 (debug_marker) "cmodules/fbgc_stl.c":77:2 -1
     (nil))
(insn 37 32 38 4 (set (reg/i:DI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":78:1 66 {*movdi_internal}
     (nil))
(insn 38 37 42 4 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":78:1 -1
     (nil))
;;  succ:       EXIT [always]  count:650902295 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(note 42 38 0 NOTE_INSN_DELETED)

;; Function fbgc_int (fbgc_int, funcdef_no=60, decl_uid=5701, cgraph_uid=61, symbol_order=67)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (1) UBsBz {*sibcall_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 31:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 33:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (1) rBwBz {*call_value}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 40:  (0) r  (1) Z {*movdi_internal}
	   Spilling non-eliminable hard regs: 7

********** Pseudo live ranges #1: **********

  BB 4
   Insn 41: point = 0, n_alt = -1
   Insn 40: point = 0, n_alt = 2
   Insn 34: point = 0, n_alt = 0
   Insn 33: point = 0, n_alt = 3
   Insn 32: point = 0, n_alt = 0
   Insn 31: point = 0, n_alt = 4
   Insn 30: point = 0, n_alt = -2
  BB 3
   Insn 24: point = 2, n_alt = 0
   Insn 23: point = 2, n_alt = -2
   Insn 20: point = 3, n_alt = -2
   Insn 45: point = 5, n_alt = -2
   Insn 19: point = 6, n_alt = 0
   Insn 18: point = 6, n_alt = 3
  BB 2
   Insn 10: point = 8, n_alt = -1
   Insn 9: point = 8, n_alt = 0
   Insn 3: point = 8, n_alt = -2
   Insn 44: point = 10, n_alt = -2
   Insn 2: point = 11, n_alt = -2
   Insn 43: point = 13, n_alt = -2
 r83: [2..3]
 r85: [6..11]
 r86: [8..8] [0..1]
 r88: [12..13]
 r89: [9..10]
 r90: [4..5]
Compressing live ranges: from 14 to 12 - 85%
Ranges after the compression:
 r83: [2..3]
 r85: [6..9]
 r86: [7..7] [0..1]
 r88: [10..11]
 r89: [8..9]
 r90: [4..5]

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4

********** Pseudo live ranges #2: **********

  BB 4
   Insn 41: point = 0, n_alt = -1
   Insn 40: point = 0, n_alt = 2
   Insn 34: point = 0, n_alt = 0
   Insn 33: point = 0, n_alt = 3
   Insn 32: point = 0, n_alt = 0
   Insn 31: point = 0, n_alt = 4
   Insn 30: point = 0, n_alt = -2
  BB 3
   Insn 24: point = 2, n_alt = 0
   Insn 23: point = 2, n_alt = -2
   Insn 20: point = 3, n_alt = -2
   Insn 45: point = 5, n_alt = -2
   Insn 19: point = 6, n_alt = 0
   Insn 18: point = 6, n_alt = 3
  BB 2
   Insn 10: point = 8, n_alt = -1
   Insn 9: point = 8, n_alt = 0
   Insn 3: point = 8, n_alt = -2
   Insn 44: point = 10, n_alt = -2
   Insn 2: point = 11, n_alt = -2
   Insn 43: point = 13, n_alt = -2
 r83: [2..3]
 r85: [6..11]
 r86: [8..8] [0..1]
 r88: [12..13]
 r89: [9..10]
 r90: [4..5]
Compressing live ranges: from 14 to 12 - 85%
Ranges after the compression:
 r83: [2..3]
 r85: [6..9]
 r86: [7..7] [0..1]
 r88: [10..11]
 r89: [8..9]
 r90: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-8, prev_offset=0)
changing reg in insn 20
changing reg in insn 23
changing reg in insn 21
changing reg in insn 2
changing reg in insn 18
changing reg in insn 13
changing reg in insn 3
changing reg in insn 30
changing reg in insn 9
changing reg in insn 43
changing reg in insn 2
changing reg in insn 44
changing reg in insn 3
changing reg in insn 45
changing reg in insn 20
deleting insn with uid = 43.
deleting insn with uid = 2.
deleting insn with uid = 44.
deleting insn with uid = 45.
deleting insn with uid = 23.
deleting insn with uid = 30.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)


fbgc_int

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,4u} r1={5d,2u} r2={4d} r4={5d,2u} r5={7d,6u} r7={1d,7u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={4d,1u} r18={3d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 247{225d,22u,0e} in 24{21 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
(note 6 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 3 6 4 2 (set (reg/v:SI 1 dx [orig:86 argc ] [86])
        (reg:SI 4 si [89])) "cmodules/fbgc_stl.c":80:35 67 {*movsi_internal}
     (nil))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 4 9 2 (debug_marker) "cmodules/fbgc_stl.c":81:2 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:86 argc ] [86])
            (const_int 1 [0x1]))) "cmodules/fbgc_stl.c":81:4 11 {*cmpsi_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "cmodules/fbgc_stl.c":81:4 659 {*jcc}
     (int_list:REG_BR_PROB 650902300 (nil))
 -> 27)
;;  succ:       3 [39.4% (guessed)]  count:422839528 (estimated locally) (FALLTHRU)
;;              4 [60.6% (guessed)]  count:650902296 (estimated locally)
;; lr  out 	 1 [dx] 5 [di] 7 [sp]
;; live  out 	 1 [dx] 5 [di] 7 [sp]

;; basic block 3, loop depth 0, count 422839530 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [39.4% (guessed)]  count:422839528 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 12 11 13 3 (var_location:SI D#7 (const_int 1 [0x1])) -1
     (nil))
(debug_insn 13 12 14 3 (var_location:DI arg (reg/v/f:DI 5 di [orig:85 arg ] [85])) -1
     (nil))
(debug_insn 14 13 15 3 (debug_marker:BLK) "cmodules/fbgc_stl.c":80:1 -1
     (nil))
(debug_insn 15 14 16 3 (var_location:SI D#8 (debug_expr:SI D#7)) -1
     (nil))
(debug_insn 16 15 17 3 (var_location:SI argc (debug_expr:SI D#8)) -1
     (nil))
(debug_insn 17 16 18 3 (debug_marker) "cmodules/fbgc_stl.c":82:3 -1
     (nil))
(insn 18 17 19 3 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 5 di [orig:85 arg ] [85]) [1 *arg_6(D)+0 S8 A64])) "cmodules/fbgc_stl.c":82:11 66 {*movdi_internal}
     (nil))
(call_insn 19 18 20 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f626c7e8600 convert_fbgc_object_to_int>) [0 convert_fbgc_object_to_int S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":82:11 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f626c7e8600 convert_fbgc_object_to_int>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 20 19 21 3 (set (reg/v:SI 5 di [orig:83 d ] [83])
        (reg:SI 0 ax [90])) "cmodules/fbgc_stl.c":82:11 67 {*movsi_internal}
     (nil))
(debug_insn 21 20 22 3 (var_location:SI d (reg/v:SI 5 di [orig:83 d ] [83])) "cmodules/fbgc_stl.c":82:11 -1
     (nil))
(debug_insn 22 21 24 3 (debug_marker) "cmodules/fbgc_stl.c":83:3 -1
     (nil))
(call_insn/j 24 22 25 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_int_object") [flags 0x41]  <function_decl 0x7f626c7fa500 new_fbgc_int_object>) [0 new_fbgc_int_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":83:10 681 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_int_object") [flags 0x41]  <function_decl 0x7f626c7fa500 new_fbgc_int_object>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:422839530 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 25 24 27)
;; basic block 4, loop depth 0, count 650902295 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [60.6% (guessed)]  count:650902296 (estimated locally)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(code_label 27 25 28 4 58 (nil) [1 uses])
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 29 28 31 4 (debug_marker) "cmodules/fbgc_stl.c":85:7 -1
     (nil))
(insn 31 29 32 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f626c494cf0 *.LC6>)) "cmodules/fbgc_stl.c":85:7 66 {*movdi_internal}
     (nil))
(insn 32 31 33 4 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_stl.c":85:7 67 {*movsi_internal}
     (nil))
(insn 33 32 34 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":85:7 69 {*movqi_internal}
     (nil))
(call_insn 34 33 35 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":85:7 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(debug_insn 35 34 40 4 (debug_marker) "cmodules/fbgc_stl.c":86:2 -1
     (nil))
(insn 40 35 41 4 (set (reg/i:DI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":87:1 66 {*movdi_internal}
     (nil))
(insn 41 40 46 4 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":87:1 -1
     (nil))
;;  succ:       EXIT [always]  count:650902295 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(note 46 41 0 NOTE_INSN_DELETED)

;; Function fbgc_double (fbgc_double, funcdef_no=61, decl_uid=5709, cgraph_uid=62, symbol_order=69)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (1) UBsBz {*sibcall_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 31:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 33:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (1) rBwBz {*call_value}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 40:  (0) r  (1) Z {*movdi_internal}
	   Spilling non-eliminable hard regs: 7

********** Pseudo live ranges #1: **********

  BB 4
   Insn 41: point = 0, n_alt = -1
   Insn 40: point = 0, n_alt = 2
   Insn 34: point = 0, n_alt = 0
   Insn 33: point = 0, n_alt = 3
   Insn 32: point = 0, n_alt = 0
   Insn 31: point = 0, n_alt = 4
   Insn 30: point = 0, n_alt = -2
  BB 3
   Insn 24: point = 2, n_alt = 0
   Insn 23: point = 2, n_alt = -2
   Insn 20: point = 3, n_alt = -2
   Insn 45: point = 5, n_alt = -2
   Insn 19: point = 6, n_alt = 0
   Insn 18: point = 6, n_alt = 3
  BB 2
   Insn 10: point = 8, n_alt = -1
   Insn 9: point = 8, n_alt = 0
   Insn 3: point = 8, n_alt = -2
   Insn 44: point = 10, n_alt = -2
   Insn 2: point = 11, n_alt = -2
   Insn 43: point = 13, n_alt = -2
 r83: [2..3]
 r85: [6..11]
 r86: [8..8] [0..1]
 r88: [12..13]
 r89: [9..10]
 r90: [4..5]
Compressing live ranges: from 14 to 12 - 85%
Ranges after the compression:
 r83: [2..3]
 r85: [6..9]
 r86: [7..7] [0..1]
 r88: [10..11]
 r89: [8..9]
 r90: [4..5]

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4

********** Pseudo live ranges #2: **********

  BB 4
   Insn 41: point = 0, n_alt = -1
   Insn 40: point = 0, n_alt = 2
   Insn 34: point = 0, n_alt = 0
   Insn 33: point = 0, n_alt = 3
   Insn 32: point = 0, n_alt = 0
   Insn 31: point = 0, n_alt = 4
   Insn 30: point = 0, n_alt = -2
  BB 3
   Insn 24: point = 2, n_alt = 0
   Insn 23: point = 2, n_alt = -2
   Insn 20: point = 3, n_alt = -2
   Insn 45: point = 5, n_alt = -2
   Insn 19: point = 6, n_alt = 0
   Insn 18: point = 6, n_alt = 3
  BB 2
   Insn 10: point = 8, n_alt = -1
   Insn 9: point = 8, n_alt = 0
   Insn 3: point = 8, n_alt = -2
   Insn 44: point = 10, n_alt = -2
   Insn 2: point = 11, n_alt = -2
   Insn 43: point = 13, n_alt = -2
 r83: [2..3]
 r85: [6..11]
 r86: [8..8] [0..1]
 r88: [12..13]
 r89: [9..10]
 r90: [4..5]
Compressing live ranges: from 14 to 12 - 85%
Ranges after the compression:
 r83: [2..3]
 r85: [6..9]
 r86: [7..7] [0..1]
 r88: [10..11]
 r89: [8..9]
 r90: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-8, prev_offset=0)
changing reg in insn 20
changing reg in insn 23
changing reg in insn 21
changing reg in insn 2
changing reg in insn 18
changing reg in insn 13
changing reg in insn 3
changing reg in insn 30
changing reg in insn 9
changing reg in insn 43
changing reg in insn 2
changing reg in insn 44
changing reg in insn 3
changing reg in insn 45
changing reg in insn 20
deleting insn with uid = 43.
deleting insn with uid = 2.
deleting insn with uid = 44.
deleting insn with uid = 45.
deleting insn with uid = 20.
deleting insn with uid = 23.
deleting insn with uid = 30.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)


fbgc_double

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags] 20 [xmm0]
;;  ref usage 	r0={6d,3u} r1={5d,2u} r2={4d} r4={5d,2u} r5={6d,4u} r7={1d,7u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={4d,1u} r18={3d} r20={4d,2u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 245{224d,21u,0e} in 23{20 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
(note 6 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 3 6 4 2 (set (reg/v:SI 1 dx [orig:86 argc ] [86])
        (reg:SI 4 si [89])) "cmodules/fbgc_stl.c":89:41 67 {*movsi_internal}
     (nil))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 4 9 2 (debug_marker) "cmodules/fbgc_stl.c":90:2 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:86 argc ] [86])
            (const_int 1 [0x1]))) "cmodules/fbgc_stl.c":90:4 11 {*cmpsi_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "cmodules/fbgc_stl.c":90:4 659 {*jcc}
     (int_list:REG_BR_PROB 650902300 (nil))
 -> 27)
;;  succ:       3 [39.4% (guessed)]  count:422839528 (estimated locally) (FALLTHRU)
;;              4 [60.6% (guessed)]  count:650902296 (estimated locally)
;; lr  out 	 1 [dx] 5 [di] 7 [sp]
;; live  out 	 1 [dx] 5 [di] 7 [sp]

;; basic block 3, loop depth 0, count 422839530 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [39.4% (guessed)]  count:422839528 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 20 [xmm0]
;; live  kill	
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 12 11 13 3 (var_location:SI D#9 (const_int 1 [0x1])) -1
     (nil))
(debug_insn 13 12 14 3 (var_location:DI arg (reg/v/f:DI 5 di [orig:85 arg ] [85])) -1
     (nil))
(debug_insn 14 13 15 3 (debug_marker:BLK) "cmodules/fbgc_stl.c":89:1 -1
     (nil))
(debug_insn 15 14 16 3 (var_location:SI D#10 (debug_expr:SI D#9)) -1
     (nil))
(debug_insn 16 15 17 3 (var_location:SI argc (debug_expr:SI D#10)) -1
     (nil))
(debug_insn 17 16 18 3 (debug_marker) "cmodules/fbgc_stl.c":91:3 -1
     (nil))
(insn 18 17 19 3 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 5 di [orig:85 arg ] [85]) [1 *arg_6(D)+0 S8 A64])) "cmodules/fbgc_stl.c":91:14 66 {*movdi_internal}
     (nil))
(call_insn 19 18 21 3 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f626c7e8700 convert_fbgc_object_to_double>) [0 convert_fbgc_object_to_double S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":91:14 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f626c7e8700 convert_fbgc_object_to_double>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(debug_insn 21 19 22 3 (var_location:DF d (reg/v:DF 20 xmm0 [orig:83 d ] [83])) "cmodules/fbgc_stl.c":91:14 -1
     (nil))
(debug_insn 22 21 24 3 (debug_marker) "cmodules/fbgc_stl.c":92:3 -1
     (nil))
(call_insn/j 24 22 25 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f626c7f3d00 new_fbgc_double_object>) [0 new_fbgc_double_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":92:10 681 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f626c7f3d00 new_fbgc_double_object>)
        (nil))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
;;  succ:       EXIT [always]  count:422839530 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 25 24 27)
;; basic block 4, loop depth 0, count 650902295 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [60.6% (guessed)]  count:650902296 (estimated locally)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(code_label 27 25 28 4 62 (nil) [1 uses])
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 29 28 31 4 (debug_marker) "cmodules/fbgc_stl.c":94:7 -1
     (nil))
(insn 31 29 32 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f626c494cf0 *.LC6>)) "cmodules/fbgc_stl.c":94:7 66 {*movdi_internal}
     (nil))
(insn 32 31 33 4 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_stl.c":94:7 67 {*movsi_internal}
     (nil))
(insn 33 32 34 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":94:7 69 {*movqi_internal}
     (nil))
(call_insn 34 33 35 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":94:7 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(debug_insn 35 34 40 4 (debug_marker) "cmodules/fbgc_stl.c":95:2 -1
     (nil))
(insn 40 35 41 4 (set (reg/i:DI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":96:1 66 {*movdi_internal}
     (nil))
(insn 41 40 46 4 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":96:1 -1
     (nil))
;;  succ:       EXIT [always]  count:650902295 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(note 46 41 0 NOTE_INSN_DELETED)

;; Function fbgc_matrix (fbgc_matrix, funcdef_no=63, decl_uid=5713, cgraph_uid=64, symbol_order=73)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-24, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 29:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (1) UBsBz {*sibcall_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 45:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 47:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (1) rBwBz {*call_value}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 54:  (0) r  (1) Z {*movdi_internal}
	   Spilling non-eliminable hard regs: 7

********** Pseudo live ranges #1: **********

  BB 4
   Insn 55: point = 0, n_alt = -1
   Insn 54: point = 0, n_alt = 2
   Insn 48: point = 0, n_alt = 0
   Insn 47: point = 0, n_alt = 3
   Insn 46: point = 0, n_alt = 0
   Insn 45: point = 0, n_alt = 4
   Insn 44: point = 0, n_alt = -2
  BB 3
   Insn 38: point = 2, n_alt = 0
   Insn 37: point = 2, n_alt = 0
   Insn 36: point = 2, n_alt = -2
   Insn 35: point = 3, n_alt = -2
   Insn 34: point = 4, n_alt = -2
   Insn 33: point = 5, n_alt = 0
   Insn 61: point = 7, n_alt = -2
   Insn 31: point = 8, n_alt = 0
   Insn 30: point = 8, n_alt = -2
   Insn 29: point = 9, n_alt = 3
   Insn 26: point = 11, n_alt = -2
   Insn 60: point = 13, n_alt = -2
   Insn 25: point = 14, n_alt = 0
   Insn 24: point = 14, n_alt = -2
   Insn 23: point = 15, n_alt = 3
   Insn 20: point = 16, n_alt = -2
   Insn 59: point = 18, n_alt = -2
   Insn 19: point = 19, n_alt = 0
   Insn 18: point = 19, n_alt = 3
  BB 2
   Insn 10: point = 20, n_alt = -1
   Insn 9: point = 20, n_alt = 0
   Insn 3: point = 20, n_alt = -2
   Insn 58: point = 22, n_alt = -2
   Insn 2: point = 23, n_alt = -2
   Insn 57: point = 25, n_alt = -2
 r83: [2..16]
 r86: [3..11]
 r93: [10..23]
 r94: [20..20] [0..1]
 r95: [14..15]
 r96: [8..9]
 r97: [4..5]
 r99: [24..25]
 r100: [21..22]
 r101: [17..18]
 r102: [12..13]
 r103: [6..7]
Compressing live ranges: from 26 to 21 - 80%
Ranges after the compression:
 r83: [2..13]
 r86: [2..9]
 r93: [8..18]
 r94: [16..16] [0..1]
 r95: [12..13]
 r96: [6..7]
 r97: [2..3]
 r99: [19..20]
 r100: [17..18]
 r101: [14..15]
 r102: [10..11]
 r103: [4..5]

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4

********** Pseudo live ranges #2: **********

  BB 4
   Insn 55: point = 0, n_alt = -1
   Insn 54: point = 0, n_alt = 2
   Insn 48: point = 0, n_alt = 0
   Insn 47: point = 0, n_alt = 3
   Insn 46: point = 0, n_alt = 0
   Insn 45: point = 0, n_alt = 4
   Insn 44: point = 0, n_alt = -2
  BB 3
   Insn 38: point = 2, n_alt = 0
   Insn 37: point = 2, n_alt = 0
   Insn 36: point = 2, n_alt = -2
   Insn 35: point = 3, n_alt = -2
   Insn 34: point = 4, n_alt = -2
   Insn 33: point = 5, n_alt = 0
   Insn 61: point = 7, n_alt = -2
   Insn 31: point = 8, n_alt = 0
   Insn 30: point = 8, n_alt = -2
   Insn 29: point = 9, n_alt = 3
   Insn 26: point = 11, n_alt = -2
   Insn 60: point = 13, n_alt = -2
   Insn 25: point = 14, n_alt = 0
   Insn 24: point = 14, n_alt = -2
   Insn 23: point = 15, n_alt = 3
   Insn 20: point = 16, n_alt = -2
   Insn 59: point = 18, n_alt = -2
   Insn 19: point = 19, n_alt = 0
   Insn 18: point = 19, n_alt = 3
  BB 2
   Insn 10: point = 20, n_alt = -1
   Insn 9: point = 20, n_alt = 0
   Insn 3: point = 20, n_alt = -2
   Insn 58: point = 22, n_alt = -2
   Insn 2: point = 23, n_alt = -2
   Insn 57: point = 25, n_alt = -2
 r83: [2..16]
 r86: [3..11]
 r93: [10..23]
 r94: [20..20] [0..1]
 r95: [14..15]
 r96: [8..9]
 r97: [4..5]
 r99: [24..25]
 r100: [21..22]
 r101: [17..18]
 r102: [12..13]
 r103: [6..7]
Compressing live ranges: from 26 to 21 - 80%
Ranges after the compression:
 r83: [2..13]
 r86: [2..9]
 r93: [8..18]
 r94: [16..16] [0..1]
 r95: [12..13]
 r96: [6..7]
 r97: [2..3]
 r99: [19..20]
 r100: [17..18]
 r101: [14..15]
 r102: [10..11]
 r103: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-24, prev_offset=0)
changing reg in insn 20
changing reg in insn 36
changing reg in insn 21
changing reg in insn 26
changing reg in insn 35
changing reg in insn 27
changing reg in insn 2
changing reg in insn 29
changing reg in insn 23
changing reg in insn 18
changing reg in insn 13
changing reg in insn 23
changing reg in insn 3
changing reg in insn 44
changing reg in insn 9
changing reg in insn 23
changing reg in insn 24
changing reg in insn 29
changing reg in insn 30
changing reg in insn 33
changing reg in insn 34
changing reg in insn 57
changing reg in insn 2
changing reg in insn 58
changing reg in insn 3
changing reg in insn 59
changing reg in insn 20
changing reg in insn 60
changing reg in insn 26
changing reg in insn 61
deleting insn with uid = 57.
deleting insn with uid = 58.
deleting insn with uid = 59.
deleting insn with uid = 24.
deleting insn with uid = 60.
deleting insn with uid = 30.
deleting insn with uid = 61.
deleting insn with uid = 34.
deleting insn with uid = 44.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 48.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)


fbgc_matrix

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 40 [r12]
;;  ref usage 	r0={8d,6u} r1={8d,3u} r2={7d,1u} r3={1d,4u,1e} r4={8d,3u} r5={11d,6u} r6={1d,2u} r7={1d,9u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r17={6d,1u} r18={5d} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={6d} r37={6d} r38={5d} r39={5d} r40={1d,2u} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} 
;;    total ref usage 405{367d,37u,1e} in 36{31 regular + 5 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 5 [di] 7 [sp]
;; lr  def 	 1 [dx] 3 [bx] 17 [flags]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 1 [dx] 3 [bx] 17 [flags]
;; live  kill	
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 3 bx [orig:93 arg ] [93])
        (reg:DI 5 di [99])) "cmodules/fbgc_stl.c":143:41 66 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 1 dx [orig:94 argc ] [94])
        (reg:SI 4 si [100])) "cmodules/fbgc_stl.c":143:41 67 {*movsi_internal}
     (nil))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 4 9 2 (debug_marker) "cmodules/fbgc_stl.c":145:2 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:94 argc ] [94])
            (const_int 3 [0x3]))) "cmodules/fbgc_stl.c":145:4 11 {*cmpsi_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) "cmodules/fbgc_stl.c":145:4 659 {*jcc}
     (int_list:REG_BR_PROB 650902300 (nil))
 -> 41)
;;  succ:       3 [39.4% (guessed)]  count:422839528 (estimated locally) (FALLTHRU)
;;              4 [60.6% (guessed)]  count:650902296 (estimated locally)
;; lr  out 	 1 [dx] 3 [bx] 7 [sp]
;; live  out 	 1 [dx] 3 [bx] 7 [sp]

;; basic block 3, loop depth 0, count 422839530 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [39.4% (guessed)]  count:422839528 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 40 [r12]
;; live  kill	
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 12 11 13 3 (var_location:SI D#11 (const_int 3 [0x3])) -1
     (nil))
(debug_insn 13 12 14 3 (var_location:DI arg (reg/v/f:DI 3 bx [orig:93 arg ] [93])) -1
     (nil))
(debug_insn 14 13 15 3 (debug_marker:BLK) "cmodules/fbgc_stl.c":143:1 -1
     (nil))
(debug_insn 15 14 16 3 (var_location:SI D#12 (debug_expr:SI D#11)) -1
     (nil))
(debug_insn 16 15 17 3 (var_location:SI argc (debug_expr:SI D#12)) -1
     (nil))
(debug_insn 17 16 18 3 (debug_marker) "cmodules/fbgc_stl.c":146:3 -1
     (nil))
(insn 18 17 19 3 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 3 bx [orig:93 arg ] [93]) [1 *arg_8(D)+0 S8 A64])) "cmodules/fbgc_stl.c":146:14 66 {*movdi_internal}
     (nil))
(call_insn 19 18 20 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f626c7e8600 convert_fbgc_object_to_int>) [0 convert_fbgc_object_to_int S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":146:14 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f626c7e8600 convert_fbgc_object_to_int>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 20 19 21 3 (set (reg:SI 6 bp [orig:83 _10 ] [83])
        (reg:SI 0 ax [101])) "cmodules/fbgc_stl.c":146:14 67 {*movsi_internal}
     (nil))
(debug_insn 21 20 22 3 (var_location:SI r (reg:SI 6 bp [orig:83 _10 ] [83])) "cmodules/fbgc_stl.c":146:10 -1
     (nil))
(debug_insn 22 21 23 3 (debug_marker) "cmodules/fbgc_stl.c":147:3 -1
     (nil))
(insn 23 22 25 3 (set (reg/f:DI 5 di [orig:95 MEM[(struct fbgc_object * *)arg_8(D) + 8B] ] [95])
        (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:93 arg ] [93])
                (const_int 8 [0x8])) [1 MEM[(struct fbgc_object * *)arg_8(D) + 8B]+0 S8 A64])) "cmodules/fbgc_stl.c":147:14 66 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:93 arg ] [93])
                (const_int 8 [0x8])) [1 MEM[(struct fbgc_object * *)arg_8(D) + 8B]+0 S8 A64])
        (nil)))
(call_insn 25 23 26 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f626c7e8600 convert_fbgc_object_to_int>) [0 convert_fbgc_object_to_int S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":147:14 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f626c7e8600 convert_fbgc_object_to_int>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 26 25 27 3 (set (reg:SI 40 r12 [orig:86 _13 ] [86])
        (reg:SI 0 ax [102])) "cmodules/fbgc_stl.c":147:14 67 {*movsi_internal}
     (nil))
(debug_insn 27 26 28 3 (var_location:SI c (reg:SI 40 r12 [orig:86 _13 ] [86])) "cmodules/fbgc_stl.c":147:10 -1
     (nil))
(debug_insn 28 27 29 3 (debug_marker) "cmodules/fbgc_stl.c":148:3 -1
     (nil))
(insn 29 28 31 3 (set (reg/f:DI 5 di [orig:96 MEM[(struct fbgc_object * *)arg_8(D) + 16B] ] [96])
        (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:93 arg ] [93])
                (const_int 16 [0x10])) [1 MEM[(struct fbgc_object * *)arg_8(D) + 16B]+0 S8 A64])) "cmodules/fbgc_stl.c":148:44 66 {*movdi_internal}
     (nil))
(call_insn 31 29 32 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f626c7e8600 convert_fbgc_object_to_int>) [0 convert_fbgc_object_to_int S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":148:44 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f626c7e8600 convert_fbgc_object_to_int>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(note 32 31 33 3 NOTE_INSN_DELETED)
(insn 33 32 35 3 (set (reg:SI 2 cx [orig:97 _16 ] [97])
        (sign_extend:SI (reg:QI 0 ax [103]))) "cmodules/fbgc_stl.c":148:10 134 {extendqisi2}
     (nil))
(insn 35 33 36 3 (set (reg:SI 1 dx)
        (reg:SI 40 r12 [orig:86 _13 ] [86])) "cmodules/fbgc_stl.c":148:10 67 {*movsi_internal}
     (nil))
(insn 36 35 37 3 (set (reg:SI 4 si)
        (reg:SI 6 bp [orig:83 _10 ] [83])) "cmodules/fbgc_stl.c":148:10 67 {*movsi_internal}
     (nil))
(insn 37 36 38 3 (set (reg:SI 5 di)
        (const_int 4 [0x4])) "cmodules/fbgc_stl.c":148:10 67 {*movsi_internal}
     (nil))
(call_insn/j 38 37 39 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_matrix_object") [flags 0x41]  <function_decl 0x7f626c80b100 new_fbgc_matrix_object>) [0 new_fbgc_matrix_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":148:10 681 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_matrix_object") [flags 0x41]  <function_decl 0x7f626c80b100 new_fbgc_matrix_object>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
;;  succ:       EXIT [always]  count:422839530 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 39 38 41)
;; basic block 4, loop depth 0, count 650902295 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [60.6% (guessed)]  count:650902296 (estimated locally)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(code_label 41 39 42 4 66 (nil) [1 uses])
(note 42 41 43 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 43 42 45 4 (debug_marker) "cmodules/fbgc_stl.c":150:7 -1
     (nil))
(insn 45 43 46 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f626c4a5e10 *.LC7>)) "cmodules/fbgc_stl.c":150:7 66 {*movdi_internal}
     (nil))
(insn 46 45 47 4 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_stl.c":150:7 67 {*movsi_internal}
     (nil))
(insn 47 46 48 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":150:7 69 {*movqi_internal}
     (nil))
(call_insn 48 47 49 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":150:7 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(debug_insn 49 48 54 4 (debug_marker) "cmodules/fbgc_stl.c":151:2 -1
     (nil))
(insn 54 49 55 4 (set (reg/i:DI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":152:1 66 {*movdi_internal}
     (nil))
(insn 55 54 62 4 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":152:1 -1
     (nil))
;;  succ:       EXIT [always]  count:650902295 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(note 62 55 0 NOTE_INSN_DELETED)

;; Function fbgc_mem (fbgc_mem, funcdef_no=64, decl_uid=5721, cgraph_uid=65, symbol_order=75)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) r {*cmpsi_ccno_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 12:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 25:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 27:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (1) rBwBz {*call_value}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 38:  (0) r  (1) Z {*movdi_internal}
	   Spilling non-eliminable hard regs: 7

********** Pseudo live ranges #1: **********

  BB 5
   Insn 39: point = 0, n_alt = -1
   Insn 38: point = 0, n_alt = 2
  BB 3
   Insn 42: point = 0, n_alt = -1
   Insn 13: point = 0, n_alt = 0
   Insn 12: point = 0, n_alt = 3
  BB 4
   Insn 28: point = 0, n_alt = 0
   Insn 27: point = 0, n_alt = 3
   Insn 26: point = 0, n_alt = 0
   Insn 25: point = 0, n_alt = 4
   Insn 24: point = 0, n_alt = -2
  BB 2
   Insn 9: point = 2, n_alt = -1
   Insn 8: point = 2, n_alt = 0
   Insn 3: point = 2, n_alt = -2
   Insn 41: point = 4, n_alt = -2
 r84: [0..2]
 r86: [3..4]
Compressing live ranges: from 5 to 4 - 80%
Ranges after the compression:
 r84: [0..1]
 r86: [2..3]

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5

********** Pseudo live ranges #2: **********

  BB 5
   Insn 39: point = 0, n_alt = -1
   Insn 38: point = 0, n_alt = 2
  BB 3
   Insn 42: point = 0, n_alt = -1
   Insn 13: point = 0, n_alt = 0
   Insn 12: point = 0, n_alt = 3
  BB 4
   Insn 28: point = 0, n_alt = 0
   Insn 27: point = 0, n_alt = 3
   Insn 26: point = 0, n_alt = 0
   Insn 25: point = 0, n_alt = 4
   Insn 24: point = 0, n_alt = -2
  BB 2
   Insn 9: point = 2, n_alt = -1
   Insn 8: point = 2, n_alt = 0
   Insn 3: point = 2, n_alt = -2
   Insn 41: point = 4, n_alt = -2
 r84: [0..2]
 r86: [3..4]
Compressing live ranges: from 5 to 4 - 80%
Ranges after the compression:
 r84: [0..1]
 r86: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-8, prev_offset=0)
changing reg in insn 3
changing reg in insn 24
changing reg in insn 19
changing reg in insn 8
changing reg in insn 41
changing reg in insn 3
deleting insn with uid = 41.
deleting insn with uid = 24.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)


fbgc_mem

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,4u} r1={4d,3u} r2={3d} r4={4d,2u} r5={4d,1u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={3d,1u} r18={2d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 175{157d,18u,0e} in 23{21 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 4 [si] 7 [sp]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 3 5 4 2 (set (reg/v:SI 1 dx [orig:84 argc ] [84])
        (reg:SI 4 si [86])) "cmodules/fbgc_stl.c":155:35 67 {*movsi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 8 2 (debug_marker) "cmodules/fbgc_stl.c":156:2 -1
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:84 argc ] [84])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":156:4 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) "cmodules/fbgc_stl.c":156:4 659 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 16)
;;  succ:       3 [50.0% (guessed)]  count:536870912 (estimated locally) (FALLTHRU)
;;              4 [50.0% (guessed)]  count:536870912 (estimated locally)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]

;; basic block 3, loop depth 0, count 536870913 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [50.0% (guessed)]  count:536870912 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 11 10 12 3 (debug_marker) "cmodules/fbgc_stl.c":157:3 -1
     (nil))
(insn 12 11 13 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":157:3 69 {*movqi_internal}
     (nil))
(call_insn 13 12 42 3 (call (mem:QI (symbol_ref:DI ("print_fbgc_memory_block") [flags 0x41]  <function_decl 0x7f626c7ed000 print_fbgc_memory_block>) [0 print_fbgc_memory_block S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_stl.c":157:3 666 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("print_fbgc_memory_block") [flags 0x41]  <function_decl 0x7f626c7ed000 print_fbgc_memory_block>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(jump_insn 42 13 43 3 (set (pc)
        (label_ref 29)) 660 {jump}
     (nil)
 -> 29)
;;  succ:       5 [always]  count:536870913 (estimated locally)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 43 42 16)
;; basic block 4, loop depth 0, count 536870913 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [50.0% (guessed)]  count:536870912 (estimated locally)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(code_label 16 43 17 4 70 (nil) [1 uses])
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 18 17 19 4 (var_location:DI D#13 (entry_value:DI (reg:DI 5 di [ arg ]))) -1
     (nil))
(debug_insn 19 18 20 4 (var_location:SI argc (reg/v:SI 1 dx [orig:84 argc ] [84])) -1
     (nil))
(debug_insn 20 19 21 4 (debug_marker:BLK) "cmodules/fbgc_stl.c":155:1 -1
     (nil))
(debug_insn 21 20 22 4 (var_location:DI D#14 (debug_expr:DI D#13)) -1
     (nil))
(debug_insn 22 21 23 4 (var_location:DI arg (debug_expr:DI D#14)) -1
     (nil))
(debug_insn 23 22 25 4 (debug_marker) "cmodules/fbgc_stl.c":159:7 -1
     (nil))
(insn 25 23 26 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f626c4b86c0 *.LC8>)) "cmodules/fbgc_stl.c":159:7 66 {*movdi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_stl.c":159:7 67 {*movsi_internal}
     (nil))
(insn 27 26 28 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":159:7 69 {*movqi_internal}
     (nil))
(call_insn 28 27 29 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":159:7 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
;;  succ:       5 [always]  count:536870913 (estimated locally) (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

;; basic block 5, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 4, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 [always]  count:536870913 (estimated locally) (FALLTHRU)
;;              3 [always]  count:536870913 (estimated locally)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 29 28 30 5 71 (nil) [1 uses])
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 31 30 32 5 (var_location:SI argc (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 32 31 33 5 (var_location:DI arg (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 33 32 38 5 (debug_marker) "cmodules/fbgc_stl.c":160:2 -1
     (nil))
(insn 38 33 39 5 (set (reg/i:DI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_stl.c":161:1 66 {*movdi_internal}
     (nil))
(insn 39 38 44 5 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":161:1 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(note 44 39 0 NOTE_INSN_DELETED)
