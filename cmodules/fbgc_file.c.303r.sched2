
;; Function fbgc_file_initializer (fbgc_file_initializer, funcdef_no=61, decl_uid=5687, cgraph_uid=62, symbol_order=69)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 7 to 18 -- after reload
;;   ======================================================

;;	  0--> b  0: i   7 debug_marker                            :nothing
;;	  0--> b  0: i  22 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  13 use ax                                  :nothing
;;	  1--> b  0: i  18 simple_return                           :hsw_decoder0
;;	Ready list (final):  
;;   total time = 1
;;   new head = 7
;;   new tail = 18



starting the processing of deferred insns
ending the processing of deferred insns


fbgc_file_initializer

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r17={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} 
;;    total ref usage 22{18d,4u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(note 5 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 16 5 4 2 NOTE_INSN_PROLOGUE_END)
(note 4 16 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 22 2 (debug_marker) "cmodules/fbgc_file.c":133:2 -1
     (nil))
(insn:TI 22 7 13 2 (parallel [
            (set (reg/i:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":134:1 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 13 22 23 2 (use (reg/i:DI 0 ax)) "cmodules/fbgc_file.c":134:1 -1
     (nil))
(note 23 13 18 2 NOTE_INSN_EPILOGUE_BEG)
(jump_insn:TI 18 23 19 2 (simple_return) "cmodules/fbgc_file.c":134:1 690 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [always]  count:1073741824 (estimated locally)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 19 18 15)
(note 15 19 0 NOTE_INSN_DELETED)

;; Function fbgc_fread (fbgc_fread, funcdef_no=58, decl_uid=5699, cgraph_uid=59, symbol_order=63)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)


fbgc_fread

Dataflow summary:
def_info->table_size = 514, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 40 [r12]
;;  ref usage 	r0={13d,15u,1e} r1={12d,4u} r2={10d,2u} r3={4d,7u} r4={12d,5u} r5={15d,8u} r6={4d,8u} r7={10d,23u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r17={14d,3u} r18={7d} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={8d} r37={8d} r38={7d} r39={7d} r40={6d,4u} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} 
;;    total ref usage 617{537d,79u,1e} in 81{74 regular + 7 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(36){ }d-1(37){ }d-1(40){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]

( 0 )->[2]->( 3 7 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 40 [r12]
;; lr  def 	 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]
;; live  gen 	 7 [sp] 17 [flags]
;; live  kill	
;; lr  out 	 5 [di] 7 [sp]
;; live  out 	 5 [di] 7 [sp]

( 2 )->[3]->( 5 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 40 [r12]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags] 40 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 7 [sp] 40 [r12]
;; live  out 	 0 [ax] 7 [sp] 40 [r12]

( 3 5 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 40 [r12]
;; lr  use 	 7 [sp] 40 [r12]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  in  	 7 [sp] 40 [r12]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]

( 3 )->[5]->( 4 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 40 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 7 [sp] 40 [r12]
;; live  out 	 7 [sp] 40 [r12]

( 5 )->[6]->( )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 7 [sp]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 2 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 40 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  out 	 7 [sp] 40 [r12]

( 4 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(40){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 104 to worklist
  Adding insn 103 to worklist
  Adding insn 102 to worklist
  Adding insn 19 to worklist
  Adding insn 110 to worklist
  Adding insn 87 to worklist
  Adding insn 65 to worklist
  Adding insn 55 to worklist
  Adding insn 39 to worklist
  Adding insn 36 to worklist
  Adding insn 31 to worklist
  Adding insn 28 to worklist
  Adding insn 72 to worklist
  Adding insn 125 to worklist
  Adding insn 120 to worklist
  Adding insn 80 to worklist
Finished finding needed instructions:
processing block 4 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
  Adding insn 109 to worklist
  Adding insn 108 to worklist
  Adding insn 107 to worklist
  Adding insn 86 to worklist
processing block 6 lr out =  7 [sp]
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
processing block 5 lr out =  7 [sp] 40 [r12]
  Adding insn 64 to worklist
  Adding insn 63 to worklist
  Adding insn 53 to worklist
  Adding insn 52 to worklist
  Adding insn 51 to worklist
  Adding insn 101 to worklist
  Adding insn 40 to worklist
  Adding insn 38 to worklist
  Adding insn 35 to worklist
  Adding insn 32 to worklist
  Adding insn 30 to worklist
  Adding insn 27 to worklist
  Adding insn 116 to worklist
  Adding insn 25 to worklist
  Adding insn 22 to worklist
processing block 3 lr out =  0 [ax] 7 [sp] 40 [r12]
  Adding insn 18 to worklist
  Adding insn 99 to worklist
  Adding insn 117 to worklist
  Adding insn 14 to worklist
processing block 7 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
  Adding insn 124 to worklist
  Adding insn 123 to worklist
  Adding insn 122 to worklist
  Adding insn 119 to worklist
  Adding insn 115 to worklist
  Adding insn 114 to worklist
  Adding insn 78 to worklist
  Adding insn 77 to worklist
processing block 2 lr out =  5 [di] 7 [sp]
  Adding insn 10 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)
;;   ======================================================
;;   -- basic block 2 from 102 to 11 -- after reload
;;   ======================================================

;;	  0--> b  0: i   9 debug_marker                            :nothing
;;	  0--> b  0: i 102 [--sp]=r12                              :hsw_decodern,(hsw_p4+hsw_p237)
;;	  1--> b  0: i 103 [--sp]=bp                               :hsw_decodern,(hsw_p4+hsw_p237)
;;	  2--> b  0: i 104 [--sp]=bx                               :hsw_decodern,(hsw_p4+hsw_p237)
;;	  2--> b  0: i  10 flags=cmp(si,0x1)                       :hsw_decodern,hsw_p0156
;;	  2--> b  0: i  11 pc={(flags!=0)?L74:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 2
;;   new head = 9
;;   new tail = 11

;;   ======================================================
;;   -- basic block 3 from 13 to 19 -- after reload
;;   ======================================================

;;	  0--> b  0: i  13 debug_marker                            :nothing
;;	  0--> b  0: i  14 ax=[di]                                 :hsw_decodern,hsw_p23
;;	  0--> b  0: i  15 loc ax                                  :nothing
;;	  0--> b  0: i  16 debug_marker                            :nothing
;;	  0--> b  0: i 117 {r12=0;clobber flags;}                  :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  99 dx=`fbgc_file_module'                   :hsw_decodern,hsw_p1|hsw_p5
;;	  2--> b  0: i  18 flags=cmp([ax+0xd],dx)                  :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  2--> b  0: i  19 pc={(flags==0)?L129:pc}                 :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 2
;;   new head = 13
;;   new tail = 19

;;   ======================================================
;;   -- basic block 4 from 86 to 110 -- after reload
;;   ======================================================

;;	  0--> b  0: i  86 ax=r12                                  :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 107 bx=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  0--> b  0: i  87 use ax                                  :nothing
;;	  0--> b  0: i 108 bp=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  1--> b  0: i 109 r12=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  2--> b  0: i 110 simple_return                           :hsw_decoder0
;;	Ready list (final):  
;;   total time = 2
;;   new head = 86
;;   new tail = 110

;;   ======================================================
;;   -- basic block 5 from 21 to 65 -- after reload
;;   ======================================================

;;	  0--> b  0: i  21 debug_marker                            :nothing
;;	  0--> b  0: i  22 bp=[ax+0x15]                            :hsw_decodern,hsw_p23
;;	  0--> b  0: i  23 loc bp                                  :nothing
;;	  0--> b  0: i  24 debug_marker                            :nothing
;;	  0--> b  0: i  25 dx=0x2                                  :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 116 {si=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  2--> b  0: i  27 di=[bp]                                 :hsw_decodern,hsw_p23
;;	  4--> b  0: i  28 ax=call [`fseek']                       :hsw_decoder0
;;	  4--> b  0: i  29 debug_marker                            :nothing
;;	  4--> b  0: i  30 di=[bp]                                 :hsw_decodern,hsw_p23
;;	  6--> b  0: i  31 ax=call [`ftell']                       :hsw_decoder0
;;	  6--> b  0: i  35 di=[bp]                                 :hsw_decodern,hsw_p23
;;	  7--> b  0: i  32 bx=ax                                   :hsw_decodern,hsw_p0156
;;	  7--> b  0: i  33 loc bx                                  :nothing
;;	  7--> b  0: i  34 debug_marker                            :nothing
;;	  8--> b  0: i  36 call [`rewind']                         :hsw_decoder0
;;	  8--> b  0: i  37 debug_marker                            :nothing
;;	  8--> b  0: i  38 di=bx                                   :hsw_decodern,hsw_p0156
;;	  9--> b  0: i  39 ax=call [`new_fbgc_str_object_empty']   :hsw_decoder0
;;	  9--> b  0: i  51 cx=[bp]                                 :hsw_decodern,hsw_p23
;;	  9--> b  0: i  52 dx=bx                                   :hsw_decodern,hsw_p0156
;;	  9--> b  0: i  53 si=0x1                                  :hsw_decodern,hsw_p0156
;;	 10--> b  0: i 101 di=ax+0xd                               :hsw_decodern,hsw_p1|hsw_p5
;;	 10--> b  0: i  40 r12=ax                                  :hsw_decodern,hsw_p0156
;;	 10--> b  0: i  41 loc ax                                  :nothing
;;	 10--> b  0: i  42 debug_marker                            :nothing
;;	 10--> b  0: i  43 loc ax+0xd                              :nothing
;;	 10--> b  0: i  44 loc 0x1                                 :nothing
;;	 10--> b  0: i  45 loc bx                                  :nothing
;;	 10--> b  0: i  46 loc [bp]                                :nothing
;;	 10--> b  0: i  47 debug_marker                            :nothing
;;	 10--> b  0: i  48 debug_marker                            :nothing
;;	 10--> b  0: i  49 debug_marker                            :nothing
;;	 11--> b  0: i  55 ax=call [`*fread']                      :hsw_decoder0
;;	 11--> b  0: i  57 loc clobber                             :nothing
;;	 11--> b  0: i  58 loc clobber                             :nothing
;;	 11--> b  0: i  59 loc clobber                             :nothing
;;	 11--> b  0: i  60 loc clobber                             :nothing
;;	 11--> b  0: i  61 loc ax                                  :nothing
;;	 11--> b  0: i  62 debug_marker                            :nothing
;;	 12--> b  0: i  63 ax=zxn(ax)                              :hsw_decodern,hsw_p0156
;;	 13--> b  0: i  64 flags=cmp(ax,bx)                        :hsw_decodern,hsw_p0156
;;	 13--> b  0: i  65 pc={(flags==0)?L85:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 13
;;   new head = 21
;;   new tail = 65

;;   ======================================================
;;   -- basic block 6 from 67 to 72 -- after reload
;;   ======================================================

;;	  0--> b  0: i  67 debug_marker                            :nothing
;;	  0--> b  0: i  68 cx=`__PRETTY_FUNCTION__.5734'           :hsw_decodern,hsw_p1|hsw_p5
;;	  0--> b  0: i  69 dx=0x34                                 :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  70 si=`*.LC0'                              :hsw_decodern,hsw_p1|hsw_p5
;;	  1--> b  0: i  71 di=`*.LC1'                              :hsw_decodern,hsw_p1|hsw_p5
;;	  2--> b  0: i  72 call [`__assert_fail']                  :hsw_decoder0
;;	Ready list (final):  
;;   total time = 2
;;   new head = 67
;;   new tail = 72

;;   ======================================================
;;   -- basic block 7 from 76 to 125 -- after reload
;;   ======================================================

;;	  0--> b  0: i  76 debug_marker                            :nothing
;;	  0--> b  0: i 115 {r12=0;clobber flags;}                  :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  77 si=`*.LC2'                              :hsw_decodern,hsw_p1|hsw_p5
;;	  0--> b  0: i  78 di=0x64                                 :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 114 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  80 ax=call [`cprintf']                     :hsw_decoder0
;;	  1--> b  0: i 119 ax=r12                                  :hsw_decodern,hsw_p0156
;;	  1--> b  0: i 122 bx=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  1--> b  0: i 120 use ax                                  :nothing
;;	  1--> b  0: i 123 bp=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  2--> b  0: i 124 r12=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  3--> b  0: i 125 simple_return                           :hsw_decoder0
;;	Ready list (final):  
;;   total time = 3
;;   new head = 76
;;   new tail = 125



starting the processing of deferred insns
ending the processing of deferred insns


fbgc_fread

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 40 [r12]
;;  ref usage 	r0={13d,15u,1e} r1={12d,4u} r2={10d,2u} r3={4d,7u} r4={12d,5u} r5={15d,8u} r6={4d,8u} r7={10d,23u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r17={14d,3u} r18={7d} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={8d} r37={8d} r38={7d} r39={7d} r40={6d,4u} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} 
;;    total ref usage 617{537d,79u,1e} in 81{74 regular + 7 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 40 [r12]
;; lr  def 	 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]
;; live  gen 	 7 [sp] 17 [flags]
;; live  kill	
(note 7 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 7 4 2 NOTE_INSN_DELETED)
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 9 4 102 2 (debug_marker) "cmodules/fbgc_file.c":39:2 -1
     (nil))
(insn/f:TI 102 9 103 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 40 r12)) "cmodules/fbgc_file.c":37:1 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 40 r12)
        (nil)))
(insn/f:TI 103 102 104 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) "cmodules/fbgc_file.c":37:1 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f:TI 104 103 105 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) "cmodules/fbgc_file.c":37:1 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(note 105 104 10 2 NOTE_INSN_PROLOGUE_END)
(insn 10 105 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 4 si [104])
            (const_int 1 [0x1]))) "cmodules/fbgc_file.c":39:4 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 4 si [104])
        (nil)))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) "cmodules/fbgc_file.c":39:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 301614084 (nil)))
 -> 74)
;;  succ:       3 [71.9% (guessed)]  count:772127744 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              7 [28.1% (guessed)]  count:301614080 (estimated locally) (CAN_FALLTHRU)
;; lr  out 	 5 [di] 7 [sp]
;; live  out 	 5 [di] 7 [sp]

;; basic block 3, loop depth 0, count 772127746 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [71.9% (guessed)]  count:772127744 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 40 [r12]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags] 40 [r12]
;; live  kill	 17 [flags]
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 13 12 14 3 (debug_marker) "cmodules/fbgc_file.c":40:3 -1
     (nil))
(insn:TI 14 13 15 3 (set (reg/v/f:DI 0 ax [orig:91 so ] [91])
        (mem/f:DI (reg/v/f:DI 5 di [orig:97 arg ] [97]) [1 *arg_15(D)+0 S8 A64])) "cmodules/fbgc_file.c":40:32 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:97 arg ] [97])
        (nil)))
(debug_insn 15 14 16 3 (var_location:DI so (reg/v/f:DI 0 ax [orig:91 so ] [91])) "cmodules/fbgc_file.c":40:32 -1
     (nil))
(debug_insn 16 15 117 3 (debug_marker) "cmodules/fbgc_file.c":41:3 -1
     (nil))
(insn 117 16 99 3 (parallel [
            (set (reg/v/f:DI 40 r12 [orig:96 <retval> ] [96])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":63:9 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 99 117 18 3 (set (reg/f:DI 1 dx [99])
        (symbol_ref:DI ("fbgc_file_module") [flags 0x2]  <var_decl 0x7f7f56ce1990 fbgc_file_module>)) "cmodules/fbgc_file.c":41:5 66 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref:DI ("fbgc_file_module") [flags 0x2]  <var_decl 0x7f7f56ce1990 fbgc_file_module>)
        (nil)))
(insn:TI 18 99 19 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:91 so ] [91])
                    (const_int 13 [0xd])) [2 so_16->parent+0 S8 A8])
            (reg/f:DI 1 dx [99]))) "cmodules/fbgc_file.c":41:5 12 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [99])
        (expr_list:REG_EQUAL (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:91 so ] [91])
                        (const_int 13 [0xd])) [2 so_16->parent+0 S8 A8])
                (symbol_ref:DI ("fbgc_file_module") [flags 0x2]  <var_decl 0x7f7f56ce1990 fbgc_file_module>))
            (nil))))
(jump_insn 19 18 85 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 129)
            (pc))) "cmodules/fbgc_file.c":41:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 365823844 (nil)))
 -> 129)
;;  succ:       5 [34.1% (guessed)]  count:263063923 (estimated locally) (CAN_FALLTHRU)
;;              4 [65.9% (guessed)]  count:509063823 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp] 40 [r12]
;; live  out 	 0 [ax] 7 [sp] 40 [r12]

;; basic block 4, loop depth 0, count 772022521 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       3 [65.9% (guessed)]  count:509063823 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              5 [100.0% (guessed)]  count:262958698 (estimated locally) (CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 40 [r12]
;; lr  use 	 7 [sp] 40 [r12]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  in  	 7 [sp] 40 [r12]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  kill	
(code_label 85 19 88 4 3 (nil) [1 uses])
(note 88 85 86 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn:TI 86 88 130 4 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 40 r12 [orig:96 <retval> ] [96])) "cmodules/fbgc_file.c":64:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 40 r12 [orig:96 <retval> ] [96])
        (nil)))
(note 130 86 107 4 NOTE_INSN_EPILOGUE_BEG)
(insn/f 107 130 87 4 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_file.c":64:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn 87 107 108 4 (use (reg/i:DI 0 ax)) "cmodules/fbgc_file.c":64:1 -1
     (nil))
(insn/f 108 87 109 4 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_file.c":64:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 109 108 110 4 (set (reg:DI 40 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_file.c":64:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn:TI 110 109 113 4 (simple_return) "cmodules/fbgc_file.c":64:1 690 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [always]  count:772022521 (estimated locally)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]

(barrier 113 110 129)
;; basic block 5, loop depth 0, count 263063923 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [34.1% (guessed)]  count:263063923 (estimated locally) (CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 40 [r12]
;; live  kill	 17 [flags]
(code_label 129 113 20 5 8 (nil) [1 uses])
(note 20 129 56 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 56 20 21 5 NOTE_INSN_DELETED)
(debug_insn 21 56 22 5 (debug_marker) "cmodules/fbgc_file.c":42:4 -1
     (nil))
(insn:TI 22 21 23 5 (set (reg/v/f:DI 6 bp [orig:92 fs ] [92])
        (mem/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:91 so ] [91])
                (const_int 21 [0x15])) [3 so_16->cstruct+0 S8 A8])) "cmodules/fbgc_file.c":42:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:91 so ] [91])
        (nil)))
(debug_insn 23 22 24 5 (var_location:DI fs (reg/v/f:DI 6 bp [orig:92 fs ] [92])) "cmodules/fbgc_file.c":42:25 -1
     (nil))
(debug_insn 24 23 25 5 (debug_marker) "cmodules/fbgc_file.c":46:4 -1
     (nil))
(insn 25 24 116 5 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) "cmodules/fbgc_file.c":46:4 67 {*movsi_internal}
     (nil))
(insn 116 25 27 5 (parallel [
            (set (reg:DI 4 si)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":46:4 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 27 116 28 5 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 6 bp [orig:92 fs ] [92]) [5 fs_17->fp+0 S8 A8])) "cmodules/fbgc_file.c":46:4 66 {*movdi_internal}
     (nil))
(call_insn:TI 28 27 29 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fseek") [flags 0x41]  <function_decl 0x7f7f56b7d300 fseek>) [0 fseek S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":46:4 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("fseek") [flags 0x41]  <function_decl 0x7f7f56b7d300 fseek>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(debug_insn 29 28 30 5 (debug_marker) "cmodules/fbgc_file.c":47:5 -1
     (nil))
(insn 30 29 31 5 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 6 bp [orig:92 fs ] [92]) [5 fs_17->fp+0 S8 A8])) "cmodules/fbgc_file.c":47:26 66 {*movdi_internal}
     (nil))
(call_insn:TI 31 30 35 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ftell") [flags 0x41]  <function_decl 0x7f7f56b7d400 ftell>) [0 ftell S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":47:26 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("ftell") [flags 0x41]  <function_decl 0x7f7f56b7d400 ftell>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 35 31 32 5 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 6 bp [orig:92 fs ] [92]) [5 fs_17->fp+0 S8 A8])) "cmodules/fbgc_file.c":48:6 66 {*movdi_internal}
     (nil))
(insn:TI 32 35 33 5 (set (reg/v:DI 3 bx [orig:93 file_text_len ] [93])
        (reg:DI 0 ax [105])) "cmodules/fbgc_file.c":47:26 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [105])
        (nil)))
(debug_insn 33 32 34 5 (var_location:DI file_text_len (reg/v:DI 3 bx [orig:93 file_text_len ] [93])) "cmodules/fbgc_file.c":47:26 -1
     (nil))
(debug_insn 34 33 36 5 (debug_marker) "cmodules/fbgc_file.c":48:6 -1
     (nil))
(call_insn:TI 36 34 37 5 (call (mem:QI (symbol_ref:DI ("rewind") [flags 0x41]  <function_decl 0x7f7f56b7d500 rewind>) [0 rewind S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_file.c":48:6 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("rewind") [flags 0x41]  <function_decl 0x7f7f56b7d500 rewind>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(debug_insn 37 36 38 5 (debug_marker) "cmodules/fbgc_file.c":50:6 -1
     (nil))
(insn 38 37 39 5 (set (reg:SI 5 di)
        (reg:SI 3 bx [orig:93 file_text_len ] [93])) "cmodules/fbgc_file.c":50:33 67 {*movsi_internal}
     (nil))
(call_insn:TI 39 38 51 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_str_object_empty") [flags 0x41]  <function_decl 0x7f7f56cf9200 new_fbgc_str_object_empty>) [0 new_fbgc_str_object_empty S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":50:33 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_str_object_empty") [flags 0x41]  <function_decl 0x7f7f56cf9200 new_fbgc_str_object_empty>)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 51 39 52 5 (set (reg:DI 2 cx)
        (mem/f:DI (reg/v/f:DI 6 bp [orig:92 fs ] [92]) [5 fs_17->fp+0 S8 A8])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":297:10 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:92 fs ] [92])
        (nil)))
(insn 52 51 53 5 (set (reg:DI 1 dx)
        (reg/v:DI 3 bx [orig:93 file_text_len ] [93])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":297:10 66 {*movdi_internal}
     (nil))
(insn 53 52 101 5 (set (reg:DI 4 si)
        (const_int 1 [0x1])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":297:10 66 {*movdi_internal}
     (nil))
(insn:TI 101 53 40 5 (set (reg/f:DI 5 di [100])
        (plus:DI (reg/f:DI 0 ax [orig:96 <retval> ] [96])
            (const_int 13 [0xd]))) "cmodules/fbgc_file.c":51:23 187 {*leadi}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:96 <retval> ] [96])
        (nil)))
(insn 40 101 41 5 (set (reg/v/f:DI 40 r12 [orig:96 <retval> ] [96])
        (reg:DI 0 ax [106])) "cmodules/fbgc_file.c":50:33 66 {*movdi_internal}
     (nil))
(debug_insn 41 40 42 5 (var_location:DI str (reg/f:DI 0 ax [orig:96 <retval> ] [96])) "cmodules/fbgc_file.c":50:33 -1
     (nil))
(debug_insn 42 41 43 5 (debug_marker) "cmodules/fbgc_file.c":51:4 -1
     (nil))
(debug_insn 43 42 44 5 (var_location:DI __ptr (plus:DI (reg/f:DI 0 ax [orig:96 <retval> ] [96])
        (const_int 13 [0xd]))) "cmodules/fbgc_file.c":51:23 -1
     (nil))
(debug_insn 44 43 45 5 (var_location:DI __size (const_int 1 [0x1])) "cmodules/fbgc_file.c":51:23 -1
     (nil))
(debug_insn 45 44 46 5 (var_location:DI __n (reg/v:DI 3 bx [orig:93 file_text_len ] [93])) "cmodules/fbgc_file.c":51:23 -1
     (nil))
(debug_insn 46 45 47 5 (var_location:DI __stream (mem/f:DI (reg/v/f:DI 6 bp [orig:92 fs ] [92]) [5 fs_17->fp+0 S8 A8])) "cmodules/fbgc_file.c":51:23 -1
     (nil))
(debug_insn 47 46 48 5 (debug_marker:BLK) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":284:1 -1
     (nil))
(debug_insn 48 47 49 5 (debug_marker) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":287:3 -1
     (nil))
(debug_insn 49 48 55 5 (debug_marker) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":297:3 -1
     (nil))
(call_insn:TI 55 49 57 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*fread") [flags 0x41]  <function_decl 0x7f7f56ba1100 __fread_alias>) [0 __fread_alias S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":297:10 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("*fread") [flags 0x41]  <function_decl 0x7f7f56ba1100 __fread_alias>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(debug_insn 57 55 58 5 (var_location:DI __ptr (clobber (const_int 0 [0]))) "cmodules/fbgc_file.c":51:17 -1
     (nil))
(debug_insn 58 57 59 5 (var_location:DI __size (clobber (const_int 0 [0]))) "cmodules/fbgc_file.c":51:17 -1
     (nil))
(debug_insn 59 58 60 5 (var_location:DI __n (clobber (const_int 0 [0]))) "cmodules/fbgc_file.c":51:17 -1
     (nil))
(debug_insn 60 59 61 5 (var_location:DI __stream (clobber (const_int 0 [0]))) "cmodules/fbgc_file.c":51:17 -1
     (nil))
(debug_insn 61 60 62 5 (var_location:SI res (reg:SI 0 ax [107])) "cmodules/fbgc_file.c":51:11 -1
     (nil))
(debug_insn 62 61 63 5 (debug_marker) "cmodules/fbgc_file.c":52:4 -1
     (nil))
(insn:TI 63 62 64 5 (set (reg:DI 0 ax [orig:101 _31 ] [101])
        (zero_extend:DI (reg:SI 0 ax [107]))) "cmodules/fbgc_file.c":52:4 114 {*zero_extendsidi2}
     (nil))
(insn:TI 64 63 65 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [orig:101 _31 ] [101])
            (reg/v:DI 3 bx [orig:93 file_text_len ] [93]))) "cmodules/fbgc_file.c":52:4 12 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/v:DI 3 bx [orig:93 file_text_len ] [93])
        (expr_list:REG_DEAD (reg:DI 0 ax [orig:101 _31 ] [101])
            (nil))))
(jump_insn 65 64 66 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 85)
            (pc))) "cmodules/fbgc_file.c":52:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 85)
;;  succ:       4 [100.0% (guessed)]  count:262958698 (estimated locally) (CAN_FALLTHRU)
;;              6 [0.0% (guessed)]  count:105225 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 7 [sp] 40 [r12]
;; live  out 	 7 [sp] 40 [r12]

;; basic block 6, loop depth 0, count 105226 (estimated locally)
;;  prev block 5, next block 7, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       5 [0.0% (guessed)]  count:105225 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 7 [sp]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	
(note 66 65 67 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 67 66 68 6 (debug_marker) "cmodules/fbgc_file.c":52:4 -1
     (nil))
(insn:TI 68 67 69 6 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.5734") [flags 0x2]  <var_decl 0x7f7f568a9480 __PRETTY_FUNCTION__>)) "cmodules/fbgc_file.c":52:4 66 {*movdi_internal}
     (nil))
(insn 69 68 70 6 (set (reg:SI 1 dx)
        (const_int 52 [0x34])) "cmodules/fbgc_file.c":52:4 67 {*movsi_internal}
     (nil))
(insn 70 69 71 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f7f568f91b0 *.LC0>)) "cmodules/fbgc_file.c":52:4 66 {*movdi_internal}
     (nil))
(insn:TI 71 70 72 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f7f568f9240 *.LC1>)) "cmodules/fbgc_file.c":52:4 66 {*movdi_internal}
     (nil))
(call_insn:TI 72 71 73 6 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f7f56ba1c00 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_file.c":52:4 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f7f56ba1c00 __assert_fail>)
                        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                            (expr_list:REG_NORETURN (const_int 0 [0])
                                (expr_list:REG_EH_REGION (const_int 0 [0])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 73 72 74)
;; basic block 7, loop depth 0, count 301614079 (estimated locally), maybe hot
;;  prev block 6, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [28.1% (guessed)]  count:301614080 (estimated locally) (CAN_FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]
;; live  kill	 17 [flags]
(code_label 74 73 75 7 4 (nil) [1 uses])
(note 75 74 76 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 76 75 115 7 (debug_marker) "cmodules/fbgc_file.c":60:3 -1
     (nil))
(insn:TI 115 76 77 7 (parallel [
            (set (reg/v/f:DI 40 r12 [orig:96 <retval> ] [96])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":63:9 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 77 115 78 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7f568f92d0 *.LC2>)) "cmodules/fbgc_file.c":60:3 66 {*movdi_internal}
     (nil))
(insn 78 77 114 7 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_file.c":60:3 67 {*movsi_internal}
     (nil))
(insn 114 78 80 7 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":60:3 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(call_insn:TI 80 114 119 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f7f56cd6d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":60:3 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f7f56cd6d00 cprintf>)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 119 80 131 7 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 40 r12 [orig:96 <retval> ] [96])) "cmodules/fbgc_file.c":64:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 40 r12 [orig:96 <retval> ] [96])
        (nil)))
(note 131 119 122 7 NOTE_INSN_EPILOGUE_BEG)
(insn/f 122 131 120 7 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_file.c":64:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn 120 122 123 7 (use (reg/i:DI 0 ax)) "cmodules/fbgc_file.c":64:1 -1
     (nil))
(insn/f 123 120 124 7 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_file.c":64:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 124 123 125 7 (set (reg:DI 40 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_file.c":64:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn:TI 125 124 128 7 (simple_return) "cmodules/fbgc_file.c":64:1 690 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [always]  count:301614079 (estimated locally)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]

(barrier 128 125 100)
(note 100 128 0 NOTE_INSN_DELETED)

;; Function fbgc_freadline (fbgc_freadline, funcdef_no=59, decl_uid=5703, cgraph_uid=60, symbol_order=65)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 17 n_edges 24 count 20 (  1.2)


fbgc_freadline

Dataflow summary:
def_info->table_size = 739, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12] 41 [r13] 42 [r14]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 40 [r12] 41 [r13] 42 [r14]
;;  ref usage 	r0={17d,17u,1e} r1={17d,7u} r2={13d,2u} r3={6d,12u} r4={19d,9u} r5={21d,12u} r6={4d,10u} r7={16d,41u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r17={30d,8u} r18={10d} r20={11d} r21={11d} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={11d} r37={11d} r38={10d} r39={10d} r40={9d,13u} r41={4d,7u} r42={4d,4u} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} 
;;    total ref usage 923{780d,142u,1e} in 158{148 regular + 10 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(36){ }d-1(37){ }d-1(40){ }d-1(41){ }d-1(42){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12] 41 [r13] 42 [r14]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12] 41 [r13] 42 [r14]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

( 0 )->[2]->( 3 12 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; lr  def 	 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  gen 	 7 [sp] 17 [flags]
;; live  kill	
;; lr  out 	 5 [di] 7 [sp]
;; live  out 	 5 [di] 7 [sp]

( 2 )->[3]->( 4 11 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 40 [r12]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags] 40 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 5 [di] 7 [sp] 40 [r12]
;; live  out 	 0 [ax] 5 [di] 7 [sp] 40 [r12]

( 3 )->[4]->( 5 11 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 5 [di] 7 [sp] 40 [r12]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 5 [di] 7 [sp] 40 [r12]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 7 [sp] 40 [r12]
;; live  out 	 0 [ax] 1 [dx] 7 [sp] 40 [r12]

( 4 )->[5]->( 16 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 7 [sp] 40 [r12]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp]
;; lr  def 	 6 [bp] 17 [flags] 41 [r13]
;; live  in  	 0 [ax] 1 [dx] 7 [sp] 40 [r12]
;; live  gen 	 6 [bp] 17 [flags] 41 [r13]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 40 [r12] 41 [r13]
;; live  out 	 6 [bp] 7 [sp] 40 [r12] 41 [r13]

( 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 42 [r14] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 6 [bp] 7 [sp] 41 [r13]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 40 [r12] 42 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

( 8 6 14 )->[7]->( 13 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

( 7 )->[8]->( 7 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 3 [bx] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  gen 	 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

( 8 )->[9]->( 10 15 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; lr  use 	 7 [sp] 40 [r12] 41 [r13]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

( 9 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 40 [r12] 41 [r13]
;; lr  use 	 7 [sp] 40 [r12] 41 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 7 [sp] 40 [r12] 41 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 40 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 7 [sp] 40 [r12]
;; live  out 	 7 [sp] 40 [r12]

( 4 3 15 10 16 )->[11]->( 1 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 40 [r12]
;; lr  use 	 7 [sp] 40 [r12]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  in  	 7 [sp] 40 [r12]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

( 2 )->[12]->( 1 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 40 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 7 [sp] 40 [r12]

( 7 )->[13]->( 15 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; lr  use 	 7 [sp] 40 [r12] 41 [r13]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

( 13 )->[14]->( 7 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; lr  use 	 7 [sp] 40 [r12]
;; lr  def 	 3 [bx] 17 [flags] 40 [r12]
;; live  in  	 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  gen 	 3 [bx] 40 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

( 13 9 )->[15]->( 11 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 40 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 7 [sp] 40 [r12]
;; live  out 	 7 [sp] 40 [r12]

( 5 )->[16]->( 11 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 40 [r12]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 7 [sp] 40 [r12]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 7 [sp] 40 [r12]
;; live  out 	 7 [sp] 40 [r12]

( 11 12 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(40){ }u-1(41){ }u-1(42){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 17 to worklist
  Adding insn 216 to worklist
  Adding insn 215 to worklist
  Adding insn 214 to worklist
  Adding insn 213 to worklist
  Adding insn 212 to worklist
  Adding insn 25 to worklist
  Adding insn 29 to worklist
  Adding insn 41 to worklist
  Adding insn 60 to worklist
  Adding insn 55 to worklist
  Adding insn 82 to worklist
  Adding insn 77 to worklist
  Adding insn 109 to worklist
  Adding insn 115 to worklist
  Adding insn 123 to worklist
  Adding insn 224 to worklist
  Adding insn 184 to worklist
  Adding insn 247 to worklist
  Adding insn 240 to worklist
  Adding insn 177 to worklist
  Adding insn 86 to worklist
  Adding insn 253 to worklist
  Adding insn 255 to worklist
  Adding insn 167 to worklist
  Adding insn 157 to worklist
  Adding insn 140 to worklist
  Adding insn 137 to worklist
  Adding insn 257 to worklist
  Adding insn 47 to worklist
Finished finding needed instructions:
processing block 11 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
  Adding insn 223 to worklist
  Adding insn 222 to worklist
  Adding insn 221 to worklist
  Adding insn 220 to worklist
  Adding insn 219 to worklist
  Adding insn 183 to worklist
processing block 16 lr out =  7 [sp] 40 [r12]
  Adding insn 236 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
processing block 15 lr out =  7 [sp] 40 [r12]
  Adding insn 166 to worklist
  Adding insn 165 to worklist
  Adding insn 230 to worklist
  Adding insn 155 to worklist
  Adding insn 153 to worklist
  Adding insn 211 to worklist
  Adding insn 151 to worklist
  Adding insn 141 to worklist
  Adding insn 139 to worklist
  Adding insn 136 to worklist
  Adding insn 134 to worklist
  Adding insn 133 to worklist
  Adding insn 132 to worklist
  Adding insn 209 to worklist
processing block 14 lr out =  3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
  Adding insn 233 to worklist
  Adding insn 89 to worklist
processing block 13 lr out =  3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
  Adding insn 85 to worklist
processing block 10 lr out =  7 [sp] 40 [r12]
  Adding insn 232 to worklist
  Adding insn 231 to worklist
  Adding insn 121 to worklist
  Adding insn 120 to worklist
  Adding insn 119 to worklist
  Adding insn 118 to worklist
processing block 9 lr out =  3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
  Adding insn 114 to worklist
processing block 8 lr out =  3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
  Adding insn 108 to worklist
  Adding insn 105 to worklist
processing block 7 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
  Adding insn 81 to worklist
  Adding insn 76 to worklist
processing block 6 lr out =  3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
  Adding insn 235 to worklist
  Adding insn 234 to worklist
  Adding insn 59 to worklist
  Adding insn 56 to worklist
  Adding insn 54 to worklist
processing block 5 lr out =  6 [bp] 7 [sp] 40 [r12] 41 [r13]
  Adding insn 40 to worklist
  Adding insn 35 to worklist
  Adding insn 32 to worklist
processing block 4 lr out =  0 [ax] 1 [dx] 7 [sp] 40 [r12]
  Adding insn 28 to worklist
  Adding insn 27 to worklist
processing block 3 lr out =  0 [ax] 5 [di] 7 [sp] 40 [r12]
  Adding insn 24 to worklist
  Adding insn 207 to worklist
  Adding insn 237 to worklist
  Adding insn 20 to worklist
processing block 12 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
  Adding insn 246 to worklist
  Adding insn 245 to worklist
  Adding insn 244 to worklist
  Adding insn 243 to worklist
  Adding insn 242 to worklist
  Adding insn 239 to worklist
  Adding insn 229 to worklist
  Adding insn 228 to worklist
  Adding insn 175 to worklist
  Adding insn 174 to worklist
processing block 2 lr out =  5 [di] 7 [sp]
  Adding insn 16 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 17 n_edges 24 count 24 (  1.4)
;;   ======================================================
;;   -- basic block 2 from 212 to 17 -- after reload
;;   ======================================================

;;	  0--> b  0: i  15 debug_marker                            :nothing
;;	  0--> b  0: i 212 [--sp]=r14                              :hsw_decodern,(hsw_p4+hsw_p237)
;;	  1--> b  0: i 213 [--sp]=r13                              :hsw_decodern,(hsw_p4+hsw_p237)
;;	  2--> b  0: i 214 [--sp]=r12                              :hsw_decodern,(hsw_p4+hsw_p237)
;;	  3--> b  0: i 215 [--sp]=bp                               :hsw_decodern,(hsw_p4+hsw_p237)
;;	  4--> b  0: i 216 [--sp]=bx                               :hsw_decodern,(hsw_p4+hsw_p237)
;;	  4--> b  0: i  16 flags=cmp(si,0x2)                       :hsw_decodern,hsw_p0156
;;	  4--> b  0: i  17 pc={(flags!=0)?L171:pc}                 :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 4
;;   new head = 15
;;   new tail = 17

;;   ======================================================
;;   -- basic block 3 from 19 to 25 -- after reload
;;   ======================================================

;;	  0--> b  0: i  19 debug_marker                            :nothing
;;	  0--> b  0: i  20 ax=[di]                                 :hsw_decodern,hsw_p23
;;	  0--> b  0: i  21 loc ax                                  :nothing
;;	  0--> b  0: i  22 debug_marker                            :nothing
;;	  0--> b  0: i 237 {r12=0;clobber flags;}                  :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 207 dx=`fbgc_file_module'                   :hsw_decodern,hsw_p1|hsw_p5
;;	  2--> b  0: i  24 flags=cmp([ax+0xd],dx)                  :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  2--> b  0: i  25 pc={(flags!=0)?L182:pc}                 :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 2
;;   new head = 19
;;   new tail = 25

;;   ======================================================
;;   -- basic block 4 from 27 to 29 -- after reload
;;   ======================================================

;;	  0--> b  0: i  27 dx=[di+0x8]                             :hsw_decodern,hsw_p23
;;	  2--> b  0: i  28 flags=cmp([dx],0x3)                     :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  3--> b  0: i  29 pc={(flags!=0)?L182:pc}                 :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 3
;;   new head = 27
;;   new tail = 29

;;   ======================================================
;;   -- basic block 5 from 31 to 41 -- after reload
;;   ======================================================

;;	  0--> b  0: i  31 debug_marker                            :nothing
;;	  0--> b  0: i  35 r13=[dx+0x9]                            :hsw_decodern,hsw_p23
;;	  0--> b  0: i  32 bp=[ax+0x15]                            :hsw_decodern,hsw_p23
;;	  0--> b  0: i  33 loc bp                                  :nothing
;;	  0--> b  0: i  34 debug_marker                            :nothing
;;	  0--> b  0: i  36 loc r13                                 :nothing
;;	  0--> b  0: i  37 debug_marker                            :nothing
;;	  2--> b  0: i  40 flags=cmp(r13,0)                        :hsw_decodern,hsw_p0156
;;	  2--> b  0: i  41 pc={(flags<0)?L251:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 2
;;   new head = 31
;;   new tail = 41

;;   ======================================================
;;   -- basic block 6 from 53 to 235 -- after reload
;;   ======================================================

;;	  0--> b  0: i  53 debug_marker                            :nothing
;;	  0--> b  0: i  54 di=[bp]                                 :hsw_decodern,hsw_p23
;;	  0--> b  0: i 234 {r12=0;clobber flags;}                  :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 235 {bx=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  2--> b  0: i  55 ax=call [`ftell']                       :hsw_decoder0
;;	  2--> b  0: i  59 di=[bp]                                 :hsw_decodern,hsw_p23
;;	  3--> b  0: i  56 r14=ax                                  :hsw_decodern,hsw_p0156
;;	  3--> b  0: i  57 loc r14                                 :nothing
;;	  3--> b  0: i  58 debug_marker                            :nothing
;;	  4--> b  0: i  60 call [`rewind']                         :hsw_decoder0
;;	  4--> b  0: i  61 debug_marker                            :nothing
;;	  4--> b  0: i  62 loc 0                                   :nothing
;;	  4--> b  0: i  63 debug_marker                            :nothing
;;	  4--> b  0: i  64 loc 0                                   :nothing
;;	  4--> b  0: i  65 debug_marker                            :nothing
;;	  4--> b  0: i  66 loc 0                                   :nothing
;;	Ready list (final):  
;;   total time = 4
;;   new head = 53
;;   new tail = 66

;;   ======================================================
;;   -- basic block 7 from 72 to 82 -- after reload
;;   ======================================================

;;	  0--> b  0: i  72 loc r12                                 :nothing
;;	  0--> b  0: i  73 loc bx                                  :nothing
;;	  0--> b  0: i  74 debug_marker                            :nothing
;;	  0--> b  0: i  75 debug_marker                            :nothing
;;	  0--> b  0: i  76 di=[bp]                                 :hsw_decodern,hsw_p23
;;	  2--> b  0: i  77 ax=call [`fgetc']                       :hsw_decoder0
;;	  2--> b  0: i  79 loc ax                                  :nothing
;;	  2--> b  0: i  80 debug_marker                            :nothing
;;	  3--> b  0: i  81 flags=cmp(ax,0xa)                       :hsw_decodern,hsw_p0156
;;	  3--> b  0: i  82 pc={(flags==0)?L252:pc}                 :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 3
;;   new head = 72
;;   new tail = 82

;;   ======================================================
;;   -- basic block 8 from 102 to 109 -- after reload
;;   ======================================================

;;	  0--> b  0: i 102 loc r12                                 :nothing
;;	  0--> b  0: i 103 loc bx                                  :nothing
;;	  0--> b  0: i 104 debug_marker                            :nothing
;;	  0--> b  0: i 105 {bx=bx+0x1;clobber flags;}              :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 106 loc bx                                  :nothing
;;	  0--> b  0: i 107 debug_marker                            :nothing
;;	  0--> b  0: i 108 flags=cmp(ax,0xffffffffffffffff)        :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 109 pc={(flags!=0)?L70:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 0
;;   new head = 102
;;   new tail = 109

;;   ======================================================
;;   -- basic block 9 from 111 to 115 -- after reload
;;   ======================================================

;;	  0--> b  0: i 111 loc r12                                 :nothing
;;	  0--> b  0: i 112 loc bx                                  :nothing
;;	  0--> b  0: i 113 debug_marker                            :nothing
;;	  0--> b  0: i 114 flags=cmp(r12,r13)                      :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 115 pc={(flags==0)?L127:pc}                 :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 0
;;   new head = 111
;;   new tail = 115

;;   ======================================================
;;   -- basic block 10 from 117 to 232 -- after reload
;;   ======================================================

;;	  0--> b  0: i 117 debug_marker                            :nothing
;;	  0--> b  0: i 119 dx=r12                                  :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 118 cx=r13                                  :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 120 si=`*.LC4'                              :hsw_decodern,hsw_p1|hsw_p5
;;	  0--> b  0: i 231 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  1--> b  0: i 121 di=0x64                                 :hsw_decodern,hsw_p0156
;;	  1--> b  0: i 232 {r12=0;clobber flags;}                  :hsw_decodern,hsw_p0156
;;	  2--> b  0: i 123 ax=call [`cprintf']                     :hsw_decoder0
;;	  2--> b  0: i 124 debug_marker                            :nothing
;;	Ready list (final):  
;;   total time = 2
;;   new head = 117
;;   new tail = 124

;;   ======================================================
;;   -- basic block 11 from 183 to 224 -- after reload
;;   ======================================================

;;	  0--> b  0: i 219 bx=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  0--> b  0: i 183 ax=r12                                  :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 220 bp=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  0--> b  0: i 184 use ax                                  :nothing
;;	  1--> b  0: i 221 r12=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  1--> b  0: i 222 r13=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  2--> b  0: i 223 r14=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  3--> b  0: i 224 simple_return                           :hsw_decoder0
;;	Ready list (final):  
;;   total time = 3
;;   new head = 259
;;   new tail = 224

;;   ======================================================
;;   -- basic block 12 from 173 to 247 -- after reload
;;   ======================================================

;;	  0--> b  0: i 173 debug_marker                            :nothing
;;	  0--> b  0: i 229 {r12=0;clobber flags;}                  :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 174 si=`*.LC5'                              :hsw_decodern,hsw_p1|hsw_p5
;;	  0--> b  0: i 175 di=0x64                                 :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 228 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  1--> b  0: i 177 ax=call [`cprintf']                     :hsw_decoder0
;;	  1--> b  0: i 242 bx=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  1--> b  0: i 239 ax=r12                                  :hsw_decodern,hsw_p0156
;;	  1--> b  0: i 243 bp=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  2--> b  0: i 240 use ax                                  :nothing
;;	  2--> b  0: i 244 r12=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  2--> b  0: i 245 r13=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  3--> b  0: i 246 r14=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  4--> b  0: i 247 simple_return                           :hsw_decoder0
;;	Ready list (final):  
;;   total time = 4
;;   new head = 173
;;   new tail = 247

;;   ======================================================
;;   -- basic block 13 from 84 to 86 -- after reload
;;   ======================================================

;;	  0--> b  0: i  84 debug_marker                            :nothing
;;	  0--> b  0: i  85 flags=cmp(r12,r13)                      :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  86 pc={(flags==0)?L127:pc}                 :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 0
;;   new head = 84
;;   new tail = 86

;;   ======================================================
;;   -- basic block 14 from 88 to 253 -- after reload
;;   ======================================================

;;	  0--> b  0: i  88 debug_marker                            :nothing
;;	  0--> b  0: i  89 {r12=r12+0x1;clobber flags;}            :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  90 loc r12                                 :nothing
;;	  0--> b  0: i  91 debug_marker                            :nothing
;;	  0--> b  0: i  92 loc r12                                 :nothing
;;	  0--> b  0: i  93 loc 0xffffffffffffffff                  :nothing
;;	  0--> b  0: i  94 debug_marker                            :nothing
;;	  0--> b  0: i  95 loc 0                                   :nothing
;;	  0--> b  0: i  96 debug_marker                            :nothing
;;	  0--> b  0: i 233 {bx=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 253 pc=L70                                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 0
;;   new head = 88
;;   new tail = 253

;;   ======================================================
;;   -- basic block 15 from 129 to 255 -- after reload
;;   ======================================================

;;	  0--> b  0: i 129 loc clobber                             :nothing
;;	  0--> b  0: i 130 loc bx                                  :nothing
;;	  0--> b  0: i 131 debug_marker                            :nothing
;;	  0--> b  0: i 209 si=bx                                   :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 136 di=[bp]                                 :hsw_decodern,hsw_p23
;;	  0--> b  0: i 134 dx=0x1                                  :hsw_decodern,hsw_p0156
;;	  1--> b  0: i 132 si=~si                                  :hsw_decodern,hsw_p0156
;;	  2--> b  0: i 133 si=sxn(si)                              :hsw_decodern,hsw_p0156
;;	  3--> b  0: i 137 ax=call [`fseek']                       :hsw_decoder0
;;	  3--> b  0: i 138 debug_marker                            :nothing
;;	  3--> b  0: i 139 di=bx                                   :hsw_decodern,hsw_p0156
;;	  4--> b  0: i 140 ax=call [`new_fbgc_str_object_empty']   :hsw_decoder0
;;	  4--> b  0: i 153 cx=[bp]                                 :hsw_decodern,hsw_p23
;;	  4--> b  0: i 151 dx=sxn(bx)                              :hsw_decodern,hsw_p0156
;;	  4--> b  0: i 155 si=0x1                                  :hsw_decodern,hsw_p0156
;;	  5--> b  0: i 211 di=ax+0xd                               :hsw_decodern,hsw_p1|hsw_p5
;;	  5--> b  0: i 141 r12=ax                                  :hsw_decodern,hsw_p0156
;;	  5--> b  0: i 142 loc ax                                  :nothing
;;	  5--> b  0: i 143 debug_marker                            :nothing
;;	  5--> b  0: i 144 loc ax+0xd                              :nothing
;;	  5--> b  0: i 145 loc 0x1                                 :nothing
;;	  5--> b  0: i 146 loc sxn(bx)                             :nothing
;;	  5--> b  0: i 147 loc [bp]                                :nothing
;;	  5--> b  0: i 148 debug_marker                            :nothing
;;	  5--> b  0: i 149 debug_marker                            :nothing
;;	  5--> b  0: i 150 debug_marker                            :nothing
;;	  6--> b  0: i 157 ax=call [`*fread']                      :hsw_decoder0
;;	  6--> b  0: i 158 loc clobber                             :nothing
;;	  6--> b  0: i 159 loc clobber                             :nothing
;;	  6--> b  0: i 160 loc clobber                             :nothing
;;	  6--> b  0: i 161 loc clobber                             :nothing
;;	  6--> b  0: i 162 loc clobber                             :nothing
;;	  6--> b  0: i 163 debug_marker                            :nothing
;;	  6--> b  0: i 166 di=[bp]                                 :hsw_decodern,hsw_p23
;;	  6--> b  0: i 230 {dx=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  6--> b  0: i 165 si=r14                                  :hsw_decodern,hsw_p0156
;;	  8--> b  0: i 167 ax=call [`fseek']                       :hsw_decoder0
;;	  8--> b  0: i 168 debug_marker                            :nothing
;;	  8--> b  0: i 255 pc=L182                                 :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 8
;;   new head = 129
;;   new tail = 255

;;   ======================================================
;;   -- basic block 16 from 43 to 257 -- after reload
;;   ======================================================

;;	  0--> b  0: i  43 debug_marker                            :nothing
;;	  0--> b  0: i  44 si=`*.LC3'                              :hsw_decodern,hsw_p1|hsw_p5
;;	  0--> b  0: i  45 di=0x64                                 :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 236 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  47 ax=call [`cprintf']                     :hsw_decoder0
;;	  1--> b  0: i  48 debug_marker                            :nothing
;;	  1--> b  0: i 257 pc=L182                                 :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 1
;;   new head = 43
;;   new tail = 257



starting the processing of deferred insns
ending the processing of deferred insns


fbgc_freadline

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12] 41 [r13] 42 [r14]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 40 [r12] 41 [r13] 42 [r14]
;;  ref usage 	r0={17d,17u,1e} r1={17d,7u} r2={13d,2u} r3={6d,12u} r4={19d,9u} r5={21d,12u} r6={4d,10u} r7={16d,41u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r17={30d,8u} r18={10d} r20={11d} r21={11d} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={11d} r37={11d} r38={10d} r39={10d} r40={9d,13u} r41={4d,7u} r42={4d,4u} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} 
;;    total ref usage 923{780d,142u,1e} in 158{148 regular + 10 call} insns.
(note 1 0 13 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 435522477 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [always]  count:435522477 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; lr  def 	 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  gen 	 7 [sp] 17 [flags]
;; live  kill	
(note 13 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 13 4 2 NOTE_INSN_DELETED)
(note 4 3 15 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 15 4 212 2 (debug_marker) "cmodules/fbgc_file.c":69:2 -1
     (nil))
(insn/f:TI 212 15 213 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 42 r14)) "cmodules/fbgc_file.c":67:1 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r14)
        (nil)))
(insn/f:TI 213 212 214 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r13)) "cmodules/fbgc_file.c":67:1 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r13)
        (nil)))
(insn/f:TI 214 213 215 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 40 r12)) "cmodules/fbgc_file.c":67:1 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 40 r12)
        (nil)))
(insn/f:TI 215 214 216 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) "cmodules/fbgc_file.c":67:1 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f:TI 216 215 217 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) "cmodules/fbgc_file.c":67:1 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(note 217 216 16 2 NOTE_INSN_PROLOGUE_END)
(insn 16 217 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 4 si [112])
            (const_int 2 [0x2]))) "cmodules/fbgc_file.c":69:4 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 4 si [112])
        (nil)))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 171)
            (pc))) "cmodules/fbgc_file.c":69:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 301614084 (nil)))
 -> 171)
;;  succ:       3 [71.9% (guessed)]  count:313184213 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              12 [28.1% (guessed)]  count:122338264 (estimated locally) (CAN_FALLTHRU)
;; lr  out 	 5 [di] 7 [sp]
;; live  out 	 5 [di] 7 [sp]

;; basic block 3, loop depth 0, count 313184213 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [71.9% (guessed)]  count:313184213 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 40 [r12]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags] 40 [r12]
;; live  kill	 17 [flags]
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 19 18 20 3 (debug_marker) "cmodules/fbgc_file.c":70:3 -1
     (nil))
(insn:TI 20 19 21 3 (set (reg/v/f:DI 0 ax [orig:96 so ] [96])
        (mem/f:DI (reg/v/f:DI 5 di [orig:103 arg ] [103]) [1 *arg_26(D)+0 S8 A64])) "cmodules/fbgc_file.c":70:32 66 {*movdi_internal}
     (nil))
(debug_insn 21 20 22 3 (var_location:DI so (reg/v/f:DI 0 ax [orig:96 so ] [96])) "cmodules/fbgc_file.c":70:32 -1
     (nil))
(debug_insn 22 21 237 3 (debug_marker) "cmodules/fbgc_file.c":71:3 -1
     (nil))
(insn 237 22 207 3 (parallel [
            (set (reg/v/f:DI 40 r12 [orig:102 <retval> ] [102])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":114:9 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 207 237 24 3 (set (reg/f:DI 1 dx [105])
        (symbol_ref:DI ("fbgc_file_module") [flags 0x2]  <var_decl 0x7f7f56ce1990 fbgc_file_module>)) "cmodules/fbgc_file.c":71:5 66 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref:DI ("fbgc_file_module") [flags 0x2]  <var_decl 0x7f7f56ce1990 fbgc_file_module>)
        (nil)))
(insn:TI 24 207 25 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:96 so ] [96])
                    (const_int 13 [0xd])) [2 so_27->parent+0 S8 A8])
            (reg/f:DI 1 dx [105]))) "cmodules/fbgc_file.c":71:5 12 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [105])
        (expr_list:REG_EQUAL (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:96 so ] [96])
                        (const_int 13 [0xd])) [2 so_27->parent+0 S8 A8])
                (symbol_ref:DI ("fbgc_file_module") [flags 0x2]  <var_decl 0x7f7f56ce1990 fbgc_file_module>))
            (nil))))
(jump_insn 25 24 26 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 182)
            (pc))) "cmodules/fbgc_file.c":71:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 523986012 (nil)))
 -> 182)
;;  succ:       4 [51.2% (guessed)]  count:160350318 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              11 [48.8% (guessed)]  count:152833895 (estimated locally) (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 5 [di] 7 [sp] 40 [r12]
;; live  out 	 0 [ax] 5 [di] 7 [sp] 40 [r12]

;; basic block 4, loop depth 0, count 160350317 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [51.2% (guessed)]  count:160350318 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 5 [di] 7 [sp] 40 [r12]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 5 [di] 7 [sp] 40 [r12]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn:TI 27 26 28 4 (set (reg/f:DI 1 dx [orig:83 _2 ] [83])
        (mem/f:DI (plus:DI (reg/v/f:DI 5 di [orig:103 arg ] [103])
                (const_int 8 [0x8])) [1 MEM[(struct fbgc_object * *)arg_26(D) + 8B]+0 S8 A64])) "cmodules/fbgc_file.c":71:44 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:103 arg ] [103])
        (nil)))
(insn:TI 28 27 29 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 1 dx [orig:83 _2 ] [83]) [0 _2->type+0 S1 A8])
            (const_int 3 [0x3]))) "cmodules/fbgc_file.c":71:38 9 {*cmpqi_1}
     (nil))
(jump_insn:TI 29 28 30 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 182)
            (pc))) "cmodules/fbgc_file.c":71:38 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 474808636 (nil)))
 -> 182)
;;  succ:       5 [55.8% (guessed)]  count:89443407 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              11 [44.2% (guessed)]  count:70906910 (estimated locally) (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 7 [sp] 40 [r12]
;; live  out 	 0 [ax] 1 [dx] 7 [sp] 40 [r12]

;; basic block 5, loop depth 0, count 89443407 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 [55.8% (guessed)]  count:89443407 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 7 [sp] 40 [r12]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp]
;; lr  def 	 6 [bp] 17 [flags] 41 [r13]
;; live  in  	 0 [ax] 1 [dx] 7 [sp] 40 [r12]
;; live  gen 	 6 [bp] 17 [flags] 41 [r13]
;; live  kill	
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 31 30 35 5 (debug_marker) "cmodules/fbgc_file.c":72:4 -1
     (nil))
(insn:TI 35 31 32 5 (set (reg/v:SI 41 r13 [orig:98 which_line ] [98])
        (mem:SI (plus:DI (reg/f:DI 1 dx [orig:83 _2 ] [83])
                (const_int 9 [0x9])) [6 MEM[(struct fbgc_int_object *)_2].content+0 S4 A8])) "cmodules/fbgc_file.c":74:8 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:83 _2 ] [83])
        (nil)))
(insn 32 35 33 5 (set (reg/v/f:DI 6 bp [orig:97 fs ] [97])
        (mem/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:96 so ] [96])
                (const_int 21 [0x15])) [3 so_27->cstruct+0 S8 A8])) "cmodules/fbgc_file.c":72:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:96 so ] [96])
        (nil)))
(debug_insn 33 32 34 5 (var_location:DI fs (reg/v/f:DI 6 bp [orig:97 fs ] [97])) "cmodules/fbgc_file.c":72:25 -1
     (nil))
(debug_insn 34 33 36 5 (debug_marker) "cmodules/fbgc_file.c":74:4 -1
     (nil))
(debug_insn 36 34 37 5 (var_location:SI which_line (reg/v:SI 41 r13 [orig:98 which_line ] [98])) "cmodules/fbgc_file.c":74:8 -1
     (nil))
(debug_insn 37 36 40 5 (debug_marker) "cmodules/fbgc_file.c":75:4 -1
     (nil))
(insn:TI 40 37 41 5 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 41 r13 [orig:98 which_line ] [98])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":75:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 41 40 52 5 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 251)
            (pc))) "cmodules/fbgc_file.c":75:6 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (int_list:REG_BR_PROB 137009460 (nil)))
 -> 251)
;;  succ:       16 [12.8% (guessed)]  count:11412979 (estimated locally) (CAN_FALLTHRU)
;;              6 [87.2% (guessed)]  count:78030428 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 40 [r12] 41 [r13]
;; live  out 	 6 [bp] 7 [sp] 40 [r12] 41 [r13]

;; basic block 6, loop depth 0, count 78030428 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       5 [87.2% (guessed)]  count:78030428 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 42 [r14] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 6 [bp] 7 [sp] 41 [r13]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 40 [r12] 42 [r14]
;; live  kill	 17 [flags]
(note 52 41 53 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 53 52 54 6 (debug_marker) "cmodules/fbgc_file.c":80:4 -1
     (nil))
(insn:TI 54 53 234 6 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 6 bp [orig:97 fs ] [97]) [5 fs_28->fp+0 S8 A8])) "cmodules/fbgc_file.c":80:22 66 {*movdi_internal}
     (nil))
(insn 234 54 235 6 (parallel [
            (set (reg:DI 40 r12 [orig:95 count_line ] [95])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":86:8 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 235 234 55 6 (parallel [
            (set (reg:DI 3 bx [orig:101 count_char ] [101])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":85:8 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(call_insn:TI 55 235 59 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ftell") [flags 0x41]  <function_decl 0x7f7f56b7d400 ftell>) [0 ftell S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":80:22 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("ftell") [flags 0x41]  <function_decl 0x7f7f56b7d400 ftell>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 59 55 56 6 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 6 bp [orig:97 fs ] [97]) [5 fs_28->fp+0 S8 A8])) "cmodules/fbgc_file.c":82:4 66 {*movdi_internal}
     (nil))
(insn:TI 56 59 57 6 (set (reg/v:DI 42 r14 [orig:99 old_fp_loc ] [99])
        (reg:DI 0 ax [113])) "cmodules/fbgc_file.c":80:22 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [113])
        (nil)))
(debug_insn 57 56 58 6 (var_location:DI old_fp_loc (reg/v:DI 42 r14 [orig:99 old_fp_loc ] [99])) "cmodules/fbgc_file.c":80:22 -1
     (nil))
(debug_insn 58 57 60 6 (debug_marker) "cmodules/fbgc_file.c":82:4 -1
     (nil))
(call_insn:TI 60 58 61 6 (call (mem:QI (symbol_ref:DI ("rewind") [flags 0x41]  <function_decl 0x7f7f56b7d500 rewind>) [0 rewind S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_file.c":82:4 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("rewind") [flags 0x41]  <function_decl 0x7f7f56b7d500 rewind>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(debug_insn 61 60 62 6 (debug_marker) "cmodules/fbgc_file.c":84:4 -1
     (nil))
(debug_insn 62 61 63 6 (var_location:SI c (const_int 0 [0])) "cmodules/fbgc_file.c":84:8 -1
     (nil))
(debug_insn 63 62 64 6 (debug_marker) "cmodules/fbgc_file.c":85:4 -1
     (nil))
(debug_insn 64 63 65 6 (var_location:SI count_char (const_int 0 [0])) "cmodules/fbgc_file.c":85:8 -1
     (nil))
(debug_insn 65 64 66 6 (debug_marker) "cmodules/fbgc_file.c":86:4 -1
     (nil))
(debug_insn 66 65 70 6 (var_location:SI count_line (const_int 0 [0])) "cmodules/fbgc_file.c":86:8 -1
     (nil))
;;  succ:       7 [always]  count:78030428 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

;; basic block 7, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       8 [91.8% (guessed)]  count:650718147 (estimated locally) (DFS_BACK,CAN_FALLTHRU)
;;              6 [always]  count:78030428 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              14 [always]  count:344993248 (estimated locally) (DFS_BACK,CAN_FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(code_label 70 66 71 7 13 (nil) [2 uses])
(note 71 70 72 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 72 71 73 7 (var_location:SI count_line (reg/v:SI 40 r12 [orig:95 count_line ] [95])) -1
     (nil))
(debug_insn 73 72 74 7 (var_location:SI count_char (reg/v:SI 3 bx [orig:101 count_char ] [101])) -1
     (nil))
(debug_insn 74 73 75 7 (debug_marker) "cmodules/fbgc_file.c":88:4 -1
     (nil))
(debug_insn 75 74 76 7 (debug_marker) "cmodules/fbgc_file.c":89:5 -1
     (nil))
(insn:TI 76 75 77 7 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 6 bp [orig:97 fs ] [97]) [5 fs_28->fp+0 S8 A8])) "cmodules/fbgc_file.c":89:9 66 {*movdi_internal}
     (nil))
(call_insn:TI 77 76 79 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgetc") [flags 0x41]  <function_decl 0x7f7f56b75500 fgetc>) [0 fgetc S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":89:9 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("fgetc") [flags 0x41]  <function_decl 0x7f7f56b75500 fgetc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(debug_insn 79 77 80 7 (var_location:SI c (reg/v:SI 0 ax [orig:100 c ] [100])) "cmodules/fbgc_file.c":89:9 -1
     (nil))
(debug_insn 80 79 81 7 (debug_marker) "cmodules/fbgc_file.c":90:5 -1
     (nil))
(insn:TI 81 80 82 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 0 ax [orig:100 c ] [100])
            (const_int 10 [0xa]))) "cmodules/fbgc_file.c":90:7 11 {*cmpsi_1}
     (nil))
(jump_insn 82 81 101 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 252)
            (pc))) "cmodules/fbgc_file.c":90:7 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 365072228 (nil)))
 -> 252)
;;  succ:       13 [34.0% (guessed)]  count:365072224 (estimated locally) (CAN_FALLTHRU)
;;              8 [66.0% (guessed)]  count:708669600 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

;; basic block 8, loop depth 0, count 708669605 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       7 [66.0% (guessed)]  count:708669600 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 3 [bx] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  gen 	 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
(note 101 82 102 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 102 101 103 8 (var_location:SI count_line (reg/v:SI 40 r12 [orig:95 count_line ] [95])) -1
     (nil))
(debug_insn 103 102 104 8 (var_location:SI count_char (reg/v:SI 3 bx [orig:101 count_char ] [101])) -1
     (nil))
(debug_insn 104 103 105 8 (debug_marker) "cmodules/fbgc_file.c":95:5 -1
     (nil))
(insn:TI 105 104 106 8 (parallel [
            (set (reg/v:SI 3 bx [orig:101 count_char ] [101])
                (plus:SI (reg/v:SI 3 bx [orig:101 count_char ] [101])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":95:15 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 106 105 107 8 (var_location:SI count_char (reg/v:SI 3 bx [orig:101 count_char ] [101])) "cmodules/fbgc_file.c":95:15 -1
     (nil))
(debug_insn 107 106 108 8 (debug_marker) "cmodules/fbgc_file.c":96:10 -1
     (nil))
(insn 108 107 109 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 0 ax [orig:100 c ] [100])
            (const_int -1 [0xffffffffffffffff]))) "cmodules/fbgc_file.c":96:4 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:100 c ] [100])
        (nil)))
(jump_insn 109 108 110 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 70)
            (pc))) "cmodules/fbgc_file.c":96:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 985936588 (nil)))
 -> 70)
;;  succ:       7 [91.8% (guessed)]  count:650718147 (estimated locally) (DFS_BACK,CAN_FALLTHRU)
;;              9 [8.2% (guessed)]  count:57951458 (estimated locally) (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

;; basic block 9, loop depth 0, count 57951457 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       8 [8.2% (guessed)]  count:57951458 (estimated locally) (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; lr  use 	 7 [sp] 40 [r12] 41 [r13]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
(note 110 109 111 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 111 110 112 9 (var_location:SI count_line (reg/v:SI 40 r12 [orig:95 count_line ] [95])) -1
     (nil))
(debug_insn 112 111 113 9 (var_location:SI count_char (reg/v:SI 3 bx [orig:101 count_char ] [101])) -1
     (nil))
(debug_insn 113 112 114 9 (debug_marker) "cmodules/fbgc_file.c":98:4 -1
     (nil))
(insn:TI 114 113 115 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 40 r12 [orig:95 count_line ] [95])
            (reg/v:SI 41 r13 [orig:98 which_line ] [98]))) "cmodules/fbgc_file.c":98:6 11 {*cmpsi_1}
     (nil))
(jump_insn 115 114 116 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) "cmodules/fbgc_file.c":98:6 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 434421892 (nil)))
 -> 127)
;;  succ:       10 [59.5% (guessed)]  count:34505056 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              15 [40.5% (guessed)]  count:23446401 (estimated locally) (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

;; basic block 10, loop depth 0, count 34505056 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       9 [59.5% (guessed)]  count:34505056 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 40 [r12] 41 [r13]
;; lr  use 	 7 [sp] 40 [r12] 41 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 7 [sp] 40 [r12] 41 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 40 [r12]
;; live  kill	 17 [flags]
(note 116 115 117 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 117 116 119 10 (debug_marker) "cmodules/fbgc_file.c":99:5 -1
     (nil))
(insn:TI 119 117 118 10 (set (reg:SI 1 dx)
        (reg/v:SI 40 r12 [orig:95 count_line ] [95])) "cmodules/fbgc_file.c":99:5 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 40 r12 [orig:95 count_line ] [95])
        (nil)))
(insn 118 119 120 10 (set (reg:SI 2 cx)
        (reg/v:SI 41 r13 [orig:98 which_line ] [98])) "cmodules/fbgc_file.c":99:5 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 41 r13 [orig:98 which_line ] [98])
        (nil)))
(insn 120 118 231 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f7f568f9d80 *.LC4>)) "cmodules/fbgc_file.c":99:5 66 {*movdi_internal}
     (nil))
(insn 231 120 121 10 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":99:5 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 121 231 232 10 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_file.c":99:5 67 {*movsi_internal}
     (nil))
(insn 232 121 123 10 (parallel [
            (set (reg/v/f:DI 40 r12 [orig:102 <retval> ] [102])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":100:12 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(call_insn:TI 123 232 124 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f7f56cd6d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":99:5 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f7f56cd6d00 cprintf>)
                            (nil)))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(debug_insn 124 123 182 10 (debug_marker) "cmodules/fbgc_file.c":100:5 -1
     (nil))
;;  succ:       11 [always]  count:34505056 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 7 [sp] 40 [r12]
;; live  out 	 7 [sp] 40 [r12]

;; basic block 11, loop depth 0, count 313184214 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       4 [44.2% (guessed)]  count:70906910 (estimated locally) (CAN_FALLTHRU)
;;              3 [48.8% (guessed)]  count:152833895 (estimated locally) (CAN_FALLTHRU)
;;              15 [always]  count:43525373 (estimated locally) (CAN_FALLTHRU)
;;              10 [always]  count:34505056 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              16 [always]  count:11412979 (estimated locally) (CAN_FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 40 [r12]
;; lr  use 	 7 [sp] 40 [r12]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  in  	 7 [sp] 40 [r12]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  kill	
(code_label 182 124 185 11 9 (nil) [4 uses])
(note 185 182 259 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(note 259 185 219 11 NOTE_INSN_EPILOGUE_BEG)
(insn/f:TI 219 259 183 11 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_file.c":115:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn 183 219 220 11 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 40 r12 [orig:102 <retval> ] [102])) "cmodules/fbgc_file.c":115:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 40 r12 [orig:102 <retval> ] [102])
        (nil)))
(insn/f 220 183 184 11 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_file.c":115:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn 184 220 221 11 (use (reg/i:DI 0 ax)) "cmodules/fbgc_file.c":115:1 -1
     (nil))
(insn/f:TI 221 184 222 11 (set (reg:DI 40 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_file.c":115:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 222 221 223 11 (set (reg:DI 41 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_file.c":115:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 223 222 224 11 (set (reg:DI 42 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_file.c":115:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn:TI 224 223 227 11 (simple_return) "cmodules/fbgc_file.c":115:1 690 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [always]  count:313184214 (estimated locally)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

(barrier 227 224 171)
;; basic block 12, loop depth 0, count 122338264 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [28.1% (guessed)]  count:122338264 (estimated locally) (CAN_FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  kill	 17 [flags]
(code_label 171 227 172 12 10 (nil) [1 uses])
(note 172 171 173 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 173 172 229 12 (debug_marker) "cmodules/fbgc_file.c":111:3 -1
     (nil))
(insn:TI 229 173 174 12 (parallel [
            (set (reg/v/f:DI 40 r12 [orig:102 <retval> ] [102])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":114:9 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 174 229 175 12 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7f568f9e10 *.LC5>)) "cmodules/fbgc_file.c":111:3 66 {*movdi_internal}
     (nil))
(insn 175 174 228 12 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_file.c":111:3 67 {*movsi_internal}
     (nil))
(insn 228 175 177 12 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":111:3 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(call_insn:TI 177 228 260 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f7f56cd6d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":111:3 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f7f56cd6d00 cprintf>)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(note 260 177 242 12 NOTE_INSN_EPILOGUE_BEG)
(insn/f 242 260 239 12 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_file.c":115:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn 239 242 243 12 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 40 r12 [orig:102 <retval> ] [102])) "cmodules/fbgc_file.c":115:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 40 r12 [orig:102 <retval> ] [102])
        (nil)))
(insn/f 243 239 240 12 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_file.c":115:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn 240 243 244 12 (use (reg/i:DI 0 ax)) "cmodules/fbgc_file.c":115:1 -1
     (nil))
(insn/f:TI 244 240 245 12 (set (reg:DI 40 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_file.c":115:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 245 244 246 12 (set (reg:DI 41 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_file.c":115:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 246 245 247 12 (set (reg:DI 42 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_file.c":115:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn:TI 247 246 250 12 (simple_return) "cmodules/fbgc_file.c":115:1 690 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [always]  count:122338264 (estimated locally)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

(barrier 250 247 252)
;; basic block 13, loop depth 0, count 365072220 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       7 [34.0% (guessed)]  count:365072224 (estimated locally) (CAN_FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; lr  use 	 7 [sp] 40 [r12] 41 [r13]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 252 250 83 13 21 (nil) [1 uses])
(note 83 252 84 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 84 83 85 13 (debug_marker) "cmodules/fbgc_file.c":91:6 -1
     (nil))
(insn:TI 85 84 86 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 40 r12 [orig:95 count_line ] [95])
            (reg/v:SI 41 r13 [orig:98 which_line ] [98]))) "cmodules/fbgc_file.c":91:8 11 {*cmpsi_1}
     (nil))
(jump_insn 86 85 87 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) "cmodules/fbgc_file.c":91:8 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 59055804 (nil)))
 -> 127)
;;  succ:       15 [5.5% (guessed)]  count:20078972 (estimated locally) (CAN_FALLTHRU,LOOP_EXIT)
;;              14 [94.5% (guessed)]  count:344993248 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

;; basic block 14, loop depth 0, count 344993248 (estimated locally), maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       13 [94.5% (guessed)]  count:344993248 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; lr  use 	 7 [sp] 40 [r12]
;; lr  def 	 3 [bx] 17 [flags] 40 [r12]
;; live  in  	 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  gen 	 3 [bx] 40 [r12]
;; live  kill	 17 [flags]
(note 87 86 88 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 88 87 89 14 (debug_marker) "cmodules/fbgc_file.c":92:6 -1
     (nil))
(insn:TI 89 88 90 14 (parallel [
            (set (reg/v:SI 40 r12 [orig:95 count_line ] [95])
                (plus:SI (reg/v:SI 40 r12 [orig:95 count_line ] [95])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":92:16 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 90 89 91 14 (var_location:SI count_line (reg/v:SI 40 r12 [orig:95 count_line ] [95])) "cmodules/fbgc_file.c":92:16 -1
     (nil))
(debug_insn 91 90 92 14 (debug_marker) "cmodules/fbgc_file.c":93:6 -1
     (nil))
(debug_insn 92 91 93 14 (var_location:SI count_line (reg/v:SI 40 r12 [orig:95 count_line ] [95])) -1
     (nil))
(debug_insn 93 92 94 14 (var_location:SI count_char (const_int -1 [0xffffffffffffffff])) -1
     (nil))
(debug_insn 94 93 95 14 (debug_marker) "cmodules/fbgc_file.c":95:5 -1
     (nil))
(debug_insn 95 94 96 14 (var_location:SI count_char (const_int 0 [0])) "cmodules/fbgc_file.c":95:15 -1
     (nil))
(debug_insn 96 95 233 14 (debug_marker) "cmodules/fbgc_file.c":96:10 -1
     (nil))
(insn 233 96 253 14 (parallel [
            (set (reg:DI 3 bx [orig:101 count_char ] [101])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":95:15 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 253 233 254 14 (set (pc)
        (label_ref 70)) 660 {jump}
     (nil)
 -> 70)
;;  succ:       7 [always]  count:344993248 (estimated locally) (DFS_BACK,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

(barrier 254 253 127)
;; basic block 15, loop depth 0, count 43525373 (estimated locally), maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       13 [5.5% (guessed)]  count:20078972 (estimated locally) (CAN_FALLTHRU,LOOP_EXIT)
;;              9 [40.5% (guessed)]  count:23446401 (estimated locally) (CAN_FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 40 [r12]
;; live  kill	 17 [flags]
(code_label 127 254 128 15 15 (nil) [2 uses])
(note 128 127 129 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(debug_insn 129 128 130 15 (var_location:SI count_line (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 130 129 131 15 (var_location:SI count_char (reg/v:SI 3 bx [orig:101 count_char ] [101])) -1
     (nil))
(debug_insn 131 130 209 15 (debug_marker) "cmodules/fbgc_file.c":103:4 -1
     (nil))
(insn:TI 209 131 136 15 (set (reg:SI 4 si [106])
        (reg/v:SI 3 bx [orig:101 count_char ] [101])) "cmodules/fbgc_file.c":103:28 67 {*movsi_internal}
     (nil))
(insn 136 209 134 15 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 6 bp [orig:97 fs ] [97]) [5 fs_28->fp+0 S8 A8])) "cmodules/fbgc_file.c":103:4 66 {*movdi_internal}
     (nil))
(insn 134 136 132 15 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "cmodules/fbgc_file.c":103:4 67 {*movsi_internal}
     (nil))
(insn:TI 132 134 133 15 (set (reg:SI 4 si [106])
        (not:SI (reg:SI 4 si [106]))) "cmodules/fbgc_file.c":103:28 496 {*one_cmplsi2_1}
     (nil))
(insn:TI 133 132 137 15 (set (reg:DI 4 si [107])
        (sign_extend:DI (reg:SI 4 si [106]))) "cmodules/fbgc_file.c":103:4 128 {*extendsidi2_rex64}
     (nil))
(call_insn:TI 137 133 138 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fseek") [flags 0x41]  <function_decl 0x7f7f56b7d300 fseek>) [0 fseek S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":103:4 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("fseek") [flags 0x41]  <function_decl 0x7f7f56b7d300 fseek>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(debug_insn 138 137 139 15 (debug_marker) "cmodules/fbgc_file.c":104:4 -1
     (nil))
(insn 139 138 140 15 (set (reg:SI 5 di)
        (reg/v:SI 3 bx [orig:101 count_char ] [101])) "cmodules/fbgc_file.c":104:31 67 {*movsi_internal}
     (nil))
(call_insn:TI 140 139 153 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_str_object_empty") [flags 0x41]  <function_decl 0x7f7f56cf9200 new_fbgc_str_object_empty>) [0 new_fbgc_str_object_empty S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":104:31 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_str_object_empty") [flags 0x41]  <function_decl 0x7f7f56cf9200 new_fbgc_str_object_empty>)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 153 140 151 15 (set (reg:DI 2 cx)
        (mem/f:DI (reg/v/f:DI 6 bp [orig:97 fs ] [97]) [5 fs_28->fp+0 S8 A8])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":297:10 66 {*movdi_internal}
     (nil))
(insn 151 153 155 15 (set (reg:DI 1 dx [orig:108 count_char ] [108])
        (sign_extend:DI (reg/v:SI 3 bx [orig:101 count_char ] [101]))) "cmodules/fbgc_file.c":105:17 128 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:101 count_char ] [101])
        (nil)))
(insn 155 151 211 15 (set (reg:DI 4 si)
        (const_int 1 [0x1])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":297:10 66 {*movdi_internal}
     (nil))
(insn:TI 211 155 141 15 (set (reg/f:DI 5 di [109])
        (plus:DI (reg/f:DI 0 ax [orig:102 <retval> ] [102])
            (const_int 13 [0xd]))) "cmodules/fbgc_file.c":105:23 187 {*leadi}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:102 <retval> ] [102])
        (nil)))
(insn 141 211 142 15 (set (reg/v/f:DI 40 r12 [orig:102 <retval> ] [102])
        (reg:DI 0 ax [115])) "cmodules/fbgc_file.c":104:31 66 {*movdi_internal}
     (nil))
(debug_insn 142 141 143 15 (var_location:DI str (reg/f:DI 0 ax [orig:102 <retval> ] [102])) "cmodules/fbgc_file.c":104:31 -1
     (nil))
(debug_insn 143 142 144 15 (debug_marker) "cmodules/fbgc_file.c":105:4 -1
     (nil))
(debug_insn 144 143 145 15 (var_location:DI __ptr (plus:DI (reg/f:DI 0 ax [orig:102 <retval> ] [102])
        (const_int 13 [0xd]))) "cmodules/fbgc_file.c":105:23 -1
     (nil))
(debug_insn 145 144 146 15 (var_location:DI __size (const_int 1 [0x1])) "cmodules/fbgc_file.c":105:23 -1
     (nil))
(debug_insn 146 145 147 15 (var_location:DI __n (sign_extend:DI (reg/v:SI 3 bx [orig:101 count_char ] [101]))) "cmodules/fbgc_file.c":105:23 -1
     (nil))
(debug_insn 147 146 148 15 (var_location:DI __stream (mem/f:DI (reg/v/f:DI 6 bp [orig:97 fs ] [97]) [5 fs_28->fp+0 S8 A8])) "cmodules/fbgc_file.c":105:23 -1
     (nil))
(debug_insn 148 147 149 15 (debug_marker:BLK) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":284:1 -1
     (nil))
(debug_insn 149 148 150 15 (debug_marker) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":287:3 -1
     (nil))
(debug_insn 150 149 157 15 (debug_marker) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":297:3 -1
     (nil))
(call_insn:TI 157 150 158 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*fread") [flags 0x41]  <function_decl 0x7f7f56ba1100 __fread_alias>) [0 __fread_alias S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":297:10 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:DI 0 ax)
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("*fread") [flags 0x41]  <function_decl 0x7f7f56ba1100 __fread_alias>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(debug_insn 158 157 159 15 (var_location:DI __ptr (clobber (const_int 0 [0]))) "cmodules/fbgc_file.c":105:17 -1
     (nil))
(debug_insn 159 158 160 15 (var_location:DI __size (clobber (const_int 0 [0]))) "cmodules/fbgc_file.c":105:17 -1
     (nil))
(debug_insn 160 159 161 15 (var_location:DI __n (clobber (const_int 0 [0]))) "cmodules/fbgc_file.c":105:17 -1
     (nil))
(debug_insn 161 160 162 15 (var_location:DI __stream (clobber (const_int 0 [0]))) "cmodules/fbgc_file.c":105:17 -1
     (nil))
(debug_insn 162 161 163 15 (var_location:SI res (clobber (const_int 0 [0]))) "cmodules/fbgc_file.c":105:11 -1
     (nil))
(debug_insn 163 162 166 15 (debug_marker) "cmodules/fbgc_file.c":106:4 -1
     (nil))
(insn 166 163 230 15 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 6 bp [orig:97 fs ] [97]) [5 fs_28->fp+0 S8 A8])) "cmodules/fbgc_file.c":106:4 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:97 fs ] [97])
        (nil)))
(insn 230 166 165 15 (parallel [
            (set (reg:DI 1 dx)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":106:4 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 165 230 167 15 (set (reg:DI 4 si)
        (reg/v:DI 42 r14 [orig:99 old_fp_loc ] [99])) "cmodules/fbgc_file.c":106:4 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 42 r14 [orig:99 old_fp_loc ] [99])
        (nil)))
(call_insn:TI 167 165 168 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fseek") [flags 0x41]  <function_decl 0x7f7f56b7d300 fseek>) [0 fseek S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":106:4 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("fseek") [flags 0x41]  <function_decl 0x7f7f56b7d300 fseek>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(debug_insn 168 167 255 15 (debug_marker) "cmodules/fbgc_file.c":107:4 -1
     (nil))
(jump_insn 255 168 256 15 (set (pc)
        (label_ref 182)) "cmodules/fbgc_file.c":107:11 660 {jump}
     (nil)
 -> 182)
;;  succ:       11 [always]  count:43525373 (estimated locally) (CAN_FALLTHRU)
;; lr  out 	 7 [sp] 40 [r12]
;; live  out 	 7 [sp] 40 [r12]

(barrier 256 255 251)
;; basic block 16, loop depth 0, count 11412979 (estimated locally), maybe hot
;;  prev block 15, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       5 [12.8% (guessed)]  count:11412979 (estimated locally) (CAN_FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 40 [r12]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 7 [sp] 40 [r12]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(code_label 251 256 42 16 20 (nil) [1 uses])
(note 42 251 43 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(debug_insn 43 42 44 16 (debug_marker) "cmodules/fbgc_file.c":76:5 -1
     (nil))
(insn:TI 44 43 45 16 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f7f568f9cf0 *.LC3>)) "cmodules/fbgc_file.c":76:5 66 {*movdi_internal}
     (nil))
(insn 45 44 236 16 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_file.c":76:5 67 {*movsi_internal}
     (nil))
(insn 236 45 47 16 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":76:5 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(call_insn:TI 47 236 48 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f7f56cd6d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":76:5 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f7f56cd6d00 cprintf>)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(debug_insn 48 47 257 16 (debug_marker) "cmodules/fbgc_file.c":77:5 -1
     (nil))
(jump_insn 257 48 258 16 (set (pc)
        (label_ref 182)) "cmodules/fbgc_file.c":77:12 660 {jump}
     (nil)
 -> 182)
;;  succ:       11 [always]  count:11412979 (estimated locally) (CAN_FALLTHRU)
;; lr  out 	 7 [sp] 40 [r12]
;; live  out 	 7 [sp] 40 [r12]

(barrier 258 257 208)
(note 208 258 0 NOTE_INSN_DELETED)

;; Function fbgc_fclose (fbgc_fclose, funcdef_no=60, decl_uid=5707, cgraph_uid=61, symbol_order=67)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)


fbgc_fclose

Dataflow summary:
def_info->table_size = 89, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,8u,1e} r1={3d,1u} r2={2d} r4={2d} r5={3d,2u} r7={3d,9u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={6d,1u} r18={1d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={2d} r37={2d} r38={1d} r39={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 118{96d,21u,1e} in 23{22 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d7(1){ }d9(2){ }d11(4){ }d14(5){ }d15(7){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d52(36){ }d54(37){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  kill	
;; lr  out 	 5 [di] 7 [sp]
;; live  out 	 5 [di] 7 [sp]

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 2 )->[3]->( 1 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 7 [sp]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 4 3 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 46 to worklist
  Adding insn 43 to worklist
  Adding insn 37 to worklist
  Adding insn 29 to worklist
  Adding insn 20 to worklist
Finished finding needed instructions:
processing block 4 lr out =  0 [ax] 7 [sp]
  Adding insn 36 to worklist
  Adding insn 58 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 33 to worklist
processing block 3 lr out =  0 [ax] 7 [sp]
  Adding insn 57 to worklist
processing block 2 lr out =  0 [ax] 7 [sp]
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 8 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)
;;   ======================================================
;;   -- basic block 2 from 7 to 13 -- after reload
;;   ======================================================

;;	  0--> b  0: i   7 debug_marker                            :nothing
;;	  0--> b  0: i   8 ax=[di]                                 :hsw_decodern,hsw_p23
;;	  0--> b  0: i   9 loc ax                                  :nothing
;;	  0--> b  0: i  10 debug_marker                            :nothing
;;	  0--> b  0: i  11 dx=`fbgc_file_module'                   :hsw_decodern,hsw_p1|hsw_p5
;;	  2--> b  0: i  12 flags=cmp([ax+0xd],dx)                  :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  2--> b  0: i  13 pc={(flags==0)?L59:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 2
;;   new head = 7
;;   new tail = 13

;;   ======================================================
;;   -- basic block 3 from 41 to 46 -- after reload
;;   ======================================================

;;	  0--> b  0: i  41 debug_marker                            :nothing
;;	  0--> b  0: i  57 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  43 use ax                                  :nothing
;;	  1--> b  0: i  46 simple_return                           :hsw_decoder0
;;	Ready list (final):  
;;   total time = 1
;;   new head = 41
;;   new tail = 46

;;   ======================================================
;;   -- basic block 4 from 33 to 37 -- after reload
;;   ======================================================

;;	  0--> b  0: i  15 debug_marker                            :nothing
;;	  0--> b  0: i  16 loc [ax+0x15]                           :nothing
;;	  0--> b  0: i  17 debug_marker                            :nothing
;;	  0--> b  0: i  33 {sp=sp-0x8;clobber flags;clobber [scratch];}:hsw_decodern,hsw_p0156
;;	  0--> b  0: i  18 ax=[ax+0x15]                            :hsw_decodern,hsw_p23
;;	  2--> b  0: i  19 di=[ax]                                 :hsw_decodern,hsw_p23
;;	  4--> b  0: i  20 ax=call [`fclose']                      :hsw_decoder0
;;	  4--> b  0: i  23 debug_marker                            :nothing
;;	  4--> b  0: i  58 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  4--> b  0: i  36 {sp=sp+0x8;clobber flags;clobber [scratch];}:hsw_decodern,hsw_p0156
;;	  4--> b  0: i  29 use ax                                  :nothing
;;	  5--> b  0: i  37 simple_return                           :hsw_decoder0
;;	Ready list (final):  
;;   total time = 5
;;   new head = 15
;;   new tail = 37



starting the processing of deferred insns
ending the processing of deferred insns


fbgc_fclose

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,8u,1e} r1={3d,1u} r2={2d} r4={2d} r5={3d,2u} r7={3d,9u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={6d,1u} r18={1d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={2d} r37={2d} r38={1d} r39={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 118{96d,21u,1e} in 23{22 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 5 4 2 NOTE_INSN_DELETED)
(note 4 2 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 8 2 (debug_marker) "cmodules/fbgc_file.c":121:2 -1
     (nil))
(insn:TI 8 7 9 2 (set (reg/v/f:DI 0 ax [orig:84 so ] [84])
        (mem/f:DI (reg:DI 5 di [92]) [1 *arg_5(D)+0 S8 A64])) "cmodules/fbgc_file.c":121:31 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [92])
        (nil)))
(debug_insn 9 8 10 2 (var_location:DI so (reg/v/f:DI 0 ax [orig:84 so ] [84])) "cmodules/fbgc_file.c":121:31 -1
     (nil))
(debug_insn 10 9 11 2 (debug_marker) "cmodules/fbgc_file.c":122:2 -1
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 1 dx [89])
        (symbol_ref:DI ("fbgc_file_module") [flags 0x2]  <var_decl 0x7f7f56ce1990 fbgc_file_module>)) "cmodules/fbgc_file.c":122:4 66 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref:DI ("fbgc_file_module") [flags 0x2]  <var_decl 0x7f7f56ce1990 fbgc_file_module>)
        (nil)))
(insn:TI 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:84 so ] [84])
                    (const_int 13 [0xd])) [2 so_6->parent+0 S8 A8])
            (reg/f:DI 1 dx [89]))) "cmodules/fbgc_file.c":122:4 12 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [89])
        (expr_list:REG_EQUAL (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:84 so ] [84])
                        (const_int 13 [0xd])) [2 so_6->parent+0 S8 A8])
                (symbol_ref:DI ("fbgc_file_module") [flags 0x2]  <var_decl 0x7f7f56ce1990 fbgc_file_module>))
            (nil))))
(jump_insn 13 12 32 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 59)
            (pc))) "cmodules/fbgc_file.c":122:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 187153204 (nil)))
 -> 59)
;;  succ:       4 [17.4% (guessed)]  count:187153200 (estimated locally) (CAN_FALLTHRU)
;;              3 [82.6% (guessed)]  count:886588624 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(note 32 13 44 NOTE_INSN_DELETED)
;; basic block 3, loop depth 0, count 886588624 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [82.6% (guessed)]  count:886588624 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(note 44 32 41 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 41 44 57 3 (debug_marker) "cmodules/fbgc_file.c":127:2 -1
     (nil))
(insn:TI 57 41 43 3 (parallel [
            (set (reg/i:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":128:1 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 43 57 46 3 (use (reg/i:DI 0 ax)) "cmodules/fbgc_file.c":128:1 -1
     (nil))
(jump_insn:TI 46 43 47 3 (simple_return) "cmodules/fbgc_file.c":128:1 690 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [always]  count:886588624 (estimated locally)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 47 46 59)
;; basic block 4, loop depth 0, count 187153200 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [17.4% (guessed)]  count:187153200 (estimated locally) (CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 7 [sp]
;; live  kill	 17 [flags]
(code_label 59 47 14 4 28 (nil) [1 uses])
(note 14 59 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 15 14 16 4 (debug_marker) "cmodules/fbgc_file.c":123:3 -1
     (nil))
(debug_insn 16 15 17 4 (var_location:DI fs (mem/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:84 so ] [84])
            (const_int 21 [0x15])) [3 so_6->cstruct+0 S8 A8])) "cmodules/fbgc_file.c":123:24 -1
     (nil))
(debug_insn 17 16 33 4 (debug_marker) "cmodules/fbgc_file.c":124:3 -1
     (nil))
(insn/f:TI 33 17 34 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "cmodules/fbgc_file.c":119:1 959 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (nil))))
(note 34 33 18 4 NOTE_INSN_PROLOGUE_END)
(insn 18 34 19 4 (set (reg/f:DI 0 ax [orig:90 so_6->cstruct ] [90])
        (mem/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:84 so ] [84])
                (const_int 21 [0x15])) [3 so_6->cstruct+0 S8 A8])) "cmodules/fbgc_file.c":124:3 66 {*movdi_internal}
     (nil))
(insn:TI 19 18 20 4 (set (reg:DI 5 di)
        (mem/f:DI (reg/f:DI 0 ax [orig:90 so_6->cstruct ] [90]) [5 fs_7->fp+0 S8 A8])) "cmodules/fbgc_file.c":124:3 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:90 so_6->cstruct ] [90])
        (nil)))
(call_insn:TI 20 19 23 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f7f56b55300 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":124:3 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f7f56b55300 fclose>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(debug_insn 23 20 58 4 (debug_marker) "cmodules/fbgc_file.c":127:2 -1
     (nil))
(insn 58 23 60 4 (parallel [
            (set (reg/i:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":128:1 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 60 58 36 4 NOTE_INSN_EPILOGUE_BEG)
(insn/f 36 60 29 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "cmodules/fbgc_file.c":128:1 959 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn 29 36 37 4 (use (reg/i:DI 0 ax)) "cmodules/fbgc_file.c":128:1 -1
     (nil))
(jump_insn:TI 37 29 56 4 (simple_return) "cmodules/fbgc_file.c":128:1 690 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [always]  count:187153200 (estimated locally)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 56 37 0)

;; Function fbgc_fprint (fbgc_fprint, funcdef_no=57, decl_uid=5695, cgraph_uid=58, symbol_order=61)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 7 count 6 (    1)


fbgc_fprint

Dataflow summary:
def_info->table_size = 93, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,9u,1e} r1={3d,1u} r2={2d} r4={3d,2u} r5={4d,5u} r7={3d,10u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={8d,2u} r18={1d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={2d} r37={2d} r38={1d} r39={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 130{100d,29u,1e} in 49{48 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d7(1){ }d9(2){ }d12(4){ }d16(5){ }d17(7){ }d32(20){ }d34(21){ }d36(22){ }d38(23){ }d40(24){ }d42(25){ }d44(26){ }d46(27){ }d56(36){ }d58(37){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  kill	
;; lr  out 	 4 [si] 5 [di] 7 [sp]
;; live  out 	 4 [si] 5 [di] 7 [sp]

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 5 [di] 7 [sp]
;; live  out 	 5 [di] 7 [sp]

( 2 4 )->[3]->( 1 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 2 )->[4]->( 5 3 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 5 [di] 7 [sp]

( 4 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 5 [di] 7 [sp]
;; lr  use 	 0 [ax] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 0 [ax] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 7 [sp]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 5 3 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 75 to worklist
  Adding insn 72 to worklist
  Adding insn 22 to worklist
  Adding insn 60 to worklist
  Adding insn 51 to worklist
  Adding insn 36 to worklist
Finished finding needed instructions:
processing block 5 lr out =  0 [ax] 7 [sp]
  Adding insn 59 to worklist
  Adding insn 87 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 56 to worklist
processing block 3 lr out =  0 [ax] 7 [sp]
  Adding insn 86 to worklist
processing block 4 lr out =  0 [ax] 5 [di] 7 [sp]
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 17 to worklist
processing block 2 lr out =  5 [di] 7 [sp]
  Adding insn 8 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 7 count 6 (    1)
;;   ======================================================
;;   -- basic block 2 from 7 to 9 -- after reload
;;   ======================================================

;;	  0--> b  0: i   7 debug_marker                            :nothing
;;	  0--> b  0: i   8 flags=cmp(si,0x2)                       :hsw_decodern,hsw_p0156
;;	  0--> b  0: i   9 pc={(flags==0)?L88:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 0
;;   new head = 7
;;   new tail = 9

;;   ======================================================
;;   -- basic block 3 from 64 to 75 -- after reload
;;   ======================================================

;;	  0--> b  0: i  64 loc clobber                             :nothing
;;	  0--> b  0: i  65 loc clobber                             :nothing
;;	  0--> b  0: i  66 loc clobber                             :nothing
;;	  0--> b  0: i  67 loc clobber                             :nothing
;;	  0--> b  0: i  68 loc clobber                             :nothing
;;	  0--> b  0: i  69 loc clobber                             :nothing
;;	  0--> b  0: i  70 debug_marker                            :nothing
;;	  0--> b  0: i  86 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  72 use ax                                  :nothing
;;	  1--> b  0: i  75 simple_return                           :hsw_decoder0
;;	Ready list (final):  
;;   total time = 1
;;   new head = 64
;;   new tail = 75

;;   ======================================================
;;   -- basic block 4 from 11 to 22 -- after reload
;;   ======================================================

;;	  0--> b  0: i  11 loc 0x2                                 :nothing
;;	  0--> b  0: i  12 loc di                                  :nothing
;;	  0--> b  0: i  13 debug_marker                            :nothing
;;	  0--> b  0: i  14 loc D#1                                 :nothing
;;	  0--> b  0: i  15 loc D#2                                 :nothing
;;	  0--> b  0: i  16 debug_marker                            :nothing
;;	  0--> b  0: i  17 ax=[di]                                 :hsw_decodern,hsw_p23
;;	  0--> b  0: i  18 loc ax                                  :nothing
;;	  0--> b  0: i  19 debug_marker                            :nothing
;;	  0--> b  0: i  20 dx=`fbgc_file_module'                   :hsw_decodern,hsw_p1|hsw_p5
;;	  2--> b  0: i  21 flags=cmp([ax+0xd],dx)                  :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  2--> b  0: i  22 pc={(flags!=0)?L74:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 2
;;   new head = 11
;;   new tail = 22

;;   ======================================================
;;   -- basic block 5 from 56 to 60 -- after reload
;;   ======================================================

;;	  0--> b  0: i  24 debug_marker                            :nothing
;;	  0--> b  0: i  25 loc [ax+0x15]                           :nothing
;;	  0--> b  0: i  26 debug_marker                            :nothing
;;	  0--> b  0: i  27 loc [[ax+0x15]]                         :nothing
;;	  0--> b  0: i  28 loc "%s"                                :nothing
;;	  0--> b  0: i  29 debug_marker                            :nothing
;;	  0--> b  0: i  30 debug_marker                            :nothing
;;	  0--> b  0: i  56 {sp=sp-0x8;clobber flags;clobber [scratch];}:hsw_decodern,hsw_p0156
;;	  0--> b  0: i  31 ax=[ax+0x15]                            :hsw_decodern,hsw_p23
;;	  0--> b  0: i  32 di=[di+0x8]                             :hsw_decodern,hsw_p23
;;	  2--> b  0: i  34 si=[ax]                                 :hsw_decodern,hsw_p23
;;	  2--> b  0: i  33 {di=di+0xd;clobber flags;}              :hsw_decodern,hsw_p0156
;;	  4--> b  0: i  36 ax=call [`fputs']                       :hsw_decoder0
;;	  4--> b  0: i  39 loc clobber                             :nothing
;;	  4--> b  0: i  40 loc clobber                             :nothing
;;	  4--> b  0: i  41 loc clobber                             :nothing
;;	  4--> b  0: i  42 loc clobber                             :nothing
;;	  4--> b  0: i  43 loc clobber                             :nothing
;;	  4--> b  0: i  44 loc clobber                             :nothing
;;	  4--> b  0: i  45 debug_marker                            :nothing
;;	  4--> b  0: i  87 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  4--> b  0: i  59 {sp=sp+0x8;clobber flags;clobber [scratch];}:hsw_decodern,hsw_p0156
;;	  4--> b  0: i  51 use ax                                  :nothing
;;	  5--> b  0: i  60 simple_return                           :hsw_decoder0
;;	Ready list (final):  
;;   total time = 5
;;   new head = 24
;;   new tail = 60



starting the processing of deferred insns
ending the processing of deferred insns


fbgc_fprint

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,9u,1e} r1={3d,1u} r2={2d} r4={3d,2u} r5={4d,5u} r7={3d,10u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={8d,2u} r18={1d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={2d} r37={2d} r38={1d} r39={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 130{100d,29u,1e} in 49{48 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 5 4 2 NOTE_INSN_DELETED)
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 8 2 (debug_marker) "cmodules/fbgc_file.c":25:2 -1
     (nil))
(insn:TI 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 4 si [97])
            (const_int 2 [0x2]))) "cmodules/fbgc_file.c":25:4 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 4 si [97])
        (nil)))
(jump_insn 9 8 55 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 88)
            (pc))) "cmodules/fbgc_file.c":25:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 365072228 (nil)))
 -> 88)
;;  succ:       4 [34.0% (guessed)]  count:365072224 (estimated locally) (CAN_FALLTHRU)
;;              3 [66.0% (guessed)]  count:708669600 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 5 [di] 7 [sp]
;; live  out 	 5 [di] 7 [sp]

(note 55 9 74 NOTE_INSN_DELETED)
;; basic block 3, loop depth 0, count 886588624 (estimated locally), maybe hot
;; Invalid sum of incoming counts 1010109732 (estimated locally), should be 886588624 (estimated locally)
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [66.0% (guessed)]  count:708669600 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              4 [82.6% (guessed)]  count:301440132 (estimated locally) (CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(code_label 74 55 73 3 32 (nil) [1 uses])
(note 73 74 64 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 64 73 65 3 (var_location:DI arg (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 65 64 66 3 (var_location:DI so (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 66 65 67 3 (var_location:DI fs (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 67 66 68 3 (var_location:SI argc (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 68 67 69 3 (var_location:DI __stream (clobber (const_int 0 [0]))) "cmodules/fbgc_file.c":29:4 -1
     (nil))
(debug_insn 69 68 70 3 (var_location:DI __fmt (clobber (const_int 0 [0]))) "cmodules/fbgc_file.c":29:4 -1
     (nil))
(debug_insn 70 69 86 3 (debug_marker) "cmodules/fbgc_file.c":33:2 -1
     (nil))
(insn:TI 86 70 72 3 (parallel [
            (set (reg/i:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":34:1 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 72 86 75 3 (use (reg/i:DI 0 ax)) "cmodules/fbgc_file.c":34:1 -1
     (nil))
(jump_insn:TI 75 72 76 3 (simple_return) "cmodules/fbgc_file.c":34:1 690 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [always]  count:886588624 (estimated locally)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 76 75 88)
;; basic block 4, loop depth 0, count 365072220 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [34.0% (guessed)]  count:365072224 (estimated locally) (CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
(code_label 88 76 10 4 35 (nil) [1 uses])
(note 10 88 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 11 10 12 4 (var_location:SI D#1 (const_int 2 [0x2])) -1
     (nil))
(debug_insn 12 11 13 4 (var_location:DI arg (reg/v/f:DI 5 di [orig:89 arg ] [89])) -1
     (nil))
(debug_insn 13 12 14 4 (debug_marker:BLK) "cmodules/fbgc_file.c":22:1 -1
     (nil))
(debug_insn 14 13 15 4 (var_location:SI D#2 (debug_expr:SI D#1)) -1
     (nil))
(debug_insn 15 14 16 4 (var_location:SI argc (debug_expr:SI D#2)) -1
     (nil))
(debug_insn 16 15 17 4 (debug_marker) "cmodules/fbgc_file.c":26:3 -1
     (nil))
(insn:TI 17 16 18 4 (set (reg/v/f:DI 0 ax [orig:82 so ] [82])
        (mem/f:DI (reg/v/f:DI 5 di [orig:89 arg ] [89]) [1 *arg_4(D)+0 S8 A64])) "cmodules/fbgc_file.c":26:32 66 {*movdi_internal}
     (nil))
(debug_insn 18 17 19 4 (var_location:DI so (reg/v/f:DI 0 ax [orig:82 so ] [82])) "cmodules/fbgc_file.c":26:32 -1
     (nil))
(debug_insn 19 18 20 4 (debug_marker) "cmodules/fbgc_file.c":27:3 -1
     (nil))
(insn 20 19 21 4 (set (reg/f:DI 1 dx [91])
        (symbol_ref:DI ("fbgc_file_module") [flags 0x2]  <var_decl 0x7f7f56ce1990 fbgc_file_module>)) "cmodules/fbgc_file.c":27:5 66 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref:DI ("fbgc_file_module") [flags 0x2]  <var_decl 0x7f7f56ce1990 fbgc_file_module>)
        (nil)))
(insn:TI 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:82 so ] [82])
                    (const_int 13 [0xd])) [2 so_6->parent+0 S8 A8])
            (reg/f:DI 1 dx [91]))) "cmodules/fbgc_file.c":27:5 12 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [91])
        (expr_list:REG_EQUAL (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:82 so ] [82])
                        (const_int 13 [0xd])) [2 so_6->parent+0 S8 A8])
                (symbol_ref:DI ("fbgc_file_module") [flags 0x2]  <var_decl 0x7f7f56ce1990 fbgc_file_module>))
            (nil))))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 74)
            (pc))) "cmodules/fbgc_file.c":27:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 886588628 (nil)))
 -> 74)
;;  succ:       5 [17.4% (guessed)]  count:63632088 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              3 [82.6% (guessed)]  count:301440132 (estimated locally) (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 5 [di] 7 [sp]

;; basic block 5, loop depth 0, count 63632088 (estimated locally), maybe hot
;;  prev block 4, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 [17.4% (guessed)]  count:63632088 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 5 [di] 7 [sp]
;; lr  use 	 0 [ax] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 0 [ax] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 7 [sp]
;; live  kill	 17 [flags]
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 24 23 25 5 (debug_marker) "cmodules/fbgc_file.c":28:4 -1
     (nil))
(debug_insn 25 24 26 5 (var_location:DI fs (mem/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:82 so ] [82])
            (const_int 21 [0x15])) [3 so_6->cstruct+0 S8 A8])) "cmodules/fbgc_file.c":28:25 -1
     (nil))
(debug_insn 26 25 27 5 (debug_marker) "cmodules/fbgc_file.c":29:4 -1
     (nil))
(debug_insn 27 26 28 5 (var_location:DI __stream (mem/f:DI (mem/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:82 so ] [82])
                (const_int 21 [0x15])) [3 so_6->cstruct+0 S8 A8]) [5 fs_8->fp+0 S8 A8])) "cmodules/fbgc_file.c":29:4 -1
     (nil))
(debug_insn 28 27 29 5 (var_location:DI __fmt (const_string:DI ("%s"))) "cmodules/fbgc_file.c":29:4 -1
     (nil))
(debug_insn 29 28 30 5 (debug_marker:BLK) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":98:1 -1
     (nil))
(debug_insn 30 29 56 5 (debug_marker) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:3 -1
     (nil))
(insn/f:TI 56 30 57 5 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "cmodules/fbgc_file.c":23:1 959 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (nil))))
(note 57 56 31 5 NOTE_INSN_PROLOGUE_END)
(insn 31 57 32 5 (set (reg/f:DI 0 ax [orig:92 so_6->cstruct ] [92])
        (mem/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:82 so ] [82])
                (const_int 21 [0x15])) [3 so_6->cstruct+0 S8 A8])) "cmodules/fbgc_file.c":29:4 66 {*movdi_internal}
     (nil))
(insn 32 31 34 5 (set (reg/f:DI 5 di [orig:94 MEM[(struct fbgc_object * *)arg_4(D) + 8B] ] [94])
        (mem/f:DI (plus:DI (reg/v/f:DI 5 di [orig:89 arg ] [89])
                (const_int 8 [0x8])) [1 MEM[(struct fbgc_object * *)arg_4(D) + 8B]+0 S8 A64])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:10 66 {*movdi_internal}
     (nil))
(insn:TI 34 32 33 5 (set (reg:DI 4 si)
        (mem/f:DI (reg/f:DI 0 ax [orig:92 so_6->cstruct ] [92]) [5 fs_8->fp+0 S8 A8])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:10 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:92 so_6->cstruct ] [92])
        (nil)))
(insn 33 34 36 5 (parallel [
            (set (reg/f:DI 5 di [93])
                (plus:DI (reg/f:DI 5 di [orig:94 MEM[(struct fbgc_object * *)arg_4(D) + 8B] ] [94])
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:10 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(call_insn:TI 36 33 39 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fputs") [flags 0x41]  <function_decl 0x7f7f56ddff00 __builtin_fputs>) [0 __builtin_fputs S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:10 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("fputs") [flags 0x41]  <function_decl 0x7f7f56ddff00 __builtin_fputs>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(debug_insn 39 36 40 5 (var_location:DI arg (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 40 39 41 5 (var_location:DI so (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 41 40 42 5 (var_location:DI fs (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 42 41 43 5 (var_location:SI argc (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 43 42 44 5 (var_location:DI __stream (clobber (const_int 0 [0]))) "cmodules/fbgc_file.c":29:4 -1
     (nil))
(debug_insn 44 43 45 5 (var_location:DI __fmt (clobber (const_int 0 [0]))) "cmodules/fbgc_file.c":29:4 -1
     (nil))
(debug_insn 45 44 87 5 (debug_marker) "cmodules/fbgc_file.c":33:2 -1
     (nil))
(insn 87 45 89 5 (parallel [
            (set (reg/i:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":34:1 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 89 87 59 5 NOTE_INSN_EPILOGUE_BEG)
(insn/f 59 89 51 5 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "cmodules/fbgc_file.c":34:1 959 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn 51 59 60 5 (use (reg/i:DI 0 ax)) "cmodules/fbgc_file.c":34:1 -1
     (nil))
(jump_insn:TI 60 51 85 5 (simple_return) "cmodules/fbgc_file.c":34:1 690 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [always]  count:63632088 (estimated locally)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 85 60 0)

;; Function fbgc_fopen (fbgc_fopen, funcdef_no=56, decl_uid=5691, cgraph_uid=57, symbol_order=59)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 11 count 9 (    1)


fbgc_fopen

Dataflow summary:
def_info->table_size = 309, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 40 [r12]
;;  ref usage 	r0={10d,11u} r1={6d,1u} r2={6d,1u} r3={3d,4u,2e} r4={9d,5u} r5={10d,9u} r6={3d,4u} r7={7d,18u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={11d,4u} r18={4d} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={5d} r37={5d} r38={4d} r39={4d} r40={4d,3u} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} 
;;    total ref usage 385{323d,60u,2e} in 59{55 regular + 4 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(36){ }d-1(37){ }d-1(40){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]

( 0 )->[2]->( 3 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 40 [r12]
;; lr  def 	 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]
;; live  gen 	 7 [sp] 17 [flags]
;; live  kill	
;; lr  out 	 5 [di] 7 [sp]
;; live  out 	 5 [di] 7 [sp]

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 7 [sp]

( 3 )->[4]->( 7 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

( 3 2 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 40 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 7 [sp] 40 [r12]
;; live  out 	 7 [sp] 40 [r12]

( 5 7 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 40 [r12]
;; lr  use 	 7 [sp] 40 [r12]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  in  	 7 [sp] 40 [r12]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]

( 4 )->[7]->( 6 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 6 [bp] 17 [flags] 40 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 7 [sp] 40 [r12]
;; live  out 	 7 [sp] 40 [r12]

( 7 )->[8]->( )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 7 [sp]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(40){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 83 to worklist
  Adding insn 82 to worklist
  Adding insn 81 to worklist
  Adding insn 14 to worklist
  Adding insn 18 to worklist
  Adding insn 63 to worklist
  Adding insn 89 to worklist
  Adding insn 71 to worklist
  Adding insn 41 to worklist
  Adding insn 38 to worklist
  Adding insn 36 to worklist
  Adding insn 23 to worklist
  Adding insn 55 to worklist
Finished finding needed instructions:
processing block 6 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
  Adding insn 88 to worklist
  Adding insn 87 to worklist
  Adding insn 86 to worklist
  Adding insn 70 to worklist
processing block 8 lr out =  7 [sp]
  Adding insn 54 to worklist
  Adding insn 53 to worklist
  Adding insn 52 to worklist
  Adding insn 51 to worklist
processing block 7 lr out =  7 [sp] 40 [r12]
  Adding insn 40 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 80 to worklist
  Adding insn 79 to worklist
  Adding insn 27 to worklist
  Adding insn 24 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
processing block 5 lr out =  7 [sp] 40 [r12]
  Adding insn 95 to worklist
  Adding insn 94 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
processing block 4 lr out =  3 [bx] 7 [sp]
  Adding insn 17 to worklist
  Adding insn 16 to worklist
processing block 3 lr out =  3 [bx] 5 [di] 7 [sp]
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 90 to worklist
processing block 2 lr out =  5 [di] 7 [sp]
  Adding insn 9 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 11 count 9 (    1)
;;   ======================================================
;;   -- basic block 2 from 81 to 10 -- after reload
;;   ======================================================

;;	  0--> b  0: i  73 loc di                                  :nothing
;;	  0--> b  0: i   8 debug_marker                            :nothing
;;	  0--> b  0: i  81 [--sp]=r12                              :hsw_decodern,(hsw_p4+hsw_p237)
;;	  1--> b  0: i  82 [--sp]=bp                               :hsw_decodern,(hsw_p4+hsw_p237)
;;	  2--> b  0: i  83 [--sp]=bx                               :hsw_decodern,(hsw_p4+hsw_p237)
;;	  2--> b  0: i   9 flags=cmp(si,0x2)                       :hsw_decodern,hsw_p0156
;;	  2--> b  0: i  10 pc={(flags!=0)?L57:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 2
;;   new head = 73
;;   new tail = 10

;;   ======================================================
;;   -- basic block 3 from 90 to 14 -- after reload
;;   ======================================================

;;	  0--> b  0: i  12 ax=[di]                                 :hsw_decodern,hsw_p23
;;	  0--> b  0: i  90 bx=di                                   :hsw_decodern,hsw_p0156
;;	  2--> b  0: i  13 flags=cmp([ax],0x6)                     :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  3--> b  0: i  14 pc={(flags!=0)?L57:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 3
;;   new head = 12
;;   new tail = 14

;;   ======================================================
;;   -- basic block 4 from 16 to 18 -- after reload
;;   ======================================================

;;	  0--> b  0: i  16 ax=[di+0x8]                             :hsw_decodern,hsw_p23
;;	  2--> b  0: i  17 flags=cmp([ax],0x6)                     :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  3--> b  0: i  18 pc={(flags==0)?L96:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 3
;;   new head = 16
;;   new tail = 18

;;   ======================================================
;;   -- basic block 5 from 59 to 95 -- after reload
;;   ======================================================

;;	  0--> b  0: i  59 debug_marker                            :nothing
;;	  0--> b  0: i  60 si=`*.LC7'                              :hsw_decodern,hsw_p1|hsw_p5
;;	  0--> b  0: i  61 di=0x64                                 :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  94 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  95 {r12=0;clobber flags;}                  :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  63 ax=call [`cprintf']                     :hsw_decoder0
;;	  1--> b  0: i  64 debug_marker                            :nothing
;;	Ready list (final):  
;;   total time = 1
;;   new head = 59
;;   new tail = 64

;;   ======================================================
;;   -- basic block 6 from 70 to 89 -- after reload
;;   ======================================================

;;	  0--> b  0: i  70 ax=r12                                  :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  86 bx=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  0--> b  0: i  71 use ax                                  :nothing
;;	  0--> b  0: i  87 bp=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  1--> b  0: i  88 r12=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  2--> b  0: i  89 simple_return                           :hsw_decoder0
;;	Ready list (final):  
;;   total time = 2
;;   new head = 70
;;   new tail = 89

;;   ======================================================
;;   -- basic block 7 from 20 to 41 -- after reload
;;   ======================================================

;;	  0--> b  0: i  20 debug_marker                            :nothing
;;	  0--> b  0: i  21 si=`fbgc_file_module'                   :hsw_decodern,hsw_p1|hsw_p5
;;	  0--> b  0: i  22 di=0x8                                  :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  23 ax=call [`new_fbgc_cstruct_object']     :hsw_decoder0
;;	  1--> b  0: i  32 di=[bx]                                 :hsw_decodern,hsw_p23
;;	  2--> b  0: i  27 bp=[ax+0x15]                            :hsw_decodern,hsw_p23
;;	  2--> b  0: i  24 r12=ax                                  :hsw_decodern,hsw_p0156
;;	  2--> b  0: i  25 loc ax                                  :nothing
;;	  2--> b  0: i  26 debug_marker                            :nothing
;;	  2--> b  0: i  28 loc bp                                  :nothing
;;	  2--> b  0: i  29 debug_marker                            :nothing
;;	  2--> b  0: i  79 ax=[bx+0x8]                             :hsw_decodern,hsw_p23
;;	  3--> b  0: i  33 {di=di+0xd;clobber flags;}              :hsw_decodern,hsw_p0156
;;	  4--> b  0: i  80 si=ax+0xd                               :hsw_decodern,hsw_p1|hsw_p5
;;	  5--> b  0: i  36 ax=call [`fopen']                       :hsw_decoder0
;;	  6--> b  0: i  38 [bp]=ax                                 :hsw_decodern,(hsw_p4+(hsw_p2|hsw_p3|hsw_p7))
;;	  6--> b  0: i  39 debug_marker                            :nothing
;;	  6--> b  0: i  40 flags=cmp(ax,0)                         :hsw_decodern,hsw_p0156
;;	  6--> b  0: i  41 pc={(flags!=0)?L69:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 6
;;   new head = 20
;;   new tail = 41

;;   ======================================================
;;   -- basic block 8 from 43 to 55 -- after reload
;;   ======================================================

;;	  0--> b  0: i  43 loc D#7                                 :nothing
;;	  0--> b  0: i  44 loc 0x2                                 :nothing
;;	  0--> b  0: i  45 debug_marker                            :nothing
;;	  0--> b  0: i  46 loc D#3                                 :nothing
;;	  0--> b  0: i  47 loc D#6                                 :nothing
;;	  0--> b  0: i  48 loc D#4                                 :nothing
;;	  0--> b  0: i  49 loc D#5                                 :nothing
;;	  0--> b  0: i  50 debug_marker                            :nothing
;;	  0--> b  0: i  51 cx=`__PRETTY_FUNCTION__.5716'           :hsw_decodern,hsw_p1|hsw_p5
;;	  0--> b  0: i  52 dx=0xc                                  :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  53 si=`*.LC0'                              :hsw_decodern,hsw_p1|hsw_p5
;;	  1--> b  0: i  54 di=`*.LC6'                              :hsw_decodern,hsw_p1|hsw_p5
;;	  2--> b  0: i  55 call [`__assert_fail']                  :hsw_decoder0
;;	Ready list (final):  
;;   total time = 2
;;   new head = 43
;;   new tail = 55



starting the processing of deferred insns
ending the processing of deferred insns


fbgc_fopen

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 40 [r12]
;;  ref usage 	r0={10d,11u} r1={6d,1u} r2={6d,1u} r3={3d,4u,2e} r4={9d,5u} r5={10d,9u} r6={3d,4u} r7={7d,18u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={11d,4u} r18={4d} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={5d} r37={5d} r38={4d} r39={4d} r40={4d,3u} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} 
;;    total ref usage 385{323d,60u,2e} in 59{55 regular + 4 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 40 [r12]
;; lr  def 	 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]
;; live  gen 	 7 [sp] 17 [flags]
;; live  kill	
(note 6 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 6 4 2 NOTE_INSN_DELETED)
(note 4 3 73 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 73 4 8 2 (var_location:DI D#7 (reg:DI 5 di [ arg ])) -1
     (nil))
(debug_insn 8 73 81 2 (debug_marker) "cmodules/fbgc_file.c":7:2 -1
     (nil))
(insn/f:TI 81 8 82 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 40 r12)) "cmodules/fbgc_file.c":5:1 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 40 r12)
        (nil)))
(insn/f:TI 82 81 83 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) "cmodules/fbgc_file.c":5:1 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f:TI 83 82 84 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) "cmodules/fbgc_file.c":5:1 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(note 84 83 9 2 NOTE_INSN_PROLOGUE_END)
(insn 9 84 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 4 si [103])
            (const_int 2 [0x2]))) "cmodules/fbgc_file.c":7:4 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 4 si [103])
        (nil)))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "cmodules/fbgc_file.c":7:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 301614084 (nil)))
 -> 57)
;;  succ:       3 [71.9% (guessed)]  count:772127744 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              5 [28.1% (guessed)]  count:301614080 (estimated locally) (CAN_FALLTHRU)
;; lr  out 	 5 [di] 7 [sp]
;; live  out 	 5 [di] 7 [sp]

;; basic block 3, loop depth 0, count 772127746 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [71.9% (guessed)]  count:772127744 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags]
;; live  kill	
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn:TI 12 11 90 3 (set (reg/f:DI 0 ax [orig:95 *arg_15(D) ] [95])
        (mem/f:DI (reg/f:DI 5 di [orig:93 arg ] [93]) [1 *arg_15(D)+0 S8 A64])) "cmodules/fbgc_file.c":7:24 66 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 3 bx [orig:93 arg ] [93]) [1 *arg_15(D)+0 S8 A64])
        (nil)))
(insn 90 12 13 3 (set (reg/v/f:DI 3 bx [orig:93 arg ] [93])
        (reg:DI 5 di [102])) 66 {*movdi_internal}
     (nil))
(insn:TI 13 90 14 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 0 ax [orig:95 *arg_15(D) ] [95]) [0 _1->type+0 S1 A8])
            (const_int 6 [0x6]))) "cmodules/fbgc_file.c":7:15 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:95 *arg_15(D) ] [95])
        (nil)))
(jump_insn:TI 14 13 15 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "cmodules/fbgc_file.c":7:15 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 474808636 (nil)))
 -> 57)
;;  succ:       4 [55.8% (guessed)]  count:430692859 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              5 [44.2% (guessed)]  count:341434887 (estimated locally) (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 7 [sp]

;; basic block 4, loop depth 0, count 430692856 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [55.8% (guessed)]  count:430692859 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn:TI 16 15 17 4 (set (reg/f:DI 0 ax [orig:96 MEM[(struct fbgc_object * *)arg_15(D) + 8B] ] [96])
        (mem/f:DI (plus:DI (reg/f:DI 5 di [orig:93 arg ] [93])
                (const_int 8 [0x8])) [1 MEM[(struct fbgc_object * *)arg_15(D) + 8B]+0 S8 A64])) "cmodules/fbgc_file.c":7:50 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:93 arg ] [93])
        (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:93 arg ] [93])
                    (const_int 8 [0x8])) [1 MEM[(struct fbgc_object * *)arg_15(D) + 8B]+0 S8 A64])
            (nil))))
(insn:TI 17 16 18 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 0 ax [orig:96 MEM[(struct fbgc_object * *)arg_15(D) + 8B] ] [96]) [0 _3->type+0 S1 A8])
            (const_int 6 [0x6]))) "cmodules/fbgc_file.c":7:41 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:96 MEM[(struct fbgc_object * *)arg_15(D) + 8B] ] [96])
        (nil)))
(jump_insn:TI 18 17 57 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 96)
            (pc))) "cmodules/fbgc_file.c":7:41 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 411457868 (nil)))
 -> 96)
;;  succ:       7 [38.3% (guessed)]  count:165041501 (estimated locally) (CAN_FALLTHRU)
;;              5 [61.7% (guessed)]  count:265651355 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

;; basic block 5, loop depth 0, count 908700323 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [44.2% (guessed)]  count:341434887 (estimated locally) (CAN_FALLTHRU)
;;              2 [28.1% (guessed)]  count:301614080 (estimated locally) (CAN_FALLTHRU)
;;              4 [61.7% (guessed)]  count:265651355 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 40 [r12]
;; live  kill	 17 [flags]
(code_label 57 18 58 5 37 (nil) [2 uses])
(note 58 57 59 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 59 58 60 5 (debug_marker) "cmodules/fbgc_file.c":17:3 -1
     (nil))
(insn:TI 60 59 61 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f7f5693ab40 *.LC7>)) "cmodules/fbgc_file.c":17:3 66 {*movdi_internal}
     (nil))
(insn 61 60 94 5 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_file.c":17:3 67 {*movsi_internal}
     (nil))
(insn 94 61 95 5 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":17:3 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 95 94 63 5 (parallel [
            (set (reg/v/f:DI 40 r12 [orig:92 <retval> ] [92])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":20:9 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(call_insn:TI 63 95 64 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f7f56cd6d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":17:3 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f7f56cd6d00 cprintf>)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(debug_insn 64 63 69 5 (debug_marker) "cmodules/fbgc_file.c":20:2 -1
     (nil))
;;  succ:       6 [always]  count:908700323 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 7 [sp] 40 [r12]
;; live  out 	 7 [sp] 40 [r12]

;; basic block 6, loop depth 0, count 1073675807 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       5 [always]  count:908700323 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              7 [100.0% (guessed)]  count:164975486 (estimated locally) (CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 40 [r12]
;; lr  use 	 7 [sp] 40 [r12]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  in  	 7 [sp] 40 [r12]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  kill	
(code_label 69 64 72 6 36 (nil) [1 uses])
(note 72 69 70 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn:TI 70 72 97 6 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 40 r12 [orig:92 <retval> ] [92])) "cmodules/fbgc_file.c":21:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 40 r12 [orig:92 <retval> ] [92])
        (nil)))
(note 97 70 86 6 NOTE_INSN_EPILOGUE_BEG)
(insn/f 86 97 71 6 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_file.c":21:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn 71 86 87 6 (use (reg/i:DI 0 ax)) "cmodules/fbgc_file.c":21:1 -1
     (nil))
(insn/f 87 71 88 6 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_file.c":21:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 88 87 89 6 (set (reg:DI 40 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_file.c":21:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn:TI 89 88 93 6 (simple_return) "cmodules/fbgc_file.c":21:1 690 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [always]  count:1073675807 (estimated locally)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]

(barrier 93 89 96)
;; basic block 7, loop depth 0, count 165041502 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 [38.3% (guessed)]  count:165041501 (estimated locally) (CAN_FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 6 [bp] 17 [flags] 40 [r12]
;; live  kill	 17 [flags]
(code_label 96 93 19 7 40 (nil) [1 uses])
(note 19 96 30 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(note 30 19 20 7 NOTE_INSN_DELETED)
(debug_insn 20 30 21 7 (debug_marker) "cmodules/fbgc_file.c":8:3 -1
     (nil))
(insn:TI 21 20 22 7 (set (reg:DI 4 si)
        (symbol_ref:DI ("fbgc_file_module") [flags 0x2]  <var_decl 0x7f7f56ce1990 fbgc_file_module>)) "cmodules/fbgc_file.c":8:68 66 {*movdi_internal}
     (nil))
(insn 22 21 23 7 (set (reg:SI 5 di)
        (const_int 8 [0x8])) "cmodules/fbgc_file.c":8:68 67 {*movsi_internal}
     (nil))
(call_insn:TI 23 22 32 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_cstruct_object") [flags 0x41]  <function_decl 0x7f7f56d0ca00 new_fbgc_cstruct_object>) [0 new_fbgc_cstruct_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":8:68 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_cstruct_object") [flags 0x41]  <function_decl 0x7f7f56d0ca00 new_fbgc_cstruct_object>)
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 32 23 27 7 (set (reg/f:DI 5 di [orig:100 *arg_15(D) ] [100])
        (mem/f:DI (reg/v/f:DI 3 bx [orig:93 arg ] [93]) [1 *arg_15(D)+0 S8 A64])) "cmodules/fbgc_file.c":11:18 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:93 arg ] [93])
        (nil)))
(insn:TI 27 32 24 7 (set (reg/v/f:DI 6 bp [orig:91 fs ] [91])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:92 <retval> ] [92])
                (const_int 21 [0x15])) [3 so_17->cstruct+0 S8 A8])) "cmodules/fbgc_file.c":9:24 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:92 <retval> ] [92])
        (nil)))
(insn 24 27 25 7 (set (reg/v/f:DI 40 r12 [orig:92 <retval> ] [92])
        (reg:DI 0 ax [104])) "cmodules/fbgc_file.c":8:68 66 {*movdi_internal}
     (nil))
(debug_insn 25 24 26 7 (var_location:DI so (reg/f:DI 0 ax [orig:92 <retval> ] [92])) "cmodules/fbgc_file.c":8:68 -1
     (nil))
(debug_insn 26 25 28 7 (debug_marker) "cmodules/fbgc_file.c":9:3 -1
     (nil))
(debug_insn 28 26 29 7 (var_location:DI fs (reg/v/f:DI 6 bp [orig:91 fs ] [91])) "cmodules/fbgc_file.c":9:24 -1
     (nil))
(debug_insn 29 28 79 7 (debug_marker) "cmodules/fbgc_file.c":11:3 -1
     (nil))
(insn 79 29 33 7 (set (reg:DI 0 ax [106])
        (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:93 arg ] [93])
                (const_int 8 [0x8])) [1 MEM[(struct fbgc_object * *)arg_15(D) + 8B]+0 S8 A64])) "cmodules/fbgc_file.c":11:50 66 {*movdi_internal}
     (nil))
(insn:TI 33 79 80 7 (parallel [
            (set (reg/f:DI 5 di [99])
                (plus:DI (reg/f:DI 5 di [orig:100 *arg_15(D) ] [100])
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":11:18 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 80 33 36 7 (set (reg/f:DI 4 si [97])
        (plus:DI (reg:DI 0 ax [106])
            (const_int 13 [0xd]))) "cmodules/fbgc_file.c":11:50 187 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [106])
        (nil)))
(call_insn:TI 36 80 38 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f7f56b6b100 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":11:12 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f7f56b6b100 fopen>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn:TI 38 36 39 7 (set (mem/f:DI (reg/v/f:DI 6 bp [orig:91 fs ] [91]) [5 fs_18->fp+0 S8 A8])
        (reg/f:DI 0 ax [orig:90 _10 ] [90])) "cmodules/fbgc_file.c":11:10 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:91 fs ] [91])
        (nil)))
(debug_insn 39 38 40 7 (debug_marker) "cmodules/fbgc_file.c":12:3 -1
     (nil))
(insn 40 39 41 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:90 _10 ] [90])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":12:3 8 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:90 _10 ] [90])
        (nil)))
(jump_insn 41 40 42 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 69)
            (pc))) "cmodules/fbgc_file.c":12:3 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 69)
;;  succ:       6 [100.0% (guessed)]  count:164975486 (estimated locally) (CAN_FALLTHRU)
;;              8 [0.0% (guessed)]  count:66016 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 7 [sp] 40 [r12]
;; live  out 	 7 [sp] 40 [r12]

;; basic block 8, loop depth 0, count 66017 (estimated locally)
;;  prev block 7, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       7 [0.0% (guessed)]  count:66016 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 7 [sp]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	
(note 42 41 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 43 42 44 8 (var_location:DI D#3 (debug_expr:DI D#7)) -1
     (nil))
(debug_insn 44 43 45 8 (var_location:SI D#4 (const_int 2 [0x2])) -1
     (nil))
(debug_insn 45 44 46 8 (debug_marker:BLK) "cmodules/fbgc_file.c":4:1 -1
     (nil))
(debug_insn 46 45 47 8 (var_location:DI D#6 (debug_expr:DI D#3)) -1
     (nil))
(debug_insn 47 46 48 8 (var_location:DI arg (debug_expr:DI D#6)) -1
     (nil))
(debug_insn 48 47 49 8 (var_location:SI D#5 (debug_expr:SI D#4)) -1
     (nil))
(debug_insn 49 48 50 8 (var_location:SI argc (debug_expr:SI D#5)) -1
     (nil))
(debug_insn 50 49 51 8 (debug_marker) "cmodules/fbgc_file.c":12:3 -1
     (nil))
(insn:TI 51 50 52 8 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.5716") [flags 0x2]  <var_decl 0x7f7f56ce1f30 __PRETTY_FUNCTION__>)) "cmodules/fbgc_file.c":12:3 66 {*movdi_internal}
     (nil))
(insn 52 51 53 8 (set (reg:SI 1 dx)
        (const_int 12 [0xc])) "cmodules/fbgc_file.c":12:3 67 {*movsi_internal}
     (nil))
(insn 53 52 54 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f7f568f91b0 *.LC0>)) "cmodules/fbgc_file.c":12:3 66 {*movdi_internal}
     (nil))
(insn:TI 54 53 55 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f7f5693aab0 *.LC6>)) "cmodules/fbgc_file.c":12:3 66 {*movdi_internal}
     (nil))
(call_insn:TI 55 54 56 8 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f7f56ba1c00 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_file.c":12:3 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f7f56ba1c00 __assert_fail>)
                        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                            (expr_list:REG_NORETURN (const_int 0 [0])
                                (expr_list:REG_EH_REGION (const_int 0 [0])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 56 55 78)
(note 78 56 0 NOTE_INSN_DELETED)
