
;; Function fbgc_file_initializer (fbgc_file_initializer, funcdef_no=61, decl_uid=5687, cgraph_uid=62, symbol_order=69)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs




Pass 1 for finding pseudo/allocno costs



   Insn 13(l0): point = 0
   Insn 12(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_file_initializer

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r19={1d,2u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} 
;;    total ref usage 29{20d,9u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax]
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 5 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 12 2 (debug_marker) "cmodules/fbgc_file.c":133:2 -1
     (nil))
(insn 12 7 13 2 (set (reg/i:DI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_file.c":134:1 66 {*movdi_internal}
     (nil))
(insn 13 12 0 2 (use (reg/i:DI 0 ax)) "cmodules/fbgc_file.c":134:1 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function fbgc_fread (fbgc_fread, funcdef_no=58, decl_uid=5699, cgraph_uid=59, symbol_order=63)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 7 }
;; 4 succs { 7 5 }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
scanning new insn with uid = 99.
verify found no changes in insn with uid = 99.
deleting insn with uid = 17.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)
Reg 103 uninteresting
Reg 97: def dominates all uses has unique first use
Reg 104 uninteresting
Reg 99 uninteresting
Reg 92: local to bb 4 def dominates all uses has unique first use
Reg 105 uninteresting
Reg 93: local to bb 4 def dominates all uses has unique first use
Reg 106 uninteresting
Reg 107 uninteresting
Reg 101 uninteresting
Found def insn 22 for 92 to be not moveable
Examining insn 32, def for 93
  all ok
Reg 97 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 7 }
;; 4 succs { 7 5 }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 99: (insn_list:REG_DEP_TRUE 99 (nil))

Pass 0 for finding pseudo/allocno costs

    a3 (r107,l0) best AREG, allocno AREG
    a6 (r106,l0) best AREG, allocno AREG
    a7 (r105,l0) best AREG, allocno AREG
    a11 (r104,l0) best SIREG, allocno SIREG
    a12 (r103,l0) best DIREG, allocno DIREG
    a2 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r100,l0) best DIREG, allocno DIREG
    a9 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r96,l0) best AREG, allocno AREG
    a1 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a5 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a8 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r96,l0) costs: AREG:-999,-999 DREG:1998,1998 CREG:1998,1998 BREG:1998,1998 SIREG:1998,1998 DIREG:1998,1998 AD_REGS:1998,1998 CLOBBERED_REGS:1998,1998 Q_REGS:1998,1998 NON_Q_REGS:1998,1998 TLS_GOTBASE_REGS:1998,1998 GENERAL_REGS:1998,1998 SSE_FIRST_REG:17416,17416 NO_REX_SSE_REGS:17416,17416 SSE_REGS:17416,17416 MMX_REGS:23636,23636 INT_SSE_REGS:23636,23636 ALL_REGS:388128,388128 MEM:8708,8708
  a1(r93,l0) costs: AREG:490,490 DREG:490,490 CREG:490,490 BREG:490,490 SIREG:490,490 DIREG:490,490 AD_REGS:490,490 CLOBBERED_REGS:490,490 Q_REGS:490,490 NON_Q_REGS:490,490 TLS_GOTBASE_REGS:490,490 GENERAL_REGS:490,490 SSE_FIRST_REG:7350,7350 NO_REX_SSE_REGS:7350,7350 SSE_REGS:7350,7350 MMX_REGS:11025,11025 INT_SSE_REGS:11025,11025 ALL_REGS:180320,180320 MEM:4165,4165
  a2(r101,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1960,1960 NO_REX_SSE_REGS:1960,1960 SSE_REGS:1960,1960 MMX_REGS:4655,4655 INT_SSE_REGS:4655,4655 ALL_REGS:76440,76440 MEM:1470,1470
  a3(r107,l0) costs: AREG:-245,-245 DREG:490,490 CREG:490,490 BREG:490,490 SIREG:490,490 DIREG:490,490 AD_REGS:490,490 CLOBBERED_REGS:490,490 Q_REGS:490,490 NON_Q_REGS:490,490 TLS_GOTBASE_REGS:490,490 GENERAL_REGS:490,490 SSE_FIRST_REG:1960,1960 NO_REX_SSE_REGS:1960,1960 SSE_REGS:1960,1960 MMX_REGS:4655,4655 INT_SSE_REGS:4655,4655 ALL_REGS:76440,76440 MEM:1715,1715
  a4(r100,l0) costs: AREG:490,490 DREG:490,490 CREG:490,490 BREG:490,490 SIREG:490,490 DIREG:-245,-245 AD_REGS:490,490 CLOBBERED_REGS:490,490 Q_REGS:490,490 NON_Q_REGS:490,490 TLS_GOTBASE_REGS:490,490 GENERAL_REGS:490,490 SSE_FIRST_REG:3920,3920 NO_REX_SSE_REGS:3920,3920 SSE_REGS:3920,3920 MMX_REGS:6370,6370 INT_SSE_REGS:6370,6370 ALL_REGS:103880,103880 MEM:2940,2940
  a5(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:9800,9800 NO_REX_SSE_REGS:9800,9800 SSE_REGS:9800,9800 MMX_REGS:15680,15680 INT_SSE_REGS:15680,15680 ALL_REGS:233730,233730 MEM:7350,7350
  a6(r106,l0) costs: AREG:-245,-245 DREG:490,490 CREG:490,490 BREG:490,490 SIREG:490,490 DIREG:490,490 AD_REGS:490,490 CLOBBERED_REGS:490,490 Q_REGS:490,490 NON_Q_REGS:490,490 TLS_GOTBASE_REGS:490,490 GENERAL_REGS:490,490 SSE_FIRST_REG:1960,1960 NO_REX_SSE_REGS:1960,1960 SSE_REGS:1960,1960 MMX_REGS:6370,6370 INT_SSE_REGS:6370,6370 ALL_REGS:103880,103880 MEM:2695,2695
  a7(r105,l0) costs: AREG:-245,-245 DREG:490,490 CREG:490,490 BREG:490,490 SIREG:490,490 DIREG:490,490 AD_REGS:490,490 CLOBBERED_REGS:490,490 Q_REGS:490,490 NON_Q_REGS:490,490 TLS_GOTBASE_REGS:490,490 GENERAL_REGS:490,490 SSE_FIRST_REG:1960,1960 NO_REX_SSE_REGS:1960,1960 SSE_REGS:1960,1960 MMX_REGS:6370,6370 INT_SSE_REGS:6370,6370 ALL_REGS:103880,103880 MEM:2695,2695
  a8(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:13464,13464 NO_REX_SSE_REGS:13464,13464 SSE_REGS:13464,13464 MMX_REGS:21160,21160 INT_SSE_REGS:21160,21160 ALL_REGS:280582,280582 MEM:10098,10098
  a9(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11504,11504 NO_REX_SSE_REGS:11504,11504 SSE_REGS:11504,11504 MMX_REGS:16537,16537 INT_SSE_REGS:16537,16537 ALL_REGS:227204,227204 MEM:7909,7909
  a10(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11752,11752 NO_REX_SSE_REGS:11752,11752 SSE_REGS:11752,11752 MMX_REGS:15347,15347 INT_SSE_REGS:15347,15347 ALL_REGS:252428,252428 MEM:5314,5314
  a11(r104,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:-1000,-1000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a12(r103,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:-1000,-1000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000


Pass 1 for finding pseudo/allocno costs

    r107: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r96,l0) costs: AREG:1998,-999 DREG:3996,3996 CREG:3996,3996 BREG:3996,3996 SIREG:3996,3996 DIREG:3996,3996 AD_REGS:1998,1998 CLOBBERED_REGS:1998,1998 Q_REGS:1998,1998 NON_Q_REGS:3996,3996 TLS_GOTBASE_REGS:3996,3996 GENERAL_REGS:1998,1998 SSE_FIRST_REG:27896,27896 NO_REX_SSE_REGS:27896,27896 SSE_REGS:27896,27896 MMX_REGS:44087,44087 INT_SSE_REGS:31100,31100 ALL_REGS:395592,395592 MEM:20922,20922
  a1(r93,l0) costs: GENERAL_REGS:490,490 SSE_FIRST_REG:9800,9800 NO_REX_SSE_REGS:9800,9800 SSE_REGS:9800,9800 MMX_REGS:15680,15680 INT_SSE_REGS:12495,12495 ALL_REGS:181790,181790 MEM:6860,6860
  a2(r101,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:3920,3920 NO_REX_SSE_REGS:3920,3920 SSE_REGS:3920,3920 MMX_REGS:6370,6370 INT_SSE_REGS:6370,6370 ALL_REGS:103880,103880 MEM:2695,2695
  a3(r107,l0) costs: AREG:490,-245 DREG:980,980 CREG:980,980 BREG:980,980 SIREG:980,980 DIREG:980,980 AD_REGS:490,490 CLOBBERED_REGS:490,490 Q_REGS:490,490 NON_Q_REGS:980,980 TLS_GOTBASE_REGS:980,980 GENERAL_REGS:490,490 SSE_FIRST_REG:5880,5880 NO_REX_SSE_REGS:5880,5880 SSE_REGS:5880,5880 MMX_REGS:9555,9555 INT_SSE_REGS:6370,6370 ALL_REGS:79870,79870 MEM:4165,4165
  a4(r100,l0) costs: AREG:980,980 DREG:980,980 CREG:980,980 BREG:980,980 SIREG:980,980 DIREG:490,-245 AD_REGS:980,980 CLOBBERED_REGS:490,490 Q_REGS:980,980 NON_Q_REGS:490,490 TLS_GOTBASE_REGS:490,490 GENERAL_REGS:490,490 SSE_FIRST_REG:5880,5880 NO_REX_SSE_REGS:5880,5880 SSE_REGS:5880,5880 MMX_REGS:9555,9555 INT_SSE_REGS:6370,6370 ALL_REGS:103880,103880 MEM:4410,4410
  a5(r92,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:9800,9800 NO_REX_SSE_REGS:9800,9800 SSE_REGS:9800,9800 MMX_REGS:15925,15925 INT_SSE_REGS:15925,15925 ALL_REGS:235200,235200 MEM:7350,7350
  a6(r106,l0) costs: AREG:490,-245 DREG:980,980 CREG:980,980 BREG:980,980 SIREG:980,980 DIREG:980,980 AD_REGS:490,490 CLOBBERED_REGS:490,490 Q_REGS:490,490 NON_Q_REGS:980,980 TLS_GOTBASE_REGS:980,980 GENERAL_REGS:490,490 SSE_FIRST_REG:5880,5880 NO_REX_SSE_REGS:5880,5880 SSE_REGS:5880,5880 MMX_REGS:9555,9555 INT_SSE_REGS:6370,6370 ALL_REGS:103880,103880 MEM:4165,4165
  a7(r105,l0) costs: AREG:490,-245 DREG:980,980 CREG:980,980 BREG:980,980 SIREG:980,980 DIREG:980,980 AD_REGS:490,490 CLOBBERED_REGS:490,490 Q_REGS:490,490 NON_Q_REGS:980,980 TLS_GOTBASE_REGS:980,980 GENERAL_REGS:490,490 SSE_FIRST_REG:5880,5880 NO_REX_SSE_REGS:5880,5880 SSE_REGS:5880,5880 MMX_REGS:9555,9555 INT_SSE_REGS:6370,6370 ALL_REGS:103880,103880 MEM:4165,4165
  a8(r91,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:13464,13464 NO_REX_SSE_REGS:13464,13464 SSE_REGS:13464,13464 MMX_REGS:21879,21879 INT_SSE_REGS:21879,21879 ALL_REGS:284896,284896 MEM:10098,10098
  a9(r99,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11504,11504 NO_REX_SSE_REGS:11504,11504 SSE_REGS:11504,11504 MMX_REGS:18694,18694 INT_SSE_REGS:18694,18694 ALL_REGS:231518,231518 MEM:8628,8628
  a10(r97,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:13752,13752 NO_REX_SSE_REGS:13752,13752 SSE_REGS:13752,13752 MMX_REGS:21347,21347 INT_SSE_REGS:21347,21347 ALL_REGS:258428,258428 MEM:10314,10314
  a11(r104,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:2000,-1000 DIREG:4000,4000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000
  a12(r103,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:2000,-1000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000

   Insn 87(l0): point = 0
   Insn 86(l0): point = 2
   Insn 6(l0): point = 5
   Insn 80(l0): point = 7
   Insn 79(l0): point = 9
   Insn 78(l0): point = 11
   Insn 77(l0): point = 13
   Insn 72(l0): point = 16
   Insn 71(l0): point = 18
   Insn 70(l0): point = 20
   Insn 69(l0): point = 22
   Insn 68(l0): point = 24
   Insn 65(l0): point = 27
   Insn 64(l0): point = 29
   Insn 63(l0): point = 31
   Insn 98(l0): point = 33
   Insn 55(l0): point = 35
   Insn 54(l0): point = 37
   Insn 53(l0): point = 39
   Insn 52(l0): point = 41
   Insn 51(l0): point = 43
   Insn 50(l0): point = 45
   Insn 40(l0): point = 47
   Insn 97(l0): point = 49
   Insn 39(l0): point = 51
   Insn 38(l0): point = 53
   Insn 36(l0): point = 55
   Insn 35(l0): point = 57
   Insn 32(l0): point = 59
   Insn 96(l0): point = 61
   Insn 31(l0): point = 63
   Insn 30(l0): point = 65
   Insn 28(l0): point = 67
   Insn 27(l0): point = 69
   Insn 26(l0): point = 71
   Insn 25(l0): point = 73
   Insn 22(l0): point = 75
   Insn 19(l0): point = 78
   Insn 18(l0): point = 80
   Insn 99(l0): point = 82
   Insn 5(l0): point = 84
   Insn 14(l0): point = 86
   Insn 11(l0): point = 89
   Insn 10(l0): point = 91
   Insn 95(l0): point = 93
   Insn 2(l0): point = 95
   Insn 94(l0): point = 97
 a0(r96): [78..84] [27..47] [3..5]
 a1(r93): [30..59]
 a2(r101): [30..31]
 a3(r107): [32..33]
 a4(r100): [38..45]
 a5(r92): [44..75]
 a6(r106): [48..49]
 a7(r105): [60..61]
 a8(r91): [76..86]
 a9(r99): [81..82]
 a10(r97): [87..95]
 a11(r104): [92..93]
 a12(r103): [96..97]
Compressing live ranges: from 100 to 18 - 18%
Ranges after the compression:
 a0(r96): [12..13] [0..7]
 a1(r93): [2..9]
 a2(r101): [2..3]
 a3(r107): [4..5]
 a4(r100): [6..7]
 a5(r92): [6..11]
 a6(r106): [8..9]
 a7(r105): [10..11]
 a8(r91): [12..13]
 a9(r99): [12..13]
 a10(r97): [14..15]
 a11(r104): [14..15]
 a12(r103): [16..17]
+++Allocating 96 bytes for conflict table (uncompressed size 104)
;; a0(r96,l0) conflicts: a2(r101,l0) a1(r93,l0) a3(r107,l0) a4(r100,l0) a5(r92,l0) a8(r91,l0) a9(r99,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a1(r93,l0) conflicts: a0(r96,l0) a2(r101,l0) a3(r107,l0) a4(r100,l0) a5(r92,l0) a6(r106,l0)
;;     total conflict hard regs: 0 2 4 5
;;     conflict hard regs: 0 2 4 5

;; a2(r101,l0) conflicts: a0(r96,l0) a1(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r107,l0) conflicts: a0(r96,l0) a1(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r100,l0) conflicts: a0(r96,l0) a1(r93,l0) a5(r92,l0)
;;     total conflict hard regs: 1 2 4
;;     conflict hard regs: 1 2 4

;; a5(r92,l0) conflicts: a0(r96,l0) a1(r93,l0) a4(r100,l0) a6(r106,l0) a7(r105,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a6(r106,l0) conflicts: a1(r93,l0) a5(r92,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r105,l0) conflicts: a5(r92,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r91,l0) conflicts: a0(r96,l0) a9(r99,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r99,l0) conflicts: a0(r96,l0) a8(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r97,l0) conflicts: a11(r104,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a11(r104,l0) conflicts: a10(r97,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r103,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a1(r93)<->a7(r105)@245:move
  cp1:a0(r96)<->a6(r106)@245:move
  cp2:a2(r101)<->a3(r107)@30:shuffle
  cp3:a10(r97)<->a12(r103)@1000:move
  pref0:a3(r107)<-hr0@367
  pref1:a6(r106)<-hr0@367
  pref2:a7(r105)<-hr0@367
  pref3:a11(r104)<-hr4@1500
  pref4:a12(r103)<-hr5@1500
  pref5:a4(r100)<-hr5@367
  pref6:a0(r96)<-hr0@1498
  regions=1, blocks=8, points=18
    allocnos=13 (big 0), copies=4, conflicts=0, ranges=14

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 7 6 5 4 3 2
    all: 0r96 1r93 2r101 3r107 4r100 5r92 6r106 7r105 8r91 9r99 10r97 11r104 12r103
    modified regnos: 91 92 93 96 97 99 100 101 103 104 105 106 107
    border:
    Pressure: GENERAL_REGS=6
 Removing pref6:hr0@1498
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@105302
          2:( 0-3 5 6 36-43)@56628
            3:( 0 3 5 6 36-43)@9310
              4:( 3 6 36-43)@37848
                5:( 3 6 40-43)@27440
      Allocno a0r96 of GENERAL_REGS(15) has 10 avail. regs  3 6 36-43, node:  3 6 36-43 (confl regs =  0-2 4 5 7-35 44-74)
      Allocno a1r93 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 2 4 5 7-35 44-74)
      Allocno a2r101 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a3r107 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a4r100 of GENERAL_REGS(15) has 12 avail. regs  0 3 5 6 36-43, node:  0 3 5 6 36-43 (confl regs =  1 2 4 7-35 44-74)
      Allocno a5r92 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 1 4 5 7-35 44-74)
      Allocno a6r106 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a7r105 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a8r91 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a9r99 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a10r97 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Allocno a11r104 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a12r103 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Forming thread by copy 3:a10r97-a12r103 (freq=1000):
        Result (freq=3719): a10r97(1719) a12r103(2000)
      Forming thread by copy 1:a0r96-a6r106 (freq=245):
        Result (freq=2978): a0r96(2488) a6r106(490)
      Forming thread by copy 2:a2r101-a3r107 (freq=30):
        Result (freq=980): a2r101(490) a3r107(490)
      Pushing a7(r105,l0)(cost 0)
      Pushing a4(r100,l0)(cost 0)
      Forming thread by copy 0:a1r93-a7r105 (freq=245):
        Result (freq=1470): a1r93(980) a7r105(490)
        Making a1(r93,l0) colorable
      Pushing a3(r107,l0)(cost 0)
      Pushing a2(r101,l0)(cost 0)
      Pushing a5(r92,l0)(cost 0)
      Pushing a9(r99,l0)(cost 0)
      Pushing a1(r93,l0)(cost 6370)
      Pushing a8(r91,l0)(cost 0)
      Pushing a11(r104,l0)(cost 0)
      Pushing a6(r106,l0)(cost 0)
      Pushing a0(r96,l0)(cost 0)
      Pushing a10(r97,l0)(cost 0)
      Pushing a12(r103,l0)(cost 0)
      Popping a12(r103,l0)  -- assign reg 5
      Popping a10(r97,l0)  -- assign reg 5
      Popping a0(r96,l0)  -- assign reg 40
      Popping a6(r106,l0)  -- assign reg 0
      Popping a11(r104,l0)  -- assign reg 4
      Popping a8(r91,l0)  -- assign reg 0
      Popping a1(r93,l0)  -- assign reg 3
      Popping a9(r99,l0)  -- assign reg 1
      Popping a5(r92,l0)  -- assign reg 6
      Popping a2(r101,l0)  -- assign reg 0
      Popping a3(r107,l0)  -- assign reg 0
      Popping a4(r100,l0)  -- assign reg 5
      Popping a7(r105,l0)  -- assign reg 0
Disposition:
    8:r91  l0     0    5:r92  l0     6    1:r93  l0     3    0:r96  l0    40
   10:r97  l0     5    9:r99  l0     1    4:r100 l0     5    2:r101 l0     0
   12:r103 l0     5   11:r104 l0     4    7:r105 l0     0    6:r106 l0     0
    3:r107 l0     0
New iteration of spill/restore move
+++Costs: overall -492, reg -492, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_fread

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={10d,6u} r1={11d,3u} r2={10d,2u} r4={12d,5u} r5={15d,8u} r6={1d,7u} r7={1d,14u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r16={1d,6u} r17={11d,3u} r18={7d} r19={1d,7u} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={8d} r37={8d} r38={7d} r39={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r91={1d,3u,1e} r92={1d,6u} r93={1d,5u} r96={3d,4u} r97={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,2u} 
;;    total ref usage 615{525d,89u,1e} in 75{68 regular + 7 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 97 103 104
(note 7 1 94 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 94 7 2 2 (set (reg:DI 103)
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_file.c":37:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ arg ])
        (nil)))
(insn 2 94 95 2 (set (reg/v/f:DI 97 [ arg ])
        (reg:DI 103)) "cmodules/fbgc_file.c":37:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 103)
        (nil)))
(insn 95 2 3 2 (set (reg:SI 104)
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_file.c":37:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ argc ])
        (nil)))
(note 3 95 4 2 NOTE_INSN_DELETED)
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 9 4 10 2 (debug_marker) "cmodules/fbgc_file.c":39:2 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 104)
            (const_int 1 [0x1]))) "cmodules/fbgc_file.c":39:4 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 104)
        (nil)))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) "cmodules/fbgc_file.c":39:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 301614084 (nil)))
 -> 74)
;;  succ:       3 [71.9% (guessed)]  count:772127744 (estimated locally) (FALLTHRU)
;;              6 [28.1% (guessed)]  count:301614080 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 97

;; basic block 3, loop depth 0, count 772127746 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [71.9% (guessed)]  count:772127744 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 97
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 97
;; lr  def 	 17 [flags] 91 96 99
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 13 12 14 3 (debug_marker) "cmodules/fbgc_file.c":40:3 -1
     (nil))
(insn 14 13 15 3 (set (reg/v/f:DI 91 [ so ])
        (mem/f:DI (reg/v/f:DI 97 [ arg ]) [1 *arg_15(D)+0 S8 A64])) "cmodules/fbgc_file.c":40:32 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 97 [ arg ])
        (nil)))
(debug_insn 15 14 16 3 (var_location:DI so (reg/v/f:DI 91 [ so ])) "cmodules/fbgc_file.c":40:32 -1
     (nil))
(debug_insn 16 15 5 3 (debug_marker) "cmodules/fbgc_file.c":41:3 -1
     (nil))
(insn 5 16 99 3 (set (reg/v/f:DI 96 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_file.c":63:9 66 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 99 5 18 3 (set (reg/f:DI 99)
        (symbol_ref:DI ("fbgc_file_module") [flags 0x2]  <var_decl 0x7f7f56ce1990 fbgc_file_module>)) "cmodules/fbgc_file.c":41:5 66 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref:DI ("fbgc_file_module") [flags 0x2]  <var_decl 0x7f7f56ce1990 fbgc_file_module>)
        (nil)))
(insn 18 99 19 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 91 [ so ])
                    (const_int 13 [0xd])) [2 so_16->parent+0 S8 A8])
            (reg/f:DI 99))) "cmodules/fbgc_file.c":41:5 12 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (expr_list:REG_EQUAL (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 91 [ so ])
                        (const_int 13 [0xd])) [2 so_16->parent+0 S8 A8])
                (symbol_ref:DI ("fbgc_file_module") [flags 0x2]  <var_decl 0x7f7f56ce1990 fbgc_file_module>))
            (nil))))
(jump_insn 19 18 20 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 85)
            (pc))) "cmodules/fbgc_file.c":41:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 707917988 (nil)))
 -> 85)
;;  succ:       4 [34.1% (guessed)]  count:263063923 (estimated locally) (FALLTHRU)
;;              7 [65.9% (guessed)]  count:509063823 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 91 96

;; basic block 4, loop depth 0, count 263063923 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [34.1% (guessed)]  count:263063923 (estimated locally) (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(6){ }u19(7){ }u20(16){ }u21(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 92 93 96 100 101 105 106 107
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 21 20 22 4 (debug_marker) "cmodules/fbgc_file.c":42:4 -1
     (nil))
(insn 22 21 23 4 (set (reg/v/f:DI 92 [ fs ])
        (mem/f:DI (plus:DI (reg/v/f:DI 91 [ so ])
                (const_int 21 [0x15])) [3 so_16->cstruct+0 S8 A8])) "cmodules/fbgc_file.c":42:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 91 [ so ])
        (nil)))
(debug_insn 23 22 24 4 (var_location:DI fs (reg/v/f:DI 92 [ fs ])) "cmodules/fbgc_file.c":42:25 -1
     (nil))
(debug_insn 24 23 25 4 (debug_marker) "cmodules/fbgc_file.c":46:4 -1
     (nil))
(insn 25 24 26 4 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) "cmodules/fbgc_file.c":46:4 67 {*movsi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:DI 4 si)
        (const_int 0 [0])) "cmodules/fbgc_file.c":46:4 66 {*movdi_internal}
     (nil))
(insn 27 26 28 4 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 92 [ fs ]) [5 fs_17->fp+0 S8 A8])) "cmodules/fbgc_file.c":46:4 66 {*movdi_internal}
     (nil))
(call_insn 28 27 29 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fseek") [flags 0x41]  <function_decl 0x7f7f56b7d300 fseek>) [0 fseek S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":46:4 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("fseek") [flags 0x41]  <function_decl 0x7f7f56b7d300 fseek>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(debug_insn 29 28 30 4 (debug_marker) "cmodules/fbgc_file.c":47:5 -1
     (nil))
(insn 30 29 31 4 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 92 [ fs ]) [5 fs_17->fp+0 S8 A8])) "cmodules/fbgc_file.c":47:26 66 {*movdi_internal}
     (nil))
(call_insn 31 30 96 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ftell") [flags 0x41]  <function_decl 0x7f7f56b7d400 ftell>) [0 ftell S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":47:26 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("ftell") [flags 0x41]  <function_decl 0x7f7f56b7d400 ftell>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 96 31 32 4 (set (reg:DI 105)
        (reg:DI 0 ax)) "cmodules/fbgc_file.c":47:26 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 32 96 33 4 (set (reg/v:DI 93 [ file_text_len ])
        (reg:DI 105)) "cmodules/fbgc_file.c":47:26 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil)))
(debug_insn 33 32 34 4 (var_location:DI file_text_len (reg/v:DI 93 [ file_text_len ])) "cmodules/fbgc_file.c":47:26 -1
     (nil))
(debug_insn 34 33 35 4 (debug_marker) "cmodules/fbgc_file.c":48:6 -1
     (nil))
(insn 35 34 36 4 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 92 [ fs ]) [5 fs_17->fp+0 S8 A8])) "cmodules/fbgc_file.c":48:6 66 {*movdi_internal}
     (nil))
(call_insn 36 35 37 4 (call (mem:QI (symbol_ref:DI ("rewind") [flags 0x41]  <function_decl 0x7f7f56b7d500 rewind>) [0 rewind S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_file.c":48:6 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("rewind") [flags 0x41]  <function_decl 0x7f7f56b7d500 rewind>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(debug_insn 37 36 38 4 (debug_marker) "cmodules/fbgc_file.c":50:6 -1
     (nil))
(insn 38 37 39 4 (set (reg:SI 5 di)
        (subreg:SI (reg/v:DI 93 [ file_text_len ]) 0)) "cmodules/fbgc_file.c":50:33 67 {*movsi_internal}
     (nil))
(call_insn 39 38 97 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_str_object_empty") [flags 0x41]  <function_decl 0x7f7f56cf9200 new_fbgc_str_object_empty>) [0 new_fbgc_str_object_empty S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":50:33 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_str_object_empty") [flags 0x41]  <function_decl 0x7f7f56cf9200 new_fbgc_str_object_empty>)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 97 39 40 4 (set (reg:DI 106)
        (reg:DI 0 ax)) "cmodules/fbgc_file.c":50:33 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 40 97 41 4 (set (reg/v/f:DI 96 [ <retval> ])
        (reg:DI 106)) "cmodules/fbgc_file.c":50:33 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 106)
        (nil)))
(debug_insn 41 40 42 4 (var_location:DI str (reg/v/f:DI 96 [ <retval> ])) "cmodules/fbgc_file.c":50:33 -1
     (nil))
(debug_insn 42 41 43 4 (debug_marker) "cmodules/fbgc_file.c":51:4 -1
     (nil))
(debug_insn 43 42 44 4 (var_location:DI __ptr (plus:DI (reg/v/f:DI 96 [ <retval> ])
        (const_int 13 [0xd]))) "cmodules/fbgc_file.c":51:23 -1
     (nil))
(debug_insn 44 43 45 4 (var_location:DI __size (const_int 1 [0x1])) "cmodules/fbgc_file.c":51:23 -1
     (nil))
(debug_insn 45 44 46 4 (var_location:DI __n (reg/v:DI 93 [ file_text_len ])) "cmodules/fbgc_file.c":51:23 -1
     (nil))
(debug_insn 46 45 47 4 (var_location:DI __stream (mem/f:DI (reg/v/f:DI 92 [ fs ]) [5 fs_17->fp+0 S8 A8])) "cmodules/fbgc_file.c":51:23 -1
     (nil))
(debug_insn 47 46 48 4 (debug_marker:BLK) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":284:1 -1
     (nil))
(debug_insn 48 47 49 4 (debug_marker) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":287:3 -1
     (nil))
(debug_insn 49 48 50 4 (debug_marker) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":297:3 -1
     (nil))
(insn 50 49 51 4 (parallel [
            (set (reg/f:DI 100)
                (plus:DI (reg/v/f:DI 96 [ <retval> ])
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":51:23 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 51 50 52 4 (set (reg:DI 2 cx)
        (mem/f:DI (reg/v/f:DI 92 [ fs ]) [5 fs_17->fp+0 S8 A8])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":297:10 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 92 [ fs ])
        (nil)))
(insn 52 51 53 4 (set (reg:DI 1 dx)
        (reg/v:DI 93 [ file_text_len ])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":297:10 66 {*movdi_internal}
     (nil))
(insn 53 52 54 4 (set (reg:DI 4 si)
        (const_int 1 [0x1])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":297:10 66 {*movdi_internal}
     (nil))
(insn 54 53 55 4 (set (reg:DI 5 di)
        (reg/f:DI 100)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":297:10 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100)
        (nil)))
(call_insn 55 54 98 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*fread") [flags 0x41]  <function_decl 0x7f7f56ba1100 __fread_alias>) [0 __fread_alias S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":297:10 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("*fread") [flags 0x41]  <function_decl 0x7f7f56ba1100 __fread_alias>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 98 55 56 4 (set (reg:DI 107)
        (reg:DI 0 ax)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":297:10 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(note 56 98 57 4 NOTE_INSN_DELETED)
(debug_insn 57 56 58 4 (var_location:DI __ptr (clobber (const_int 0 [0]))) "cmodules/fbgc_file.c":51:17 -1
     (nil))
(debug_insn 58 57 59 4 (var_location:DI __size (clobber (const_int 0 [0]))) "cmodules/fbgc_file.c":51:17 -1
     (nil))
(debug_insn 59 58 60 4 (var_location:DI __n (clobber (const_int 0 [0]))) "cmodules/fbgc_file.c":51:17 -1
     (nil))
(debug_insn 60 59 61 4 (var_location:DI __stream (clobber (const_int 0 [0]))) "cmodules/fbgc_file.c":51:17 -1
     (nil))
(debug_insn 61 60 62 4 (var_location:SI res (subreg:SI (reg:DI 107) 0)) "cmodules/fbgc_file.c":51:11 -1
     (nil))
(debug_insn 62 61 63 4 (debug_marker) "cmodules/fbgc_file.c":52:4 -1
     (nil))
(insn 63 62 64 4 (set (reg:DI 101 [ _31 ])
        (zero_extend:DI (subreg:SI (reg:DI 107) 0))) "cmodules/fbgc_file.c":52:4 114 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg:DI 107)
        (nil)))
(insn 64 63 65 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 101 [ _31 ])
            (reg/v:DI 93 [ file_text_len ]))) "cmodules/fbgc_file.c":52:4 12 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 101 [ _31 ])
        (expr_list:REG_DEAD (reg/v:DI 93 [ file_text_len ])
            (nil))))
(jump_insn 65 64 66 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 85)
            (pc))) "cmodules/fbgc_file.c":52:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 85)
;;  succ:       7 [100.0% (guessed)]  count:262958698 (estimated locally)
;;              5 [0.0% (guessed)]  count:105225 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96

;; basic block 5, loop depth 0, count 105226 (estimated locally)
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [0.0% (guessed)]  count:105225 (estimated locally) (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u60(6){ }u61(7){ }u62(16){ }u63(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 66 65 67 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 67 66 68 5 (debug_marker) "cmodules/fbgc_file.c":52:4 -1
     (nil))
(insn 68 67 69 5 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.5734") [flags 0x2]  <var_decl 0x7f7f568a9480 __PRETTY_FUNCTION__>)) "cmodules/fbgc_file.c":52:4 66 {*movdi_internal}
     (nil))
(insn 69 68 70 5 (set (reg:SI 1 dx)
        (const_int 52 [0x34])) "cmodules/fbgc_file.c":52:4 67 {*movsi_internal}
     (nil))
(insn 70 69 71 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f7f568f91b0 *.LC0>)) "cmodules/fbgc_file.c":52:4 66 {*movdi_internal}
     (nil))
(insn 71 70 72 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f7f568f9240 *.LC1>)) "cmodules/fbgc_file.c":52:4 66 {*movdi_internal}
     (nil))
(call_insn 72 71 73 5 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f7f56ba1c00 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_file.c":52:4 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f7f56ba1c00 __assert_fail>)
                        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                            (expr_list:REG_NORETURN (const_int 0 [0])
                                (expr_list:REG_EH_REGION (const_int 0 [0])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 73 72 74)
;; basic block 6, loop depth 0, count 301614079 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [28.1% (guessed)]  count:301614080 (estimated locally)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u69(6){ }u70(7){ }u71(16){ }u72(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 96
(code_label 74 73 75 6 4 (nil) [1 uses])
(note 75 74 76 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 76 75 77 6 (debug_marker) "cmodules/fbgc_file.c":60:3 -1
     (nil))
(insn 77 76 78 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7f568f92d0 *.LC2>)) "cmodules/fbgc_file.c":60:3 66 {*movdi_internal}
     (nil))
(insn 78 77 79 6 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_file.c":60:3 67 {*movsi_internal}
     (nil))
(insn 79 78 80 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_file.c":60:3 69 {*movqi_internal}
     (nil))
(call_insn 80 79 6 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f7f56cd6d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":60:3 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f7f56cd6d00 cprintf>)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 6 80 85 6 (set (reg/v/f:DI 96 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_file.c":63:9 66 {*movdi_internal}
     (nil))
;;  succ:       7 [always]  count:301614079 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96

;; basic block 7, loop depth 0, count 1073636600 (estimated locally), maybe hot
;;  prev block 6, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [65.9% (guessed)]  count:509063823 (estimated locally)
;;              4 [100.0% (guessed)]  count:262958698 (estimated locally)
;;              6 [always]  count:301614079 (estimated locally) (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u77(6){ }u78(7){ }u79(16){ }u80(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96
;; lr  def 	 0 [ax]
(code_label 85 6 88 7 3 (nil) [2 uses])
(note 88 85 86 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 86 88 87 7 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 96 [ <retval> ])) "cmodules/fbgc_file.c":64:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 96 [ <retval> ])
        (nil)))
(insn 87 86 0 7 (use (reg/i:DI 0 ax)) "cmodules/fbgc_file.c":64:1 -1
     (nil))
;;  succ:       EXIT [always]  count:1073636600 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function fbgc_freadline (fbgc_freadline, funcdef_no=59, decl_uid=5703, cgraph_uid=60, symbol_order=65)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 17 n_edges 24 count 20 (  1.2)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
;;
;; Loop 1
;;  header 8, multiple latches: 11 10
;;  depth 1, outer 0
;;  nodes: 8 11 10 9
;; 2 succs { 3 15 }
;; 3 succs { 4 16 }
;; 4 succs { 5 16 }
;; 5 succs { 6 7 }
;; 6 succs { 16 }
;; 7 succs { 8 }
;; 8 succs { 9 11 }
;; 9 succs { 14 10 }
;; 10 succs { 8 }
;; 11 succs { 8 12 }
;; 12 succs { 13 14 }
;; 13 succs { 16 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 1 }
scanning new insn with uid = 207.
verify found no changes in insn with uid = 207.
deleting insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 17 n_edges 24 count 20 (  1.2)
Reg 111 uninteresting
Reg 103: def dominates all uses has unique first use
Reg 112 uninteresting
Reg 105 uninteresting
Reg 83 uninteresting
Reg 97: def dominates all uses has unique first use
Reg 98 uninteresting (no unique first use)
Reg 113 uninteresting
Reg 99: def dominates all uses has unique first use
Reg 114 uninteresting
Reg 100 uninteresting
Reg 106 uninteresting
Reg 107: local to bb 14 def dominates all uses has unique first use
Reg 115 uninteresting
Reg 108: local to bb 14 def dominates all uses has unique first use
Reg 97 not local to one basic block
Reg 99 not local to one basic block
Reg 103 not local to one basic block
Examining insn 133, def for 107
  all ok
Examining insn 151, def for 108
  all ok
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
;;
;; Loop 1
;;  header 8, multiple latches: 11 10
;;  depth 1, outer 0
;;  nodes: 8 11 10 9
;; 2 succs { 3 15 }
;; 3 succs { 4 16 }
;; 4 succs { 5 16 }
;; 5 succs { 6 7 }
;; 6 succs { 16 }
;; 7 succs { 8 }
;; 8 succs { 9 11 }
;; 9 succs { 14 10 }
;; 10 succs { 8 }
;; 11 succs { 8 12 }
;; 12 succs { 13 14 }
;; 13 succs { 16 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 105: (insn_list:REG_DEP_TRUE 207 (nil))

Pass 0 for finding pseudo/allocno costs

    a6 (r115,l0) best AREG, allocno AREG
    a24 (r114,l1) best AREG, allocno AREG
    a11 (r113,l0) best AREG, allocno AREG
    a16 (r112,l0) best SIREG, allocno SIREG
    a17 (r111,l0) best DIREG, allocno DIREG
    a3 (r109,l0) best DIREG, allocno DIREG
    a4 (r108,l0) best DREG, allocno DREG
    a7 (r107,l0) best SIREG, allocno SIREG
    a8 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a15 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a14 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r102,l0) best AREG, allocno AREG
    a22 (r101,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a5 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a23 (r100,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a21 (r99,l1) best SIREG, allocno SIREG
    a2 (r99,l0) best SIREG, allocno SIREG
    a20 (r98,l1) best CREG, allocno CREG
    a10 (r98,l0) best CREG, allocno CREG
    a19 (r97,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a13 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a18 (r95,l1) best DREG, allocno DREG
    a9 (r95,l0) best DREG, allocno DREG
    a12 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r102,l0) costs: AREG:-405,-405 DREG:810,810 CREG:810,810 BREG:810,810 SIREG:810,810 DIREG:810,810 AD_REGS:810,810 CLOBBERED_REGS:810,810 Q_REGS:810,810 NON_Q_REGS:810,810 TLS_GOTBASE_REGS:810,810 GENERAL_REGS:810,810 SSE_FIRST_REG:6416,6416 NO_REX_SSE_REGS:6416,6416 SSE_REGS:6416,6416 MMX_REGS:8641,8641 INT_SSE_REGS:8641,8641 ALL_REGS:141940,141940 MEM:3146,3146
  a1(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2776,10776 NO_REX_SSE_REGS:2776,10776 SSE_REGS:2776,10776 MMX_REGS:4428,17428 INT_SSE_REGS:4428,17428 ALL_REGS:64766,276766 MEM:2082,8082
  a2(r99,l0) costs: AREG:80,80 DREG:80,80 CREG:80,80 BREG:80,80 SIREG:-40,-40 DIREG:80,80 AD_REGS:80,80 CLOBBERED_REGS:80,80 Q_REGS:80,80 NON_Q_REGS:80,80 TLS_GOTBASE_REGS:80,80 GENERAL_REGS:80,80 SSE_FIRST_REG:752,752 NO_REX_SSE_REGS:752,752 SSE_REGS:752,752 MMX_REGS:952,952 INT_SSE_REGS:952,952 ALL_REGS:15680,15680 MEM:312,312
  a3(r109,l0) costs: AREG:80,80 DREG:80,80 CREG:80,80 BREG:80,80 SIREG:80,80 DIREG:-40,-40 AD_REGS:80,80 CLOBBERED_REGS:80,80 Q_REGS:80,80 NON_Q_REGS:80,80 TLS_GOTBASE_REGS:80,80 GENERAL_REGS:80,80 SSE_FIRST_REG:640,640 NO_REX_SSE_REGS:640,640 SSE_REGS:640,640 MMX_REGS:1040,1040 INT_SSE_REGS:1040,1040 ALL_REGS:16960,16960 MEM:480,480
  a4(r108,l0) costs: AREG:80,80 DREG:-40,-40 CREG:80,80 BREG:80,80 SIREG:80,80 DIREG:80,80 AD_REGS:80,80 CLOBBERED_REGS:80,80 Q_REGS:80,80 NON_Q_REGS:80,80 TLS_GOTBASE_REGS:80,80 GENERAL_REGS:80,80 SSE_FIRST_REG:640,640 NO_REX_SSE_REGS:640,640 SSE_REGS:640,640 MMX_REGS:1040,1040 INT_SSE_REGS:1040,1040 ALL_REGS:16960,16960 MEM:480,480
  a5(r101,l0) costs: AREG:160,160 DREG:160,160 CREG:160,160 BREG:160,160 SIREG:160,160 DIREG:160,160 AD_REGS:160,160 CLOBBERED_REGS:160,160 Q_REGS:160,160 NON_Q_REGS:160,160 TLS_GOTBASE_REGS:160,160 GENERAL_REGS:160,160 SSE_FIRST_REG:1472,13958 NO_REX_SSE_REGS:1472,13958 SSE_REGS:1472,13958 MMX_REGS:2072,21158 INT_SSE_REGS:2072,21158 ALL_REGS:32720,344660 MEM:792,7713
  a6(r115,l0) costs: AREG:-40,-40 DREG:80,80 CREG:80,80 BREG:80,80 SIREG:80,80 DIREG:80,80 AD_REGS:80,80 CLOBBERED_REGS:80,80 Q_REGS:80,80 NON_Q_REGS:80,80 TLS_GOTBASE_REGS:80,80 GENERAL_REGS:80,80 SSE_FIRST_REG:320,320 NO_REX_SSE_REGS:320,320 SSE_REGS:320,320 MMX_REGS:1040,1040 INT_SSE_REGS:1040,1040 ALL_REGS:16960,16960 MEM:440,440
  a7(r107,l0) costs: AREG:80,80 DREG:80,80 CREG:80,80 BREG:80,80 SIREG:-40,-40 DIREG:80,80 AD_REGS:80,80 CLOBBERED_REGS:80,80 Q_REGS:80,80 NON_Q_REGS:80,80 TLS_GOTBASE_REGS:80,80 GENERAL_REGS:80,80 SSE_FIRST_REG:640,640 NO_REX_SSE_REGS:640,640 SSE_REGS:640,640 MMX_REGS:1040,1040 INT_SSE_REGS:1040,1040 ALL_REGS:16960,16960 MEM:480,480
  a8(r106,l0) costs: AREG:80,80 DREG:80,80 CREG:80,80 BREG:80,80 SIREG:80,80 DIREG:80,80 AD_REGS:80,80 CLOBBERED_REGS:80,80 Q_REGS:80,80 NON_Q_REGS:80,80 TLS_GOTBASE_REGS:80,80 GENERAL_REGS:80,80 SSE_FIRST_REG:720,720 NO_REX_SSE_REGS:720,720 SSE_REGS:720,720 MMX_REGS:1120,1120 INT_SSE_REGS:1120,1120 ALL_REGS:17040,17040 MEM:480,480
  a9(r95,l0) costs: AREG:64,64 DREG:-32,-32 CREG:64,64 BREG:64,64 SIREG:64,64 DIREG:64,64 AD_REGS:64,64 CLOBBERED_REGS:64,64 Q_REGS:64,64 NON_Q_REGS:64,64 TLS_GOTBASE_REGS:64,64 GENERAL_REGS:64,64 SSE_FIRST_REG:1120,8976 NO_REX_SSE_REGS:1120,8976 SSE_REGS:1120,8976 MMX_REGS:1550,14316 INT_SSE_REGS:1550,14316 ALL_REGS:25432,233616 MEM:534,5444
  a10(r98,l0) costs: AREG:64,64 DREG:64,64 CREG:-32,-32 BREG:64,64 SIREG:64,64 DIREG:64,64 AD_REGS:64,64 CLOBBERED_REGS:64,64 Q_REGS:64,64 NON_Q_REGS:64,64 TLS_GOTBASE_REGS:64,64 GENERAL_REGS:64,64 SSE_FIRST_REG:2016,4736 NO_REX_SSE_REGS:2016,4736 SSE_REGS:2016,4736 MMX_REGS:3193,7613 INT_SSE_REGS:3193,7613 ALL_REGS:44626,116706 MEM:1458,3158
  a11(r113,l0) costs: AREG:-72,-72 DREG:144,144 CREG:144,144 BREG:144,144 SIREG:144,144 DIREG:144,144 AD_REGS:144,144 CLOBBERED_REGS:144,144 Q_REGS:144,144 NON_Q_REGS:144,144 TLS_GOTBASE_REGS:144,144 GENERAL_REGS:144,144 SSE_FIRST_REG:576,576 NO_REX_SSE_REGS:576,576 SSE_REGS:576,576 MMX_REGS:1872,1872 INT_SSE_REGS:1872,1872 ALL_REGS:30528,30528 MEM:792,792
  a12(r83,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3048,3048 NO_REX_SSE_REGS:3048,3048 SSE_REGS:3048,3048 MMX_REGS:4804,4804 INT_SSE_REGS:4804,4804 ALL_REGS:64978,64978 MEM:2286,2286
  a13(r96,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:5320,5320 NO_REX_SSE_REGS:5320,5320 SSE_REGS:5320,5320 MMX_REGS:8354,8354 INT_SSE_REGS:8354,8354 ALL_REGS:110134,110134 MEM:3990,3990
  a14(r103,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:5950,5950 NO_REX_SSE_REGS:5950,5950 SSE_REGS:5950,5950 MMX_REGS:8150,8150 INT_SSE_REGS:8150,8150 ALL_REGS:133780,133780 MEM:3045,3045
  a15(r105,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4656,4656 NO_REX_SSE_REGS:4656,4656 SSE_REGS:4656,4656 MMX_REGS:6693,6693 INT_SSE_REGS:6693,6693 ALL_REGS:91956,91956 MEM:3201,3201
  a16(r112,l0) costs: AREG:810,810 DREG:810,810 CREG:810,810 BREG:810,810 SIREG:-405,-405 DIREG:810,810 AD_REGS:810,810 CLOBBERED_REGS:810,810 Q_REGS:810,810 NON_Q_REGS:810,810 TLS_GOTBASE_REGS:810,810 GENERAL_REGS:810,810 SSE_FIRST_REG:6480,6480 NO_REX_SSE_REGS:6480,6480 SSE_REGS:6480,6480 MMX_REGS:10530,10530 INT_SSE_REGS:10530,10530 ALL_REGS:171720,171720 MEM:4455,4455
  a17(r111,l0) costs: AREG:810,810 DREG:810,810 CREG:810,810 BREG:810,810 SIREG:810,810 DIREG:-405,-405 AD_REGS:810,810 CLOBBERED_REGS:810,810 Q_REGS:810,810 NON_Q_REGS:810,810 TLS_GOTBASE_REGS:810,810 GENERAL_REGS:810,810 SSE_FIRST_REG:3240,3240 NO_REX_SSE_REGS:3240,3240 SSE_REGS:3240,3240 MMX_REGS:10530,10530 INT_SSE_REGS:10530,10530 ALL_REGS:171720,171720 MEM:4455,4455
  a18(r95,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7856,7856 NO_REX_SSE_REGS:7856,7856 SSE_REGS:7856,7856 MMX_REGS:12766,12766 INT_SSE_REGS:12766,12766 ALL_REGS:208184,208184 MEM:4910,4910
  a19(r97,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:13000,13000 INT_SSE_REGS:13000,13000 ALL_REGS:212000,212000 MEM:6000,6000
  a20(r98,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2720,2720 NO_REX_SSE_REGS:2720,2720 SSE_REGS:2720,2720 MMX_REGS:4420,4420 INT_SSE_REGS:4420,4420 ALL_REGS:72080,72080 MEM:1700,1700
  a21(r99,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a22(r101,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:12486,12486 NO_REX_SSE_REGS:12486,12486 SSE_REGS:12486,12486 MMX_REGS:19086,19086 INT_SSE_REGS:19086,19086 ALL_REGS:311940,311940 MEM:6921,6921
  a23(r100,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19280,19280 NO_REX_SSE_REGS:19280,19280 SSE_REGS:19280,19280 MMX_REGS:27580,27580 INT_SSE_REGS:27580,27580 ALL_REGS:451920,451920 MEM:9300,9300
  a24(r114,l1) costs: AREG:-1000,-1000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000


Pass 1 for finding pseudo/allocno costs

    r115: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r102: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r99: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r99,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r98,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r95: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r95,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r102,l0) costs: AREG:810,-405 DREG:1620,1620 CREG:1620,1620 BREG:1620,1620 SIREG:1620,1620 DIREG:1620,1620 AD_REGS:810,810 CLOBBERED_REGS:810,810 Q_REGS:810,810 NON_Q_REGS:1620,1620 TLS_GOTBASE_REGS:1620,1620 GENERAL_REGS:810,810 SSE_FIRST_REG:10608,10608 NO_REX_SSE_REGS:10608,10608 SSE_REGS:10608,10608 MMX_REGS:16762,16762 INT_SSE_REGS:11497,11497 ALL_REGS:144796,144796 MEM:7956,7956
  a1(r97,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2776,10776 NO_REX_SSE_REGS:2776,10776 SSE_REGS:2776,10776 MMX_REGS:4511,17511 INT_SSE_REGS:4511,17511 ALL_REGS:65264,277264 MEM:2082,8082
  a2(r99,l0) costs: AREG:160,160 DREG:160,160 CREG:160,160 BREG:160,160 SIREG:80,-40 DIREG:160,160 AD_REGS:160,160 CLOBBERED_REGS:80,80 Q_REGS:160,160 NON_Q_REGS:80,80 TLS_GOTBASE_REGS:80,80 GENERAL_REGS:80,80 SSE_FIRST_REG:1216,1216 NO_REX_SSE_REGS:1216,1216 SSE_REGS:1216,1216 MMX_REGS:1904,1904 INT_SSE_REGS:1384,1384 ALL_REGS:16112,16112 MEM:912,912
  a3(r109,l0) costs: AREG:160,160 DREG:160,160 CREG:160,160 BREG:160,160 SIREG:160,160 DIREG:80,-40 AD_REGS:160,160 CLOBBERED_REGS:80,80 Q_REGS:160,160 NON_Q_REGS:80,80 TLS_GOTBASE_REGS:80,80 GENERAL_REGS:80,80 SSE_FIRST_REG:960,960 NO_REX_SSE_REGS:960,960 SSE_REGS:960,960 MMX_REGS:1560,1560 INT_SSE_REGS:1040,1040 ALL_REGS:16960,16960 MEM:720,720
  a4(r108,l0) costs: AREG:160,160 DREG:80,-40 CREG:160,160 BREG:160,160 SIREG:160,160 DIREG:160,160 AD_REGS:80,80 CLOBBERED_REGS:80,80 Q_REGS:80,80 NON_Q_REGS:160,160 TLS_GOTBASE_REGS:80,80 GENERAL_REGS:80,80 SSE_FIRST_REG:960,960 NO_REX_SSE_REGS:960,960 SSE_REGS:960,960 MMX_REGS:1560,1560 INT_SSE_REGS:1040,1040 ALL_REGS:16960,16960 MEM:720,720
  a5(r101,l0) costs: GENERAL_REGS:160,160 SSE_FIRST_REG:1936,15064 NO_REX_SSE_REGS:1936,15064 SSE_REGS:1936,15064 MMX_REGS:3024,24036 INT_SSE_REGS:2504,23516 ALL_REGS:33152,347018 MEM:1392,9918
  a6(r115,l0) costs: AREG:80,-40 DREG:160,160 CREG:160,160 BREG:160,160 SIREG:160,160 DIREG:160,160 AD_REGS:80,80 CLOBBERED_REGS:80,80 Q_REGS:80,80 NON_Q_REGS:160,160 TLS_GOTBASE_REGS:160,160 GENERAL_REGS:80,80 SSE_FIRST_REG:960,960 NO_REX_SSE_REGS:960,960 SSE_REGS:960,960 MMX_REGS:1560,1560 INT_SSE_REGS:1040,1040 ALL_REGS:16960,16960 MEM:680,680
  a7(r107,l0) costs: AREG:160,160 DREG:160,160 CREG:160,160 BREG:160,160 SIREG:80,-40 DIREG:160,160 AD_REGS:160,160 CLOBBERED_REGS:80,80 Q_REGS:160,160 NON_Q_REGS:80,80 TLS_GOTBASE_REGS:80,80 GENERAL_REGS:80,80 SSE_FIRST_REG:960,960 NO_REX_SSE_REGS:960,960 SSE_REGS:960,960 MMX_REGS:1560,1560 INT_SSE_REGS:1040,1040 ALL_REGS:16960,16960 MEM:720,720
  a8(r106,l0) costs: GENERAL_REGS:80,80 SSE_FIRST_REG:720,720 NO_REX_SSE_REGS:720,720 SSE_REGS:720,720 MMX_REGS:1120,1120 INT_SSE_REGS:1120,1120 ALL_REGS:17040,17040 MEM:480,480
  a9(r95,l0) costs: AREG:128,128 DREG:64,-32 CREG:128,128 BREG:128,128 SIREG:128,128 DIREG:128,128 AD_REGS:64,64 CLOBBERED_REGS:64,64 Q_REGS:64,64 NON_Q_REGS:128,128 TLS_GOTBASE_REGS:64,64 GENERAL_REGS:64,64 SSE_FIRST_REG:1520,9376 NO_REX_SSE_REGS:1520,9376 SSE_REGS:1520,9376 MMX_REGS:2398,15164 INT_SSE_REGS:1982,14748 ALL_REGS:25864,234048 MEM:1086,5996
  a10(r98,l0) costs: AREG:128,128 DREG:128,128 CREG:64,-32 BREG:128,128 SIREG:128,128 DIREG:128,128 AD_REGS:128,128 CLOBBERED_REGS:64,64 Q_REGS:64,64 NON_Q_REGS:128,128 TLS_GOTBASE_REGS:64,64 GENERAL_REGS:64,64 SSE_FIRST_REG:2272,4992 NO_REX_SSE_REGS:2272,4992 SSE_REGS:2272,4992 MMX_REGS:3692,8112 INT_SSE_REGS:3276,7696 ALL_REGS:45124,117204 MEM:1650,3350
  a11(r113,l0) costs: AREG:144,-72 DREG:288,288 CREG:288,288 BREG:288,288 SIREG:288,288 DIREG:288,288 AD_REGS:144,144 CLOBBERED_REGS:144,144 Q_REGS:144,144 NON_Q_REGS:288,288 TLS_GOTBASE_REGS:288,288 GENERAL_REGS:144,144 SSE_FIRST_REG:1728,1728 NO_REX_SSE_REGS:1728,1728 SSE_REGS:1728,1728 MMX_REGS:2808,2808 INT_SSE_REGS:1872,1872 ALL_REGS:30528,30528 MEM:1224,1224
  a12(r83,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:3048,3048 NO_REX_SSE_REGS:3048,3048 SSE_REGS:3048,3048 MMX_REGS:4953,4953 INT_SSE_REGS:4953,4953 ALL_REGS:65872,65872 MEM:2286,2286
  a13(r96,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:5320,5320 NO_REX_SSE_REGS:5320,5320 SSE_REGS:5320,5320 MMX_REGS:8645,8645 INT_SSE_REGS:8645,8645 ALL_REGS:111880,111880 MEM:3990,3990
  a14(r103,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:6760,6760 NO_REX_SSE_REGS:6760,6760 SSE_REGS:6760,6760 MMX_REGS:10580,10580 INT_SSE_REGS:10580,10580 ALL_REGS:136210,136210 MEM:5070,5070
  a15(r105,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4656,4656 NO_REX_SSE_REGS:4656,4656 SSE_REGS:4656,4656 MMX_REGS:7566,7566 INT_SSE_REGS:7566,7566 ALL_REGS:93702,93702 MEM:3492,3492
  a16(r112,l0) costs: AREG:1620,1620 DREG:1620,1620 CREG:1620,1620 BREG:1620,1620 SIREG:810,-405 DIREG:1620,1620 AD_REGS:1620,1620 CLOBBERED_REGS:810,810 Q_REGS:1620,1620 NON_Q_REGS:810,810 TLS_GOTBASE_REGS:810,810 GENERAL_REGS:810,810 SSE_FIRST_REG:9720,9720 NO_REX_SSE_REGS:9720,9720 SSE_REGS:9720,9720 MMX_REGS:15795,15795 INT_SSE_REGS:10530,10530 ALL_REGS:171720,171720 MEM:6885,6885
  a17(r111,l0) costs: AREG:1620,1620 DREG:1620,1620 CREG:1620,1620 BREG:1620,1620 SIREG:1620,1620 DIREG:810,-405 AD_REGS:1620,1620 CLOBBERED_REGS:810,810 Q_REGS:1620,1620 NON_Q_REGS:810,810 TLS_GOTBASE_REGS:810,810 GENERAL_REGS:810,810 SSE_FIRST_REG:9720,9720 NO_REX_SSE_REGS:9720,9720 SSE_REGS:9720,9720 MMX_REGS:15795,15795 INT_SSE_REGS:10530,10530 ALL_REGS:171720,171720 MEM:6885,6885
  a18(r95,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7856,7856 NO_REX_SSE_REGS:7856,7856 SSE_REGS:7856,7856 MMX_REGS:12766,12766 INT_SSE_REGS:12766,12766 ALL_REGS:208184,208184 MEM:4910,4910
  a19(r97,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:13000,13000 INT_SSE_REGS:13000,13000 ALL_REGS:212000,212000 MEM:6000,6000
  a20(r98,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2720,2720 NO_REX_SSE_REGS:2720,2720 SSE_REGS:2720,2720 MMX_REGS:4420,4420 INT_SSE_REGS:4420,4420 ALL_REGS:72080,72080 MEM:1700,1700
  a21(r99,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a22(r101,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:13128,13128 NO_REX_SSE_REGS:13128,13128 SSE_REGS:13128,13128 MMX_REGS:21012,21012 INT_SSE_REGS:21012,21012 ALL_REGS:313866,313866 MEM:8526,8526
  a23(r100,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21280,21280 NO_REX_SSE_REGS:21280,21280 SSE_REGS:21280,21280 MMX_REGS:33580,33580 INT_SSE_REGS:33580,33580 ALL_REGS:457920,457920 MEM:14300,14300
  a24(r114,l1) costs: AREG:2000,-1000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:4000,4000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:4000,4000 TLS_GOTBASE_REGS:4000,4000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000

   Insn 184(l0): point = 0
   Insn 183(l0): point = 2
   Insn 10(l0): point = 5
   Insn 177(l0): point = 7
   Insn 176(l0): point = 9
   Insn 175(l0): point = 11
   Insn 174(l0): point = 13
   Insn 205(l0): point = 16
   Insn 167(l0): point = 18
   Insn 166(l0): point = 20
   Insn 165(l0): point = 22
   Insn 164(l0): point = 24
   Insn 157(l0): point = 26
   Insn 156(l0): point = 28
   Insn 155(l0): point = 30
   Insn 154(l0): point = 32
   Insn 153(l0): point = 34
   Insn 152(l0): point = 36
   Insn 151(l0): point = 38
   Insn 141(l0): point = 40
   Insn 198(l0): point = 42
   Insn 140(l0): point = 44
   Insn 139(l0): point = 46
   Insn 137(l0): point = 48
   Insn 136(l0): point = 50
   Insn 135(l0): point = 52
   Insn 134(l0): point = 54
   Insn 133(l0): point = 56
   Insn 132(l0): point = 58
   Insn 203(l0): point = 61
   Insn 9(l0): point = 63
   Insn 123(l0): point = 65
   Insn 122(l0): point = 67
   Insn 121(l0): point = 69
   Insn 120(l0): point = 71
   Insn 119(l0): point = 73
   Insn 118(l0): point = 75
   Insn 115(l0): point = 78
   Insn 114(l0): point = 80
   Insn 7(l0): point = 83
   Insn 6(l0): point = 85
   Insn 60(l0): point = 87
   Insn 59(l0): point = 89
   Insn 56(l0): point = 91
   Insn 196(l0): point = 93
   Insn 55(l0): point = 95
   Insn 54(l0): point = 97
   Insn 199(l0): point = 100
   Insn 47(l0): point = 102
   Insn 46(l0): point = 104
   Insn 45(l0): point = 106
   Insn 44(l0): point = 108
   Insn 41(l0): point = 111
   Insn 40(l0): point = 113
   Insn 35(l0): point = 115
   Insn 32(l0): point = 117
   Insn 29(l0): point = 120
   Insn 28(l0): point = 122
   Insn 27(l0): point = 124
   Insn 25(l0): point = 127
   Insn 24(l0): point = 129
   Insn 207(l0): point = 131
   Insn 11(l0): point = 133
   Insn 20(l0): point = 135
   Insn 17(l0): point = 138
   Insn 16(l0): point = 140
   Insn 195(l0): point = 142
   Insn 2(l0): point = 144
   Insn 194(l0): point = 146
   Insn 82(l1): point = 149
   Insn 81(l1): point = 151
   Insn 78(l1): point = 153
   Insn 197(l1): point = 155
   Insn 77(l1): point = 157
   Insn 76(l1): point = 159
   Insn 109(l1): point = 162
   Insn 108(l1): point = 164
   Insn 105(l1): point = 166
   Insn 201(l1): point = 169
   Insn 5(l1): point = 171
   Insn 89(l1): point = 173
   Insn 86(l1): point = 176
   Insn 85(l1): point = 178
 a0(r102): [100..133] [61..63] [16..40] [3..5]
 a1(r97): [111..117] [78..99] [21..60]
 a2(r99): [78..91] [23..60]
 a3(r109): [29..36]
 a4(r108): [33..38]
 a5(r101): [78..83] [39..60]
 a6(r115): [41..42]
 a7(r107): [53..56]
 a8(r106): [57..58]
 a9(r95): [74..85]
 a10(r98): [111..115] [76..99]
 a11(r113): [92..93]
 a12(r83): [116..124]
 a13(r96): [118..135]
 a14(r103): [125..144]
 a15(r105): [130..131]
 a16(r112): [141..142]
 a17(r111): [145..146]
 a18(r95): [149..180]
 a19(r97): [149..180]
 a20(r98): [149..180]
 a21(r99): [149..180]
 a22(r101): [176..180] [149..171]
 a23(r100): [165..168] [149..153]
 a24(r114): [154..155]
 Rebuilding regno allocno list for 114
      Moving ranges of a22r101 to a5r101:  [176..180] [149..171]
 Rebuilding regno allocno list for 100
      Moving ranges of a21r99 to a2r99:  [149..180]
      Moving ranges of a20r98 to a10r98:  [149..180]
      Moving ranges of a19r97 to a1r97:  [149..180]
      Moving ranges of a18r95 to a9r95:  [149..180]
Compressing live ranges: from 181 to 38 - 20%
Ranges after the compression:
 a0(r102): [18..25] [12..13] [0..5]
 a1(r97): [30..37] [14..21] [2..11]
 a2(r99): [30..37] [14..15] [2..11]
 a3(r109): [2..3]
 a4(r108): [2..3]
 a5(r101): [30..37] [14..15] [4..11]
 a6(r115): [6..7]
 a7(r107): [8..9]
 a8(r106): [10..11]
 a9(r95): [30..37] [14..15]
 a10(r98): [30..37] [14..19]
 a11(r113): [16..17]
 a12(r83): [20..23]
 a13(r96): [22..25]
 a14(r103): [24..27]
 a15(r105): [24..25]
 a16(r112): [26..27]
 a17(r111): [28..29]
 a23(r100): [34..35] [30..31]
 a24(r114): [32..33]
+++Allocating 160 bytes for conflict table (uncompressed size 200)
;; a0(r102,l0) conflicts: a3(r109,l0) a4(r108,l0) a1(r97,l0) a2(r99,l0) a5(r101,l0) a10(r98,l0) a12(r83,l0) a13(r96,l0) a15(r105,l0) a14(r103,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a1(r97,l0) conflicts: a0(r102,l0) a3(r109,l0) a4(r108,l0) a2(r99,l0) a5(r101,l0) a6(r115,l0) a7(r107,l0) a8(r106,l0) a9(r95,l0) a10(r98,l0) a11(r113,l0) a12(r83,l0) a23(r100,l0) a24(r114,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a2(r99,l0) conflicts: a0(r102,l0) a3(r109,l0) a4(r108,l0) a1(r97,l0) a5(r101,l0) a6(r115,l0) a7(r107,l0) a8(r106,l0) a9(r95,l0) a10(r98,l0) a23(r100,l0) a24(r114,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a3(r109,l0) conflicts: a0(r102,l0) a4(r108,l0) a1(r97,l0) a2(r99,l0)
;;     total conflict hard regs: 1 2 4
;;     conflict hard regs: 1 2 4

;; a4(r108,l0) conflicts: a0(r102,l0) a3(r109,l0) a1(r97,l0) a2(r99,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a5(r101,l0) conflicts: a0(r102,l0) a1(r97,l0) a2(r99,l0) a6(r115,l0) a7(r107,l0) a8(r106,l0) a9(r95,l0) a10(r98,l0) a23(r100,l0) a24(r114,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a6(r115,l0) conflicts: a1(r97,l0) a2(r99,l0) a5(r101,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r107,l0) conflicts: a1(r97,l0) a2(r99,l0) a5(r101,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a8(r106,l0) conflicts: a1(r97,l0) a2(r99,l0) a5(r101,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r95,l0) conflicts: a1(r97,l0) a2(r99,l0) a5(r101,l0) a10(r98,l0) a23(r100,l0) a24(r114,l0)
;;     total conflict hard regs: 0 2 5
;;     conflict hard regs: 0 2 5

;; a10(r98,l0) conflicts: a0(r102,l0) a1(r97,l0) a2(r99,l0) a5(r101,l0) a9(r95,l0) a11(r113,l0) a23(r100,l0) a24(r114,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a11(r113,l0) conflicts: a1(r97,l0) a10(r98,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r83,l0) conflicts: a0(r102,l0) a1(r97,l0) a13(r96,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r96,l0) conflicts: a0(r102,l0) a12(r83,l0) a15(r105,l0) a14(r103,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r103,l0) conflicts: a0(r102,l0) a13(r96,l0) a15(r105,l0) a16(r112,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a15(r105,l0) conflicts: a0(r102,l0) a13(r96,l0) a14(r103,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r112,l0) conflicts: a14(r103,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r111,l0) conflicts:
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a23(r100,l0) conflicts: a1(r97,l0) a2(r99,l0) a5(r101,l0) a9(r95,l0) a10(r98,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a24(r114,l0) conflicts: a1(r97,l0) a2(r99,l0) a5(r101,l0) a9(r95,l0) a10(r98,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a7(r107)<->a8(r106)@5:shuffle
  cp1:a0(r102)<->a6(r115)@40:move
  cp2:a4(r108)<->a5(r101)@5:shuffle
  cp3:a23(r100)<->a24(r114)@1000:move
  cp4:a2(r99)<->a11(r113)@72:move
  cp5:a14(r103)<->a17(r111)@405:move
  pref0:a6(r115)<-hr0@60
  pref1:a24(r114)<-hr0@1500
  pref2:a11(r113)<-hr0@108
  pref3:a16(r112)<-hr4@607
  pref4:a17(r111)<-hr5@607
  pref5:a3(r109)<-hr5@60
  pref6:a4(r108)<-hr1@60
  pref7:a7(r107)<-hr4@60
  pref8:a0(r102)<-hr0@607
  pref9:a2(r99)<-hr4@60
  pref10:a10(r98)<-hr2@48
  pref11:a9(r95)<-hr1@48
  regions=2, blocks=17, points=38
    allocnos=25 (big 0), copies=6, conflicts=0, ranges=31

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r102 1r97 2r99 3r109 4r108 5r101 6r115 7r107 8r106 9r95 10r98 11r113 12r83 13r96 14r103 15r105 16r112 17r111 23r100 24r114
    modified regnos: 83 95 96 97 98 99 100 101 102 103 105 106 107 108 109 111 112 113 114 115
    border:
    Pressure: GENERAL_REGS=7
 Removing pref8:hr0@607
 Removing pref9:hr4@60
 Removing pref11:hr1@48
 Removing pref10:hr2@48
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@103548
          2:( 0-3 5 6 36-43)@24720
            3:( 0 3 5 6 36-43)@3040
              4:( 3 6 36-43)@14292
                5:( 3 6 40-43)@55780
      Allocno a0r102 of GENERAL_REGS(15) has 10 avail. regs  3 6 36-43, node:  3 6 36-43 (confl regs =  0-2 4 5 7-35 44-74)
      Allocno a1r97 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0-2 4 5 7-35 44-74)
      Allocno a2r99 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0-2 4 5 7-35 44-74)
      Allocno a3r109 of GENERAL_REGS(15) has 12 avail. regs  0 3 5 6 36-43, node:  0 3 5 6 36-43 (confl regs =  1 2 4 7-35 44-74)
      Allocno a4r108 of GENERAL_REGS(15) has 14 avail. regs  0 1 3-6 36-43, ^node:  0-6 36-43 (confl regs =  2 7-35 44-74)
      Allocno a5r101 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 1 4 5 7-35 44-74)
      Allocno a6r115 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a7r107 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 36-43, ^node:  0-6 36-43 (confl regs =  1 7-35 44-74)
      Allocno a8r106 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a9r95 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 2 5 7-35 44-74)
      Allocno a10r98 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 5 7-35 44-74)
      Allocno a11r113 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a12r83 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a13r96 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a14r103 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Allocno a15r105 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a16r112 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a17r111 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Allocno a23r100 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a24r114 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Forming thread by copy 3:a23r100-a24r114 (freq=1000):
        Result (freq=4660): a23r100(2660) a24r114(2000)
      Forming thread by copy 5:a14r103-a17r111 (freq=405):
        Result (freq=1655): a14r103(845) a17r111(810)
      Forming thread by copy 0:a7r107-a8r106 (freq=5):
        Result (freq=160): a7r107(80) a8r106(80)
      Forming thread by copy 2:a4r108-a5r101 (freq=5):
        Result (freq=1913): a4r108(80) a5r101(1833)
      Pushing a6(r115,l0)(cost 0)
      Pushing a3(r109,l0)(cost 0)
      Forming thread by copy 1:a0r102-a6r115 (freq=40):
        Result (freq=1001): a0r102(921) a6r115(80)
        Making a0(r102,l0) colorable
      Pushing a11(r113,l0)(cost 0)
      Pushing a8(r106,l0)(cost 0)
      Pushing a7(r107,l0)(cost 0)
      Pushing a12(r83,l0)(cost 0)
      Pushing a15(r105,l0)(cost 0)
      Pushing a13(r96,l0)(cost 0)
      Pushing a16(r112,l0)(cost 0)
      Pushing a0(r102,l0)(cost 7146)
      Pushing a17(r111,l0)(cost 0)
      Pushing a14(r103,l0)(cost 0)
      Pushing a4(r108,l0)(cost 0)
      Pushing a24(r114,l0)(cost 0)
        Making a1(r97,l0) colorable
      Forming thread by copy 4:a2r99-a11r113 (freq=72):
        Result (freq=256): a2r99(112) a11r113(144)
        Making a2(r99,l0) colorable
        Making a5(r101,l0) colorable
        Making a9(r95,l0) colorable
        Making a10(r98,l0) colorable
      Pushing a2(r99,l0)(cost 832)
      Pushing a10(r98,l0)(cost 3286)
      Pushing a9(r95,l0)(cost 5932)
      Pushing a1(r97,l0)(cost 8082)
      Pushing a5(r101,l0)(cost 9758)
      Pushing a23(r100,l0)(cost 0)
      Popping a23(r100,l0)  -- assign reg 0
      Popping a5(r101,l0)  -- assign reg 3
      Popping a1(r97,l0)  -- assign reg 6
      Popping a9(r95,l0)  -- assign reg 40
      Popping a10(r98,l0)  -- assign reg 41
      Popping a2(r99,l0)  -- assign reg 42
      Popping a24(r114,l0)  -- assign reg 0
      Popping a4(r108,l0)  -- assign reg 1
      Popping a14(r103,l0)  -- assign reg 5
      Popping a17(r111,l0)  -- assign reg 5
      Popping a0(r102,l0)  -- assign reg 40
      Popping a16(r112,l0)  -- assign reg 4
      Popping a13(r96,l0)  -- assign reg 0
      Popping a15(r105,l0)  -- assign reg 1
      Popping a12(r83,l0)  -- assign reg 1
      Popping a7(r107,l0)  -- assign reg 4
      Popping a8(r106,l0)  -- assign reg 4
      Popping a11(r113,l0)  -- assign reg 0
      Popping a3(r109,l0)  -- assign reg 5
      Popping a6(r115,l0)  -- assign reg 0
Disposition:
   12:r83  l0     1    9:r95  l0    40   13:r96  l0     0    1:r97  l0     6
   10:r98  l0    41    2:r99  l0    42   23:r100 l0     0    5:r101 l0     3
    0:r102 l0    40   14:r103 l0     5   15:r105 l0     1    8:r106 l0     4
    7:r107 l0     4    4:r108 l0     1    3:r109 l0     5   17:r111 l0     5
   16:r112 l0     4   11:r113 l0     0   24:r114 l0     0    6:r115 l0     0
New iteration of spill/restore move
+++Costs: overall -784, reg -784, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_freadline

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={15d,8u} r1={15d,4u} r2={13d,2u} r4={17d,7u} r5={21d,11u} r6={1d,16u} r7={1d,26u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r16={1d,15u} r17={21d,8u} r18={10d} r19={1d,16u} r20={11d} r21={11d} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={11d} r37={11d} r38={10d} r39={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r83={1d,2u} r95={2d,9u} r96={1d,3u,1e} r97={1d,8u} r98={1d,5u} r99={1d,2u} r100={1d,3u} r101={3d,10u} r102={4d,4u} r103={1d,2u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} 
;;    total ref usage 924{752d,171u,1e} in 149{139 regular + 10 call} insns.
(note 1 0 13 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 435522477 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [always]  count:435522477 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 103 111 112
(note 13 1 194 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 194 13 2 2 (set (reg:DI 111)
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_file.c":67:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ arg ])
        (nil)))
(insn 2 194 195 2 (set (reg/v/f:DI 103 [ arg ])
        (reg:DI 111)) "cmodules/fbgc_file.c":67:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 111)
        (nil)))
(insn 195 2 3 2 (set (reg:SI 112)
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_file.c":67:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ argc ])
        (nil)))
(note 3 195 4 2 NOTE_INSN_DELETED)
(note 4 3 15 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 15 4 16 2 (debug_marker) "cmodules/fbgc_file.c":69:2 -1
     (nil))
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112)
            (const_int 2 [0x2]))) "cmodules/fbgc_file.c":69:4 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 112)
        (nil)))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 171)
            (pc))) "cmodules/fbgc_file.c":69:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 301614084 (nil)))
 -> 171)
;;  succ:       3 [71.9% (guessed)]  count:313184213 (estimated locally) (FALLTHRU)
;;              15 [28.1% (guessed)]  count:122338264 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 103

;; basic block 3, loop depth 0, count 313184213 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [71.9% (guessed)]  count:313184213 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 103
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 103
;; lr  def 	 17 [flags] 96 102 105
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 19 18 20 3 (debug_marker) "cmodules/fbgc_file.c":70:3 -1
     (nil))
(insn 20 19 21 3 (set (reg/v/f:DI 96 [ so ])
        (mem/f:DI (reg/v/f:DI 103 [ arg ]) [1 *arg_26(D)+0 S8 A64])) "cmodules/fbgc_file.c":70:32 66 {*movdi_internal}
     (nil))
(debug_insn 21 20 22 3 (var_location:DI so (reg/v/f:DI 96 [ so ])) "cmodules/fbgc_file.c":70:32 -1
     (nil))
(debug_insn 22 21 11 3 (debug_marker) "cmodules/fbgc_file.c":71:3 -1
     (nil))
(insn 11 22 207 3 (set (reg/v/f:DI 102 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_file.c":114:9 66 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 207 11 24 3 (set (reg/f:DI 105)
        (symbol_ref:DI ("fbgc_file_module") [flags 0x2]  <var_decl 0x7f7f56ce1990 fbgc_file_module>)) "cmodules/fbgc_file.c":71:5 66 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref:DI ("fbgc_file_module") [flags 0x2]  <var_decl 0x7f7f56ce1990 fbgc_file_module>)
        (nil)))
(insn 24 207 25 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 96 [ so ])
                    (const_int 13 [0xd])) [2 so_27->parent+0 S8 A8])
            (reg/f:DI 105))) "cmodules/fbgc_file.c":71:5 12 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 105)
        (expr_list:REG_EQUAL (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 96 [ so ])
                        (const_int 13 [0xd])) [2 so_27->parent+0 S8 A8])
                (symbol_ref:DI ("fbgc_file_module") [flags 0x2]  <var_decl 0x7f7f56ce1990 fbgc_file_module>))
            (nil))))
(jump_insn 25 24 26 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 182)
            (pc))) "cmodules/fbgc_file.c":71:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 523986012 (nil)))
 -> 182)
;;  succ:       4 [51.2% (guessed)]  count:160350318 (estimated locally) (FALLTHRU)
;;              16 [48.8% (guessed)]  count:152833895 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96 102 103

;; basic block 4, loop depth 0, count 160350317 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [51.2% (guessed)]  count:160350318 (estimated locally) (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(6){ }u19(7){ }u20(16){ }u21(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96 102 103
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 103
;; lr  def 	 17 [flags] 83
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (set (reg/f:DI 83 [ _2 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 103 [ arg ])
                (const_int 8 [0x8])) [1 MEM[(struct fbgc_object * *)arg_26(D) + 8B]+0 S8 A64])) "cmodules/fbgc_file.c":71:44 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 103 [ arg ])
        (nil)))
(insn 28 27 29 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 83 [ _2 ]) [0 _2->type+0 S1 A8])
            (const_int 3 [0x3]))) "cmodules/fbgc_file.c":71:38 9 {*cmpqi_1}
     (nil))
(jump_insn 29 28 30 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 182)
            (pc))) "cmodules/fbgc_file.c":71:38 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 474808636 (nil)))
 -> 182)
;;  succ:       5 [55.8% (guessed)]  count:89443407 (estimated locally) (FALLTHRU)
;;              16 [44.2% (guessed)]  count:70906910 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 96 102

;; basic block 5, loop depth 0, count 89443407 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [55.8% (guessed)]  count:89443407 (estimated locally) (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(6){ }u26(7){ }u27(16){ }u28(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 96 102
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 96
;; lr  def 	 17 [flags] 97 98
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 31 30 32 5 (debug_marker) "cmodules/fbgc_file.c":72:4 -1
     (nil))
(insn 32 31 33 5 (set (reg/v/f:DI 97 [ fs ])
        (mem/f:DI (plus:DI (reg/v/f:DI 96 [ so ])
                (const_int 21 [0x15])) [3 so_27->cstruct+0 S8 A8])) "cmodules/fbgc_file.c":72:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 96 [ so ])
        (nil)))
(debug_insn 33 32 34 5 (var_location:DI fs (reg/v/f:DI 97 [ fs ])) "cmodules/fbgc_file.c":72:25 -1
     (nil))
(debug_insn 34 33 35 5 (debug_marker) "cmodules/fbgc_file.c":74:4 -1
     (nil))
(insn 35 34 36 5 (set (reg/v:SI 98 [ which_line ])
        (mem:SI (plus:DI (reg/f:DI 83 [ _2 ])
                (const_int 9 [0x9])) [6 MEM[(struct fbgc_int_object *)_2].content+0 S4 A8])) "cmodules/fbgc_file.c":74:8 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ _2 ])
        (nil)))
(debug_insn 36 35 37 5 (var_location:SI which_line (reg/v:SI 98 [ which_line ])) "cmodules/fbgc_file.c":74:8 -1
     (nil))
(debug_insn 37 36 40 5 (debug_marker) "cmodules/fbgc_file.c":75:4 -1
     (nil))
(insn 40 37 41 5 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 98 [ which_line ])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":75:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 41 40 42 5 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) "cmodules/fbgc_file.c":75:6 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (int_list:REG_BR_PROB 936732372 (nil)))
 -> 51)
;;  succ:       6 [12.8% (guessed)]  count:11412979 (estimated locally) (FALLTHRU)
;;              7 [87.2% (guessed)]  count:78030428 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 97 98 102

;; basic block 6, loop depth 0, count 11412979 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [12.8% (guessed)]  count:11412979 (estimated locally) (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u35(6){ }u36(7){ }u37(16){ }u38(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 102
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 42 41 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 43 42 44 6 (debug_marker) "cmodules/fbgc_file.c":76:5 -1
     (nil))
(insn 44 43 45 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f7f568f9cf0 *.LC3>)) "cmodules/fbgc_file.c":76:5 66 {*movdi_internal}
     (nil))
(insn 45 44 46 6 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_file.c":76:5 67 {*movsi_internal}
     (nil))
(insn 46 45 47 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_file.c":76:5 69 {*movqi_internal}
     (nil))
(call_insn 47 46 48 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f7f56cd6d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":76:5 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f7f56cd6d00 cprintf>)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(debug_insn 48 47 199 6 (debug_marker) "cmodules/fbgc_file.c":77:5 -1
     (nil))
(jump_insn 199 48 200 6 (set (pc)
        (label_ref 182)) "cmodules/fbgc_file.c":77:12 660 {jump}
     (nil)
 -> 182)
;;  succ:       16 [always]  count:11412979 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 102

(barrier 200 199 51)
;; basic block 7, loop depth 0, count 78030428 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [87.2% (guessed)]  count:78030428 (estimated locally)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u43(6){ }u44(7){ }u45(16){ }u46(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 97 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 97
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 95 99 101 113
(code_label 51 200 52 7 12 (nil) [1 uses])
(note 52 51 53 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 53 52 54 7 (debug_marker) "cmodules/fbgc_file.c":80:4 -1
     (nil))
(insn 54 53 55 7 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 97 [ fs ]) [5 fs_28->fp+0 S8 A8])) "cmodules/fbgc_file.c":80:22 66 {*movdi_internal}
     (nil))
(call_insn 55 54 196 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ftell") [flags 0x41]  <function_decl 0x7f7f56b7d400 ftell>) [0 ftell S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":80:22 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("ftell") [flags 0x41]  <function_decl 0x7f7f56b7d400 ftell>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 196 55 56 7 (set (reg:DI 113)
        (reg:DI 0 ax)) "cmodules/fbgc_file.c":80:22 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 56 196 57 7 (set (reg/v:DI 99 [ old_fp_loc ])
        (reg:DI 113)) "cmodules/fbgc_file.c":80:22 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 113)
        (nil)))
(debug_insn 57 56 58 7 (var_location:DI old_fp_loc (reg/v:DI 99 [ old_fp_loc ])) "cmodules/fbgc_file.c":80:22 -1
     (nil))
(debug_insn 58 57 59 7 (debug_marker) "cmodules/fbgc_file.c":82:4 -1
     (nil))
(insn 59 58 60 7 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 97 [ fs ]) [5 fs_28->fp+0 S8 A8])) "cmodules/fbgc_file.c":82:4 66 {*movdi_internal}
     (nil))
(call_insn 60 59 61 7 (call (mem:QI (symbol_ref:DI ("rewind") [flags 0x41]  <function_decl 0x7f7f56b7d500 rewind>) [0 rewind S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_file.c":82:4 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("rewind") [flags 0x41]  <function_decl 0x7f7f56b7d500 rewind>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(debug_insn 61 60 62 7 (debug_marker) "cmodules/fbgc_file.c":84:4 -1
     (nil))
(debug_insn 62 61 63 7 (var_location:SI c (const_int 0 [0])) "cmodules/fbgc_file.c":84:8 -1
     (nil))
(debug_insn 63 62 64 7 (debug_marker) "cmodules/fbgc_file.c":85:4 -1
     (nil))
(debug_insn 64 63 65 7 (var_location:SI count_char (const_int 0 [0])) "cmodules/fbgc_file.c":85:8 -1
     (nil))
(debug_insn 65 64 66 7 (debug_marker) "cmodules/fbgc_file.c":86:4 -1
     (nil))
(debug_insn 66 65 6 7 (var_location:SI count_line (const_int 0 [0])) "cmodules/fbgc_file.c":86:8 -1
     (nil))
(insn 6 66 7 7 (set (reg/v:SI 95 [ count_line ])
        (const_int 0 [0])) "cmodules/fbgc_file.c":86:8 67 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 7 6 70 7 (set (reg/v:SI 101 [ count_char ])
        (const_int 0 [0])) "cmodules/fbgc_file.c":85:8 67 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       8 [always]  count:78030428 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 95 97 98 99 101

;; basic block 8, loop depth 1, count 1073741824 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL)
;;  pred:       11 [91.8% (guessed)]  count:650718147 (estimated locally) (DFS_BACK)
;;              7 [always]  count:78030428 (estimated locally) (FALLTHRU)
;;              10 [always]  count:344993248 (estimated locally) (DFS_BACK)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u55(6){ }u56(7){ }u57(16){ }u58(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 95 97 98 99 101
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 97
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 100 114
(code_label 70 7 71 8 13 (nil) [2 uses])
(note 71 70 72 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 72 71 73 8 (var_location:SI count_line (reg/v:SI 95 [ count_line ])) -1
     (nil))
(debug_insn 73 72 74 8 (var_location:SI count_char (reg/v:SI 101 [ count_char ])) -1
     (nil))
(debug_insn 74 73 75 8 (debug_marker) "cmodules/fbgc_file.c":88:4 -1
     (nil))
(debug_insn 75 74 76 8 (debug_marker) "cmodules/fbgc_file.c":89:5 -1
     (nil))
(insn 76 75 77 8 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 97 [ fs ]) [5 fs_28->fp+0 S8 A8])) "cmodules/fbgc_file.c":89:9 66 {*movdi_internal}
     (nil))
(call_insn 77 76 197 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgetc") [flags 0x41]  <function_decl 0x7f7f56b75500 fgetc>) [0 fgetc S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":89:9 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("fgetc") [flags 0x41]  <function_decl 0x7f7f56b75500 fgetc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 197 77 78 8 (set (reg:SI 114)
        (reg:SI 0 ax)) "cmodules/fbgc_file.c":89:9 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 78 197 79 8 (set (reg/v:SI 100 [ c ])
        (reg:SI 114)) "cmodules/fbgc_file.c":89:9 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 114)
        (nil)))
(debug_insn 79 78 80 8 (var_location:SI c (reg/v:SI 100 [ c ])) "cmodules/fbgc_file.c":89:9 -1
     (nil))
(debug_insn 80 79 81 8 (debug_marker) "cmodules/fbgc_file.c":90:5 -1
     (nil))
(insn 81 80 82 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 100 [ c ])
            (const_int 10 [0xa]))) "cmodules/fbgc_file.c":90:7 11 {*cmpsi_1}
     (nil))
(jump_insn 82 81 83 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) "cmodules/fbgc_file.c":90:7 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 708669604 (nil)))
 -> 100)
;;  succ:       9 [34.0% (guessed)]  count:365072224 (estimated locally) (FALLTHRU)
;;              11 [66.0% (guessed)]  count:708669600 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 95 97 98 99 100 101

;; basic block 9, loop depth 1, count 365072220 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (HOT_PARTITION, RTL)
;;  pred:       8 [34.0% (guessed)]  count:365072224 (estimated locally) (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u68(6){ }u69(7){ }u70(16){ }u71(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 95 97 98 99 101
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 95 98
;; lr  def 	 17 [flags]
(note 83 82 84 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 84 83 85 9 (debug_marker) "cmodules/fbgc_file.c":91:6 -1
     (nil))
(insn 85 84 86 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 95 [ count_line ])
            (reg/v:SI 98 [ which_line ]))) "cmodules/fbgc_file.c":91:8 11 {*cmpsi_1}
     (nil))
(jump_insn 86 85 87 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) "cmodules/fbgc_file.c":91:8 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 59055804 (nil)))
 -> 127)
;;  succ:       14 [5.5% (guessed)]  count:20078972 (estimated locally) (LOOP_EXIT)
;;              10 [94.5% (guessed)]  count:344993248 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 95 97 98 99 101

;; basic block 10, loop depth 1, count 344993248 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (HOT_PARTITION, RTL)
;;  pred:       9 [94.5% (guessed)]  count:344993248 (estimated locally) (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u75(6){ }u76(7){ }u77(16){ }u78(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 95 97 98 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 95
;; lr  def 	 17 [flags] 95 101
(note 87 86 88 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 88 87 89 10 (debug_marker) "cmodules/fbgc_file.c":92:6 -1
     (nil))
(insn 89 88 90 10 (parallel [
            (set (reg/v:SI 95 [ count_line ])
                (plus:SI (reg/v:SI 95 [ count_line ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":92:16 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 90 89 91 10 (var_location:SI count_line (reg/v:SI 95 [ count_line ])) "cmodules/fbgc_file.c":92:16 -1
     (nil))
(debug_insn 91 90 92 10 (debug_marker) "cmodules/fbgc_file.c":93:6 -1
     (nil))
(debug_insn 92 91 93 10 (var_location:SI count_line (reg/v:SI 95 [ count_line ])) -1
     (nil))
(debug_insn 93 92 94 10 (var_location:SI count_char (const_int -1 [0xffffffffffffffff])) -1
     (nil))
(debug_insn 94 93 95 10 (debug_marker) "cmodules/fbgc_file.c":95:5 -1
     (nil))
(debug_insn 95 94 96 10 (var_location:SI count_char (const_int 0 [0])) "cmodules/fbgc_file.c":95:15 -1
     (nil))
(debug_insn 96 95 5 10 (debug_marker) "cmodules/fbgc_file.c":96:10 -1
     (nil))
(insn 5 96 201 10 (set (reg/v:SI 101 [ count_char ])
        (const_int 0 [0])) "cmodules/fbgc_file.c":95:15 67 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 201 5 202 10 (set (pc)
        (label_ref 70)) 660 {jump}
     (nil)
 -> 70)
;;  succ:       8 [always]  count:344993248 (estimated locally) (DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 95 97 98 99 101

(barrier 202 201 100)
;; basic block 11, loop depth 1, count 708669605 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (HOT_PARTITION, RTL)
;;  pred:       8 [66.0% (guessed)]  count:708669600 (estimated locally)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u82(6){ }u83(7){ }u84(16){ }u85(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 95 97 98 99 100 101
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 100 101
;; lr  def 	 17 [flags] 101
(code_label 100 202 101 11 14 (nil) [1 uses])
(note 101 100 102 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 102 101 103 11 (var_location:SI count_line (reg/v:SI 95 [ count_line ])) -1
     (nil))
(debug_insn 103 102 104 11 (var_location:SI count_char (reg/v:SI 101 [ count_char ])) -1
     (nil))
(debug_insn 104 103 105 11 (debug_marker) "cmodules/fbgc_file.c":95:5 -1
     (nil))
(insn 105 104 106 11 (parallel [
            (set (reg/v:SI 101 [ count_char ])
                (plus:SI (reg/v:SI 101 [ count_char ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":95:15 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 106 105 107 11 (var_location:SI count_char (reg/v:SI 101 [ count_char ])) "cmodules/fbgc_file.c":95:15 -1
     (nil))
(debug_insn 107 106 108 11 (debug_marker) "cmodules/fbgc_file.c":96:10 -1
     (nil))
(insn 108 107 109 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 100 [ c ])
            (const_int -1 [0xffffffffffffffff]))) "cmodules/fbgc_file.c":96:4 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/v:SI 100 [ c ])
        (nil)))
(jump_insn 109 108 110 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 70)
            (pc))) "cmodules/fbgc_file.c":96:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 985936588 (nil)))
 -> 70)
;;  succ:       8 [91.8% (guessed)]  count:650718147 (estimated locally) (DFS_BACK)
;;              12 [8.2% (guessed)]  count:57951458 (estimated locally) (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 95 97 98 99 101

;; basic block 12, loop depth 0, count 57951457 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (HOT_PARTITION, RTL)
;;  pred:       11 [8.2% (guessed)]  count:57951458 (estimated locally) (FALLTHRU,LOOP_EXIT)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u92(6){ }u93(7){ }u94(16){ }u95(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 95 97 98 99 101
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 95 98
;; lr  def 	 17 [flags]
(note 110 109 111 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 111 110 112 12 (var_location:SI count_line (reg/v:SI 95 [ count_line ])) -1
     (nil))
(debug_insn 112 111 113 12 (var_location:SI count_char (reg/v:SI 101 [ count_char ])) -1
     (nil))
(debug_insn 113 112 114 12 (debug_marker) "cmodules/fbgc_file.c":98:4 -1
     (nil))
(insn 114 113 115 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 95 [ count_line ])
            (reg/v:SI 98 [ which_line ]))) "cmodules/fbgc_file.c":98:6 11 {*cmpsi_1}
     (nil))
(jump_insn 115 114 116 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) "cmodules/fbgc_file.c":98:6 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 434421892 (nil)))
 -> 127)
;;  succ:       13 [59.5% (guessed)]  count:34505056 (estimated locally) (FALLTHRU)
;;              14 [40.5% (guessed)]  count:23446401 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 95 97 98 99 101

;; basic block 13, loop depth 0, count 34505056 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (HOT_PARTITION, RTL)
;;  pred:       12 [59.5% (guessed)]  count:34505056 (estimated locally) (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u101(6){ }u102(7){ }u103(16){ }u104(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 95 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 95 98
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 102
(note 116 115 117 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 117 116 118 13 (debug_marker) "cmodules/fbgc_file.c":99:5 -1
     (nil))
(insn 118 117 119 13 (set (reg:SI 2 cx)
        (reg/v:SI 98 [ which_line ])) "cmodules/fbgc_file.c":99:5 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 98 [ which_line ])
        (nil)))
(insn 119 118 120 13 (set (reg:SI 1 dx)
        (reg/v:SI 95 [ count_line ])) "cmodules/fbgc_file.c":99:5 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 95 [ count_line ])
        (nil)))
(insn 120 119 121 13 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f7f568f9d80 *.LC4>)) "cmodules/fbgc_file.c":99:5 66 {*movdi_internal}
     (nil))
(insn 121 120 122 13 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_file.c":99:5 67 {*movsi_internal}
     (nil))
(insn 122 121 123 13 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_file.c":99:5 69 {*movqi_internal}
     (nil))
(call_insn 123 122 124 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f7f56cd6d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":99:5 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f7f56cd6d00 cprintf>)
                            (nil)))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(debug_insn 124 123 9 13 (debug_marker) "cmodules/fbgc_file.c":100:5 -1
     (nil))
(insn 9 124 203 13 (set (reg/v/f:DI 102 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_file.c":100:12 66 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 203 9 204 13 (set (pc)
        (label_ref 182)) "cmodules/fbgc_file.c":100:12 660 {jump}
     (nil)
 -> 182)
;;  succ:       16 [always]  count:34505056 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 102

(barrier 204 203 127)
;; basic block 14, loop depth 0, count 43525373 (estimated locally), maybe hot
;;  prev block 13, next block 15, flags: (HOT_PARTITION, RTL)
;;  pred:       9 [5.5% (guessed)]  count:20078972 (estimated locally) (LOOP_EXIT)
;;              12 [40.5% (guessed)]  count:23446401 (estimated locally)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u113(6){ }u114(7){ }u115(16){ }u116(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 97 99 101
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 97 99 101
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 102 106 107 108 109 115
(code_label 127 204 128 14 15 (nil) [2 uses])
(note 128 127 129 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 129 128 130 14 (var_location:SI count_line (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 130 129 131 14 (var_location:SI count_char (reg/v:SI 101 [ count_char ])) -1
     (nil))
(debug_insn 131 130 132 14 (debug_marker) "cmodules/fbgc_file.c":103:4 -1
     (nil))
(insn 132 131 133 14 (set (reg:SI 106)
        (not:SI (reg/v:SI 101 [ count_char ]))) "cmodules/fbgc_file.c":103:28 496 {*one_cmplsi2_1}
     (nil))
(insn 133 132 134 14 (set (reg:DI 107)
        (sign_extend:DI (reg:SI 106))) "cmodules/fbgc_file.c":103:4 128 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 106)
        (nil)))
(insn 134 133 135 14 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "cmodules/fbgc_file.c":103:4 67 {*movsi_internal}
     (nil))
(insn 135 134 136 14 (set (reg:DI 4 si)
        (reg:DI 107)) "cmodules/fbgc_file.c":103:4 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 107)
        (nil)))
(insn 136 135 137 14 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 97 [ fs ]) [5 fs_28->fp+0 S8 A8])) "cmodules/fbgc_file.c":103:4 66 {*movdi_internal}
     (nil))
(call_insn 137 136 138 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fseek") [flags 0x41]  <function_decl 0x7f7f56b7d300 fseek>) [0 fseek S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":103:4 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("fseek") [flags 0x41]  <function_decl 0x7f7f56b7d300 fseek>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(debug_insn 138 137 139 14 (debug_marker) "cmodules/fbgc_file.c":104:4 -1
     (nil))
(insn 139 138 140 14 (set (reg:SI 5 di)
        (reg/v:SI 101 [ count_char ])) "cmodules/fbgc_file.c":104:31 67 {*movsi_internal}
     (nil))
(call_insn 140 139 198 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_str_object_empty") [flags 0x41]  <function_decl 0x7f7f56cf9200 new_fbgc_str_object_empty>) [0 new_fbgc_str_object_empty S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":104:31 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_str_object_empty") [flags 0x41]  <function_decl 0x7f7f56cf9200 new_fbgc_str_object_empty>)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 198 140 141 14 (set (reg:DI 115)
        (reg:DI 0 ax)) "cmodules/fbgc_file.c":104:31 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 141 198 142 14 (set (reg/v/f:DI 102 [ <retval> ])
        (reg:DI 115)) "cmodules/fbgc_file.c":104:31 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 115)
        (nil)))
(debug_insn 142 141 143 14 (var_location:DI str (reg/v/f:DI 102 [ <retval> ])) "cmodules/fbgc_file.c":104:31 -1
     (nil))
(debug_insn 143 142 144 14 (debug_marker) "cmodules/fbgc_file.c":105:4 -1
     (nil))
(debug_insn 144 143 145 14 (var_location:DI __ptr (plus:DI (reg/v/f:DI 102 [ <retval> ])
        (const_int 13 [0xd]))) "cmodules/fbgc_file.c":105:23 -1
     (nil))
(debug_insn 145 144 146 14 (var_location:DI __size (const_int 1 [0x1])) "cmodules/fbgc_file.c":105:23 -1
     (nil))
(debug_insn 146 145 147 14 (var_location:DI __n (sign_extend:DI (reg/v:SI 101 [ count_char ]))) "cmodules/fbgc_file.c":105:23 -1
     (nil))
(debug_insn 147 146 148 14 (var_location:DI __stream (mem/f:DI (reg/v/f:DI 97 [ fs ]) [5 fs_28->fp+0 S8 A8])) "cmodules/fbgc_file.c":105:23 -1
     (nil))
(debug_insn 148 147 149 14 (debug_marker:BLK) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":284:1 -1
     (nil))
(debug_insn 149 148 150 14 (debug_marker) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":287:3 -1
     (nil))
(debug_insn 150 149 151 14 (debug_marker) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":297:3 -1
     (nil))
(insn 151 150 152 14 (set (reg:DI 108 [ count_char ])
        (sign_extend:DI (reg/v:SI 101 [ count_char ]))) "cmodules/fbgc_file.c":105:17 128 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 101 [ count_char ])
        (nil)))
(insn 152 151 153 14 (parallel [
            (set (reg/f:DI 109)
                (plus:DI (reg/v/f:DI 102 [ <retval> ])
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":105:23 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 153 152 154 14 (set (reg:DI 2 cx)
        (mem/f:DI (reg/v/f:DI 97 [ fs ]) [5 fs_28->fp+0 S8 A8])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":297:10 66 {*movdi_internal}
     (nil))
(insn 154 153 155 14 (set (reg:DI 1 dx)
        (reg:DI 108 [ count_char ])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":297:10 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 108 [ count_char ])
        (nil)))
(insn 155 154 156 14 (set (reg:DI 4 si)
        (const_int 1 [0x1])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":297:10 66 {*movdi_internal}
     (nil))
(insn 156 155 157 14 (set (reg:DI 5 di)
        (reg/f:DI 109)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":297:10 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 109)
        (nil)))
(call_insn 157 156 158 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*fread") [flags 0x41]  <function_decl 0x7f7f56ba1100 __fread_alias>) [0 __fread_alias S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":297:10 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:DI 0 ax)
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("*fread") [flags 0x41]  <function_decl 0x7f7f56ba1100 __fread_alias>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(debug_insn 158 157 159 14 (var_location:DI __ptr (clobber (const_int 0 [0]))) "cmodules/fbgc_file.c":105:17 -1
     (nil))
(debug_insn 159 158 160 14 (var_location:DI __size (clobber (const_int 0 [0]))) "cmodules/fbgc_file.c":105:17 -1
     (nil))
(debug_insn 160 159 161 14 (var_location:DI __n (clobber (const_int 0 [0]))) "cmodules/fbgc_file.c":105:17 -1
     (nil))
(debug_insn 161 160 162 14 (var_location:DI __stream (clobber (const_int 0 [0]))) "cmodules/fbgc_file.c":105:17 -1
     (nil))
(debug_insn 162 161 163 14 (var_location:SI res (clobber (const_int 0 [0]))) "cmodules/fbgc_file.c":105:11 -1
     (nil))
(debug_insn 163 162 164 14 (debug_marker) "cmodules/fbgc_file.c":106:4 -1
     (nil))
(insn 164 163 165 14 (set (reg:SI 1 dx)
        (const_int 0 [0])) "cmodules/fbgc_file.c":106:4 67 {*movsi_internal}
     (nil))
(insn 165 164 166 14 (set (reg:DI 4 si)
        (reg/v:DI 99 [ old_fp_loc ])) "cmodules/fbgc_file.c":106:4 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 99 [ old_fp_loc ])
        (nil)))
(insn 166 165 167 14 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 97 [ fs ]) [5 fs_28->fp+0 S8 A8])) "cmodules/fbgc_file.c":106:4 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 97 [ fs ])
        (nil)))
(call_insn 167 166 168 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fseek") [flags 0x41]  <function_decl 0x7f7f56b7d300 fseek>) [0 fseek S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":106:4 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("fseek") [flags 0x41]  <function_decl 0x7f7f56b7d300 fseek>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(debug_insn 168 167 205 14 (debug_marker) "cmodules/fbgc_file.c":107:4 -1
     (nil))
(jump_insn 205 168 206 14 (set (pc)
        (label_ref 182)) "cmodules/fbgc_file.c":107:11 660 {jump}
     (nil)
 -> 182)
;;  succ:       16 [always]  count:43525373 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 102

(barrier 206 205 171)
;; basic block 15, loop depth 0, count 122338264 (estimated locally), maybe hot
;;  prev block 14, next block 16, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [28.1% (guessed)]  count:122338264 (estimated locally)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u150(6){ }u151(7){ }u152(16){ }u153(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 102
(code_label 171 206 172 15 10 (nil) [1 uses])
(note 172 171 173 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(debug_insn 173 172 174 15 (debug_marker) "cmodules/fbgc_file.c":111:3 -1
     (nil))
(insn 174 173 175 15 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7f568f9e10 *.LC5>)) "cmodules/fbgc_file.c":111:3 66 {*movdi_internal}
     (nil))
(insn 175 174 176 15 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_file.c":111:3 67 {*movsi_internal}
     (nil))
(insn 176 175 177 15 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_file.c":111:3 69 {*movqi_internal}
     (nil))
(call_insn 177 176 10 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f7f56cd6d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":111:3 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f7f56cd6d00 cprintf>)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 10 177 182 15 (set (reg/v/f:DI 102 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_file.c":114:9 66 {*movdi_internal}
     (nil))
;;  succ:       16 [always]  count:122338264 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 102

;; basic block 16, loop depth 0, count 435522478 (estimated locally), maybe hot
;;  prev block 15, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [44.2% (guessed)]  count:70906910 (estimated locally)
;;              3 [48.8% (guessed)]  count:152833895 (estimated locally)
;;              6 [always]  count:11412979 (estimated locally)
;;              13 [always]  count:34505056 (estimated locally)
;;              15 [always]  count:122338264 (estimated locally) (FALLTHRU)
;;              14 [always]  count:43525373 (estimated locally)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u158(6){ }u159(7){ }u160(16){ }u161(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 102
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 102
;; lr  def 	 0 [ax]
(code_label 182 10 185 16 9 (nil) [5 uses])
(note 185 182 183 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 183 185 184 16 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 102 [ <retval> ])) "cmodules/fbgc_file.c":115:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 102 [ <retval> ])
        (nil)))
(insn 184 183 0 16 (use (reg/i:DI 0 ax)) "cmodules/fbgc_file.c":115:1 -1
     (nil))
;;  succ:       EXIT [always]  count:435522478 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function fbgc_fclose (fbgc_fclose, funcdef_no=60, decl_uid=5707, cgraph_uid=61, symbol_order=67)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Will split live ranges of parameters at BB 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 92 uninteresting
Reg 89 uninteresting
Reg 90 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 89: (insn_list:REG_DEP_TRUE 11 (nil))

Pass 0 for finding pseudo/allocno costs

    a3 (r92,l0) best DIREG, allocno DIREG
    a0 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2784,2784 NO_REX_SSE_REGS:2784,2784 SSE_REGS:2784,2784 MMX_REGS:4350,4350 INT_SSE_REGS:4350,4350 ALL_REGS:55332,55332 MEM:2088,2088
  a1(r84,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:17392,17392 NO_REX_SSE_REGS:17392,17392 SSE_REGS:17392,17392 MMX_REGS:27262,27262 INT_SSE_REGS:27262,27262 ALL_REGS:354888,354888 MEM:13044,13044
  a2(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:23000,23000 INT_SSE_REGS:23000,23000 ALL_REGS:316000,316000 MEM:11000,11000
  a3(r92,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:-1000,-1000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:12000,12000


Pass 1 for finding pseudo/allocno costs

    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2784,2784 NO_REX_SSE_REGS:2784,2784 SSE_REGS:2784,2784 MMX_REGS:4524,4524 INT_SSE_REGS:4524,4524 ALL_REGS:56376,56376 MEM:2088,2088
  a1(r84,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:17392,17392 NO_REX_SSE_REGS:17392,17392 SSE_REGS:17392,17392 MMX_REGS:28262,28262 INT_SSE_REGS:28262,28262 ALL_REGS:360888,360888 MEM:13044,13044
  a2(r89,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:322000,322000 MEM:12000,12000
  a3(r92,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:2000,-1000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:18000,18000

   Insn 29(l0): point = 0
   Insn 28(l0): point = 2
   Insn 20(l0): point = 5
   Insn 19(l0): point = 7
   Insn 18(l0): point = 9
   Insn 13(l0): point = 12
   Insn 12(l0): point = 14
   Insn 11(l0): point = 16
   Insn 8(l0): point = 18
   Insn 31(l0): point = 20
 a0(r90): [8..9]
 a1(r84): [10..18]
 a2(r89): [15..16]
 a3(r92): [19..20]
Compressing live ranges: from 23 to 6 - 26%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r84): [2..3]
 a2(r89): [2..3]
 a3(r92): [4..5]
+++Allocating 16 bytes for conflict table (uncompressed size 32)
;; a0(r90,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r84,l0) conflicts: a2(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r89,l0) conflicts: a1(r84,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r92,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:


  pref0:a3(r92)<-hr5@1500
  regions=1, blocks=5, points=6
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r90 1r84 2r89 3r92
    modified regnos: 84 89 90 92
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@92264
      Allocno a0r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a1r84 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a2r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a3r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Pushing a0(r90,l0)(cost 0)
      Pushing a3(r92,l0)(cost 0)
      Pushing a2(r89,l0)(cost 0)
      Pushing a1(r84,l0)(cost 0)
      Popping a1(r84,l0)  -- assign reg 0
      Popping a2(r89,l0)  -- assign reg 1
      Popping a3(r92,l0)  -- assign reg 5
      Popping a0(r90,l0)  -- assign reg 0
Disposition:
    1:r84  l0     0    2:r89  l0     1    0:r90  l0     0    3:r92  l0     5
New iteration of spill/restore move
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_fclose

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,4u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={2d,1u} r18={1d} r19={1d,4u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={2d} r37={2d} r38={1d} r39={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r84={1d,4u,1e} r89={1d,1u} r90={1d,1u} r92={1d,1u} 
;;    total ref usage 122{93d,28u,1e} in 17{16 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 84 89 92
(note 5 1 31 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 31 5 2 2 (set (reg:DI 92)
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_file.c":119:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ arg ])
        (nil)))
(note 2 31 4 2 NOTE_INSN_DELETED)
(note 4 2 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 8 2 (debug_marker) "cmodules/fbgc_file.c":121:2 -1
     (nil))
(insn 8 7 9 2 (set (reg/v/f:DI 84 [ so ])
        (mem/f:DI (reg:DI 92) [1 *arg_5(D)+0 S8 A64])) "cmodules/fbgc_file.c":121:31 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(debug_insn 9 8 10 2 (var_location:DI so (reg/v/f:DI 84 [ so ])) "cmodules/fbgc_file.c":121:31 -1
     (nil))
(debug_insn 10 9 11 2 (debug_marker) "cmodules/fbgc_file.c":122:2 -1
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 89)
        (symbol_ref:DI ("fbgc_file_module") [flags 0x2]  <var_decl 0x7f7f56ce1990 fbgc_file_module>)) "cmodules/fbgc_file.c":122:4 66 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref:DI ("fbgc_file_module") [flags 0x2]  <var_decl 0x7f7f56ce1990 fbgc_file_module>)
        (nil)))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 84 [ so ])
                    (const_int 13 [0xd])) [2 so_6->parent+0 S8 A8])
            (reg/f:DI 89))) "cmodules/fbgc_file.c":122:4 12 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (expr_list:REG_EQUAL (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 84 [ so ])
                        (const_int 13 [0xd])) [2 so_6->parent+0 S8 A8])
                (symbol_ref:DI ("fbgc_file_module") [flags 0x2]  <var_decl 0x7f7f56ce1990 fbgc_file_module>))
            (nil))))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "cmodules/fbgc_file.c":122:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 886588628 (nil)))
 -> 21)
;;  succ:       3 [17.4% (guessed)]  count:187153200 (estimated locally) (FALLTHRU)
;;              4 [82.6% (guessed)]  count:886588624 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84

;; basic block 3, loop depth 0, count 187153200 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [17.4% (guessed)]  count:187153200 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(6){ }u12(7){ }u13(16){ }u14(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 90
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 15 14 16 3 (debug_marker) "cmodules/fbgc_file.c":123:3 -1
     (nil))
(debug_insn 16 15 17 3 (var_location:DI fs (mem/f:DI (plus:DI (reg/v/f:DI 84 [ so ])
            (const_int 21 [0x15])) [3 so_6->cstruct+0 S8 A8])) "cmodules/fbgc_file.c":123:24 -1
     (nil))
(debug_insn 17 16 18 3 (debug_marker) "cmodules/fbgc_file.c":124:3 -1
     (nil))
(insn 18 17 19 3 (set (reg/f:DI 90 [ so_6->cstruct ])
        (mem/f:DI (plus:DI (reg/v/f:DI 84 [ so ])
                (const_int 21 [0x15])) [3 so_6->cstruct+0 S8 A8])) "cmodules/fbgc_file.c":124:3 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 84 [ so ])
        (nil)))
(insn 19 18 20 3 (set (reg:DI 5 di)
        (mem/f:DI (reg/f:DI 90 [ so_6->cstruct ]) [5 fs_7->fp+0 S8 A8])) "cmodules/fbgc_file.c":124:3 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ so_6->cstruct ])
        (nil)))
(call_insn 20 19 21 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f7f56b55300 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":124:3 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f7f56b55300 fclose>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 [always]  count:187153200 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [always]  count:187153200 (estimated locally) (FALLTHRU)
;;              2 [82.6% (guessed)]  count:886588624 (estimated locally)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(6){ }u21(7){ }u22(16){ }u23(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax]
(code_label 21 20 22 4 23 (nil) [1 uses])
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 23 22 28 4 (debug_marker) "cmodules/fbgc_file.c":127:2 -1
     (nil))
(insn 28 23 29 4 (set (reg/i:DI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_file.c":128:1 66 {*movdi_internal}
     (nil))
(insn 29 28 0 4 (use (reg/i:DI 0 ax)) "cmodules/fbgc_file.c":128:1 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function fbgc_fprint (fbgc_fprint, funcdef_no=57, decl_uid=5695, cgraph_uid=58, symbol_order=61)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Will split live ranges of parameters at BB 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 96 uninteresting
Reg 89: def dominates all uses has unique first use
Reg 97 uninteresting
Reg 91 uninteresting
Reg 92: local to bb 4 def dominates all uses has unique first use
Reg 94 uninteresting
Reg 89 not local to one basic block
Found def insn 31 for 92 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 91: (insn_list:REG_DEP_TRUE 20 (nil))

Pass 0 for finding pseudo/allocno costs

    a6 (r97,l0) best SIREG, allocno SIREG
    a7 (r96,l0) best DIREG, allocno DIREG
    a2 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r93,l0) best DIREG, allocno DIREG
    a1 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a5 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r93,l0) costs: AREG:118,118 DREG:118,118 CREG:118,118 BREG:118,118 SIREG:118,118 DIREG:-59,-59 AD_REGS:118,118 CLOBBERED_REGS:118,118 Q_REGS:118,118 NON_Q_REGS:118,118 TLS_GOTBASE_REGS:118,118 GENERAL_REGS:118,118 SSE_FIRST_REG:944,944 NO_REX_SSE_REGS:944,944 SSE_REGS:944,944 MMX_REGS:1534,1534 INT_SSE_REGS:1534,1534 ALL_REGS:25016,25016 MEM:649,649
  a1(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:944,944 NO_REX_SSE_REGS:944,944 SSE_REGS:944,944 MMX_REGS:1475,1475 INT_SSE_REGS:1475,1475 ALL_REGS:18762,18762 MEM:708,708
  a2(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:944,944 NO_REX_SSE_REGS:944,944 SSE_REGS:944,944 MMX_REGS:1475,1475 INT_SSE_REGS:1475,1475 ALL_REGS:18762,18762 MEM:649,649
  a3(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:9192,9192 NO_REX_SSE_REGS:9192,9192 SSE_REGS:9192,9192 MMX_REGS:11187,11187 INT_SSE_REGS:11187,11187 ALL_REGS:184588,184588 MEM:3394,3394
  a4(r82,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:5912,5912 NO_REX_SSE_REGS:5912,5912 SSE_REGS:5912,5912 MMX_REGS:9267,9267 INT_SSE_REGS:9267,9267 ALL_REGS:120628,120628 MEM:4434,4434
  a5(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:5440,5440 NO_REX_SSE_REGS:5440,5440 SSE_REGS:5440,5440 MMX_REGS:7820,7820 INT_SSE_REGS:7820,7820 ALL_REGS:107440,107440 MEM:3740,3740
  a6(r97,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:-1000,-1000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a7(r96,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:-1000,-1000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000


Pass 1 for finding pseudo/allocno costs

    r97: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r93,l0) costs: AREG:236,236 DREG:236,236 CREG:236,236 BREG:236,236 SIREG:236,236 DIREG:118,-59 AD_REGS:236,236 CLOBBERED_REGS:118,118 Q_REGS:236,236 NON_Q_REGS:118,118 TLS_GOTBASE_REGS:118,118 GENERAL_REGS:118,118 SSE_FIRST_REG:1416,1416 NO_REX_SSE_REGS:1416,1416 SSE_REGS:1416,1416 MMX_REGS:2301,2301 INT_SSE_REGS:1534,1534 ALL_REGS:25016,25016 MEM:1003,1003
  a1(r92,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:944,944 NO_REX_SSE_REGS:944,944 SSE_REGS:944,944 MMX_REGS:1534,1534 INT_SSE_REGS:1534,1534 ALL_REGS:19116,19116 MEM:708,708
  a2(r94,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:944,944 NO_REX_SSE_REGS:944,944 SSE_REGS:944,944 MMX_REGS:1534,1534 INT_SSE_REGS:1534,1534 ALL_REGS:19116,19116 MEM:649,649
  a3(r89,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11192,11192 NO_REX_SSE_REGS:11192,11192 SSE_REGS:11192,11192 MMX_REGS:17187,17187 INT_SSE_REGS:17187,17187 ALL_REGS:190588,190588 MEM:8394,8394
  a4(r82,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:5912,5912 NO_REX_SSE_REGS:5912,5912 SSE_REGS:5912,5912 MMX_REGS:9607,9607 INT_SSE_REGS:9607,9607 ALL_REGS:122668,122668 MEM:4434,4434
  a5(r91,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:5440,5440 NO_REX_SSE_REGS:5440,5440 SSE_REGS:5440,5440 MMX_REGS:8840,8840 INT_SSE_REGS:8840,8840 ALL_REGS:109480,109480 MEM:4080,4080
  a6(r97,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:2000,-1000 DIREG:4000,4000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000
  a7(r96,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:2000,-1000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000

   Insn 51(l0): point = 0
   Insn 50(l0): point = 2
   Insn 36(l0): point = 5
   Insn 35(l0): point = 7
   Insn 34(l0): point = 9
   Insn 33(l0): point = 11
   Insn 32(l0): point = 13
   Insn 31(l0): point = 15
   Insn 22(l0): point = 18
   Insn 21(l0): point = 20
   Insn 20(l0): point = 22
   Insn 17(l0): point = 24
   Insn 9(l0): point = 27
   Insn 8(l0): point = 29
   Insn 54(l0): point = 31
   Insn 2(l0): point = 33
   Insn 53(l0): point = 35
 a0(r93): [8..11]
 a1(r92): [10..15]
 a2(r94): [12..13]
 a3(r89): [14..33]
 a4(r82): [16..24]
 a5(r91): [21..22]
 a6(r97): [30..31]
 a7(r96): [34..35]
Compressing live ranges: from 38 to 12 - 31%
Ranges after the compression:
 a0(r93): [0..1]
 a1(r92): [0..5]
 a2(r94): [2..3]
 a3(r89): [4..9]
 a4(r82): [6..7]
 a5(r91): [6..7]
 a6(r97): [8..9]
 a7(r96): [10..11]
+++Allocating 56 bytes for conflict table (uncompressed size 64)
;; a0(r93,l0) conflicts: a1(r92,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a1(r92,l0) conflicts: a0(r93,l0) a2(r94,l0) a3(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r94,l0) conflicts: a1(r92,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r89,l0) conflicts: a1(r92,l0) a4(r82,l0) a5(r91,l0) a6(r97,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a4(r82,l0) conflicts: a3(r89,l0) a5(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r91,l0) conflicts: a3(r89,l0) a4(r82,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r97,l0) conflicts: a3(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r96,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a0(r93)<->a2(r94)@7:shuffle
  cp1:a3(r89)<->a7(r96)@1000:move
  pref0:a6(r97)<-hr4@1500
  pref1:a7(r96)<-hr5@1500
  pref2:a0(r93)<-hr5@88
  regions=1, blocks=6, points=12
    allocnos=8 (big 0), copies=2, conflicts=0, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 5 4 3 2
    all: 0r93 1r92 2r94 3r89 4r82 5r91 6r97 7r96
    modified regnos: 82 89 91 92 93 94 96 97
    border:
    Pressure: GENERAL_REGS=3
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@55742
          2:( 0-3 5 6 36-43)@54912
      Allocno a0r93 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Allocno a1r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a2r94 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a3r89 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Allocno a4r82 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a5r91 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a6r97 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a7r96 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Forming thread by copy 1:a3r89-a7r96 (freq=1000):
        Result (freq=3399): a3r89(1399) a7r96(2000)
      Forming thread by copy 0:a0r93-a2r94 (freq=7):
        Result (freq=236): a0r93(118) a2r94(118)
      Pushing a1(r92,l0)(cost 0)
      Pushing a2(r94,l0)(cost 0)
      Pushing a0(r93,l0)(cost 0)
      Pushing a5(r91,l0)(cost 0)
      Pushing a4(r82,l0)(cost 0)
      Pushing a6(r97,l0)(cost 0)
      Pushing a3(r89,l0)(cost 0)
      Pushing a7(r96,l0)(cost 0)
      Popping a7(r96,l0)  -- assign reg 5
      Popping a3(r89,l0)  -- assign reg 5
      Popping a6(r97,l0)  -- assign reg 4
      Popping a4(r82,l0)  -- assign reg 0
      Popping a5(r91,l0)  -- assign reg 1
      Popping a0(r93,l0)  -- assign reg 5
      Popping a2(r94,l0)  -- assign reg 5
      Popping a1(r92,l0)  -- assign reg 0
Disposition:
    4:r82  l0     0    3:r89  l0     5    5:r91  l0     1    1:r92  l0     0
    0:r93  l0     5    2:r94  l0     5    7:r96  l0     5    6:r97  l0     4
New iteration of spill/restore move
+++Costs: overall -2059, reg -2059, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_fprint

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,5u} r7={1d,6u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={4d,2u} r18={1d} r19={1d,5u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={2d} r37={2d} r38={1d} r39={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,5u,1e} r89={1d,3u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r96={1d,1u} r97={1d,1u} 
;;    total ref usage 143{100d,42u,1e} in 40{39 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 89 96 97
(note 5 1 53 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 53 5 2 2 (set (reg:DI 96)
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_file.c":23:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ arg ])
        (nil)))
(insn 2 53 54 2 (set (reg/v/f:DI 89 [ arg ])
        (reg:DI 96)) "cmodules/fbgc_file.c":23:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(insn 54 2 3 2 (set (reg:SI 97)
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_file.c":23:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ argc ])
        (nil)))
(note 3 54 4 2 NOTE_INSN_DELETED)
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 8 2 (debug_marker) "cmodules/fbgc_file.c":25:2 -1
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97)
            (const_int 2 [0x2]))) "cmodules/fbgc_file.c":25:4 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 97)
        (nil)))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) "cmodules/fbgc_file.c":25:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 708669604 (nil)))
 -> 37)
;;  succ:       3 [34.0% (guessed)]  count:365072224 (estimated locally) (FALLTHRU)
;;              5 [66.0% (guessed)]  count:708669600 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 89

;; basic block 3, loop depth 0, count 365072220 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [34.0% (guessed)]  count:365072224 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 89
;; lr  def 	 17 [flags] 82 91
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 11 10 12 3 (var_location:SI D#1 (const_int 2 [0x2])) -1
     (nil))
(debug_insn 12 11 13 3 (var_location:DI arg (reg/v/f:DI 89 [ arg ])) -1
     (nil))
(debug_insn 13 12 14 3 (debug_marker:BLK) "cmodules/fbgc_file.c":22:1 -1
     (nil))
(debug_insn 14 13 15 3 (var_location:SI D#2 (debug_expr:SI D#1)) -1
     (nil))
(debug_insn 15 14 16 3 (var_location:SI argc (debug_expr:SI D#2)) -1
     (nil))
(debug_insn 16 15 17 3 (debug_marker) "cmodules/fbgc_file.c":26:3 -1
     (nil))
(insn 17 16 18 3 (set (reg/v/f:DI 82 [ so ])
        (mem/f:DI (reg/v/f:DI 89 [ arg ]) [1 *arg_4(D)+0 S8 A64])) "cmodules/fbgc_file.c":26:32 66 {*movdi_internal}
     (nil))
(debug_insn 18 17 19 3 (var_location:DI so (reg/v/f:DI 82 [ so ])) "cmodules/fbgc_file.c":26:32 -1
     (nil))
(debug_insn 19 18 20 3 (debug_marker) "cmodules/fbgc_file.c":27:3 -1
     (nil))
(insn 20 19 21 3 (set (reg/f:DI 91)
        (symbol_ref:DI ("fbgc_file_module") [flags 0x2]  <var_decl 0x7f7f56ce1990 fbgc_file_module>)) "cmodules/fbgc_file.c":27:5 66 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref:DI ("fbgc_file_module") [flags 0x2]  <var_decl 0x7f7f56ce1990 fbgc_file_module>)
        (nil)))
(insn 21 20 22 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 82 [ so ])
                    (const_int 13 [0xd])) [2 so_6->parent+0 S8 A8])
            (reg/f:DI 91))) "cmodules/fbgc_file.c":27:5 12 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (expr_list:REG_EQUAL (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 82 [ so ])
                        (const_int 13 [0xd])) [2 so_6->parent+0 S8 A8])
                (symbol_ref:DI ("fbgc_file_module") [flags 0x2]  <var_decl 0x7f7f56ce1990 fbgc_file_module>))
            (nil))))
(jump_insn 22 21 23 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) "cmodules/fbgc_file.c":27:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 886588628 (nil)))
 -> 37)
;;  succ:       4 [17.4% (guessed)]  count:63632088 (estimated locally) (FALLTHRU)
;;              5 [82.6% (guessed)]  count:301440132 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 89

;; basic block 4, loop depth 0, count 63632088 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [17.4% (guessed)]  count:63632088 (estimated locally) (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(6){ }u20(7){ }u21(16){ }u22(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 89
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 92 93 94
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 24 23 25 4 (debug_marker) "cmodules/fbgc_file.c":28:4 -1
     (nil))
(debug_insn 25 24 26 4 (var_location:DI fs (mem/f:DI (plus:DI (reg/v/f:DI 82 [ so ])
            (const_int 21 [0x15])) [3 so_6->cstruct+0 S8 A8])) "cmodules/fbgc_file.c":28:25 -1
     (nil))
(debug_insn 26 25 27 4 (debug_marker) "cmodules/fbgc_file.c":29:4 -1
     (nil))
(debug_insn 27 26 28 4 (var_location:DI __stream (mem/f:DI (mem/f:DI (plus:DI (reg/v/f:DI 82 [ so ])
                (const_int 21 [0x15])) [3 so_6->cstruct+0 S8 A8]) [5 fs_8->fp+0 S8 A8])) "cmodules/fbgc_file.c":29:4 -1
     (nil))
(debug_insn 28 27 29 4 (var_location:DI __fmt (const_string:DI ("%s"))) "cmodules/fbgc_file.c":29:4 -1
     (nil))
(debug_insn 29 28 30 4 (debug_marker:BLK) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":98:1 -1
     (nil))
(debug_insn 30 29 31 4 (debug_marker) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:3 -1
     (nil))
(insn 31 30 32 4 (set (reg/f:DI 92 [ so_6->cstruct ])
        (mem/f:DI (plus:DI (reg/v/f:DI 82 [ so ])
                (const_int 21 [0x15])) [3 so_6->cstruct+0 S8 A8])) "cmodules/fbgc_file.c":29:4 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 82 [ so ])
        (nil)))
(insn 32 31 33 4 (set (reg/f:DI 94 [ MEM[(struct fbgc_object * *)arg_4(D) + 8B] ])
        (mem/f:DI (plus:DI (reg/v/f:DI 89 [ arg ])
                (const_int 8 [0x8])) [1 MEM[(struct fbgc_object * *)arg_4(D) + 8B]+0 S8 A64])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:10 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 89 [ arg ])
        (nil)))
(insn 33 32 34 4 (parallel [
            (set (reg/f:DI 93)
                (plus:DI (reg/f:DI 94 [ MEM[(struct fbgc_object * *)arg_4(D) + 8B] ])
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:10 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 94 [ MEM[(struct fbgc_object * *)arg_4(D) + 8B] ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 34 33 35 4 (set (reg:DI 4 si)
        (mem/f:DI (reg/f:DI 92 [ so_6->cstruct ]) [5 fs_8->fp+0 S8 A8])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:10 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ so_6->cstruct ])
        (nil)))
(insn 35 34 36 4 (set (reg:DI 5 di)
        (reg/f:DI 93)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:10 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (nil)))
(call_insn 36 35 37 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fputs") [flags 0x41]  <function_decl 0x7f7f56ddff00 __builtin_fputs>) [0 __builtin_fputs S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:10 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("fputs") [flags 0x41]  <function_decl 0x7f7f56ddff00 __builtin_fputs>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       5 [always]  count:63632088 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 4, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [66.0% (guessed)]  count:708669600 (estimated locally)
;;              4 [always]  count:63632088 (estimated locally) (FALLTHRU)
;;              3 [82.6% (guessed)]  count:301440132 (estimated locally)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u33(6){ }u34(7){ }u35(16){ }u36(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax]
(code_label 37 36 38 5 30 (nil) [2 uses])
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 39 38 40 5 (var_location:DI arg (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 40 39 41 5 (var_location:DI so (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 41 40 42 5 (var_location:DI fs (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 42 41 43 5 (var_location:SI argc (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 43 42 44 5 (var_location:DI __stream (clobber (const_int 0 [0]))) "cmodules/fbgc_file.c":29:4 -1
     (nil))
(debug_insn 44 43 45 5 (var_location:DI __fmt (clobber (const_int 0 [0]))) "cmodules/fbgc_file.c":29:4 -1
     (nil))
(debug_insn 45 44 50 5 (debug_marker) "cmodules/fbgc_file.c":33:2 -1
     (nil))
(insn 50 45 51 5 (set (reg/i:DI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_file.c":34:1 66 {*movdi_internal}
     (nil))
(insn 51 50 0 5 (use (reg/i:DI 0 ax)) "cmodules/fbgc_file.c":34:1 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function fbgc_fopen (fbgc_fopen, funcdef_no=56, decl_uid=5691, cgraph_uid=57, symbol_order=59)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 7 }
;; 3 succs { 4 7 }
;; 4 succs { 5 7 }
;; 5 succs { 8 6 }
;; 6 succs { }
;; 7 succs { 8 }
;; 8 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 102 uninteresting
Reg 103 uninteresting
Ignoring reg 95, has equiv memory
Ignoring reg 96, has equiv memory
Reg 104 uninteresting
Reg 91: local to bb 5 def dominates all uses has unique first use
Ignoring reg 98, has equiv memory
Reg 100 uninteresting
Reg 105 uninteresting
Reg 90 uninteresting
Found def insn 27 for 91 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 7 }
;; 3 succs { 4 7 }
;; 4 succs { 5 7 }
;; 5 succs { 8 6 }
;; 6 succs { }
;; 7 succs { 8 }
;; 8 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 95: (insn_list:REG_DEP_TRUE 12 (nil))
init_insns for 96: (insn_list:REG_DEP_TRUE 16 (nil))
init_insns for 98: (insn_list:REG_DEP_TRUE 30 (nil))

Pass 0 for finding pseudo/allocno costs

    a3 (r105,l0) best AREG, allocno AREG
    a9 (r104,l0) best AREG, allocno AREG
    a12 (r103,l0) best SIREG, allocno SIREG
    a13 (r102,l0) best DIREG, allocno DIREG
    a6 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r99,l0) best DIREG, allocno DIREG
    a8 (r98,l0) best NO_REGS, allocno NO_REGS
    a5 (r97,l0) best SIREG, allocno SIREG
    a10 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a11 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a7 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best AREG, allocno AREG
    a2 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:-999,-999 DREG:1998,1998 CREG:1998,1998 BREG:1998,1998 SIREG:1998,1998 DIREG:1998,1998 AD_REGS:1998,1998 CLOBBERED_REGS:1998,1998 Q_REGS:1998,1998 NON_Q_REGS:1998,1998 TLS_GOTBASE_REGS:1998,1998 GENERAL_REGS:1998,1998 SSE_FIRST_REG:15210,15210 NO_REX_SSE_REGS:15210,15210 SSE_REGS:15210,15210 MMX_REGS:20970,20970 INT_SSE_REGS:20970,20970 ALL_REGS:344124,344124 MEM:7911,7911
  a1(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2142,2142 NO_REX_SSE_REGS:2142,2142 SSE_REGS:2142,2142 MMX_REGS:4896,4896 INT_SSE_REGS:4896,4896 ALL_REGS:80172,80172 MEM:1989,1989
  a2(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2448,2448 NO_REX_SSE_REGS:2448,2448 SSE_REGS:2448,2448 MMX_REGS:3825,3825 INT_SSE_REGS:3825,3825 ALL_REGS:48654,48654 MEM:1836,1836
  a3(r105,l0) costs: AREG:-153,-153 DREG:306,306 CREG:306,306 BREG:306,306 SIREG:306,306 DIREG:306,306 AD_REGS:306,306 CLOBBERED_REGS:306,306 Q_REGS:306,306 NON_Q_REGS:306,306 TLS_GOTBASE_REGS:306,306 GENERAL_REGS:306,306 SSE_FIRST_REG:1224,1224 NO_REX_SSE_REGS:1224,1224 SSE_REGS:1224,1224 MMX_REGS:3978,3978 INT_SSE_REGS:3978,3978 ALL_REGS:64872,64872 MEM:1683,1683
  a4(r99,l0) costs: AREG:306,306 DREG:306,306 CREG:306,306 BREG:306,306 SIREG:306,306 DIREG:-153,-153 AD_REGS:306,306 CLOBBERED_REGS:306,306 Q_REGS:306,306 NON_Q_REGS:306,306 TLS_GOTBASE_REGS:306,306 GENERAL_REGS:306,306 SSE_FIRST_REG:2448,2448 NO_REX_SSE_REGS:2448,2448 SSE_REGS:2448,2448 MMX_REGS:3978,3978 INT_SSE_REGS:3978,3978 ALL_REGS:64872,64872 MEM:1683,1683
  a5(r97,l0) costs: AREG:306,306 DREG:306,306 CREG:306,306 BREG:306,306 SIREG:-153,-153 DIREG:306,306 AD_REGS:306,306 CLOBBERED_REGS:306,306 Q_REGS:306,306 NON_Q_REGS:306,306 TLS_GOTBASE_REGS:306,306 GENERAL_REGS:306,306 SSE_FIRST_REG:2448,2448 NO_REX_SSE_REGS:2448,2448 SSE_REGS:2448,2448 MMX_REGS:3978,3978 INT_SSE_REGS:3978,3978 ALL_REGS:64872,64872 MEM:1683,1683
  a6(r100,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2448,2448 NO_REX_SSE_REGS:2448,2448 SSE_REGS:2448,2448 MMX_REGS:3825,3825 INT_SSE_REGS:3825,3825 ALL_REGS:48654,48654 MEM:1683,1683
  a7(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:27592,27592 NO_REX_SSE_REGS:27592,27592 SSE_REGS:27592,27592 MMX_REGS:41087,41087 INT_SSE_REGS:41087,41087 ALL_REGS:672188,672188 MEM:17194,17194
  a8(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2448,2448 NO_REX_SSE_REGS:2448,2448 SSE_REGS:2448,2448 MMX_REGS:3825,3825 INT_SSE_REGS:3825,3825 ALL_REGS:48654,48654 MEM:-153,-153
  a9(r104,l0) costs: AREG:-153,-153 DREG:306,306 CREG:306,306 BREG:306,306 SIREG:306,306 DIREG:306,306 AD_REGS:306,306 CLOBBERED_REGS:306,306 Q_REGS:306,306 NON_Q_REGS:306,306 TLS_GOTBASE_REGS:306,306 GENERAL_REGS:306,306 SSE_FIRST_REG:1224,1224 NO_REX_SSE_REGS:1224,1224 SSE_REGS:1224,1224 MMX_REGS:3978,3978 INT_SSE_REGS:3978,3978 ALL_REGS:64872,64872 MEM:1683,1683
  a10(r96,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:6416,6416 NO_REX_SSE_REGS:6416,6416 SSE_REGS:6416,6416 MMX_REGS:10025,10025 INT_SSE_REGS:10025,10025 ALL_REGS:127518,127518 MEM:0,0
  a11(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11504,11504 NO_REX_SSE_REGS:11504,11504 SSE_REGS:11504,11504 MMX_REGS:17975,17975 INT_SSE_REGS:17975,17975 ALL_REGS:228642,228642 MEM:0,0
  a12(r103,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:-1000,-1000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000
  a13(r102,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:-1000,-1000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000


Pass 1 for finding pseudo/allocno costs

    r105: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r99: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    r97: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:1998,-999 DREG:3996,3996 CREG:3996,3996 BREG:3996,3996 SIREG:3996,3996 DIREG:3996,3996 AD_REGS:1998,1998 CLOBBERED_REGS:1998,1998 Q_REGS:1998,1998 NON_Q_REGS:3996,3996 TLS_GOTBASE_REGS:3996,3996 GENERAL_REGS:1998,1998 SSE_FIRST_REG:25200,25200 NO_REX_SSE_REGS:25200,25200 SSE_REGS:25200,25200 MMX_REGS:39951,39951 INT_SSE_REGS:26964,26964 ALL_REGS:350118,350118 MEM:18900,18900
  a1(r90,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:3672,3672 NO_REX_SSE_REGS:3672,3672 SSE_REGS:3672,3672 MMX_REGS:5814,5814 INT_SSE_REGS:5814,5814 ALL_REGS:81090,81090 MEM:2754,2754
  a2(r91,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2448,2448 NO_REX_SSE_REGS:2448,2448 SSE_REGS:2448,2448 MMX_REGS:3978,3978 INT_SSE_REGS:3978,3978 ALL_REGS:49572,49572 MEM:1836,1836
  a3(r105,l0) costs: AREG:306,-153 DREG:612,612 CREG:612,612 BREG:612,612 SIREG:612,612 DIREG:612,612 AD_REGS:306,306 CLOBBERED_REGS:306,306 Q_REGS:306,306 NON_Q_REGS:612,612 TLS_GOTBASE_REGS:612,612 GENERAL_REGS:306,306 SSE_FIRST_REG:3672,3672 NO_REX_SSE_REGS:3672,3672 SSE_REGS:3672,3672 MMX_REGS:5967,5967 INT_SSE_REGS:3978,3978 ALL_REGS:64872,64872 MEM:2601,2601
  a4(r99,l0) costs: AREG:612,612 DREG:612,612 CREG:612,612 BREG:612,612 SIREG:612,612 DIREG:306,-153 AD_REGS:612,612 CLOBBERED_REGS:306,306 Q_REGS:612,612 NON_Q_REGS:306,306 TLS_GOTBASE_REGS:306,306 GENERAL_REGS:306,306 SSE_FIRST_REG:3672,3672 NO_REX_SSE_REGS:3672,3672 SSE_REGS:3672,3672 MMX_REGS:5967,5967 INT_SSE_REGS:3978,3978 ALL_REGS:64872,64872 MEM:2601,2601
  a5(r97,l0) costs: AREG:1530,1530 DREG:1530,1530 CREG:1530,1530 BREG:1530,1530 SIREG:1224,765 DIREG:1530,1530 AD_REGS:1530,1530 CLOBBERED_REGS:1224,1224 Q_REGS:1530,1530 NON_Q_REGS:1224,1224 TLS_GOTBASE_REGS:1224,1224 GENERAL_REGS:1224,1224 SSE_FIRST_REG:4590,4590 NO_REX_SSE_REGS:4590,4590 SSE_REGS:4590,4590 MMX_REGS:6885,6885 INT_SSE_REGS:4896,4896 ALL_REGS:65790,65790 MEM:3672,3672
  a6(r100,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2448,2448 NO_REX_SSE_REGS:2448,2448 SSE_REGS:2448,2448 MMX_REGS:3978,3978 INT_SSE_REGS:3978,3978 ALL_REGS:49572,49572 MEM:1683,1683
  a7(r93,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29592,29592 NO_REX_SSE_REGS:29592,29592 SSE_REGS:29592,29592 MMX_REGS:47087,47087 INT_SSE_REGS:47087,47087 ALL_REGS:678188,678188 MEM:22194,22194
  a8(r98,l0) costs: GENERAL_REGS:1836,1836 SSE_FIRST_REG:3978,3978 NO_REX_SSE_REGS:3978,3978 SSE_REGS:3978,3978 MMX_REGS:4743,4743 INT_SSE_REGS:4743,4743 ALL_REGS:49572,49572 MEM:918,918
  a9(r104,l0) costs: AREG:306,-153 DREG:612,612 CREG:612,612 BREG:612,612 SIREG:612,612 DIREG:612,612 AD_REGS:306,306 CLOBBERED_REGS:306,306 Q_REGS:306,306 NON_Q_REGS:612,612 TLS_GOTBASE_REGS:612,612 GENERAL_REGS:306,306 SSE_FIRST_REG:3672,3672 NO_REX_SSE_REGS:3672,3672 SSE_REGS:3672,3672 MMX_REGS:5967,5967 INT_SSE_REGS:3978,3978 ALL_REGS:64872,64872 MEM:2601,2601
  a10(r96,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:6416,6416 NO_REX_SSE_REGS:6416,6416 SSE_REGS:6416,6416 MMX_REGS:10426,10426 INT_SSE_REGS:10426,10426 ALL_REGS:129924,129924 MEM:0,0
  a11(r95,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11504,11504 NO_REX_SSE_REGS:11504,11504 SSE_REGS:11504,11504 MMX_REGS:18694,18694 INT_SSE_REGS:18694,18694 ALL_REGS:232956,232956 MEM:0,0
  a12(r103,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:2000,-1000 DIREG:4000,4000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000
  a13(r102,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:2000,-1000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000

   Insn 71(l0): point = 0
   Insn 70(l0): point = 2
   Insn 5(l0): point = 5
   Insn 63(l0): point = 7
   Insn 62(l0): point = 9
   Insn 61(l0): point = 11
   Insn 60(l0): point = 13
   Insn 55(l0): point = 16
   Insn 54(l0): point = 18
   Insn 53(l0): point = 20
   Insn 52(l0): point = 22
   Insn 51(l0): point = 24
   Insn 41(l0): point = 27
   Insn 40(l0): point = 29
   Insn 38(l0): point = 31
   Insn 37(l0): point = 33
   Insn 77(l0): point = 35
   Insn 36(l0): point = 37
   Insn 35(l0): point = 39
   Insn 34(l0): point = 41
   Insn 33(l0): point = 43
   Insn 32(l0): point = 45
   Insn 31(l0): point = 47
   Insn 30(l0): point = 49
   Insn 27(l0): point = 51
   Insn 24(l0): point = 53
   Insn 76(l0): point = 55
   Insn 23(l0): point = 57
   Insn 22(l0): point = 59
   Insn 21(l0): point = 61
   Insn 18(l0): point = 64
   Insn 17(l0): point = 66
   Insn 16(l0): point = 68
   Insn 14(l0): point = 71
   Insn 13(l0): point = 73
   Insn 12(l0): point = 75
   Insn 10(l0): point = 78
   Insn 9(l0): point = 80
   Insn 75(l0): point = 82
   Insn 2(l0): point = 84
   Insn 74(l0): point = 86
 a0(r92): [27..53] [3..5]
 a1(r90): [30..33]
 a2(r91): [32..51]
 a3(r105): [34..35]
 a4(r99): [40..43]
 a5(r97): [42..47]
 a6(r100): [44..45]
 a7(r93): [46..84]
 a8(r98): [48..49]
 a9(r104): [54..55]
 a10(r96): [67..68]
 a11(r95): [74..75]
 a12(r103): [81..82]
 a13(r102): [85..86]
Compressing live ranges: from 89 to 24 - 26%
Ranges after the compression:
 a0(r92): [0..13]
 a1(r90): [2..3]
 a2(r91): [2..13]
 a3(r105): [4..5]
 a4(r99): [6..7]
 a5(r97): [6..11]
 a6(r100): [8..9]
 a7(r93): [10..21]
 a8(r98): [12..13]
 a9(r104): [14..15]
 a10(r96): [16..17]
 a11(r95): [18..19]
 a12(r103): [20..21]
 a13(r102): [22..23]
+++Allocating 104 bytes for conflict table (uncompressed size 112)
;; a0(r92,l0) conflicts: a1(r90,l0) a2(r91,l0) a3(r105,l0) a4(r99,l0) a5(r97,l0) a6(r100,l0) a7(r93,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a1(r90,l0) conflicts: a0(r92,l0) a2(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r91,l0) conflicts: a0(r92,l0) a1(r90,l0) a3(r105,l0) a4(r99,l0) a5(r97,l0) a6(r100,l0) a7(r93,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a3(r105,l0) conflicts: a0(r92,l0) a2(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r99,l0) conflicts: a0(r92,l0) a2(r91,l0) a5(r97,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a5(r97,l0) conflicts: a0(r92,l0) a2(r91,l0) a4(r99,l0) a6(r100,l0) a7(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r100,l0) conflicts: a0(r92,l0) a2(r91,l0) a5(r97,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r93,l0) conflicts: a0(r92,l0) a2(r91,l0) a5(r97,l0) a9(r104,l0) a10(r96,l0) a11(r95,l0) a12(r103,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a8(r98,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r104,l0) conflicts: a7(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r96,l0) conflicts: a7(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r95,l0) conflicts: a7(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r103,l0) conflicts: a7(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r102,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a0(r92)<->a9(r104)@153:move
  cp1:a5(r97)<->a8(r98)@19:shuffle
  cp2:a4(r99)<->a6(r100)@19:shuffle
  cp3:a1(r90)<->a3(r105)@153:move
  cp4:a7(r93)<->a13(r102)@1000:move
  pref0:a3(r105)<-hr0@229
  pref1:a9(r104)<-hr0@229
  pref2:a12(r103)<-hr4@1500
  pref3:a13(r102)<-hr5@1500
  pref4:a4(r99)<-hr5@229
  pref5:a5(r97)<-hr4@229
  pref6:a0(r92)<-hr0@1498
  regions=1, blocks=9, points=24
    allocnos=14 (big 0), copies=5, conflicts=0, ranges=14

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 8 7 6 5 4 3 2
    all: 0r92 1r90 2r91 3r105 4r99 5r97 6r100 7r93 8r98 9r104 10r96 11r95 12r103 13r102
    modified regnos: 90 91 92 93 95 96 97 98 99 100 102 103 104 105
    border:
    Pressure: GENERAL_REGS=4
 Removing pref6:hr0@1498
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@61704
          2:( 0-3 5 6 36-43)@41508
            3:( 1-3 6 36-43)@81864
      Spill a8(r98,l0)
      Allocno a0r92 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 36-43, node:  1-3 6 36-43 (confl regs =  0 4 5 7-35 44-74)
      Allocno a1r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a2r91 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 36-43, node:  1-3 6 36-43 (confl regs =  0 4 5 7-35 44-74)
      Allocno a3r105 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a4r99 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Allocno a5r97 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a6r100 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a7r93 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 36-43, node:  1-3 6 36-43 (confl regs =  0 4 5 7-35 44-74)
      Allocno a9r104 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a10r96 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a11r95 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a12r103 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a13r102 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 36-43, node:  0-3 5 6 36-43 (confl regs =  4 7-35 44-74)
      Forming thread by copy 4:a7r93-a13r102 (freq=1000):
        Result (freq=4426): a7r93(2426) a13r102(2000)
      Forming thread by copy 0:a0r92-a9r104 (freq=153):
        Result (freq=2457): a0r92(2151) a9r104(306)
      Forming thread by copy 3:a1r90-a3r105 (freq=153):
        Result (freq=765): a1r90(459) a3r105(306)
      Forming thread by copy 1:a5r97-a8r98 (freq=19):
        Result (freq=612): a5r97(306) a8r98(306)
      Forming thread by copy 2:a4r99-a6r100 (freq=19):
        Result (freq=612): a4r99(306) a6r100(306)
      Pushing a2(r91,l0)(cost 0)
      Pushing a5(r97,l0)(cost 0)
      Pushing a6(r100,l0)(cost 0)
      Pushing a4(r99,l0)(cost 0)
      Pushing a3(r105,l0)(cost 0)
      Pushing a1(r90,l0)(cost 0)
      Pushing a10(r96,l0)(cost 0)
      Pushing a11(r95,l0)(cost 0)
      Pushing a12(r103,l0)(cost 0)
      Pushing a9(r104,l0)(cost 0)
      Pushing a0(r92,l0)(cost 0)
      Pushing a13(r102,l0)(cost 0)
      Pushing a7(r93,l0)(cost 0)
      Popping a7(r93,l0)  -- assign reg 3
      Popping a13(r102,l0)  -- assign reg 5
      Popping a0(r92,l0)  -- assign reg 40
      Popping a9(r104,l0)  -- assign reg 0
      Popping a12(r103,l0)  -- assign reg 4
      Popping a11(r95,l0)  -- assign reg 0
      Popping a10(r96,l0)  -- assign reg 0
      Popping a1(r90,l0)  -- assign reg 0
      Popping a3(r105,l0)  -- assign reg 0
      Popping a4(r99,l0)  -- assign reg 5
      Popping a6(r100,l0)  -- assign reg 5
      Popping a5(r97,l0)  -- assign reg 4
      Popping a2(r91,l0)  -- assign reg 6
Disposition:
    1:r90  l0     0    2:r91  l0     6    0:r92  l0    40    7:r93  l0     3
   11:r95  l0     0   10:r96  l0     0    5:r97  l0     4    8:r98  l0   mem
    4:r99  l0     5    6:r100 l0     5   13:r102 l0     5   12:r103 l0     4
    9:r104 l0     0    3:r105 l0     0
New iteration of spill/restore move
+++Costs: overall 1222, reg 304, mem 918, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fbgc_fopen

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={7d,5u} r1={6d,1u} r2={6d,1u} r4={9d,5u} r5={9d,6u} r6={1d,8u} r7={1d,12u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,7u} r17={10d,4u} r18={4d} r19={1d,8u} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={5d} r37={5d} r38={4d} r39={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r90={1d,2u} r91={1d,2u} r92={2d,3u} r93={1d,4u,4e} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} 
;;    total ref usage 402{320d,78u,4e} in 59{55 regular + 4 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 93 102 103
(note 6 1 73 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(debug_insn 73 6 74 2 (var_location:DI D#7 (reg:DI 5 di [ arg ])) -1
     (nil))
(insn 74 73 2 2 (set (reg:DI 102)
        (reg:DI 5 di [ arg ])) "cmodules/fbgc_file.c":5:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ arg ])
        (nil)))
(insn 2 74 75 2 (set (reg/v/f:DI 93 [ arg ])
        (reg:DI 102)) "cmodules/fbgc_file.c":5:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 102)
        (nil)))
(insn 75 2 3 2 (set (reg:SI 103)
        (reg:SI 4 si [ argc ])) "cmodules/fbgc_file.c":5:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ argc ])
        (nil)))
(note 3 75 4 2 NOTE_INSN_DELETED)
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 4 9 2 (debug_marker) "cmodules/fbgc_file.c":7:2 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 103)
            (const_int 2 [0x2]))) "cmodules/fbgc_file.c":7:4 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 103)
        (nil)))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "cmodules/fbgc_file.c":7:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 301614084 (nil)))
 -> 57)
;;  succ:       3 [71.9% (guessed)]  count:772127744 (estimated locally) (FALLTHRU)
;;              7 [28.1% (guessed)]  count:301614080 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 93

;; basic block 3, loop depth 0, count 772127746 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [71.9% (guessed)]  count:772127744 (estimated locally) (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 93
;; lr  def 	 17 [flags] 95
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg/f:DI 95 [ *arg_15(D) ])
        (mem/f:DI (reg/v/f:DI 93 [ arg ]) [1 *arg_15(D)+0 S8 A64])) "cmodules/fbgc_file.c":7:24 66 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 93 [ arg ]) [1 *arg_15(D)+0 S8 A64])
        (nil)))
(insn 13 12 14 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 95 [ *arg_15(D) ]) [0 _1->type+0 S1 A8])
            (const_int 6 [0x6]))) "cmodules/fbgc_file.c":7:15 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg/f:DI 95 [ *arg_15(D) ])
        (nil)))
(jump_insn 14 13 15 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "cmodules/fbgc_file.c":7:15 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 474808636 (nil)))
 -> 57)
;;  succ:       4 [55.8% (guessed)]  count:430692859 (estimated locally) (FALLTHRU)
;;              7 [44.2% (guessed)]  count:341434887 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 93

;; basic block 4, loop depth 0, count 430692856 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [55.8% (guessed)]  count:430692859 (estimated locally) (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(6){ }u17(7){ }u18(16){ }u19(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 93
;; lr  def 	 17 [flags] 96
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg/f:DI 96 [ MEM[(struct fbgc_object * *)arg_15(D) + 8B] ])
        (mem/f:DI (plus:DI (reg/v/f:DI 93 [ arg ])
                (const_int 8 [0x8])) [1 MEM[(struct fbgc_object * *)arg_15(D) + 8B]+0 S8 A64])) "cmodules/fbgc_file.c":7:50 66 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 93 [ arg ])
                (const_int 8 [0x8])) [1 MEM[(struct fbgc_object * *)arg_15(D) + 8B]+0 S8 A64])
        (nil)))
(insn 17 16 18 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 96 [ MEM[(struct fbgc_object * *)arg_15(D) + 8B] ]) [0 _3->type+0 S1 A8])
            (const_int 6 [0x6]))) "cmodules/fbgc_file.c":7:41 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg/f:DI 96 [ MEM[(struct fbgc_object * *)arg_15(D) + 8B] ])
        (nil)))
(jump_insn 18 17 19 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "cmodules/fbgc_file.c":7:41 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 662283964 (nil)))
 -> 57)
;;  succ:       5 [38.3% (guessed)]  count:165041501 (estimated locally) (FALLTHRU)
;;              7 [61.7% (guessed)]  count:265651355 (estimated locally)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 93

;; basic block 5, loop depth 0, count 165041502 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [38.3% (guessed)]  count:165041501 (estimated locally) (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 90 91 92 97 98 99 100 104 105
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 20 19 21 5 (debug_marker) "cmodules/fbgc_file.c":8:3 -1
     (nil))
(insn 21 20 22 5 (set (reg:DI 4 si)
        (symbol_ref:DI ("fbgc_file_module") [flags 0x2]  <var_decl 0x7f7f56ce1990 fbgc_file_module>)) "cmodules/fbgc_file.c":8:68 66 {*movdi_internal}
     (nil))
(insn 22 21 23 5 (set (reg:SI 5 di)
        (const_int 8 [0x8])) "cmodules/fbgc_file.c":8:68 67 {*movsi_internal}
     (nil))
(call_insn 23 22 76 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_cstruct_object") [flags 0x41]  <function_decl 0x7f7f56d0ca00 new_fbgc_cstruct_object>) [0 new_fbgc_cstruct_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":8:68 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_cstruct_object") [flags 0x41]  <function_decl 0x7f7f56d0ca00 new_fbgc_cstruct_object>)
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 76 23 24 5 (set (reg:DI 104)
        (reg:DI 0 ax)) "cmodules/fbgc_file.c":8:68 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 24 76 25 5 (set (reg/v/f:DI 92 [ <retval> ])
        (reg:DI 104)) "cmodules/fbgc_file.c":8:68 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104)
        (nil)))
(debug_insn 25 24 26 5 (var_location:DI so (reg/v/f:DI 92 [ <retval> ])) "cmodules/fbgc_file.c":8:68 -1
     (nil))
(debug_insn 26 25 27 5 (debug_marker) "cmodules/fbgc_file.c":9:3 -1
     (nil))
(insn 27 26 28 5 (set (reg/v/f:DI 91 [ fs ])
        (mem/f:DI (plus:DI (reg/v/f:DI 92 [ <retval> ])
                (const_int 21 [0x15])) [3 so_17->cstruct+0 S8 A8])) "cmodules/fbgc_file.c":9:24 66 {*movdi_internal}
     (nil))
(debug_insn 28 27 29 5 (var_location:DI fs (reg/v/f:DI 91 [ fs ])) "cmodules/fbgc_file.c":9:24 -1
     (nil))
(debug_insn 29 28 30 5 (debug_marker) "cmodules/fbgc_file.c":11:3 -1
     (nil))
(insn 30 29 31 5 (set (reg/f:DI 98 [ MEM[(struct fbgc_object * *)arg_15(D) + 8B] ])
        (mem/f:DI (plus:DI (reg/v/f:DI 93 [ arg ])
                (const_int 8 [0x8])) [1 MEM[(struct fbgc_object * *)arg_15(D) + 8B]+0 S8 A64])) "cmodules/fbgc_file.c":11:50 66 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 93 [ arg ])
                (const_int 8 [0x8])) [1 MEM[(struct fbgc_object * *)arg_15(D) + 8B]+0 S8 A64])
        (nil)))
(insn 31 30 32 5 (parallel [
            (set (reg/f:DI 97)
                (plus:DI (reg/f:DI 98 [ MEM[(struct fbgc_object * *)arg_15(D) + 8B] ])
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":11:50 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 98 [ MEM[(struct fbgc_object * *)arg_15(D) + 8B] ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f:DI (plus:DI (reg/v/f:DI 93 [ arg ])
                            (const_int 8 [0x8])) [1 MEM[(struct fbgc_object * *)arg_15(D) + 8B]+0 S8 A64])
                    (const_int 13 [0xd]))
                (nil)))))
(insn 32 31 33 5 (set (reg/f:DI 100 [ *arg_15(D) ])
        (mem/f:DI (reg/v/f:DI 93 [ arg ]) [1 *arg_15(D)+0 S8 A64])) "cmodules/fbgc_file.c":11:18 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 93 [ arg ])
        (nil)))
(insn 33 32 34 5 (parallel [
            (set (reg/f:DI 99)
                (plus:DI (reg/f:DI 100 [ *arg_15(D) ])
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_file.c":11:18 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 100 [ *arg_15(D) ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 34 33 35 5 (set (reg:DI 4 si)
        (reg/f:DI 97)) "cmodules/fbgc_file.c":11:12 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97)
        (nil)))
(insn 35 34 36 5 (set (reg:DI 5 di)
        (reg/f:DI 99)) "cmodules/fbgc_file.c":11:12 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (nil)))
(call_insn 36 35 77 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f7f56b6b100 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":11:12 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f7f56b6b100 fopen>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 77 36 37 5 (set (reg:DI 105)
        (reg:DI 0 ax)) "cmodules/fbgc_file.c":11:12 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 37 77 38 5 (set (reg/f:DI 90 [ _10 ])
        (reg:DI 105)) "cmodules/fbgc_file.c":11:12 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil)))
(insn 38 37 39 5 (set (mem/f:DI (reg/v/f:DI 91 [ fs ]) [5 fs_18->fp+0 S8 A8])
        (reg/f:DI 90 [ _10 ])) "cmodules/fbgc_file.c":11:10 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 91 [ fs ])
        (nil)))
(debug_insn 39 38 40 5 (debug_marker) "cmodules/fbgc_file.c":12:3 -1
     (nil))
(insn 40 39 41 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ _10 ])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":12:3 8 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _10 ])
        (nil)))
(jump_insn 41 40 42 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 69)
            (pc))) "cmodules/fbgc_file.c":12:3 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 69)
;;  succ:       8 [100.0% (guessed)]  count:164975486 (estimated locally)
;;              6 [0.0% (guessed)]  count:66016 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 92

;; basic block 6, loop depth 0, count 66017 (estimated locally)
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [0.0% (guessed)]  count:66016 (estimated locally) (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u49(6){ }u50(7){ }u51(16){ }u52(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 42 41 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 43 42 44 6 (var_location:DI D#3 (debug_expr:DI D#7)) -1
     (nil))
(debug_insn 44 43 45 6 (var_location:SI D#4 (const_int 2 [0x2])) -1
     (nil))
(debug_insn 45 44 46 6 (debug_marker:BLK) "cmodules/fbgc_file.c":4:1 -1
     (nil))
(debug_insn 46 45 47 6 (var_location:DI D#6 (debug_expr:DI D#3)) -1
     (nil))
(debug_insn 47 46 48 6 (var_location:DI arg (debug_expr:DI D#6)) -1
     (nil))
(debug_insn 48 47 49 6 (var_location:SI D#5 (debug_expr:SI D#4)) -1
     (nil))
(debug_insn 49 48 50 6 (var_location:SI argc (debug_expr:SI D#5)) -1
     (nil))
(debug_insn 50 49 51 6 (debug_marker) "cmodules/fbgc_file.c":12:3 -1
     (nil))
(insn 51 50 52 6 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.5716") [flags 0x2]  <var_decl 0x7f7f56ce1f30 __PRETTY_FUNCTION__>)) "cmodules/fbgc_file.c":12:3 66 {*movdi_internal}
     (nil))
(insn 52 51 53 6 (set (reg:SI 1 dx)
        (const_int 12 [0xc])) "cmodules/fbgc_file.c":12:3 67 {*movsi_internal}
     (nil))
(insn 53 52 54 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f7f568f91b0 *.LC0>)) "cmodules/fbgc_file.c":12:3 66 {*movdi_internal}
     (nil))
(insn 54 53 55 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f7f5693aab0 *.LC6>)) "cmodules/fbgc_file.c":12:3 66 {*movdi_internal}
     (nil))
(call_insn 55 54 56 6 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f7f56ba1c00 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_file.c":12:3 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f7f56ba1c00 __assert_fail>)
                        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                            (expr_list:REG_NORETURN (const_int 0 [0])
                                (expr_list:REG_EH_REGION (const_int 0 [0])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 56 55 57)
;; basic block 7, loop depth 0, count 908700323 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [44.2% (guessed)]  count:341434887 (estimated locally)
;;              2 [28.1% (guessed)]  count:301614080 (estimated locally)
;;              4 [61.7% (guessed)]  count:265651355 (estimated locally)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u58(6){ }u59(7){ }u60(16){ }u61(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 92
(code_label 57 56 58 7 37 (nil) [3 uses])
(note 58 57 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 59 58 60 7 (debug_marker) "cmodules/fbgc_file.c":17:3 -1
     (nil))
(insn 60 59 61 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f7f5693ab40 *.LC7>)) "cmodules/fbgc_file.c":17:3 66 {*movdi_internal}
     (nil))
(insn 61 60 62 7 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_file.c":17:3 67 {*movsi_internal}
     (nil))
(insn 62 61 63 7 (set (reg:QI 0 ax)
        (const_int 0 [0])) "cmodules/fbgc_file.c":17:3 69 {*movqi_internal}
     (nil))
(call_insn 63 62 64 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f7f56cd6d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_file.c":17:3 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f7f56cd6d00 cprintf>)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(debug_insn 64 63 5 7 (debug_marker) "cmodules/fbgc_file.c":20:2 -1
     (nil))
(insn 5 64 69 7 (set (reg/v/f:DI 92 [ <retval> ])
        (const_int 0 [0])) "cmodules/fbgc_file.c":20:9 66 {*movdi_internal}
     (nil))
;;  succ:       8 [always]  count:908700323 (estimated locally) (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 92

;; basic block 8, loop depth 0, count 1073675807 (estimated locally), maybe hot
;;  prev block 7, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [always]  count:908700323 (estimated locally) (FALLTHRU)
;;              5 [100.0% (guessed)]  count:164975486 (estimated locally)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u66(6){ }u67(7){ }u68(16){ }u69(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 92
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 92
;; lr  def 	 0 [ax]
(code_label 69 5 72 8 36 (nil) [1 uses])
(note 72 69 70 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 70 72 71 8 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 92 [ <retval> ])) "cmodules/fbgc_file.c":21:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 92 [ <retval> ])
        (nil)))
(insn 71 70 0 8 (use (reg/i:DI 0 ax)) "cmodules/fbgc_file.c":21:1 -1
     (nil))
;;  succ:       EXIT [always]  count:1073675807 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

