
;; Function fbgc_stl_initializer (fbgc_stl_initializer, funcdef_no=65, decl_uid=5685, cgraph_uid=66, symbol_order=77)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 7 to 18 -- after reload
;;   ======================================================

;;	  0--> b  0: i   7 debug_marker                            :nothing
;;	  0--> b  0: i  22 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  13 use ax                                  :nothing
;;	  1--> b  0: i  18 simple_return                           :hsw_decoder0
;;	Ready list (final):  
;;   total time = 1
;;   new head = 7
;;   new tail = 18



starting the processing of deferred insns
ending the processing of deferred insns


fbgc_stl_initializer

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r17={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} 
;;    total ref usage 22{18d,4u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(note 5 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 16 5 4 2 NOTE_INSN_PROLOGUE_END)
(note 4 16 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 22 2 (debug_marker) "cmodules/fbgc_stl.c":166:2 -1
     (nil))
(insn:TI 22 7 13 2 (parallel [
            (set (reg/i:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":167:1 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 13 22 23 2 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":167:1 -1
     (nil))
(note 23 13 18 2 NOTE_INSN_EPILOGUE_BEG)
(jump_insn:TI 18 23 19 2 (simple_return) "cmodules/fbgc_stl.c":167:1 690 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [always]  count:1073741824 (estimated locally)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 19 18 15)
(note 15 19 0 NOTE_INSN_DELETED)

;; Function fbgc_tuple (fbgc_tuple, funcdef_no=62, decl_uid=5705, cgraph_uid=63, symbol_order=71)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 18 n_edges 26 count 19 (  1.1)


fbgc_tuple

Dataflow summary:
def_info->table_size = 608, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12] 41 [r13] 42 [r14]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [xmm0] 21 [xmm1] 40 [r12] 41 [r13] 42 [r14]
;;  ref usage 	r0={22d,22u} r1={13d,4u} r2={9d} r3={10d,19u} r4={13d,7u} r5={17d,9u} r6={7d,7u} r7={31d,55u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r17={24d,9u} r18={8d} r20={12d,3u} r21={12d,3u} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={9d} r37={9d} r38={8d} r39={8d} r40={10d,12u} r41={9d,7u} r42={8d,15u,3e} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} 
;;    total ref usage 852{677d,172u,3e} in 157{149 regular + 8 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(36){ }d-1(37){ }d-1(40){ }d-1(41){ }d-1(42){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12] 41 [r13] 42 [r14]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12] 41 [r13] 42 [r14]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

( 0 )->[2]->( 3 7 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; lr  def 	 7 [sp] 17 [flags] 41 [r13]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  gen 	 7 [sp] 17 [flags] 41 [r13]
;; live  kill	
;; lr  out 	 4 [si] 5 [di] 7 [sp] 41 [r13]
;; live  out 	 4 [si] 5 [di] 7 [sp] 41 [r13]

( 2 )->[3]->( 4 14 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp] 41 [r13]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 42 [r14]
;; live  in  	 5 [di] 7 [sp] 41 [r13]
;; live  gen 	 0 [ax] 17 [flags] 42 [r14]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp] 41 [r13] 42 [r14]
;; live  out 	 0 [ax] 7 [sp] 41 [r13] 42 [r14]

( 3 )->[4]->( 5 9 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp] 41 [r13] 42 [r14]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 7 [sp] 41 [r13] 42 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp] 41 [r13] 42 [r14]
;; live  out 	 0 [ax] 7 [sp] 41 [r13] 42 [r14]

( 4 )->[5]->( 6 8 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp] 42 [r14]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags] 40 [r12]
;; live  in  	 0 [ax] 7 [sp] 42 [r14]
;; live  gen 	 17 [flags] 40 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 7 [sp] 40 [r12] 42 [r14]
;; live  out 	 7 [sp] 40 [r12] 42 [r14]

( 5 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 40 [r12]
;; lr  use 	 7 [sp] 40 [r12]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  in  	 7 [sp] 40 [r12]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

( 2 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 40 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 7 [sp] 40 [r12]

( 5 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r14]
;; lr  use 	 7 [sp] 42 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 7 [sp] 42 [r14]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

( 4 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r13] 42 [r14]
;; lr  use 	 7 [sp] 42 [r14]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 17 [flags] 21 [xmm1]
;; live  in  	 7 [sp] 41 [r13] 42 [r14]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 17 [flags] 21 [xmm1]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 21 [xmm1] 41 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 21 [xmm1] 41 [r13]

( 9 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 21 [xmm1] 41 [r13]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 21 [xmm1] 41 [r13]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 21 [xmm1] 41 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 21 [xmm1] 41 [r13]

( 9 10 )->[11]->( 12 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 21 [xmm1] 41 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 21 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 42 [r14] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 21 [xmm1] 41 [r13]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 20 [xmm0] 40 [r12] 42 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

( 11 12 )->[12]->( 12 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

( 11 12 )->[13]->( 1 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 40 [r12] 42 [r14]
;; lr  use 	 7 [sp] 40 [r12] 42 [r14]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  in  	 7 [sp] 40 [r12] 42 [r14]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 7 [sp] 40 [r12]

( 3 )->[14]->( 15 17 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r14]
;; lr  use 	 7 [sp] 42 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 7 [sp] 42 [r14]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 40 [r12]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp] 40 [r12] 42 [r14]
;; live  out 	 0 [ax] 7 [sp] 40 [r12] 42 [r14]

( 14 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 40 [r12] 42 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 17 [flags]
;; live  in  	 7 [sp] 40 [r12] 42 [r14]
;; live  gen 	 3 [bx]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 7 [sp] 40 [r12] 42 [r14]
;; live  out 	 3 [bx] 7 [sp] 40 [r12] 42 [r14]

( 15 16 )->[16]->( 16 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 40 [r12] 42 [r14]
;; lr  use 	 3 [bx] 7 [sp] 40 [r12] 42 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 41 [r13] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 3 [bx] 7 [sp] 40 [r12] 42 [r14]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 17 [flags] 41 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 40 [r12] 42 [r14]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 40 [r12] 42 [r14]

( 14 16 )->[17]->( 1 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp] 40 [r12]
;; lr  use 	 0 [ax] 7 [sp] 40 [r12]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  in  	 0 [ax] 7 [sp] 40 [r12]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 7 [sp] 40 [r12]

( 8 6 7 13 17 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(40){ }u-1(41){ }u-1(42){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 204 to worklist
  Adding insn 203 to worklist
  Adding insn 202 to worklist
  Adding insn 201 to worklist
  Adding insn 200 to worklist
  Adding insn 19 to worklist
  Adding insn 22 to worklist
  Adding insn 25 to worklist
  Adding insn 212 to worklist
  Adding insn 158 to worklist
  Adding insn 235 to worklist
  Adding insn 228 to worklist
  Adding insn 151 to worklist
  Adding insn 30 to worklist
  Adding insn 93 to worklist
  Adding insn 116 to worklist
  Adding insn 108 to worklist
  Adding insn 139 to worklist
  Adding insn 133 to worklist
  Adding insn 128 to worklist
  Adding insn 248 to worklist
  Adding insn 241 to worklist
  Adding insn 119 to worklist
  Adding insn 49 to worklist
  Adding insn 40 to worklist
  Adding insn 70 to worklist
  Adding insn 63 to worklist
  Adding insn 58 to worklist
  Adding insn 261 to worklist
  Adding insn 254 to worklist
  Adding insn 74 to worklist
Finished finding needed instructions:
processing block 6 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
  Adding insn 211 to worklist
  Adding insn 210 to worklist
  Adding insn 209 to worklist
  Adding insn 208 to worklist
  Adding insn 207 to worklist
  Adding insn 157 to worklist
processing block 8 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
  Adding insn 220 to worklist
  Adding insn 219 to worklist
  Adding insn 218 to worklist
  Adding insn 217 to worklist
  Adding insn 216 to worklist
  Adding insn 28 to worklist
processing block 5 lr out =  7 [sp] 40 [r12] 42 [r14]
  Adding insn 24 to worklist
  Adding insn 225 to worklist
processing block 13 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
  Adding insn 247 to worklist
  Adding insn 246 to worklist
  Adding insn 245 to worklist
  Adding insn 244 to worklist
  Adding insn 243 to worklist
  Adding insn 240 to worklist
processing block 12 lr out =  3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
  Adding insn 138 to worklist
  Adding insn 135 to worklist
  Adding insn 132 to worklist
  Adding insn 130 to worklist
  Adding insn 129 to worklist
  Adding insn 127 to worklist
processing block 11 lr out =  3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
  Adding insn 115 to worklist
  Adding insn 109 to worklist
  Adding insn 107 to worklist
  Adding insn 106 to worklist
  Adding insn 105 to worklist
  Adding insn 267 to worklist
  Adding insn 266 to worklist
  Adding insn 103 to worklist
  Adding insn 198 to worklist
processing block 10 lr out =  3 [bx] 6 [bp] 7 [sp] 21 [xmm1] 41 [r13]
  Adding insn 269 to worklist
  Adding insn 268 to worklist
  Adding insn 95 to worklist
processing block 9 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 21 [xmm1] 41 [r13]
  Adding insn 92 to worklist
  Adding insn 6 to worklist
  Adding insn 91 to worklist
  Adding insn 88 to worklist
  Adding insn 87 to worklist
  Adding insn 84 to worklist
  Adding insn 83 to worklist
processing block 4 lr out =  0 [ax] 7 [sp] 41 [r13] 42 [r14]
  Adding insn 21 to worklist
processing block 17 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
  Adding insn 260 to worklist
  Adding insn 259 to worklist
  Adding insn 258 to worklist
  Adding insn 257 to worklist
  Adding insn 256 to worklist
  Adding insn 253 to worklist
processing block 16 lr out =  0 [ax] 3 [bx] 7 [sp] 40 [r12] 42 [r14]
  Adding insn 69 to worklist
  Adding insn 67 to worklist
  Adding insn 62 to worklist
  Adding insn 60 to worklist
  Adding insn 59 to worklist
  Adding insn 57 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 53 to worklist
processing block 15 lr out =  3 [bx] 7 [sp] 40 [r12] 42 [r14]
  Adding insn 224 to worklist
processing block 14 lr out =  0 [ax] 7 [sp] 40 [r12] 42 [r14]
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 41 to worklist
  Adding insn 38 to worklist
processing block 3 lr out =  0 [ax] 7 [sp] 41 [r13] 42 [r14]
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
processing block 7 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
  Adding insn 234 to worklist
  Adding insn 233 to worklist
  Adding insn 232 to worklist
  Adding insn 231 to worklist
  Adding insn 230 to worklist
  Adding insn 227 to worklist
  Adding insn 223 to worklist
  Adding insn 222 to worklist
  Adding insn 149 to worklist
  Adding insn 148 to worklist
  Adding insn 147 to worklist
processing block 2 lr out =  4 [si] 5 [di] 7 [sp] 41 [r13]
  Adding insn 12 to worklist
  Adding insn 3 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 18 n_edges 26 count 20 (  1.1)
;;   ======================================================
;;   -- basic block 2 from 200 to 13 -- after reload
;;   ======================================================

;;	  0--> b  0: i  11 debug_marker                            :nothing
;;	  0--> b  0: i 200 [--sp]=r14                              :hsw_decodern,(hsw_p4+hsw_p237)
;;	  1--> b  0: i 201 [--sp]=r13                              :hsw_decodern,(hsw_p4+hsw_p237)
;;	  1--> b  0: i   3 r13=si                                  :hsw_decodern,hsw_p0156
;;	  2--> b  0: i 202 [--sp]=r12                              :hsw_decodern,(hsw_p4+hsw_p237)
;;	  3--> b  0: i 203 [--sp]=bp                               :hsw_decodern,(hsw_p4+hsw_p237)
;;	  4--> b  0: i 204 [--sp]=bx                               :hsw_decodern,(hsw_p4+hsw_p237)
;;	  4--> b  0: i  12 flags=cmp(si,0x1)                       :hsw_decodern,hsw_p0156
;;	  4--> b  0: i  13 pc={(flags!=0)?L144:pc}                 :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 4
;;   new head = 11
;;   new tail = 13

;;   ======================================================
;;   -- basic block 3 from 15 to 19 -- after reload
;;   ======================================================

;;	  0--> b  0: i  15 debug_marker                            :nothing
;;	  0--> b  0: i  16 r14=[di]                                :hsw_decodern,hsw_p23
;;	  2--> b  0: i  17 ax=[r14]                                :hsw_decodern,hsw_p23
;;	  4--> b  0: i  18 flags=cmp(ax,0x6)                       :hsw_decodern,hsw_p0156
;;	  4--> b  0: i  19 pc={(flags==0)?L33:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 4
;;   new head = 15
;;   new tail = 19

;;   ======================================================
;;   -- basic block 4 from 21 to 22 -- after reload
;;   ======================================================

;;	  0--> b  0: i  21 flags=cmp(ax,0xe)                       :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  22 pc={(flags==0)?L78:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 0
;;   new head = 21
;;   new tail = 22

;;   ======================================================
;;   -- basic block 5 from 225 to 25 -- after reload
;;   ======================================================

;;	  0--> b  0: i 225 {r12=0;clobber flags;}                  :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  24 flags=cmp(ax,0x3)                       :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  25 pc={(flags==0)?L265:pc}                 :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 0
;;   new head = 225
;;   new tail = 25

;;   ======================================================
;;   -- basic block 6 from 157 to 212 -- after reload
;;   ======================================================

;;	  0--> b  0: i 207 bx=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  0--> b  0: i 157 ax=r12                                  :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 208 bp=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  0--> b  0: i 158 use ax                                  :nothing
;;	  1--> b  0: i 209 r12=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  1--> b  0: i 210 r13=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  2--> b  0: i 211 r14=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  3--> b  0: i 212 simple_return                           :hsw_decoder0
;;	Ready list (final):  
;;   total time = 3
;;   new head = 270
;;   new tail = 212

;;   ======================================================
;;   -- basic block 7 from 146 to 235 -- after reload
;;   ======================================================

;;	  0--> b  0: i 146 debug_marker                            :nothing
;;	  0--> b  0: i 147 dx=si                                   :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 223 {r12=0;clobber flags;}                  :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 148 si=`*.LC1'                              :hsw_decodern,hsw_p1|hsw_p5
;;	  0--> b  0: i 222 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  1--> b  0: i 149 di=0x64                                 :hsw_decodern,hsw_p0156
;;	  2--> b  0: i 151 ax=call [`cprintf']                     :hsw_decoder0
;;	  2--> b  0: i 230 bx=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  2--> b  0: i 227 ax=r12                                  :hsw_decodern,hsw_p0156
;;	  2--> b  0: i 231 bp=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  3--> b  0: i 228 use ax                                  :nothing
;;	  3--> b  0: i 232 r12=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  3--> b  0: i 233 r13=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  4--> b  0: i 234 r14=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  5--> b  0: i 235 simple_return                           :hsw_decoder0
;;	Ready list (final):  
;;   total time = 5
;;   new head = 146
;;   new tail = 235

;;   ======================================================
;;   -- basic block 8 from 27 to 30 -- after reload
;;   ======================================================

;;	  0--> b  0: i  27 debug_marker                            :nothing
;;	  0--> b  0: i  28 di=[r14+0x9]                            :hsw_decodern,hsw_p23
;;	  0--> b  0: i 216 bx=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  1--> b  0: i 217 bp=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  1--> b  0: i 218 r12=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  2--> b  0: i 219 r13=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  2--> b  0: i 220 r14=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  3--> b  0: i  30 ax=call [`new_fbgc_tuple_object']       :hsw_decoder0
;;	Ready list (final):  
;;   total time = 3
;;   new head = 27
;;   new tail = 30

;;   ======================================================
;;   -- basic block 9 from 80 to 93 -- after reload
;;   ======================================================

;;	  0--> b  0: i  80 debug_marker                            :nothing
;;	  0--> b  0: i  81 loc r14                                 :nothing
;;	  0--> b  0: i  82 debug_marker                            :nothing
;;	  0--> b  0: i  83 ax=[r14+0x9]                            :hsw_decodern,hsw_p23
;;	  0--> b  0: i   6 xmm1=[`*.LC0']                          :hsw_decodern,hsw_p23
;;	  2--> b  0: i  84 bx=[ax+0x9]                             :hsw_decodern,hsw_p23
;;	  2--> b  0: i  85 loc bx                                  :nothing
;;	  2--> b  0: i  86 debug_marker                            :nothing
;;	  2--> b  0: i  87 ax=[r14+0x11]                           :hsw_decodern,hsw_p23
;;	  4--> b  0: i  88 bp=[ax+0x9]                             :hsw_decodern,hsw_p23
;;	  4--> b  0: i  89 loc bp                                  :nothing
;;	  4--> b  0: i  90 debug_marker                            :nothing
;;	  4--> b  0: i  91 ax=[r14+0x19]                           :hsw_decodern,hsw_p23
;;	  6--> b  0: i  92 flags=cmp(ax,0)                         :hsw_decodern,hsw_p0156
;;	  6--> b  0: i  93 pc={(flags==0)?L97:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 6
;;   new head = 80
;;   new tail = 93

;;   ======================================================
;;   -- basic block 10 from 95 to 269 -- after reload
;;   ======================================================

;;	  0--> b  0: i  95 r13=[ax+0x9]                            :hsw_decodern,hsw_p23
;;	  0--> b  0: i 268 xmm1=const_vector                       :hsw_decodern,hsw_p015
;;	  2--> b  0: i 269 xmm1=vec_merge(vec_duplicate(flt(r13)),xmm1,0x1):hsw_decodern,hsw_p1
;;	Ready list (final):  
;;   total time = 2
;;   new head = 95
;;   new tail = 269

;;   ======================================================
;;   -- basic block 11 from 99 to 116 -- after reload
;;   ======================================================

;;	  0--> b  0: i  99 loc r13                                 :nothing
;;	  0--> b  0: i 100 debug_marker                            :nothing
;;	  0--> b  0: i 101 loc fix(flt(bp-bx)/xmm1)                :nothing
;;	  0--> b  0: i 102 debug_marker                            :nothing
;;	  0--> b  0: i 198 ax=bp                                   :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 266 xmm0=const_vector                       :hsw_decodern,hsw_p015
;;	  1--> b  0: i 103 {ax=ax-bx;clobber flags;}               :hsw_decodern,hsw_p0156
;;	  2--> b  0: i 267 xmm0=vec_merge(vec_duplicate(flt(ax)),xmm0,0x1):hsw_decodern,hsw_p1
;;	  6--> b  0: i 105 xmm0=xmm0/xmm1                          :hsw_decodern,hsw_p0,hsw_ssediv*20
;;	 34--> b  0: i 106 r14=fix(xmm0)                           :hsw_decodern,hsw_p1
;;	 38--> b  0: i 107 di=r14                                  :hsw_decodern,hsw_p0156
;;	 39--> b  0: i 108 ax=call [`new_fbgc_tuple_object']       :hsw_decoder0
;;	 40--> b  0: i 109 r12=ax                                  :hsw_decodern,hsw_p0156
;;	 40--> b  0: i 110 loc r12                                 :nothing
;;	 40--> b  0: i 111 debug_marker                            :nothing
;;	 40--> b  0: i 112 debug_marker                            :nothing
;;	 40--> b  0: i 113 loc bx                                  :nothing
;;	 40--> b  0: i 114 debug_marker                            :nothing
;;	 40--> b  0: i 115 flags=cmp(bx,bp)                        :hsw_decodern,hsw_p0156
;;	 40--> b  0: i 116 pc={(flags>=0)?L140:pc}                 :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 40
;;   new head = 99
;;   new tail = 116

;;   ======================================================
;;   -- basic block 12 from 125 to 139 -- after reload
;;   ======================================================

;;	  0--> b  0: i 125 loc bx                                  :nothing
;;	  0--> b  0: i 126 debug_marker                            :nothing
;;	  0--> b  0: i 127 di=bx                                   :hsw_decodern,hsw_p0156
;;	  1--> b  0: i 128 ax=call [`new_fbgc_int_object']         :hsw_decoder0
;;	  1--> b  0: i 130 dx=bx                                   :hsw_decodern,hsw_p0156
;;	  1--> b  0: i 132 di=r12                                  :hsw_decodern,hsw_p0156
;;	  1--> b  0: i 135 {bx=bx+r13;clobber flags;}              :hsw_decodern,hsw_p0156
;;	  2--> b  0: i 129 si=ax                                   :hsw_decodern,hsw_p0156
;;	  3--> b  0: i 133 call [`set_object_in_fbgc_tuple_object']:hsw_decoder0
;;	  3--> b  0: i 134 debug_marker                            :nothing
;;	  3--> b  0: i 136 loc bx                                  :nothing
;;	  3--> b  0: i 137 debug_marker                            :nothing
;;	  3--> b  0: i 138 flags=cmp(bp,bx)                        :hsw_decodern,hsw_p0156
;;	  3--> b  0: i 139 pc={(flags>0)?L123:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 3
;;   new head = 125
;;   new tail = 139

;;   ======================================================
;;   -- basic block 13 from 118 to 248 -- after reload
;;   ======================================================

;;	  0--> b  0: i 118 debug_marker                            :nothing
;;	  0--> b  0: i 119 [r12+0xd]=r14                           :hsw_decodern,(hsw_p4+(hsw_p2|hsw_p3|hsw_p7))
;;	  0--> b  0: i 120 debug_marker                            :nothing
;;	  0--> b  0: i 240 ax=r12                                  :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 243 bx=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  0--> b  0: i 241 use ax                                  :nothing
;;	  1--> b  0: i 244 bp=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  1--> b  0: i 245 r12=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  2--> b  0: i 246 r13=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  2--> b  0: i 247 r14=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  3--> b  0: i 248 simple_return                           :hsw_decoder0
;;	Ready list (final):  
;;   total time = 3
;;   new head = 118
;;   new tail = 248

;;   ======================================================
;;   -- basic block 14 from 35 to 49 -- after reload
;;   ======================================================

;;	  0--> b  0: i  35 debug_marker                            :nothing
;;	  0--> b  0: i  36 loc r14                                 :nothing
;;	  0--> b  0: i  37 debug_marker                            :nothing
;;	  0--> b  0: i  38 di=[r14+0x9]                            :hsw_decodern,hsw_p23
;;	  2--> b  0: i  40 ax=call [`new_fbgc_tuple_object']       :hsw_decoder0
;;	  3--> b  0: i  41 r12=ax                                  :hsw_decodern,hsw_p0156
;;	  3--> b  0: i  42 loc r12                                 :nothing
;;	  3--> b  0: i  43 debug_marker                            :nothing
;;	  3--> b  0: i  44 debug_marker                            :nothing
;;	  3--> b  0: i  45 loc 0                                   :nothing
;;	  3--> b  0: i  46 debug_marker                            :nothing
;;	  3--> b  0: i  47 ax=[r14+0x9]                            :hsw_decodern,hsw_p23
;;	  5--> b  0: i  48 flags=cmp(ax,0)                         :hsw_decodern,hsw_p0156
;;	  5--> b  0: i  49 pc={(flags==0)?L71:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 5
;;   new head = 35
;;   new tail = 49

;;   ======================================================
;;   -- basic block 15 from 224 to 224 -- after reload
;;   ======================================================

;;	  0--> b  0: i 224 {bx=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	Ready list (final):  
;;   total time = 0
;;   new head = 224
;;   new tail = 224

;;   ======================================================
;;   -- basic block 16 from 51 to 70 -- after reload
;;   ======================================================

;;	  0--> b  0: i  51 loc bx                                  :nothing
;;	  0--> b  0: i  52 debug_marker                            :nothing
;;	  0--> b  0: i  53 r13=bx                                  :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  54 {bx=bx+0x1;clobber flags;}              :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  57 di=r14                                  :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  55 dx=bx                                   :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  56 si=r13                                  :hsw_decodern,hsw_p0156
;;	  2--> b  0: i  58 ax=call [`get_object_in_fbgc_str_object']:hsw_decoder0
;;	  2--> b  0: i  60 dx=r13                                  :hsw_decodern,hsw_p0156
;;	  2--> b  0: i  62 di=r12                                  :hsw_decodern,hsw_p0156
;;	  3--> b  0: i  59 si=ax                                   :hsw_decodern,hsw_p0156
;;	  4--> b  0: i  63 call [`set_object_in_fbgc_tuple_object']:hsw_decoder0
;;	  4--> b  0: i  64 debug_marker                            :nothing
;;	  4--> b  0: i  65 loc bx                                  :nothing
;;	  4--> b  0: i  66 debug_marker                            :nothing
;;	  4--> b  0: i  67 ax=[r14+0x9]                            :hsw_decodern,hsw_p23
;;	  6--> b  0: i  69 flags=cmp(ax,bx)                        :hsw_decodern,hsw_p0156
;;	  6--> b  0: i  70 pc={(gtu(flags,0))?L68:pc}              :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 6
;;   new head = 51
;;   new tail = 70

;;   ======================================================
;;   -- basic block 17 from 73 to 261 -- after reload
;;   ======================================================

;;	  0--> b  0: i  73 debug_marker                            :nothing
;;	  0--> b  0: i  74 [r12+0xd]=ax                            :hsw_decodern,(hsw_p4+(hsw_p2|hsw_p3|hsw_p7))
;;	  0--> b  0: i  75 debug_marker                            :nothing
;;	  0--> b  0: i 253 ax=r12                                  :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 256 bx=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  0--> b  0: i 254 use ax                                  :nothing
;;	  1--> b  0: i 257 bp=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  1--> b  0: i 258 r12=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  2--> b  0: i 259 r13=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  2--> b  0: i 260 r14=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  3--> b  0: i 261 simple_return                           :hsw_decoder0
;;	Ready list (final):  
;;   total time = 3
;;   new head = 73
;;   new tail = 261



starting the processing of deferred insns
ending the processing of deferred insns


fbgc_tuple

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12] 41 [r13] 42 [r14]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [xmm0] 21 [xmm1] 40 [r12] 41 [r13] 42 [r14]
;;  ref usage 	r0={22d,22u} r1={13d,4u} r2={9d} r3={10d,19u} r4={13d,7u} r5={17d,9u} r6={7d,7u} r7={31d,55u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r17={24d,9u} r18={8d} r20={12d,3u} r21={12d,3u} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={9d} r37={9d} r38={8d} r39={8d} r40={10d,12u} r41={9d,7u} r42={8d,15u,3e} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} 
;;    total ref usage 852{677d,172u,3e} in 157{149 regular + 8 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 656996803 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [always]  count:656996803 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; lr  def 	 7 [sp] 17 [flags] 41 [r13]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  gen 	 7 [sp] 17 [flags] 41 [r13]
;; live  kill	
(note 9 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 9 11 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 11 4 200 2 (debug_marker) "cmodules/fbgc_stl.c":100:2 -1
     (nil))
(insn/f:TI 200 11 201 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 42 r14)) "cmodules/fbgc_stl.c":99:39 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r14)
        (nil)))
(insn/f:TI 201 200 3 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r13)) "cmodules/fbgc_stl.c":99:39 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r13)
        (nil)))
(insn 3 201 202 2 (set (reg/v:SI 41 r13 [orig:106 argc ] [106])
        (reg:SI 4 si [116])) "cmodules/fbgc_stl.c":99:39 67 {*movsi_internal}
     (nil))
(insn/f:TI 202 3 203 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 40 r12)) "cmodules/fbgc_stl.c":99:39 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 40 r12)
        (nil)))
(insn/f:TI 203 202 204 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) "cmodules/fbgc_stl.c":99:39 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f:TI 204 203 205 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) "cmodules/fbgc_stl.c":99:39 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(note 205 204 12 2 NOTE_INSN_PROLOGUE_END)
(insn 12 205 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 4 si [orig:106 argc ] [106])
            (const_int 1 [0x1]))) "cmodules/fbgc_stl.c":100:4 11 {*cmpsi_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) "cmodules/fbgc_stl.c":100:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 301614084 (nil)))
 -> 144)
;;  succ:       3 [71.9% (guessed)]  count:472446400 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              7 [28.1% (guessed)]  count:184550403 (estimated locally) (CAN_FALLTHRU)
;; lr  out 	 4 [si] 5 [di] 7 [sp] 41 [r13]
;; live  out 	 4 [si] 5 [di] 7 [sp] 41 [r13]

;; basic block 3, loop depth 0, count 472446400 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [71.9% (guessed)]  count:472446400 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp] 41 [r13]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 42 [r14]
;; live  in  	 5 [di] 7 [sp] 41 [r13]
;; live  gen 	 0 [ax] 17 [flags] 42 [r14]
;; live  kill	
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 15 14 16 3 (debug_marker) "cmodules/fbgc_stl.c":101:3 -1
     (nil))
(insn:TI 16 15 17 3 (set (reg/f:DI 42 r14 [orig:82 _1 ] [82])
        (mem/f:DI (reg/v/f:DI 5 di [orig:105 arg ] [105]) [1 *arg_29(D)+0 S8 A64])) "cmodules/fbgc_stl.c":101:13 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:105 arg ] [105])
        (nil)))
(insn:TI 17 16 18 3 (set (reg:QI 0 ax [orig:83 _2 ] [83])
        (mem:QI (reg/f:DI 42 r14 [orig:82 _1 ] [82]) [0 _1->type+0 S1 A8])) "cmodules/fbgc_stl.c":101:16 69 {*movqi_internal}
     (nil))
(insn:TI 18 17 19 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:83 _2 ] [83])
            (const_int 6 [0x6]))) "cmodules/fbgc_stl.c":101:3 9 {*cmpqi_1}
     (nil))
(jump_insn 19 18 20 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "cmodules/fbgc_stl.c":101:3 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 268435462 (nil)))
 -> 33)
;;  succ:       4 [75.0% (adjusted)]  count:354334800 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              14 [25.0% (adjusted)]  count:118111600 (estimated locally) (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp] 41 [r13] 42 [r14]
;; live  out 	 0 [ax] 7 [sp] 41 [r13] 42 [r14]

;; basic block 4, loop depth 0, count 472446400 (estimated locally), maybe hot
;; Invalid sum of incoming counts 354334800 (estimated locally), should be 472446400 (estimated locally)
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [75.0% (adjusted)]  count:354334800 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp] 41 [r13] 42 [r14]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 7 [sp] 41 [r13] 42 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn:TI 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:83 _2 ] [83])
            (const_int 14 [0xe]))) "cmodules/fbgc_stl.c":101:3 9 {*cmpqi_1}
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) "cmodules/fbgc_stl.c":101:3 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 357913950 (nil)))
 -> 78)
;;  succ:       5 [66.7% (adjusted)]  count:314964265 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              9 [33.3% (adjusted)]  count:157482135 (estimated locally) (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp] 41 [r13] 42 [r14]
;; live  out 	 0 [ax] 7 [sp] 41 [r13] 42 [r14]

;; basic block 5, loop depth 0, count 472446400 (estimated locally), maybe hot
;; Invalid sum of incoming counts 314964265 (estimated locally), should be 472446400 (estimated locally)
;;  prev block 4, next block 6, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 [66.7% (adjusted)]  count:314964265 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp] 42 [r14]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags] 40 [r12]
;; live  in  	 0 [ax] 7 [sp] 42 [r14]
;; live  gen 	 17 [flags] 40 [r12]
;; live  kill	 17 [flags]
(note 23 22 225 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn:TI 225 23 24 5 (parallel [
            (set (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":101:3 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 24 225 25 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:83 _2 ] [83])
            (const_int 3 [0x3]))) "cmodules/fbgc_stl.c":101:3 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:83 _2 ] [83])
        (nil)))
(jump_insn 25 24 159 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 265)
            (pc))) "cmodules/fbgc_stl.c":101:3 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 357913950 (nil)))
 -> 265)
;;  succ:       6 [66.7% (adjusted)]  count:314964265 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              8 [33.3% (adjusted)]  count:157482135 (estimated locally) (CAN_FALLTHRU)
;; lr  out 	 7 [sp] 40 [r12] 42 [r14]
;; live  out 	 7 [sp] 40 [r12] 42 [r14]

;; basic block 6, loop depth 0, count 118111601 (estimated locally), maybe hot
;; Invalid sum of incoming counts 314964265 (estimated locally), should be 118111601 (estimated locally)
;;  prev block 5, next block 7, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       5 [66.7% (adjusted)]  count:314964265 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 40 [r12]
;; lr  use 	 7 [sp] 40 [r12]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  in  	 7 [sp] 40 [r12]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  kill	
(note 159 25 270 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(note 270 159 207 6 NOTE_INSN_EPILOGUE_BEG)
(insn/f:TI 207 270 157 6 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":141:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn 157 207 208 6 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])) "cmodules/fbgc_stl.c":141:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])
        (nil)))
(insn/f 208 157 158 6 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":141:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn 158 208 209 6 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":141:1 -1
     (nil))
(insn/f:TI 209 158 210 6 (set (reg:DI 40 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":141:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 210 209 211 6 (set (reg:DI 41 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":141:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 211 210 212 6 (set (reg:DI 42 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":141:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn:TI 212 211 215 6 (simple_return) "cmodules/fbgc_stl.c":141:1 690 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [always]  count:118111601 (estimated locally)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

(barrier 215 212 144)
;; basic block 7, loop depth 0, count 184550402 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [28.1% (guessed)]  count:184550403 (estimated locally) (CAN_FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  kill	 17 [flags]
(code_label 144 215 145 7 4 (nil) [1 uses])
(note 145 144 146 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 146 145 147 7 (debug_marker) "cmodules/fbgc_stl.c":139:7 -1
     (nil))
(insn:TI 147 146 223 7 (set (reg:SI 1 dx)
        (reg:SI 4 si [orig:106 argc ] [106])) "cmodules/fbgc_stl.c":139:7 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:106 argc ] [106])
        (nil)))
(insn 223 147 148 7 (parallel [
            (set (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":140:9 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 148 223 222 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f626c3ef510 *.LC1>)) "cmodules/fbgc_stl.c":139:7 66 {*movdi_internal}
     (nil))
(insn 222 148 149 7 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":139:7 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 149 222 151 7 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_stl.c":139:7 67 {*movsi_internal}
     (nil))
(call_insn:TI 151 149 271 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":139:7 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(note 271 151 230 7 NOTE_INSN_EPILOGUE_BEG)
(insn/f 230 271 227 7 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":141:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn 227 230 231 7 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])) "cmodules/fbgc_stl.c":141:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])
        (nil)))
(insn/f 231 227 228 7 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":141:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn 228 231 232 7 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":141:1 -1
     (nil))
(insn/f:TI 232 228 233 7 (set (reg:DI 40 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":141:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 233 232 234 7 (set (reg:DI 41 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":141:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 234 233 235 7 (set (reg:DI 42 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":141:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn:TI 235 234 238 7 (simple_return) "cmodules/fbgc_stl.c":141:1 690 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [always]  count:184550402 (estimated locally)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

(barrier 238 235 265)
;; basic block 8, loop depth 0, count 118111600 (estimated locally), maybe hot
;; Invalid sum of incoming counts 157482135 (estimated locally), should be 118111600 (estimated locally)
;;  prev block 7, next block 9, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       5 [33.3% (adjusted)]  count:157482135 (estimated locally) (CAN_FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r14]
;; lr  use 	 7 [sp] 42 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 7 [sp] 42 [r14]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  kill	
(code_label 265 238 26 8 23 (nil) [1 uses])
(note 26 265 27 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 27 26 28 8 (debug_marker) "cmodules/fbgc_stl.c":104:5 -1
     (nil))
(insn:TI 28 27 272 8 (set (reg:SI 5 di [orig:107 MEM[(struct fbgc_int_object *)_1].content ] [107])
        (mem:SI (plus:DI (reg/f:DI 42 r14 [orig:82 _1 ] [82])
                (const_int 9 [0x9])) [6 MEM[(struct fbgc_int_object *)_1].content+0 S4 A8])) "cmodules/fbgc_stl.c":104:12 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 42 r14 [orig:82 _1 ] [82])
        (nil)))
(note 272 28 216 8 NOTE_INSN_EPILOGUE_BEG)
(insn/f 216 272 217 8 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":141:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 217 216 218 8 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":141:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 218 217 219 8 (set (reg:DI 40 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":141:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 219 218 220 8 (set (reg:DI 41 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":141:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 220 219 30 8 (set (reg:DI 42 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":141:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(call_insn/j:TI 30 220 31 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80bc00 new_fbgc_tuple_object>) [0 new_fbgc_tuple_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":104:12 681 {*sibcall_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80bc00 new_fbgc_tuple_object>)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:118111600 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

(barrier 31 30 78)
;; basic block 9, loop depth 0, count 118111600 (estimated locally), maybe hot
;; Invalid sum of incoming counts 157482135 (estimated locally), should be 118111600 (estimated locally)
;;  prev block 8, next block 10, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 [33.3% (adjusted)]  count:157482135 (estimated locally) (CAN_FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r13] 42 [r14]
;; lr  use 	 7 [sp] 42 [r14]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 17 [flags] 21 [xmm1]
;; live  in  	 7 [sp] 41 [r13] 42 [r14]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 17 [flags] 21 [xmm1]
;; live  kill	
(code_label 78 31 79 9 6 (nil) [1 uses])
(note 79 78 80 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 80 79 81 9 (debug_marker) "cmodules/fbgc_stl.c":120:5 -1
     (nil))
(debug_insn 81 80 82 9 (var_location:DI ran (reg/f:DI 42 r14 [orig:82 _1 ] [82])) "cmodules/fbgc_stl.c":120:32 -1
     (nil))
(debug_insn 82 81 83 9 (debug_marker) "cmodules/fbgc_stl.c":121:5 -1
     (nil))
(insn:TI 83 82 6 9 (set (reg/f:DI 0 ax [orig:109 MEM[(struct fbgc_range_object *)_1].start ] [109])
        (mem/f:DI (plus:DI (reg/f:DI 42 r14 [orig:82 _1 ] [82])
                (const_int 9 [0x9])) [1 MEM[(struct fbgc_range_object *)_1].start+0 S8 A8])) "cmodules/fbgc_stl.c":121:9 66 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 42 r14 [orig:82 _1 ] [82])
                (const_int 9 [0x9])) [1 MEM[(struct fbgc_range_object *)_1].start+0 S8 A8])
        (nil)))
(insn 6 83 84 9 (set (reg:DF 21 xmm1 [orig:99 _32 ] [99])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S8 A64])) 111 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn:TI 84 6 85 9 (set (reg/v:SI 3 bx [orig:101 start ] [101])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:109 MEM[(struct fbgc_range_object *)_1].start ] [109])
                (const_int 9 [0x9])) [6 MEM[(struct fbgc_int_object *)_10].content+0 S4 A8])) "cmodules/fbgc_stl.c":121:9 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:109 MEM[(struct fbgc_range_object *)_1].start ] [109])
        (nil)))
(debug_insn 85 84 86 9 (var_location:SI start (reg/v:SI 3 bx [orig:101 start ] [101])) "cmodules/fbgc_stl.c":121:9 -1
     (nil))
(debug_insn 86 85 87 9 (debug_marker) "cmodules/fbgc_stl.c":122:5 -1
     (nil))
(insn 87 86 88 9 (set (reg/f:DI 0 ax [orig:110 MEM[(struct fbgc_range_object *)_1].end ] [110])
        (mem/f:DI (plus:DI (reg/f:DI 42 r14 [orig:82 _1 ] [82])
                (const_int 17 [0x11])) [1 MEM[(struct fbgc_range_object *)_1].end+0 S8 A8])) "cmodules/fbgc_stl.c":122:9 66 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 42 r14 [orig:82 _1 ] [82])
                (const_int 17 [0x11])) [1 MEM[(struct fbgc_range_object *)_1].end+0 S8 A8])
        (nil)))
(insn:TI 88 87 89 9 (set (reg/v:SI 6 bp [orig:98 end ] [98])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:110 MEM[(struct fbgc_range_object *)_1].end ] [110])
                (const_int 9 [0x9])) [6 MEM[(struct fbgc_int_object *)_11].content+0 S4 A8])) "cmodules/fbgc_stl.c":122:9 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:110 MEM[(struct fbgc_range_object *)_1].end ] [110])
        (nil)))
(debug_insn 89 88 90 9 (var_location:SI end (reg/v:SI 6 bp [orig:98 end ] [98])) "cmodules/fbgc_stl.c":122:9 -1
     (nil))
(debug_insn 90 89 91 9 (debug_marker) "cmodules/fbgc_stl.c":123:5 -1
     (nil))
(insn 91 90 92 9 (set (reg/f:DI 0 ax [orig:92 _12 ] [92])
        (mem/f:DI (plus:DI (reg/f:DI 42 r14 [orig:82 _1 ] [82])
                (const_int 25 [0x19])) [1 MEM[(struct fbgc_range_object *)_1].step+0 S8 A8])) "cmodules/fbgc_stl.c":123:19 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 42 r14 [orig:82 _1 ] [82])
        (nil)))
(insn:TI 92 91 93 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:92 _12 ] [92])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":123:38 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 93 92 94 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 97)
            (pc))) "cmodules/fbgc_stl.c":123:38 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 322122548 (nil)))
 -> 97)
;;  succ:       10 [70.0% (guessed)]  count:82678120 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              11 [30.0% (guessed)]  count:35433480 (estimated locally) (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 21 [xmm1] 41 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 21 [xmm1] 41 [r13]

;; basic block 10, loop depth 0, count 82678120 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       9 [70.0% (guessed)]  count:82678120 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 21 [xmm1] 41 [r13]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 21 [xmm1] 41 [r13]
;; live  kill	
(note 94 93 95 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn:TI 95 94 268 10 (set (reg/v:SI 41 r13 [orig:106 argc ] [106])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:92 _12 ] [92])
                (const_int 9 [0x9])) [6 MEM[(struct fbgc_int_object *)_12].content+0 S4 A8])) "cmodules/fbgc_stl.c":123:38 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:92 _12 ] [92])
        (nil)))
(insn 268 95 269 10 (set (reg:V2DF 21 xmm1 [orig:99 _32 ] [99])
        (const_vector:V2DF [
                (const_double:DF 0.0 [0x0.0p+0]) repeated x2
            ])) 1220 {movv2df_internal}
     (nil))
(insn:TI 269 268 97 10 (set (reg:V2DF 21 xmm1 [orig:99 _32 ] [99])
        (vec_merge:V2DF (vec_duplicate:V2DF (float:DF (reg/v:SI 41 r13 [orig:106 argc ] [106])))
            (reg:V2DF 21 xmm1 [orig:99 _32 ] [99])
            (const_int 1 [0x1]))) 2436 {sse2_cvtsi2sd}
     (nil))
;;  succ:       11 [always]  count:82678120 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 21 [xmm1] 41 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 21 [xmm1] 41 [r13]

;; basic block 11, loop depth 0, count 118111600 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       9 [30.0% (guessed)]  count:35433480 (estimated locally) (CAN_FALLTHRU)
;;              10 [always]  count:82678120 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 21 [xmm1] 41 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 21 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 42 [r14] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 21 [xmm1] 41 [r13]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 20 [xmm0] 40 [r12] 42 [r14]
;; live  kill	 17 [flags]
(code_label 97 269 98 11 10 (nil) [1 uses])
(note 98 97 99 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 99 98 100 11 (var_location:SI step (reg/v:SI 41 r13 [orig:106 argc ] [106])) "cmodules/fbgc_stl.c":123:9 -1
     (nil))
(debug_insn 100 99 101 11 (debug_marker) "cmodules/fbgc_stl.c":125:5 -1
     (nil))
(debug_insn 101 100 102 11 (var_location:SI sz (fix:SI (div:DF (float:DF (minus:SI (reg/v:SI 6 bp [orig:98 end ] [98])
                    (reg/v:SI 3 bx [orig:101 start ] [101])))
            (reg:DF 21 xmm1 [orig:99 _32 ] [99])))) "cmodules/fbgc_stl.c":125:9 -1
     (nil))
(debug_insn 102 101 198 11 (debug_marker) "cmodules/fbgc_stl.c":127:5 -1
     (nil))
(insn:TI 198 102 266 11 (set (reg:SI 0 ax [111])
        (reg/v:SI 6 bp [orig:98 end ] [98])) "cmodules/fbgc_stl.c":125:26 67 {*movsi_internal}
     (nil))
(insn 266 198 103 11 (set (reg:V2DF 20 xmm0 [112])
        (const_vector:V2DF [
                (const_double:DF 0.0 [0x0.0p+0]) repeated x2
            ])) "cmodules/fbgc_stl.c":125:14 1220 {movv2df_internal}
     (nil))
(insn:TI 103 266 267 11 (parallel [
            (set (reg:SI 0 ax [111])
                (minus:SI (reg:SI 0 ax [111])
                    (reg/v:SI 3 bx [orig:101 start ] [101])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":125:26 246 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 267 103 105 11 (set (reg:V2DF 20 xmm0 [112])
        (vec_merge:V2DF (vec_duplicate:V2DF (float:DF (reg:SI 0 ax [111])))
            (reg:V2DF 20 xmm0 [112])
            (const_int 1 [0x1]))) "cmodules/fbgc_stl.c":125:14 2436 {sse2_cvtsi2sd}
     (expr_list:REG_DEAD (reg:SI 0 ax [111])
        (nil)))
(insn:TI 105 267 106 11 (set (reg:DF 20 xmm0 [113])
        (div:DF (reg:DF 20 xmm0 [112])
            (reg:DF 21 xmm1 [orig:99 _32 ] [99]))) "cmodules/fbgc_stl.c":125:33 822 {*fop_df_1}
     (expr_list:REG_DEAD (reg:DF 21 xmm1 [orig:99 _32 ] [99])
        (nil)))
(insn:TI 106 105 107 11 (set (reg:SI 42 r14 [orig:96 sz.3_17 ] [96])
        (fix:SI (reg:DF 20 xmm0 [113]))) "cmodules/fbgc_stl.c":125:9 153 {fix_truncdfsi_sse}
     (expr_list:REG_DEAD (reg:DF 20 xmm0 [113])
        (nil)))
(insn:TI 107 106 108 11 (set (reg:SI 5 di)
        (reg:SI 42 r14 [orig:96 sz.3_17 ] [96])) "cmodules/fbgc_stl.c":127:31 67 {*movsi_internal}
     (nil))
(call_insn:TI 108 107 109 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80bc00 new_fbgc_tuple_object>) [0 new_fbgc_tuple_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":127:31 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80bc00 new_fbgc_tuple_object>)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn:TI 109 108 110 11 (set (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])
        (reg:DI 0 ax [119])) "cmodules/fbgc_stl.c":127:31 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [119])
        (nil)))
(debug_insn 110 109 111 11 (var_location:DI tp (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])) "cmodules/fbgc_stl.c":127:31 -1
     (nil))
(debug_insn 111 110 112 11 (debug_marker) "cmodules/fbgc_stl.c":128:5 -1
     (nil))
(debug_insn 112 111 113 11 (debug_marker) "cmodules/fbgc_stl.c":128:9 -1
     (nil))
(debug_insn 113 112 114 11 (var_location:SI i (reg/v:SI 3 bx [orig:101 start ] [101])) -1
     (nil))
(debug_insn 114 113 115 11 (debug_marker) "cmodules/fbgc_stl.c":128:24 -1
     (nil))
(insn 115 114 116 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 3 bx [orig:101 start ] [101])
            (reg/v:SI 6 bp [orig:98 end ] [98]))) "cmodules/fbgc_stl.c":128:5 11 {*cmpsi_1}
     (nil))
(jump_insn 116 115 123 11 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 140)
            (pc))) "cmodules/fbgc_stl.c":128:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 140)
;;  succ:       12 [89.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              13 [11.0% (guessed)]  count:12992276 (estimated locally) (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

;; basic block 12, loop depth 0, count 955630224 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       11 [89.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              12 [89.0% (guessed)]  count:850510900 (estimated locally) (DFS_BACK,CAN_FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label 123 116 124 12 11 (nil) [1 uses])
(note 124 123 125 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 125 124 126 12 (var_location:SI i (reg/v:SI 3 bx [orig:101 start ] [101])) -1
     (nil))
(debug_insn 126 125 127 12 (debug_marker) "cmodules/fbgc_stl.c":129:6 -1
     (nil))
(insn:TI 127 126 128 12 (set (reg:SI 5 di)
        (reg/v:SI 3 bx [orig:101 start ] [101])) "cmodules/fbgc_stl.c":129:6 67 {*movsi_internal}
     (nil))
(call_insn:TI 128 127 130 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_int_object") [flags 0x41]  <function_decl 0x7f626c7fa500 new_fbgc_int_object>) [0 new_fbgc_int_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":129:6 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_int_object") [flags 0x41]  <function_decl 0x7f626c7fa500 new_fbgc_int_object>)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 130 128 132 12 (set (reg:SI 1 dx)
        (reg/v:SI 3 bx [orig:101 start ] [101])) "cmodules/fbgc_stl.c":129:6 67 {*movsi_internal}
     (nil))
(insn 132 130 135 12 (set (reg:DI 5 di)
        (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])) "cmodules/fbgc_stl.c":129:6 66 {*movdi_internal}
     (nil))
(insn 135 132 129 12 (parallel [
            (set (reg/v:SI 3 bx [orig:101 start ] [101])
                (plus:SI (reg/v:SI 3 bx [orig:101 start ] [101])
                    (reg/v:SI 41 r13 [orig:106 argc ] [106])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":128:32 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 129 135 133 12 (set (reg/f:DI 4 si [orig:97 _18 ] [97])
        (reg:DI 0 ax [120])) "cmodules/fbgc_stl.c":129:6 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [120])
        (nil)))
(call_insn:TI 133 129 134 12 (call (mem:QI (symbol_ref:DI ("set_object_in_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80be00 set_object_in_fbgc_tuple_object>) [0 set_object_in_fbgc_tuple_object S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_stl.c":129:6 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("set_object_in_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80be00 set_object_in_fbgc_tuple_object>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(debug_insn 134 133 136 12 (debug_marker) "cmodules/fbgc_stl.c":128:31 -1
     (nil))
(debug_insn 136 134 137 12 (var_location:SI i (reg/v:SI 3 bx [orig:101 start ] [101])) -1
     (nil))
(debug_insn 137 136 138 12 (debug_marker) "cmodules/fbgc_stl.c":128:24 -1
     (nil))
(insn 138 137 139 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 6 bp [orig:98 end ] [98])
            (reg/v:SI 3 bx [orig:101 start ] [101]))) "cmodules/fbgc_stl.c":128:5 11 {*cmpsi_1}
     (nil))
(jump_insn 139 138 140 12 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 123)
            (pc))) "cmodules/fbgc_stl.c":128:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 123)
;;  succ:       12 [89.0% (guessed)]  count:850510900 (estimated locally) (DFS_BACK,CAN_FALLTHRU)
;;              13 [11.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

;; basic block 13, loop depth 0, count 118111601 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       11 [11.0% (guessed)]  count:12992276 (estimated locally) (CAN_FALLTHRU)
;;              12 [11.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 40 [r12] 42 [r14]
;; lr  use 	 7 [sp] 40 [r12] 42 [r14]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  in  	 7 [sp] 40 [r12] 42 [r14]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  kill	
(code_label 140 139 117 13 12 (nil) [1 uses])
(note 117 140 118 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 118 117 119 13 (debug_marker) "cmodules/fbgc_stl.c":132:5 -1
     (nil))
(insn:TI 119 118 120 13 (set (mem:SI (plus:DI (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])
                (const_int 13 [0xd])) [6 MEM[(struct fbgc_tuple_object *)tp_36].size+0 S4 A8])
        (reg:SI 42 r14 [orig:96 sz.3_17 ] [96])) "cmodules/fbgc_stl.c":132:32 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 42 r14 [orig:96 sz.3_17 ] [96])
        (nil)))
(debug_insn 120 119 240 13 (debug_marker) "cmodules/fbgc_stl.c":134:5 -1
     (nil))
(insn 240 120 273 13 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])) "cmodules/fbgc_stl.c":141:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])
        (nil)))
(note 273 240 243 13 NOTE_INSN_EPILOGUE_BEG)
(insn/f 243 273 241 13 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":141:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn 241 243 244 13 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":141:1 -1
     (nil))
(insn/f:TI 244 241 245 13 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":141:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 245 244 246 13 (set (reg:DI 40 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":141:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 246 245 247 13 (set (reg:DI 41 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":141:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 247 246 248 13 (set (reg:DI 42 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":141:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn:TI 248 247 251 13 (simple_return) "cmodules/fbgc_stl.c":141:1 690 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [always]  count:118111601 (estimated locally)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

(barrier 251 248 33)
;; basic block 14, loop depth 0, count 118111600 (estimated locally), maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [25.0% (adjusted)]  count:118111600 (estimated locally) (CAN_FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r14]
;; lr  use 	 7 [sp] 42 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 7 [sp] 42 [r14]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 40 [r12]
;; live  kill	
(code_label 33 251 34 14 5 (nil) [1 uses])
(note 34 33 35 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 35 34 36 14 (debug_marker) "cmodules/fbgc_stl.c":108:5 -1
     (nil))
(debug_insn 36 35 37 14 (var_location:DI s (reg/f:DI 42 r14 [orig:82 _1 ] [82])) "cmodules/fbgc_stl.c":108:26 -1
     (nil))
(debug_insn 37 36 38 14 (debug_marker) "cmodules/fbgc_stl.c":109:5 -1
     (nil))
(insn:TI 38 37 40 14 (set (reg:SI 5 di [orig:108 MEM[(struct fbgc_str_object *)_1].len ] [108])
        (mem:SI (plus:DI (reg/f:DI 42 r14 [orig:82 _1 ] [82])
                (const_int 9 [0x9])) [6 MEM[(struct fbgc_str_object *)_1].len+0 S4 A8])) "cmodules/fbgc_stl.c":109:31 67 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 42 r14 [orig:82 _1 ] [82])
                (const_int 9 [0x9])) [6 MEM[(struct fbgc_str_object *)_1].len+0 S4 A8])
        (nil)))
(call_insn:TI 40 38 41 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80bc00 new_fbgc_tuple_object>) [0 new_fbgc_tuple_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":109:31 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80bc00 new_fbgc_tuple_object>)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn:TI 41 40 42 14 (set (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])
        (reg:DI 0 ax [117])) "cmodules/fbgc_stl.c":109:31 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [117])
        (nil)))
(debug_insn 42 41 43 14 (var_location:DI t (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])) "cmodules/fbgc_stl.c":109:31 -1
     (nil))
(debug_insn 43 42 44 14 (debug_marker) "cmodules/fbgc_stl.c":110:5 -1
     (nil))
(debug_insn 44 43 45 14 (debug_marker) "cmodules/fbgc_stl.c":110:9 -1
     (nil))
(debug_insn 45 44 46 14 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 46 45 47 14 (debug_marker) "cmodules/fbgc_stl.c":110:20 -1
     (nil))
(insn 47 46 48 14 (set (reg:SI 0 ax [orig:89 _8 ] [89])
        (mem:SI (plus:DI (reg/f:DI 42 r14 [orig:82 _1 ] [82])
                (const_int 9 [0x9])) [6 MEM[(struct fbgc_str_object *)_1].len+0 S4 A8])) "cmodules/fbgc_stl.c":110:24 67 {*movsi_internal}
     (nil))
(insn:TI 48 47 49 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:89 _8 ] [89])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":110:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 49 48 164 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 71)
            (pc))) "cmodules/fbgc_stl.c":110:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 71)
;;  succ:       15 [89.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              17 [11.0% (guessed)]  count:12992276 (estimated locally) (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp] 40 [r12] 42 [r14]
;; live  out 	 0 [ax] 7 [sp] 40 [r12] 42 [r14]

;; basic block 15, loop depth 0, count 105119324 (estimated locally), maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       14 [89.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 40 [r12] 42 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 17 [flags]
;; live  in  	 7 [sp] 40 [r12] 42 [r14]
;; live  gen 	 3 [bx]
;; live  kill	 17 [flags]
(note 164 49 224 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn:TI 224 164 68 15 (parallel [
            (set (reg:DI 3 bx [orig:87 _6 ] [87])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":110:13 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       16 [always]  count:105119324 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 40 [r12] 42 [r14]
;; live  out 	 3 [bx] 7 [sp] 40 [r12] 42 [r14]

;; basic block 16, loop depth 0, count 955630224 (estimated locally), maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       15 [always]  count:105119324 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              16 [89.0% (guessed)]  count:850510900 (estimated locally) (DFS_BACK,CAN_FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 40 [r12] 42 [r14]
;; lr  use 	 3 [bx] 7 [sp] 40 [r12] 42 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 41 [r13] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 3 [bx] 7 [sp] 40 [r12] 42 [r14]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 17 [flags] 41 [r13]
;; live  kill	 17 [flags]
(code_label 68 224 50 16 9 (nil) [1 uses])
(note 50 68 51 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(debug_insn 51 50 52 16 (var_location:SI i (reg/v:SI 3 bx [orig:87 _6 ] [87])) -1
     (nil))
(debug_insn 52 51 53 16 (debug_marker) "cmodules/fbgc_stl.c":111:6 -1
     (nil))
(insn:TI 53 52 54 16 (set (reg/v:SI 41 r13 [orig:102 i ] [102])
        (reg/v:SI 3 bx [orig:87 _6 ] [87])) 67 {*movsi_internal}
     (nil))
(insn 54 53 57 16 (parallel [
            (set (reg/v:SI 3 bx [orig:87 _6 ] [87])
                (plus:SI (reg/v:SI 3 bx [orig:87 _6 ] [87])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":111:6 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 57 54 55 16 (set (reg:DI 5 di)
        (reg/f:DI 42 r14 [orig:82 _1 ] [82])) "cmodules/fbgc_stl.c":111:6 66 {*movdi_internal}
     (nil))
(insn:TI 55 57 56 16 (set (reg:SI 1 dx)
        (reg/v:SI 3 bx [orig:87 _6 ] [87])) "cmodules/fbgc_stl.c":111:6 67 {*movsi_internal}
     (nil))
(insn 56 55 58 16 (set (reg:SI 4 si)
        (reg/v:SI 41 r13 [orig:102 i ] [102])) "cmodules/fbgc_stl.c":111:6 67 {*movsi_internal}
     (nil))
(call_insn:TI 58 56 60 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_object_in_fbgc_str_object") [flags 0x41]  <function_decl 0x7f626c806400 get_object_in_fbgc_str_object>) [0 get_object_in_fbgc_str_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":111:6 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("get_object_in_fbgc_str_object") [flags 0x41]  <function_decl 0x7f626c806400 get_object_in_fbgc_str_object>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 60 58 62 16 (set (reg:SI 1 dx)
        (reg/v:SI 41 r13 [orig:102 i ] [102])) "cmodules/fbgc_stl.c":111:6 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 41 r13 [orig:102 i ] [102])
        (nil)))
(insn 62 60 59 16 (set (reg:DI 5 di)
        (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])) "cmodules/fbgc_stl.c":111:6 66 {*movdi_internal}
     (nil))
(insn:TI 59 62 63 16 (set (reg/f:DI 4 si [orig:88 _7 ] [88])
        (reg:DI 0 ax [118])) "cmodules/fbgc_stl.c":111:6 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [118])
        (nil)))
(call_insn:TI 63 59 64 16 (call (mem:QI (symbol_ref:DI ("set_object_in_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80be00 set_object_in_fbgc_tuple_object>) [0 set_object_in_fbgc_tuple_object S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_stl.c":111:6 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("set_object_in_fbgc_tuple_object") [flags 0x41]  <function_decl 0x7f626c80be00 set_object_in_fbgc_tuple_object>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(debug_insn 64 63 65 16 (debug_marker) "cmodules/fbgc_stl.c":110:52 -1
     (nil))
(debug_insn 65 64 66 16 (var_location:SI i (reg/v:SI 3 bx [orig:87 _6 ] [87])) -1
     (nil))
(debug_insn 66 65 67 16 (debug_marker) "cmodules/fbgc_stl.c":110:20 -1
     (nil))
(insn 67 66 69 16 (set (reg:SI 0 ax [orig:89 _8 ] [89])
        (mem:SI (plus:DI (reg/f:DI 42 r14 [orig:82 _1 ] [82])
                (const_int 9 [0x9])) [6 MEM[(struct fbgc_str_object *)_1].len+0 S4 A8])) "cmodules/fbgc_stl.c":110:24 67 {*movsi_internal}
     (nil))
(insn:TI 69 67 70 16 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax [orig:89 _8 ] [89])
            (reg/v:SI 3 bx [orig:87 _6 ] [87]))) "cmodules/fbgc_stl.c":110:5 11 {*cmpsi_1}
     (nil))
(jump_insn 70 69 71 16 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 68)
            (pc))) "cmodules/fbgc_stl.c":110:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 68)
;;  succ:       16 [89.0% (guessed)]  count:850510900 (estimated locally) (DFS_BACK,CAN_FALLTHRU)
;;              17 [11.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 40 [r12] 42 [r14]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 40 [r12] 42 [r14]

;; basic block 17, loop depth 0, count 118111601 (estimated locally), maybe hot
;;  prev block 16, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       14 [11.0% (guessed)]  count:12992276 (estimated locally) (CAN_FALLTHRU)
;;              16 [11.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp] 40 [r12]
;; lr  use 	 0 [ax] 7 [sp] 40 [r12]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  in  	 0 [ax] 7 [sp] 40 [r12]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  kill	
(code_label 71 70 72 17 8 (nil) [1 uses])
(note 72 71 73 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(debug_insn 73 72 74 17 (debug_marker) "cmodules/fbgc_stl.c":113:5 -1
     (nil))
(insn:TI 74 73 75 17 (set (mem:SI (plus:DI (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])
                (const_int 13 [0xd])) [6 MEM[(struct fbgc_tuple_object *)t_42].size+0 S4 A8])
        (reg:SI 0 ax [orig:89 _8 ] [89])) "cmodules/fbgc_stl.c":113:31 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:89 _8 ] [89])
        (nil)))
(debug_insn 75 74 253 17 (debug_marker) "cmodules/fbgc_stl.c":115:5 -1
     (nil))
(insn 253 75 274 17 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])) "cmodules/fbgc_stl.c":141:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 40 r12 [orig:104 <retval> ] [104])
        (nil)))
(note 274 253 256 17 NOTE_INSN_EPILOGUE_BEG)
(insn/f 256 274 254 17 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":141:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn 254 256 257 17 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":141:1 -1
     (nil))
(insn/f:TI 257 254 258 17 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":141:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 258 257 259 17 (set (reg:DI 40 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":141:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 259 258 260 17 (set (reg:DI 41 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":141:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 260 259 261 17 (set (reg:DI 42 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":141:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn:TI 261 260 264 17 (simple_return) "cmodules/fbgc_stl.c":141:1 690 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [always]  count:118111601 (estimated locally)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13] 42 [r14]

(barrier 264 261 197)
(note 197 264 0 NOTE_INSN_DELETED)

;; Function fbgc_len (fbgc_len, funcdef_no=56, decl_uid=5689, cgraph_uid=57, symbol_order=59)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)


fbgc_len

Dataflow summary:
def_info->table_size = 157, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,3u} r1={4d,1u} r2={3d} r4={4d,3u} r5={5d,4u} r7={3d,10u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={7d,1u} r18={2d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 185{163d,22u,0e} in 23{21 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d8(1){ }d11(2){ }d15(4){ }d20(5){ }d21(7){ }d45(20){ }d48(21){ }d51(22){ }d54(23){ }d57(24){ }d60(25){ }d63(26){ }d66(27){ }d85(36){ }d88(37){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  kill	
;; lr  out 	 4 [si] 5 [di] 7 [sp]
;; live  out 	 4 [si] 5 [di] 7 [sp]

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 4 [si] 5 [di] 7 [sp]
;; live  out 	 4 [si] 5 [di] 7 [sp]

( 2 )->[3]->( 1 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 4 3 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 45 to worklist
  Adding insn 36 to worklist
  Adding insn 29 to worklist
  Adding insn 19 to worklist
Finished finding needed instructions:
processing block 4 lr out =  0 [ax] 7 [sp]
  Adding insn 18 to worklist
processing block 3 lr out =  0 [ax] 7 [sp]
  Adding insn 44 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 46 to worklist
  Adding insn 41 to worklist
processing block 2 lr out =  4 [si] 5 [di] 7 [sp]
  Adding insn 9 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)
;;   ======================================================
;;   -- basic block 2 from 8 to 10 -- after reload
;;   ======================================================

;;	  0--> b  0: i   8 debug_marker                            :nothing
;;	  0--> b  0: i   9 flags=cmp(si,0x1)                       :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  10 pc={(flags==0)?L57:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 0
;;   new head = 8
;;   new tail = 10

;;   ======================================================
;;   -- basic block 3 from 41 to 45 -- after reload
;;   ======================================================

;;	  0--> b  0: i  41 {sp=sp-0x8;clobber flags;clobber [scratch];}:hsw_decodern,hsw_p0156
;;	  0--> b  0: i  46 dx=si                                   :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  24 debug_marker                            :nothing
;;	  0--> b  0: i  27 di=0x64                                 :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  55 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  26 si=`*.LC2'                              :hsw_decodern,hsw_p1|hsw_p5
;;	  2--> b  0: i  29 ax=call [`cprintf']                     :hsw_decoder0
;;	  2--> b  0: i  30 debug_marker                            :nothing
;;	  2--> b  0: i  56 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  2--> b  0: i  44 {sp=sp+0x8;clobber flags;clobber [scratch];}:hsw_decodern,hsw_p0156
;;	  2--> b  0: i  36 use ax                                  :nothing
;;	  3--> b  0: i  45 simple_return                           :hsw_decoder0
;;	Ready list (final):  
;;   total time = 3
;;   new head = 41
;;   new tail = 45

;;   ======================================================
;;   -- basic block 4 from 12 to 19 -- after reload
;;   ======================================================

;;	  0--> b  0: i  12 loc 0x1                                 :nothing
;;	  0--> b  0: i  13 loc di                                  :nothing
;;	  0--> b  0: i  14 debug_marker                            :nothing
;;	  0--> b  0: i  15 loc D#1                                 :nothing
;;	  0--> b  0: i  16 loc D#2                                 :nothing
;;	  0--> b  0: i  17 debug_marker                            :nothing
;;	  0--> b  0: i  18 di=[di]                                 :hsw_decodern,hsw_p23
;;	  2--> b  0: i  19 ax=call [`get_length_fbgc_object']      :hsw_decoder0
;;	Ready list (final):  
;;   total time = 2
;;   new head = 12
;;   new tail = 19



starting the processing of deferred insns
ending the processing of deferred insns


fbgc_len

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,3u} r1={4d,1u} r2={3d} r4={4d,3u} r5={5d,4u} r7={3d,10u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={7d,1u} r18={2d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 185{163d,22u,0e} in 23{21 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(note 6 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 6 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 4 9 2 (debug_marker) "cmodules/fbgc_stl.c":19:2 -1
     (nil))
(insn:TI 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 4 si [orig:85 argc ] [85])
            (const_int 1 [0x1]))) "cmodules/fbgc_stl.c":19:4 11 {*cmpsi_1}
     (nil))
(jump_insn 10 9 23 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 57)
            (pc))) "cmodules/fbgc_stl.c":19:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 422839532 (nil)))
 -> 57)
;;  succ:       4 [39.4% (guessed)]  count:422839528 (estimated locally) (CAN_FALLTHRU)
;;              3 [60.6% (guessed)]  count:650902296 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 4 [si] 5 [di] 7 [sp]
;; live  out 	 4 [si] 5 [di] 7 [sp]

;; basic block 3, loop depth 0, count 650902295 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [60.6% (guessed)]  count:650902296 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]
;; live  kill	 17 [flags]
(note 23 10 41 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn/f:TI 41 23 42 3 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "cmodules/fbgc_stl.c":18:1 959 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (nil))))
(note 42 41 46 3 NOTE_INSN_PROLOGUE_END)
(insn 46 42 24 3 (set (reg/v:SI 1 dx [orig:85 argc ] [85])
        (reg:SI 4 si [88])) 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [88])
        (nil)))
(debug_insn 24 46 27 3 (debug_marker) "cmodules/fbgc_stl.c":22:7 -1
     (nil))
(insn 27 24 55 3 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_stl.c":22:7 67 {*movsi_internal}
     (nil))
(insn 55 27 26 3 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":22:7 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 26 55 29 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f626c44e3f0 *.LC2>)) "cmodules/fbgc_stl.c":22:7 66 {*movdi_internal}
     (nil))
(call_insn:TI 29 26 30 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":22:7 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(debug_insn 30 29 56 3 (debug_marker) "cmodules/fbgc_stl.c":23:2 -1
     (nil))
(insn 56 30 58 3 (parallel [
            (set (reg/i:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":24:1 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 58 56 44 3 NOTE_INSN_EPILOGUE_BEG)
(insn/f 44 58 36 3 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "cmodules/fbgc_stl.c":24:1 959 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn 36 44 45 3 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":24:1 -1
     (nil))
(jump_insn:TI 45 36 54 3 (simple_return) "cmodules/fbgc_stl.c":24:1 690 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [always]  count:650902295 (estimated locally)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 54 45 57)
;; basic block 4, loop depth 0, count 422839530 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       2 [39.4% (guessed)]  count:422839528 (estimated locally) (CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 57 54 11 4 28 (nil) [1 uses])
(note 11 57 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 12 11 13 4 (var_location:SI D#1 (const_int 1 [0x1])) -1
     (nil))
(debug_insn 13 12 14 4 (var_location:DI arg (reg/v/f:DI 5 di [orig:84 arg ] [84])) -1
     (nil))
(debug_insn 14 13 15 4 (debug_marker:BLK) "cmodules/fbgc_stl.c":17:1 -1
     (nil))
(debug_insn 15 14 16 4 (var_location:SI D#2 (debug_expr:SI D#1)) -1
     (nil))
(debug_insn 16 15 17 4 (var_location:SI argc (debug_expr:SI D#2)) -1
     (nil))
(debug_insn 17 16 18 4 (debug_marker) "cmodules/fbgc_stl.c":20:3 -1
     (nil))
(insn:TI 18 17 19 4 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 5 di [orig:84 arg ] [84]) [1 *arg_6(D)+0 S8 A64])) "cmodules/fbgc_stl.c":20:10 66 {*movdi_internal}
     (nil))
(call_insn/j:TI 19 18 49 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_length_fbgc_object") [flags 0x41]  <function_decl 0x7f626c7e8a00 get_length_fbgc_object>) [0 get_length_fbgc_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":20:10 681 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("get_length_fbgc_object") [flags 0x41]  <function_decl 0x7f626c7e8a00 get_length_fbgc_object>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:422839530 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 49 19 20)
(barrier 20 49 40)
(note 40 20 0 NOTE_INSN_DELETED)

;; Function fbgc_id (fbgc_id, funcdef_no=58, decl_uid=5697, cgraph_uid=59, symbol_order=63)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)


fbgc_id

Dataflow summary:
def_info->table_size = 161, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={7d,5u} r1={5d,2u} r2={4d,1u} r4={5d,4u} r5={5d,4u} r7={4d,12u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={10d,1u} r18={2d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 201{172d,29u,0e} in 44{42 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(0){ }d10(1){ }d14(2){ }d19(4){ }d24(5){ }d25(7){ }d49(20){ }d52(21){ }d55(22){ }d58(23){ }d61(24){ }d64(25){ }d67(26){ }d70(27){ }d89(36){ }d92(37){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  kill	
;; lr  out 	 4 [si] 5 [di] 7 [sp]
;; live  out 	 4 [si] 5 [di] 7 [sp]

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 7 [sp] 17 [flags]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 4 [si] 5 [di] 7 [sp]
;; live  out 	 4 [si] 5 [di] 7 [sp]

( 2 )->[3]->( 1 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 7 [sp]

( 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 7 [sp]

( 3 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 61 to worklist
  Adding insn 50 to worklist
  Adding insn 37 to worklist
  Adding insn 79 to worklist
  Adding insn 76 to worklist
  Adding insn 27 to worklist
Finished finding needed instructions:
processing block 4 lr out =  0 [ax] 7 [sp]
  Adding insn 78 to worklist
  Adding insn 75 to worklist
  Adding insn 68 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
processing block 3 lr out =  0 [ax] 7 [sp]
  Adding insn 60 to worklist
  Adding insn 66 to worklist
  Adding insn 67 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 62 to worklist
processing block 2 lr out =  4 [si] 5 [di] 7 [sp]
  Adding insn 8 to worklist
  Adding insn 57 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)
;;   ======================================================
;;   -- basic block 2 from 57 to 9 -- after reload
;;   ======================================================

;;	  0--> b  0: i   7 debug_marker                            :nothing
;;	  0--> b  0: i  57 {sp=sp-0x8;clobber flags;clobber [scratch];}:hsw_decodern,hsw_p0156
;;	  0--> b  0: i   8 flags=cmp(si,0x1)                       :hsw_decodern,hsw_p0156
;;	  0--> b  0: i   9 pc={(flags==0)?L83:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 0
;;   new head = 7
;;   new tail = 9

;;   ======================================================
;;   -- basic block 3 from 62 to 61 -- after reload
;;   ======================================================

;;	  0--> b  0: i  62 dx=si                                   :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  32 debug_marker                            :nothing
;;	  0--> b  0: i  35 di=0x64                                 :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  34 si=`*.LC4'                              :hsw_decodern,hsw_p1|hsw_p5
;;	  0--> b  0: i  67 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  37 ax=call [`cprintf']                     :hsw_decoder0
;;	  1--> b  0: i  40 loc clobber                             :nothing
;;	  1--> b  0: i  41 loc clobber                             :nothing
;;	  1--> b  0: i  42 loc clobber                             :nothing
;;	  1--> b  0: i  43 loc clobber                             :nothing
;;	  1--> b  0: i  44 debug_marker                            :nothing
;;	  1--> b  0: i  66 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  60 {sp=sp+0x8;clobber flags;clobber [scratch];}:hsw_decodern,hsw_p0156
;;	  1--> b  0: i  50 use ax                                  :nothing
;;	  2--> b  0: i  61 simple_return                           :hsw_decoder0
;;	Ready list (final):  
;;   total time = 2
;;   new head = 62
;;   new tail = 61

;;   ======================================================
;;   -- basic block 4 from 11 to 79 -- after reload
;;   ======================================================

;;	  0--> b  0: i  11 loc 0x1                                 :nothing
;;	  0--> b  0: i  12 loc di                                  :nothing
;;	  0--> b  0: i  13 debug_marker                            :nothing
;;	  0--> b  0: i  14 loc D#3                                 :nothing
;;	  0--> b  0: i  15 loc D#4                                 :nothing
;;	  0--> b  0: i  16 debug_marker                            :nothing
;;	  0--> b  0: i  17 loc [`stdout']                          :nothing
;;	  0--> b  0: i  18 loc `*.LC3'                             :nothing
;;	  0--> b  0: i  19 debug_marker                            :nothing
;;	  0--> b  0: i  20 debug_marker                            :nothing
;;	  0--> b  0: i  22 cx=[di]                                 :hsw_decodern,hsw_p23
;;	  0--> b  0: i  25 di=[`stdout']                           :hsw_decodern,hsw_p23
;;	  0--> b  0: i  24 si=0x1                                  :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  68 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  23 dx=`*.LC3'                              :hsw_decodern,hsw_p1|hsw_p5
;;	  2--> b  0: i  27 ax=call [`__fprintf_chk']               :hsw_decoder0
;;	  2--> b  0: i  70 loc clobber                             :nothing
;;	  2--> b  0: i  71 loc clobber                             :nothing
;;	  2--> b  0: i  72 loc clobber                             :nothing
;;	  2--> b  0: i  73 loc clobber                             :nothing
;;	  2--> b  0: i  74 debug_marker                            :nothing
;;	  2--> b  0: i  75 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  2--> b  0: i  78 {sp=sp+0x8;clobber flags;clobber [scratch];}:hsw_decodern,hsw_p0156
;;	  2--> b  0: i  76 use ax                                  :nothing
;;	  3--> b  0: i  79 simple_return                           :hsw_decoder0
;;	Ready list (final):  
;;   total time = 3
;;   new head = 11
;;   new tail = 79



starting the processing of deferred insns
ending the processing of deferred insns


fbgc_id

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={7d,5u} r1={5d,2u} r2={4d,1u} r4={5d,4u} r5={5d,4u} r7={4d,12u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={10d,1u} r18={2d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 201{172d,29u,0e} in 44{42 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 7 [sp] 17 [flags]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 5 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 57 2 (debug_marker) "cmodules/fbgc_stl.c":64:2 -1
     (nil))
(insn/f:TI 57 7 58 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "cmodules/fbgc_stl.c":63:33 959 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (nil))))
(note 58 57 8 2 NOTE_INSN_PROLOGUE_END)
(insn 8 58 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 4 si [orig:86 argc ] [86])
            (const_int 1 [0x1]))) "cmodules/fbgc_stl.c":64:4 11 {*cmpsi_1}
     (nil))
(jump_insn 9 8 31 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 83)
            (pc))) "cmodules/fbgc_stl.c":64:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 365072228 (nil)))
 -> 83)
;;  succ:       4 [34.0% (guessed)]  count:365072224 (estimated locally) (CAN_FALLTHRU)
;;              3 [66.0% (guessed)]  count:708669600 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 4 [si] 5 [di] 7 [sp]
;; live  out 	 4 [si] 5 [di] 7 [sp]

;; basic block 3, loop depth 0, count 708669605 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [66.0% (guessed)]  count:708669600 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]
;; live  kill	 17 [flags]
(note 31 9 62 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn:TI 62 31 32 3 (set (reg/v:SI 1 dx [orig:86 argc ] [86])
        (reg:SI 4 si [90])) 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [90])
        (nil)))
(debug_insn 32 62 35 3 (debug_marker) "cmodules/fbgc_stl.c":67:7 -1
     (nil))
(insn 35 32 34 3 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_stl.c":67:7 67 {*movsi_internal}
     (nil))
(insn 34 35 67 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f626c44ecf0 *.LC4>)) "cmodules/fbgc_stl.c":67:7 66 {*movdi_internal}
     (nil))
(insn 67 34 37 3 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":67:7 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(call_insn:TI 37 67 40 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":67:7 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(debug_insn 40 37 41 3 (var_location:DI arg (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 41 40 42 3 (var_location:SI argc (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 42 41 43 3 (var_location:DI __stream (clobber (const_int 0 [0]))) "cmodules/fbgc_stl.c":65:3 -1
     (nil))
(debug_insn 43 42 44 3 (var_location:DI __fmt (clobber (const_int 0 [0]))) "cmodules/fbgc_stl.c":65:3 -1
     (nil))
(debug_insn 44 43 66 3 (debug_marker) "cmodules/fbgc_stl.c":68:2 -1
     (nil))
(insn 66 44 84 3 (parallel [
            (set (reg/i:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":69:1 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 84 66 60 3 NOTE_INSN_EPILOGUE_BEG)
(insn/f 60 84 50 3 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "cmodules/fbgc_stl.c":69:1 959 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn 50 60 61 3 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":69:1 -1
     (nil))
(jump_insn:TI 61 50 65 3 (simple_return) "cmodules/fbgc_stl.c":69:1 690 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [always]  count:708669605 (estimated locally)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 65 61 83)
;; basic block 4, loop depth 0, count 365072220 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [34.0% (guessed)]  count:365072224 (estimated locally) (CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp]
;; live  kill	 17 [flags]
(code_label 83 65 10 4 33 (nil) [1 uses])
(note 10 83 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 11 10 12 4 (var_location:SI D#3 (const_int 1 [0x1])) -1
     (nil))
(debug_insn 12 11 13 4 (var_location:DI arg (reg/v/f:DI 5 di [orig:85 arg ] [85])) -1
     (nil))
(debug_insn 13 12 14 4 (debug_marker:BLK) "cmodules/fbgc_stl.c":63:1 -1
     (nil))
(debug_insn 14 13 15 4 (var_location:SI D#4 (debug_expr:SI D#3)) -1
     (nil))
(debug_insn 15 14 16 4 (var_location:SI argc (debug_expr:SI D#4)) -1
     (nil))
(debug_insn 16 15 17 4 (debug_marker) "cmodules/fbgc_stl.c":65:3 -1
     (nil))
(debug_insn 17 16 18 4 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7f626ca21240 stdout>) [2 stdout+0 S8 A64])) "cmodules/fbgc_stl.c":65:3 -1
     (nil))
(debug_insn 18 17 19 4 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f626c44ec60 *.LC3>)) "cmodules/fbgc_stl.c":65:3 -1
     (nil))
(debug_insn 19 18 20 4 (debug_marker:BLK) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":98:1 -1
     (nil))
(debug_insn 20 19 22 4 (debug_marker) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:3 -1
     (nil))
(insn:TI 22 20 25 4 (set (reg:DI 2 cx)
        (mem/f:DI (reg/v/f:DI 5 di [orig:85 arg ] [85]) [1 *arg_4(D)+0 S8 A64])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:10 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:85 arg ] [85])
        (nil)))
(insn 25 22 24 4 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7f626ca21240 stdout>) [2 stdout+0 S8 A64])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:10 66 {*movdi_internal}
     (nil))
(insn 24 25 68 4 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:10 67 {*movsi_internal}
     (nil))
(insn 68 24 23 4 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:10 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 23 68 27 4 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f626c44ec60 *.LC3>)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:10 66 {*movdi_internal}
     (nil))
(call_insn:TI 27 23 70 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f626c919100 __fprintf_chk>) [0 __builtin___fprintf_chk S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":100:10 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f626c919100 __fprintf_chk>)
                            (nil)))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(debug_insn 70 27 71 4 (var_location:DI arg (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 71 70 72 4 (var_location:SI argc (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 72 71 73 4 (var_location:DI __stream (clobber (const_int 0 [0]))) "cmodules/fbgc_stl.c":65:3 -1
     (nil))
(debug_insn 73 72 74 4 (var_location:DI __fmt (clobber (const_int 0 [0]))) "cmodules/fbgc_stl.c":65:3 -1
     (nil))
(debug_insn 74 73 75 4 (debug_marker) "cmodules/fbgc_stl.c":68:2 -1
     (nil))
(insn 75 74 85 4 (parallel [
            (set (reg/i:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":69:1 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 85 75 78 4 NOTE_INSN_EPILOGUE_BEG)
(insn/f 78 85 76 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "cmodules/fbgc_stl.c":69:1 959 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn 76 78 79 4 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":69:1 -1
     (nil))
(jump_insn:TI 79 76 82 4 (simple_return) "cmodules/fbgc_stl.c":69:1 690 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [always]  count:365072220 (estimated locally)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 82 79 56)
(note 56 82 0 NOTE_INSN_DELETED)

;; Function fbgc_load (fbgc_load, funcdef_no=57, decl_uid=5693, cgraph_uid=58, symbol_order=61)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 16 n_edges 22 count 17 (  1.1)


fbgc_load

Dataflow summary:
def_info->table_size = 325, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 40 [r12]
;;  ref usage 	r0={11d,13u} r1={11d,6u} r2={4d} r3={4d,8u} r4={8d,6u} r5={10d,8u} r6={4d,5u} r7={10d,27u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={19d,7u} r18={3d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r40={5d,7u} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 366{279d,87u,0e} in 88{85 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(36){ }d-1(37){ }d-1(40){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]

( 0 )->[2]->( 9 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]
;; lr  def 	 3 [bx] 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]
;; live  gen 	 3 [bx] 7 [sp] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;; live  out 	 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]

( 2 )->[3]->( 4 7 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; lr  use 	 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

( 3 )->[4]->( 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 6 [bp] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 6 [bp]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]

( 6 )->[5]->( 6 11 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]

( 5 4 )->[6]->( 7 5 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]

( 6 3 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 7 9 13 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]

( 2 )->[9]->( 10 8 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 5 [di] 7 [sp]

( 9 )->[10]->( 15 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 1 [dx] 5 [di] 17 [flags]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 1 [dx] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 5 [di] 7 [sp]
;; live  out 	 1 [dx] 5 [di] 7 [sp]

( 5 )->[11]->( 14 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 40 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12]

( 11 12 )->[12]->( 12 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 40 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]

( 12 )->[13]->( 8 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	

( 11 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 1 [dx] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 1 [dx] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 5 [di] 7 [sp]
;; live  out 	 1 [dx] 5 [di] 7 [sp]

( 14 10 )->[15]->( 1 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 5 [di] 7 [sp]
;; lr  use 	 1 [dx] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 1 [dx] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 40 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]

( 15 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(40){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 16 to worklist
  Adding insn 157 to worklist
  Adding insn 156 to worklist
  Adding insn 155 to worklist
  Adding insn 37 to worklist
  Adding insn 190 to worklist
  Adding insn 53 to worklist
  Adding insn 44 to worklist
  Adding insn 163 to worklist
  Adding insn 113 to worklist
  Adding insn 21 to worklist
  Adding insn 194 to worklist
  Adding insn 66 to worklist
  Adding insn 63 to worklist
  Adding insn 100 to worklist
  Adding insn 90 to worklist
  Adding insn 198 to worklist
  Adding insn 74 to worklist
Finished finding needed instructions:
processing block 15 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
  Adding insn 170 to worklist
  Adding insn 169 to worklist
  Adding insn 168 to worklist
  Adding insn 185 to worklist
processing block 10 lr out =  1 [dx] 5 [di] 7 [sp]
  Adding insn 187 to worklist
  Adding insn 24 to worklist
processing block 8 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
  Adding insn 162 to worklist
  Adding insn 161 to worklist
  Adding insn 160 to worklist
processing block 9 lr out =  0 [ax] 5 [di] 7 [sp]
  Adding insn 20 to worklist
  Adding insn 188 to worklist
  Adding insn 19 to worklist
processing block 7 lr out =  0 [ax] 7 [sp]
  Adding insn 184 to worklist
processing block 14 lr out =  1 [dx] 5 [di] 7 [sp]
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 69 to worklist
processing block 13 lr out =  0 [ax] 7 [sp]
processing block 12 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
  Adding insn 99 to worklist
  Adding insn 98 to worklist
  Adding insn 150 to worklist
  Adding insn 87 to worklist
  Adding insn 149 to worklist
  Adding insn 148 to worklist
  Adding insn 84 to worklist
  Adding insn 83 to worklist
  Adding insn 82 to worklist
processing block 11 lr out =  3 [bx] 6 [bp] 7 [sp] 40 [r12]
  Adding insn 65 to worklist
  Adding insn 6 to worklist
  Adding insn 61 to worklist
  Adding insn 151 to worklist
  Adding insn 147 to worklist
processing block 5 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp]
  Adding insn 52 to worklist
  Adding insn 51 to worklist
  Adding insn 152 to worklist
processing block 6 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp]
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
processing block 4 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp]
  Adding insn 186 to worklist
  Adding insn 164 to worklist
processing block 3 lr out =  3 [bx] 4 [si] 7 [sp]
processing block 2 lr out =  3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
  Adding insn 15 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 16 n_edges 22 count 18 (  1.1)
;;   ======================================================
;;   -- basic block 2 from 155 to 16 -- after reload
;;   ======================================================

;;	  0--> b  0: i  12 debug_marker                            :nothing
;;	  0--> b  0: i  13 loc 0                                   :nothing
;;	  0--> b  0: i  14 debug_marker                            :nothing
;;	  0--> b  0: i 155 [--sp]=r12                              :hsw_decodern,(hsw_p4+hsw_p237)
;;	  1--> b  0: i 156 [--sp]=bp                               :hsw_decodern,(hsw_p4+hsw_p237)
;;	  2--> b  0: i 157 [--sp]=bx                               :hsw_decodern,(hsw_p4+hsw_p237)
;;	  2--> b  0: i   2 bx=di                                   :hsw_decodern,hsw_p0156
;;	  2--> b  0: i  15 flags=cmp(si,0x1)                       :hsw_decodern,hsw_p0156
;;	  2--> b  0: i  16 pc={(flags==0)?L189:pc}                 :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 2
;;   new head = 12
;;   new tail = 16

;;   ======================================================
;;   -- basic block 3 from 33 to 37 -- after reload
;;   ======================================================

;;	  0--> b  0: i  33 debug_marker                            :nothing
;;	  0--> b  0: i  37 pc={(flags<=0)?L128:pc}                 :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 0
;;   new head = 33
;;   new tail = 37

;;   ======================================================
;;   -- basic block 4 from 164 to 190 -- after reload
;;   ======================================================

;;	  0--> b  0: i 164 bp=si                                   :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 186 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 190 pc=L50                                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 0
;;   new head = 164
;;   new tail = 190

;;   ======================================================
;;   -- basic block 5 from 46 to 53 -- after reload
;;   ======================================================

;;	  0--> b  0: i  46 debug_marker                            :nothing
;;	  0--> b  0: i 152 {ax=ax+0x1;clobber flags;}              :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  48 loc ax                                  :nothing
;;	  0--> b  0: i  49 debug_marker                            :nothing
;;	  1--> b  0: i  51 dx=zxn(ax)                              :hsw_decodern,hsw_p0156
;;	  2--> b  0: i  52 flags=cmp(dx,bp)                        :hsw_decodern,hsw_p0156
;;	  2--> b  0: i  53 pc={(flags>=0)?L192:pc}                 :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 2
;;   new head = 46
;;   new tail = 53

;;   ======================================================
;;   -- basic block 6 from 39 to 44 -- after reload
;;   ======================================================

;;	  0--> b  0: i  39 loc ax                                  :nothing
;;	  0--> b  0: i  40 debug_marker                            :nothing
;;	  0--> b  0: i  41 dx=zxn(ax)                              :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  42 dx=[dx*0x8+bx]                          :hsw_decodern,hsw_p23
;;	  3--> b  0: i  43 flags=cmp([dx],0x6)                     :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  4--> b  0: i  44 pc={(flags==0)?L193:pc}                 :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 4
;;   new head = 39
;;   new tail = 44

;;   ======================================================
;;   -- basic block 7 from 184 to 108 -- after reload
;;   ======================================================

;;	  0--> b  0: i 184 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 103 loc clobber                             :nothing
;;	  0--> b  0: i 104 loc clobber                             :nothing
;;	  0--> b  0: i 105 loc clobber                             :nothing
;;	  0--> b  0: i 106 loc clobber                             :nothing
;;	  0--> b  0: i 107 loc clobber                             :nothing
;;	  0--> b  0: i 108 loc clobber                             :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 184
;;   new tail = 108

;;   ======================================================
;;   -- basic block 8 from 113 to 163 -- after reload
;;   ======================================================

;;	  0--> b  0: i 160 bx=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  0--> b  0: i 113 use ax                                  :nothing
;;	  0--> b  0: i 161 bp=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  1--> b  0: i 162 r12=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  2--> b  0: i 163 simple_return                           :hsw_decoder0
;;	Ready list (final):  
;;   total time = 2
;;   new head = 200
;;   new tail = 163

;;   ======================================================
;;   -- basic block 9 from 18 to 21 -- after reload
;;   ======================================================

;;	  0--> b  0: i  18 debug_marker                            :nothing
;;	  0--> b  0: i  19 di=[di]                                 :hsw_decodern,hsw_p23
;;	  0--> b  0: i 188 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  2--> b  0: i  20 flags=cmp([di],0x6)                     :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  3--> b  0: i  21 pc={(flags!=0)?L111:pc}                 :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 3
;;   new head = 18
;;   new tail = 21

;;   ======================================================
;;   -- basic block 10 from 23 to 194 -- after reload
;;   ======================================================

;;	  0--> b  0: i  23 debug_marker                            :nothing
;;	  0--> b  0: i  24 {di=di+0xd;clobber flags;}              :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 187 {dx=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 194 pc=L181                                 :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 0
;;   new head = 23
;;   new tail = 194

;;   ======================================================
;;   -- basic block 11 from 55 to 66 -- after reload
;;   ======================================================

;;	  0--> b  0: i  55 loc bx                                  :nothing
;;	  0--> b  0: i  56 loc bp                                  :nothing
;;	  0--> b  0: i  57 debug_marker                            :nothing
;;	  0--> b  0: i  58 debug_marker                            :nothing
;;	  0--> b  0: i 147 ax=[bx+0x8]                             :hsw_decodern,hsw_p23
;;	  0--> b  0: i  61 si=`*.LC5'                              :hsw_decodern,hsw_p1|hsw_p5
;;	  0--> b  0: i   6 r12=0x1                                 :hsw_decodern,hsw_p0156
;;	  2--> b  0: i 151 di=ax+0xd                               :hsw_decodern,hsw_p1|hsw_p5
;;	  3--> b  0: i  63 ax=call [`my_strcmp']                   :hsw_decoder0
;;	  4--> b  0: i  65 flags=cmp(ax,0)                         :hsw_decodern,hsw_p0156
;;	  4--> b  0: i  66 pc={(flags==0)?L196:pc}                 :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 4
;;   new head = 55
;;   new tail = 66

;;   ======================================================
;;   -- basic block 12 from 79 to 100 -- after reload
;;   ======================================================

;;	  0--> b  0: i  79 loc r12                                 :nothing
;;	  0--> b  0: i  80 loc 0                                   :nothing
;;	  0--> b  0: i  81 debug_marker                            :nothing
;;	  0--> b  0: i  82 ax=zxn(r12)                             :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  87 dx=0x2                                  :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 150 {r12=r12+0x1;clobber flags;}            :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  83 si=[ax*0x8+bx]                          :hsw_decodern,hsw_p23
;;	  1--> b  0: i 148 ax=[bx]                                 :hsw_decodern,hsw_p23
;;	  3--> b  0: i  84 {si=si+0xd;clobber flags;}              :hsw_decodern,hsw_p0156
;;	  3--> b  0: i 149 di=ax+0xd                               :hsw_decodern,hsw_p1|hsw_p5
;;	  4--> b  0: i  90 ax=call [`fbgc_load_module']            :hsw_decoder0
;;	  4--> b  0: i  92 loc ax                                  :nothing
;;	  4--> b  0: i  93 debug_marker                            :nothing
;;	  4--> b  0: i  95 loc r12                                 :nothing
;;	  4--> b  0: i  96 loc ax                                  :nothing
;;	  4--> b  0: i  97 debug_marker                            :nothing
;;	  4--> b  0: i  98 dx=zxn(r12)                             :hsw_decodern,hsw_p0156
;;	  5--> b  0: i  99 flags=cmp(bp,dx)                        :hsw_decodern,hsw_p0156
;;	  5--> b  0: i 100 pc={(flags>0)?L77:pc}                   :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 5
;;   new head = 79
;;   new tail = 100

;;   ======================================================
;;   -- basic block 13 from 198 to 198 -- after reload
;;   ======================================================

;;	  0--> b  0: i 198 pc=L111                                 :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 0
;;   new head = 198
;;   new tail = 198

;;   ======================================================
;;   -- basic block 14 from 68 to 71 -- after reload
;;   ======================================================

;;	  0--> b  0: i  68 debug_marker                            :nothing
;;	  0--> b  0: i  69 di=[bx]                                 :hsw_decodern,hsw_p23
;;	  0--> b  0: i  71 dx=0x1                                  :hsw_decodern,hsw_p0156
;;	  2--> b  0: i  70 {di=di+0xd;clobber flags;}              :hsw_decodern,hsw_p0156
;;	Ready list (final):  
;;   total time = 2
;;   new head = 68
;;   new tail = 70

;;   ======================================================
;;   -- basic block 15 from 185 to 74 -- after reload
;;   ======================================================

;;	  0--> b  0: i 168 bx=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  0--> b  0: i 185 {si=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 169 bp=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  1--> b  0: i 170 r12=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  2--> b  0: i  74 ax=call [`fbgc_load_module']            :hsw_decoder0
;;	Ready list (final):  
;;   total time = 2
;;   new head = 201
;;   new tail = 74



starting the processing of deferred insns
ending the processing of deferred insns


fbgc_load

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 40 [r12]
;;  ref usage 	r0={11d,13u} r1={11d,6u} r2={4d} r3={4d,8u} r4={8d,6u} r5={10d,8u} r6={4d,5u} r7={10d,27u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={19d,7u} r18={3d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r40={5d,7u} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 366{279d,87u,0e} in 88{85 regular + 3 call} insns.
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 223437739 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [always]  count:223437739 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]
;; lr  def 	 3 [bx] 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]
;; live  gen 	 3 [bx] 7 [sp] 17 [flags]
;; live  kill	
(note 10 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 10 12 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 12 4 13 2 (debug_marker) "cmodules/fbgc_stl.c":34:2 -1
     (nil))
(debug_insn 13 12 14 2 (var_location:DI res (const_int 0 [0])) "cmodules/fbgc_stl.c":34:23 -1
     (nil))
(debug_insn 14 13 155 2 (debug_marker) "cmodules/fbgc_stl.c":36:2 -1
     (nil))
(insn/f:TI 155 14 156 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 40 r12)) "cmodules/fbgc_stl.c":27:1 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 40 r12)
        (nil)))
(insn/f:TI 156 155 157 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) "cmodules/fbgc_stl.c":27:1 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f:TI 157 156 158 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) "cmodules/fbgc_stl.c":27:1 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(note 158 157 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 158 15 2 (set (reg/v/f:DI 3 bx [orig:107 arg ] [107])
        (reg:DI 5 di [124])) "cmodules/fbgc_stl.c":27:1 66 {*movdi_internal}
     (nil))
(insn 15 2 16 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 4 si [orig:108 argc ] [108])
            (const_int 1 [0x1]))) "cmodules/fbgc_stl.c":36:4 11 {*cmpsi_1}
     (nil))
(jump_insn 16 15 32 2 (set (pc)
        (if_then_else (eq (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 189)
            (pc))) "cmodules/fbgc_stl.c":36:4 659 {*jcc}
     (int_list:REG_BR_PROB 365072228 (nil))
 -> 189)
;;  succ:       9 [34.0% (guessed)]  count:75968832 (estimated locally) (CAN_FALLTHRU)
;;              3 [66.0% (guessed)]  count:147468907 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;; live  out 	 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]

;; basic block 3, loop depth 0, count 147468908 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [66.0% (guessed)]  count:147468907 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; lr  use 	 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; live  gen 	
;; live  kill	
(note 32 16 33 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 33 32 37 3 (debug_marker) "cmodules/fbgc_stl.c":40:7 -1
     (nil))
(jump_insn:TI 37 33 120 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 128)
            (pc))) "cmodules/fbgc_stl.c":40:9 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 237404324 (nil)))
 -> 128)
;;  succ:       4 [77.9% (guessed)]  count:114863532 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              7 [22.1% (guessed)]  count:32605376 (estimated locally) (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

;; basic block 4, loop depth 0, count 114863532 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [77.9% (guessed)]  count:114863532 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 6 [bp] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 6 [bp]
;; live  kill	 17 [flags]
(note 120 37 164 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn:TI 164 120 186 4 (set (reg/v:SI 6 bp [orig:108 argc ] [108])
        (reg:SI 4 si [125])) 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [125])
        (nil)))
(insn 186 164 190 4 (parallel [
            (set (reg:DI 0 ax [orig:91 i ] [91])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":41:15 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 190 186 191 4 (set (pc)
        (label_ref 50)) 660 {jump}
     (nil)
 -> 50)
;;  succ:       6 [always]  count:114863532 (estimated locally) (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]

(barrier 191 190 193)
;; basic block 5, loop depth 0, count 958878293 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       6 [94.5% (guessed)]  count:958878293 (estimated locally) (CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	 17 [flags]
(code_label 193 191 45 5 50 (nil) [1 uses])
(note 45 193 46 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 46 45 152 5 (debug_marker) "cmodules/fbgc_stl.c":41:30 -1
     (nil))
(insn:TI 152 46 48 5 (parallel [
            (set (reg:SI 0 ax [orig:91 i ] [91])
                (plus:SI (reg:SI 0 ax [orig:91 i ] [91])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":41:30 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 48 152 49 5 (var_location:QI i (reg/v:QI 0 ax [orig:91 i ] [91])) -1
     (nil))
(debug_insn 49 48 51 5 (debug_marker) "cmodules/fbgc_stl.c":41:22 -1
     (nil))
(insn:TI 51 49 52 5 (set (reg:SI 1 dx [orig:112 i ] [112])
        (zero_extend:SI (reg/v:QI 0 ax [orig:91 i ] [91]))) "cmodules/fbgc_stl.c":41:23 119 {*zero_extendqisi2}
     (nil))
(insn:TI 52 51 53 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1 dx [orig:112 i ] [112])
            (reg/v:SI 6 bp [orig:108 argc ] [108]))) "cmodules/fbgc_stl.c":41:3 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:112 i ] [112])
        (nil)))
(jump_insn 53 52 50 5 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 192)
            (pc))) "cmodules/fbgc_stl.c":41:3 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 59055804 (nil)))
 -> 192)
;;  succ:       6 [94.5% (guessed)]  count:906139987 (estimated locally) (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;;              11 [5.5% (guessed)]  count:52738306 (estimated locally) (CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]

;; basic block 6, loop depth 0, count 1014686024 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       5 [94.5% (guessed)]  count:906139987 (estimated locally) (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;;              4 [always]  count:114863532 (estimated locally) (CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
(code_label 50 53 38 6 37 (nil) [1 uses])
(note 38 50 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 39 38 40 6 (var_location:QI i (reg/v:QI 0 ax [orig:91 i ] [91])) -1
     (nil))
(debug_insn 40 39 41 6 (debug_marker) "cmodules/fbgc_stl.c":42:4 -1
     (nil))
(insn:TI 41 40 42 6 (set (reg:DI 1 dx [orig:110 i ] [110])
        (zero_extend:DI (reg/v:QI 0 ax [orig:91 i ] [91]))) "cmodules/fbgc_stl.c":42:10 115 {zero_extendqidi2}
     (nil))
(insn:TI 42 41 43 6 (set (reg/f:DI 1 dx [orig:111 *_7 ] [111])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:110 i ] [110])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 3 bx [orig:107 arg ] [107])) [1 *_7+0 S8 A64])) "cmodules/fbgc_stl.c":42:13 66 {*movdi_internal}
     (nil))
(insn:TI 43 42 44 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 1 dx [orig:111 *_7 ] [111]) [0 _8->type+0 S1 A8])
            (const_int 6 [0x6]))) "cmodules/fbgc_stl.c":42:6 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:111 *_7 ] [111])
        (nil)))
(jump_insn:TI 44 43 128 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 193)
            (pc))) "cmodules/fbgc_stl.c":42:6 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014686028 (nil)))
 -> 193)
;;  succ:       7 [5.5% (guessed)]  count:55807731 (estimated locally) (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;;              5 [94.5% (guessed)]  count:958878293 (estimated locally) (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]

;; basic block 7, loop depth 0, count 88413107 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       6 [5.5% (guessed)]  count:55807731 (estimated locally) (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;;              3 [22.1% (guessed)]  count:32605376 (estimated locally) (CAN_FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(code_label 128 44 127 7 41 (nil) [1 uses])
(note 127 128 184 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn:TI 184 127 103 7 (parallel [
            (set (reg/v/f:DI 0 ax [orig:106 <retval> ] [106])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":34:23 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 103 184 104 7 (var_location:DI arg (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 104 103 105 7 (var_location:SI argc (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 105 104 106 7 (var_location:DI res (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 106 105 107 7 (var_location:QI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 107 106 108 7 (var_location:QI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 108 107 111 7 (var_location:DI res (clobber (const_int 0 [0]))) -1
     (nil))
;;  succ:       8 [always]  count:88413107 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 8, loop depth 0, count 185534479 (estimated locally), maybe hot
;; Invalid sum of incoming counts 181182068 (estimated locally), should be 185534479 (estimated locally)
;;  prev block 7, next block 9, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       7 [always]  count:88413107 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              9 [75.8% (guessed)]  count:57553987 (estimated locally) (CAN_FALLTHRU)
;;              13 [always]  count:35214974 (estimated locally) (CAN_FALLTHRU,LOOP_EXIT)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  kill	
(code_label 111 108 114 8 34 (nil) [2 uses])
(note 114 111 200 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(note 200 114 160 8 NOTE_INSN_EPILOGUE_BEG)
(insn/f:TI 160 200 113 8 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":59:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn 113 160 161 8 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":59:1 -1
     (nil))
(insn/f 161 113 162 8 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":59:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 162 161 163 8 (set (reg:DI 40 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":59:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn:TI 163 162 167 8 (simple_return) "cmodules/fbgc_stl.c":59:1 690 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [always]  count:185534479 (estimated locally)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]

(barrier 167 163 189)
;; basic block 9, loop depth 0, count 75968831 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [34.0% (guessed)]  count:75968832 (estimated locally) (CAN_FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label 189 167 17 9 48 (nil) [1 uses])
(note 17 189 18 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 18 17 19 9 (debug_marker) "cmodules/fbgc_stl.c":37:3 -1
     (nil))
(insn:TI 19 18 188 9 (set (reg/f:DI 5 di [orig:82 _1 ] [82])
        (mem/f:DI (reg/f:DI 5 di [orig:107 arg ] [107]) [1 *arg_17(D)+0 S8 A64])) "cmodules/fbgc_stl.c":37:9 66 {*movdi_internal}
     (nil))
(insn 188 19 20 9 (parallel [
            (set (reg/v/f:DI 0 ax [orig:106 <retval> ] [106])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":34:23 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 20 188 21 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 5 di [orig:82 _1 ] [82]) [0 _1->type+0 S1 A8])
            (const_int 6 [0x6]))) "cmodules/fbgc_stl.c":37:5 9 {*cmpqi_1}
     (nil))
(jump_insn:TI 21 20 22 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 111)
            (pc))) "cmodules/fbgc_stl.c":37:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 813466812 (nil)))
 -> 111)
;;  succ:       10 [24.2% (guessed)]  count:18414844 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              8 [75.8% (guessed)]  count:57553987 (estimated locally) (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 5 [di] 7 [sp]

;; basic block 10, loop depth 0, count 18414845 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       9 [24.2% (guessed)]  count:18414844 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 1 [dx] 5 [di] 17 [flags]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 1 [dx] 5 [di]
;; live  kill	 17 [flags]
(note 22 21 23 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 23 22 24 10 (debug_marker) "cmodules/fbgc_stl.c":38:4 -1
     (nil))
(insn:TI 24 23 187 10 (parallel [
            (set (reg/f:DI 5 di [109])
                (plus:DI (reg/f:DI 5 di [orig:82 _1 ] [82])
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":38:28 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 187 24 194 10 (parallel [
            (set (reg:DI 1 dx)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":38:11 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 194 187 195 10 (set (pc)
        (label_ref 181)) 660 {jump}
     (nil)
 -> 181)
;;  succ:       15 [always]  count:18414845 (estimated locally) (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 5 [di] 7 [sp]
;; live  out 	 1 [dx] 5 [di] 7 [sp]

(barrier 195 194 192)
;; basic block 11, loop depth 0, count 59055800 (estimated locally), maybe hot
;; Invalid sum of incoming counts 52738306 (estimated locally), should be 59055800 (estimated locally)
;;  prev block 10, next block 12, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       5 [5.5% (guessed)]  count:52738306 (estimated locally) (CAN_FALLTHRU,LOOP_EXIT)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 40 [r12]
;; live  kill	
(code_label 192 195 54 11 49 (nil) [1 uses])
(note 54 192 59 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(note 59 54 64 11 NOTE_INSN_DELETED)
(note 64 59 55 11 NOTE_INSN_DELETED)
(debug_insn 55 64 56 11 (var_location:DI arg (reg/v/f:DI 3 bx [orig:107 arg ] [107])) -1
     (nil))
(debug_insn 56 55 57 11 (var_location:SI argc (reg/v:SI 6 bp [orig:108 argc ] [108])) -1
     (nil))
(debug_insn 57 56 58 11 (debug_marker:BLK) "cmodules/fbgc_stl.c":26:1 -1
     (nil))
(debug_insn 58 57 147 11 (debug_marker) "cmodules/fbgc_stl.c":45:3 -1
     (nil))
(insn:TI 147 58 61 11 (set (reg:DI 0 ax [128])
        (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:107 arg ] [107])
                (const_int 8 [0x8])) [1 MEM[(struct fbgc_object * *)arg_17(D) + 8B]+0 S8 A64])) "cmodules/fbgc_stl.c":45:17 66 {*movdi_internal}
     (nil))
(insn 61 147 6 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f626c461d80 *.LC5>)) "cmodules/fbgc_stl.c":45:7 66 {*movdi_internal}
     (nil))
(insn 6 61 151 11 (set (reg/v:QI 40 r12 [orig:104 i ] [104])
        (const_int 1 [0x1])) "cmodules/fbgc_stl.c":50:16 69 {*movqi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn:TI 151 6 63 11 (set (reg/f:DI 5 di [113])
        (plus:DI (reg:DI 0 ax [128])
            (const_int 13 [0xd]))) "cmodules/fbgc_stl.c":45:17 187 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [128])
        (nil)))
(call_insn:TI 63 151 65 11 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("my_strcmp") [flags 0x41]  <function_decl 0x7f626c806900 my_strcmp>) [0 my_strcmp S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":45:7 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("my_strcmp") [flags 0x41]  <function_decl 0x7f626c806900 my_strcmp>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn:TI 65 63 66 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [126])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":45:5 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [126])
        (nil)))
(jump_insn 66 65 77 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 196)
            (pc))) "cmodules/fbgc_stl.c":45:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 354334804 (nil)))
 -> 196)
;;  succ:       14 [33.0% (guessed)]  count:19488414 (estimated locally) (CAN_FALLTHRU)
;;              12 [67.0% (guessed)]  count:39567386 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12]

;; basic block 12, loop depth 0, count 320136127 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       11 [67.0% (guessed)]  count:39567386 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              12 [89.0% (guessed)]  count:284921153 (estimated locally) (DFS_BACK,CAN_FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 40 [r12]
;; live  kill	 17 [flags]
(code_label 77 66 78 12 38 (nil) [1 uses])
(note 78 77 85 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(note 85 78 79 12 NOTE_INSN_DELETED)
(debug_insn 79 85 80 12 (var_location:QI i (reg/v:QI 40 r12 [orig:104 i ] [104])) -1
     (nil))
(debug_insn 80 79 81 12 (var_location:DI res (const_int 0 [0])) -1
     (nil))
(debug_insn 81 80 82 12 (debug_marker) "cmodules/fbgc_stl.c":51:5 -1
     (nil))
(insn:TI 82 81 87 12 (set (reg:DI 0 ax [orig:117 i ] [117])
        (zero_extend:DI (reg/v:QI 40 r12 [orig:104 i ] [104]))) "cmodules/fbgc_stl.c":51:60 115 {zero_extendqidi2}
     (nil))
(insn 87 82 150 12 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) "cmodules/fbgc_stl.c":51:11 67 {*movsi_internal}
     (nil))
(insn 150 87 83 12 (parallel [
            (set (reg:SI 40 r12 [orig:104 i ] [104])
                (plus:SI (reg:SI 40 r12 [orig:104 i ] [104])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":50:31 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 83 150 148 12 (set (reg/f:DI 4 si [orig:119 *_30 ] [119])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:117 i ] [117])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 3 bx [orig:107 arg ] [107])) [1 *_30+0 S8 A64])) "cmodules/fbgc_stl.c":51:60 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:117 i ] [117])
        (nil)))
(insn 148 83 84 12 (set (reg:DI 0 ax [129])
        (mem/f:DI (reg/v/f:DI 3 bx [orig:107 arg ] [107]) [1 *arg_17(D)+0 S8 A64])) "cmodules/fbgc_stl.c":51:28 66 {*movdi_internal}
     (nil))
(insn:TI 84 148 149 12 (parallel [
            (set (reg/f:DI 4 si [118])
                (plus:DI (reg/f:DI 4 si [orig:119 *_30 ] [119])
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":51:60 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 149 84 90 12 (set (reg/f:DI 5 di [120])
        (plus:DI (reg:DI 0 ax [129])
            (const_int 13 [0xd]))) "cmodules/fbgc_stl.c":51:28 187 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [129])
        (nil)))
(call_insn:TI 90 149 92 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fbgc_load_module") [flags 0x41]  <function_decl 0x7f626c82cb00 fbgc_load_module>) [0 fbgc_load_module S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":51:11 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("fbgc_load_module") [flags 0x41]  <function_decl 0x7f626c82cb00 fbgc_load_module>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(debug_insn 92 90 93 12 (var_location:DI res (reg/v/f:DI 0 ax [orig:106 <retval> ] [106])) "cmodules/fbgc_stl.c":51:11 -1
     (nil))
(debug_insn 93 92 95 12 (debug_marker) "cmodules/fbgc_stl.c":50:31 -1
     (nil))
(debug_insn 95 93 96 12 (var_location:QI i (reg/v:QI 40 r12 [orig:104 i ] [104])) -1
     (nil))
(debug_insn 96 95 97 12 (var_location:DI res (reg/v/f:DI 0 ax [orig:106 <retval> ] [106])) -1
     (nil))
(debug_insn 97 96 98 12 (debug_marker) "cmodules/fbgc_stl.c":50:23 -1
     (nil))
(insn 98 97 99 12 (set (reg:SI 1 dx [orig:122 i ] [122])
        (zero_extend:SI (reg/v:QI 40 r12 [orig:104 i ] [104]))) "cmodules/fbgc_stl.c":50:24 119 {*zero_extendqisi2}
     (nil))
(insn:TI 99 98 100 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 6 bp [orig:108 argc ] [108])
            (reg:SI 1 dx [orig:122 i ] [122]))) "cmodules/fbgc_stl.c":50:4 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:122 i ] [122])
        (nil)))
(jump_insn 100 99 197 12 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 77)
            (pc))) "cmodules/fbgc_stl.c":50:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 77)
;;  succ:       12 [89.0% (guessed)]  count:284921153 (estimated locally) (DFS_BACK,CAN_FALLTHRU)
;;              13 [11.0% (guessed)]  count:35214974 (estimated locally) (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]

;; basic block 13, loop depth 0, count 35214974 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       12 [11.0% (guessed)]  count:35214974 (estimated locally) (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	
;; live  kill	
(note 197 100 198 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 198 197 199 13 (set (pc)
        (label_ref 111)) 660 {jump}
     (nil)
 -> 111)
;;  succ:       8 [always]  count:35214974 (estimated locally) (CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 199 198 196)
;; basic block 14, loop depth 0, count 19488414 (estimated locally), maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       11 [33.0% (guessed)]  count:19488414 (estimated locally) (CAN_FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 1 [dx] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 1 [dx] 5 [di]
;; live  kill	 17 [flags]
(code_label 196 199 67 14 51 (nil) [1 uses])
(note 67 196 68 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 68 67 69 14 (debug_marker) "cmodules/fbgc_stl.c":46:4 -1
     (nil))
(insn:TI 69 68 71 14 (set (reg/f:DI 5 di [orig:116 *arg_17(D) ] [116])
        (mem/f:DI (reg/v/f:DI 3 bx [orig:107 arg ] [107]) [1 *arg_17(D)+0 S8 A64])) "cmodules/fbgc_stl.c":46:27 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:107 arg ] [107])
        (nil)))
(insn 71 69 70 14 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "cmodules/fbgc_stl.c":46:10 67 {*movsi_internal}
     (nil))
(insn:TI 70 71 181 14 (parallel [
            (set (reg/f:DI 5 di [115])
                (plus:DI (reg/f:DI 5 di [orig:116 *arg_17(D) ] [116])
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":46:27 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       15 [always]  count:19488414 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 5 [di] 7 [sp]
;; live  out 	 1 [dx] 5 [di] 7 [sp]

;; basic block 15, loop depth 0, count 37903259 (estimated locally), maybe hot
;;  prev block 14, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       14 [always]  count:19488414 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              10 [always]  count:18414845 (estimated locally) (CAN_FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 5 [di] 7 [sp]
;; lr  use 	 1 [dx] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 1 [dx] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 40 [r12]
;; live  kill	 17 [flags]
(code_label 181 70 179 15 47 (nil) [1 uses])
(note 179 181 201 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(note 201 179 168 15 NOTE_INSN_EPILOGUE_BEG)
(insn/f:TI 168 201 185 15 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":59:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn 185 168 169 15 (parallel [
            (set (reg:DI 4 si)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":46:10 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn/f 169 185 170 15 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":59:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 170 169 74 15 (set (reg:DI 40 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":59:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(call_insn/j:TI 74 170 75 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fbgc_load_module") [flags 0x41]  <function_decl 0x7f626c82cb00 fbgc_load_module>) [0 fbgc_load_module S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":46:10 681 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("fbgc_load_module") [flags 0x41]  <function_decl 0x7f626c82cb00 fbgc_load_module>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       EXIT [always]  count:37903259 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]

(barrier 75 74 146)
(note 146 75 0 NOTE_INSN_DELETED)

;; Function fbgc_type (fbgc_type, funcdef_no=59, decl_uid=5717, cgraph_uid=60, symbol_order=65)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)


fbgc_type

Dataflow summary:
def_info->table_size = 158, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,4u} r1={4d,1u} r2={3d} r4={4d,3u} r5={5d,4u} r7={3d,10u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={7d,1u} r18={2d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 187{164d,23u,0e} in 24{22 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(0){ }d9(1){ }d12(2){ }d16(4){ }d21(5){ }d22(7){ }d46(20){ }d49(21){ }d52(22){ }d55(23){ }d58(24){ }d61(25){ }d64(26){ }d67(27){ }d86(36){ }d89(37){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  kill	
;; lr  out 	 4 [si] 5 [di] 7 [sp]
;; live  out 	 4 [si] 5 [di] 7 [sp]

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 4 [si] 5 [di] 7 [sp]
;; live  out 	 4 [si] 5 [di] 7 [sp]

( 2 )->[3]->( 1 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 4 3 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 47 to worklist
  Adding insn 38 to worklist
  Adding insn 31 to worklist
  Adding insn 21 to worklist
Finished finding needed instructions:
processing block 4 lr out =  0 [ax] 7 [sp]
  Adding insn 19 to worklist
  Adding insn 18 to worklist
processing block 3 lr out =  0 [ax] 7 [sp]
  Adding insn 46 to worklist
  Adding insn 58 to worklist
  Adding insn 57 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 48 to worklist
  Adding insn 43 to worklist
processing block 2 lr out =  4 [si] 5 [di] 7 [sp]
  Adding insn 9 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)
;;   ======================================================
;;   -- basic block 2 from 8 to 10 -- after reload
;;   ======================================================

;;	  0--> b  0: i   8 debug_marker                            :nothing
;;	  0--> b  0: i   9 flags=cmp(si,0x1)                       :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  10 pc={(flags==0)?L59:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 0
;;   new head = 8
;;   new tail = 10

;;   ======================================================
;;   -- basic block 3 from 43 to 47 -- after reload
;;   ======================================================

;;	  0--> b  0: i  43 {sp=sp-0x8;clobber flags;clobber [scratch];}:hsw_decodern,hsw_p0156
;;	  0--> b  0: i  48 dx=si                                   :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  26 debug_marker                            :nothing
;;	  0--> b  0: i  29 di=0x64                                 :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  57 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  28 si=`*.LC4'                              :hsw_decodern,hsw_p1|hsw_p5
;;	  2--> b  0: i  31 ax=call [`cprintf']                     :hsw_decoder0
;;	  2--> b  0: i  32 debug_marker                            :nothing
;;	  2--> b  0: i  58 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  2--> b  0: i  46 {sp=sp+0x8;clobber flags;clobber [scratch];}:hsw_decodern,hsw_p0156
;;	  2--> b  0: i  38 use ax                                  :nothing
;;	  3--> b  0: i  47 simple_return                           :hsw_decoder0
;;	Ready list (final):  
;;   total time = 3
;;   new head = 43
;;   new tail = 47

;;   ======================================================
;;   -- basic block 4 from 12 to 21 -- after reload
;;   ======================================================

;;	  0--> b  0: i  12 loc 0x1                                 :nothing
;;	  0--> b  0: i  13 loc di                                  :nothing
;;	  0--> b  0: i  14 debug_marker                            :nothing
;;	  0--> b  0: i  15 loc D#5                                 :nothing
;;	  0--> b  0: i  16 loc D#6                                 :nothing
;;	  0--> b  0: i  17 debug_marker                            :nothing
;;	  0--> b  0: i  18 ax=[di]                                 :hsw_decodern,hsw_p23
;;	  2--> b  0: i  19 di=zxn([ax])                            :hsw_decodern,hsw_p23
;;	  4--> b  0: i  21 ax=call [`new_fbgc_int_object']         :hsw_decoder0
;;	Ready list (final):  
;;   total time = 4
;;   new head = 12
;;   new tail = 21



starting the processing of deferred insns
ending the processing of deferred insns


fbgc_type

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,4u} r1={4d,1u} r2={3d} r4={4d,3u} r5={5d,4u} r7={3d,10u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={7d,1u} r18={2d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 187{164d,23u,0e} in 24{22 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(note 6 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 6 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 4 9 2 (debug_marker) "cmodules/fbgc_stl.c":73:2 -1
     (nil))
(insn:TI 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 4 si [orig:87 argc ] [87])
            (const_int 1 [0x1]))) "cmodules/fbgc_stl.c":73:4 11 {*cmpsi_1}
     (nil))
(jump_insn 10 9 25 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 59)
            (pc))) "cmodules/fbgc_stl.c":73:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 422839532 (nil)))
 -> 59)
;;  succ:       4 [39.4% (guessed)]  count:422839528 (estimated locally) (CAN_FALLTHRU)
;;              3 [60.6% (guessed)]  count:650902296 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 4 [si] 5 [di] 7 [sp]
;; live  out 	 4 [si] 5 [di] 7 [sp]

;; basic block 3, loop depth 0, count 650902295 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [60.6% (guessed)]  count:650902296 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]
;; live  kill	 17 [flags]
(note 25 10 43 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn/f:TI 43 25 44 3 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "cmodules/fbgc_stl.c":72:37 959 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (nil))))
(note 44 43 48 3 NOTE_INSN_PROLOGUE_END)
(insn 48 44 26 3 (set (reg/v:SI 1 dx [orig:87 argc ] [87])
        (reg:SI 4 si [92])) 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [92])
        (nil)))
(debug_insn 26 48 29 3 (debug_marker) "cmodules/fbgc_stl.c":76:7 -1
     (nil))
(insn 29 26 57 3 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_stl.c":76:7 67 {*movsi_internal}
     (nil))
(insn 57 29 28 3 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":76:7 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 28 57 31 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f626c44ecf0 *.LC4>)) "cmodules/fbgc_stl.c":76:7 66 {*movdi_internal}
     (nil))
(call_insn:TI 31 28 32 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":76:7 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(debug_insn 32 31 58 3 (debug_marker) "cmodules/fbgc_stl.c":77:2 -1
     (nil))
(insn 58 32 60 3 (parallel [
            (set (reg/i:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":78:1 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 60 58 46 3 NOTE_INSN_EPILOGUE_BEG)
(insn/f 46 60 38 3 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "cmodules/fbgc_stl.c":78:1 959 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn 38 46 47 3 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":78:1 -1
     (nil))
(jump_insn:TI 47 38 56 3 (simple_return) "cmodules/fbgc_stl.c":78:1 690 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [always]  count:650902295 (estimated locally)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 56 47 59)
;; basic block 4, loop depth 0, count 422839530 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       2 [39.4% (guessed)]  count:422839528 (estimated locally) (CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 59 56 11 4 56 (nil) [1 uses])
(note 11 59 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 12 11 13 4 (var_location:SI D#5 (const_int 1 [0x1])) -1
     (nil))
(debug_insn 13 12 14 4 (var_location:DI arg (reg/v/f:DI 5 di [orig:86 arg ] [86])) -1
     (nil))
(debug_insn 14 13 15 4 (debug_marker:BLK) "cmodules/fbgc_stl.c":72:1 -1
     (nil))
(debug_insn 15 14 16 4 (var_location:SI D#6 (debug_expr:SI D#5)) -1
     (nil))
(debug_insn 16 15 17 4 (var_location:SI argc (debug_expr:SI D#6)) -1
     (nil))
(debug_insn 17 16 18 4 (debug_marker) "cmodules/fbgc_stl.c":74:3 -1
     (nil))
(insn:TI 18 17 19 4 (set (reg/f:DI 0 ax [orig:88 *arg_6(D) ] [88])
        (mem/f:DI (reg/v/f:DI 5 di [orig:86 arg ] [86]) [1 *arg_6(D)+0 S8 A64])) "cmodules/fbgc_stl.c":74:36 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:86 arg ] [86])
        (nil)))
(insn:TI 19 18 21 4 (set (reg:SI 5 di [orig:89 _9->type ] [89])
        (zero_extend:SI (mem:QI (reg/f:DI 0 ax [orig:88 *arg_6(D) ] [88]) [0 _9->type+0 S1 A8]))) "cmodules/fbgc_stl.c":74:10 119 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:88 *arg_6(D) ] [88])
        (nil)))
(call_insn/j:TI 21 19 51 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_int_object") [flags 0x41]  <function_decl 0x7f626c7fa500 new_fbgc_int_object>) [0 new_fbgc_int_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":74:10 681 {*sibcall_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_int_object") [flags 0x41]  <function_decl 0x7f626c7fa500 new_fbgc_int_object>)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:422839530 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 51 21 22)
(barrier 22 51 42)
(note 42 22 0 NOTE_INSN_DELETED)

;; Function fbgc_int (fbgc_int, funcdef_no=60, decl_uid=5701, cgraph_uid=61, symbol_order=67)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)


fbgc_int

Dataflow summary:
def_info->table_size = 225, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,4u} r1={5d,1u} r2={4d} r4={5d,3u} r5={7d,6u} r7={4d,13u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={9d,1u} r18={3d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 261{233d,28u,0e} in 28{25 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(0){ }d10(1){ }d14(2){ }d19(4){ }d26(5){ }d27(7){ }d62(20){ }d66(21){ }d70(22){ }d74(23){ }d78(24){ }d82(25){ }d86(26){ }d90(27){ }d118(36){ }d122(37){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  kill	
;; lr  out 	 4 [si] 5 [di] 7 [sp]
;; live  out 	 4 [si] 5 [di] 7 [sp]

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 7 [sp] 17 [flags]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 4 [si] 5 [di] 7 [sp]
;; live  out 	 4 [si] 5 [di] 7 [sp]

( 2 )->[3]->( 1 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 7 [sp]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 4 3 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 51 to worklist
  Adding insn 41 to worklist
  Adding insn 34 to worklist
  Adding insn 24 to worklist
  Adding insn 19 to worklist
Finished finding needed instructions:
processing block 4 lr out =  0 [ax] 7 [sp]
  Adding insn 56 to worklist
  Adding insn 20 to worklist
  Adding insn 18 to worklist
processing block 3 lr out =  0 [ax] 7 [sp]
  Adding insn 50 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 52 to worklist
processing block 2 lr out =  4 [si] 5 [di] 7 [sp]
  Adding insn 9 to worklist
  Adding insn 47 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)
;;   ======================================================
;;   -- basic block 2 from 47 to 10 -- after reload
;;   ======================================================

;;	  0--> b  0: i   8 debug_marker                            :nothing
;;	  0--> b  0: i  47 {sp=sp-0x8;clobber flags;clobber [scratch];}:hsw_decodern,hsw_p0156
;;	  0--> b  0: i   9 flags=cmp(si,0x1)                       :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  10 pc={(flags==0)?L60:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 0
;;   new head = 8
;;   new tail = 10

;;   ======================================================
;;   -- basic block 3 from 52 to 51 -- after reload
;;   ======================================================

;;	  0--> b  0: i  52 dx=si                                   :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  29 debug_marker                            :nothing
;;	  0--> b  0: i  32 di=0x64                                 :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  31 si=`*.LC6'                              :hsw_decodern,hsw_p1|hsw_p5
;;	  0--> b  0: i  58 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  34 ax=call [`cprintf']                     :hsw_decoder0
;;	  1--> b  0: i  35 debug_marker                            :nothing
;;	  1--> b  0: i  59 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  50 {sp=sp+0x8;clobber flags;clobber [scratch];}:hsw_decodern,hsw_p0156
;;	  1--> b  0: i  41 use ax                                  :nothing
;;	  2--> b  0: i  51 simple_return                           :hsw_decoder0
;;	Ready list (final):  
;;   total time = 2
;;   new head = 52
;;   new tail = 51

;;   ======================================================
;;   -- basic block 4 from 12 to 24 -- after reload
;;   ======================================================

;;	  0--> b  0: i  12 loc 0x1                                 :nothing
;;	  0--> b  0: i  13 loc di                                  :nothing
;;	  0--> b  0: i  14 debug_marker                            :nothing
;;	  0--> b  0: i  15 loc D#7                                 :nothing
;;	  0--> b  0: i  16 loc D#8                                 :nothing
;;	  0--> b  0: i  17 debug_marker                            :nothing
;;	  0--> b  0: i  18 di=[di]                                 :hsw_decodern,hsw_p23
;;	  2--> b  0: i  19 ax=call [`convert_fbgc_object_to_int']  :hsw_decoder0
;;	  2--> b  0: i  56 {sp=sp+0x8;clobber flags;clobber [scratch];}:hsw_decodern,hsw_p0156
;;	  3--> b  0: i  20 di=ax                                   :hsw_decodern,hsw_p0156
;;	  3--> b  0: i  21 loc di                                  :nothing
;;	  3--> b  0: i  22 debug_marker                            :nothing
;;	  4--> b  0: i  24 ax=call [`new_fbgc_int_object']         :hsw_decoder0
;;	Ready list (final):  
;;   total time = 4
;;   new head = 12
;;   new tail = 24



starting the processing of deferred insns
ending the processing of deferred insns


fbgc_int

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,4u} r1={5d,1u} r2={4d} r4={5d,3u} r5={7d,6u} r7={4d,13u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={9d,1u} r18={3d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 261{233d,28u,0e} in 28{25 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 7 [sp] 17 [flags]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(note 6 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 6 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 4 47 2 (debug_marker) "cmodules/fbgc_stl.c":81:2 -1
     (nil))
(insn/f:TI 47 8 48 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "cmodules/fbgc_stl.c":80:35 959 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (nil))))
(note 48 47 9 2 NOTE_INSN_PROLOGUE_END)
(insn 9 48 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 4 si [orig:86 argc ] [86])
            (const_int 1 [0x1]))) "cmodules/fbgc_stl.c":81:4 11 {*cmpsi_1}
     (nil))
(jump_insn 10 9 28 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 60)
            (pc))) "cmodules/fbgc_stl.c":81:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 422839532 (nil)))
 -> 60)
;;  succ:       4 [39.4% (guessed)]  count:422839528 (estimated locally) (CAN_FALLTHRU)
;;              3 [60.6% (guessed)]  count:650902296 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 4 [si] 5 [di] 7 [sp]
;; live  out 	 4 [si] 5 [di] 7 [sp]

;; basic block 3, loop depth 0, count 650902295 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [60.6% (guessed)]  count:650902296 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]
;; live  kill	 17 [flags]
(note 28 10 52 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn:TI 52 28 29 3 (set (reg/v:SI 1 dx [orig:86 argc ] [86])
        (reg:SI 4 si [89])) 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [89])
        (nil)))
(debug_insn 29 52 32 3 (debug_marker) "cmodules/fbgc_stl.c":85:7 -1
     (nil))
(insn 32 29 31 3 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_stl.c":85:7 67 {*movsi_internal}
     (nil))
(insn 31 32 58 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f626c494cf0 *.LC6>)) "cmodules/fbgc_stl.c":85:7 66 {*movdi_internal}
     (nil))
(insn 58 31 34 3 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":85:7 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(call_insn:TI 34 58 35 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":85:7 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(debug_insn 35 34 59 3 (debug_marker) "cmodules/fbgc_stl.c":86:2 -1
     (nil))
(insn 59 35 61 3 (parallel [
            (set (reg/i:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":87:1 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 61 59 50 3 NOTE_INSN_EPILOGUE_BEG)
(insn/f 50 61 41 3 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "cmodules/fbgc_stl.c":87:1 959 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn 41 50 51 3 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":87:1 -1
     (nil))
(jump_insn:TI 51 41 55 3 (simple_return) "cmodules/fbgc_stl.c":87:1 690 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [always]  count:650902295 (estimated locally)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 55 51 60)
;; basic block 4, loop depth 0, count 422839530 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       2 [39.4% (guessed)]  count:422839528 (estimated locally) (CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 7 [sp]
;; live  kill	 17 [flags]
(code_label 60 55 11 4 60 (nil) [1 uses])
(note 11 60 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 12 11 13 4 (var_location:SI D#7 (const_int 1 [0x1])) -1
     (nil))
(debug_insn 13 12 14 4 (var_location:DI arg (reg/v/f:DI 5 di [orig:85 arg ] [85])) -1
     (nil))
(debug_insn 14 13 15 4 (debug_marker:BLK) "cmodules/fbgc_stl.c":80:1 -1
     (nil))
(debug_insn 15 14 16 4 (var_location:SI D#8 (debug_expr:SI D#7)) -1
     (nil))
(debug_insn 16 15 17 4 (var_location:SI argc (debug_expr:SI D#8)) -1
     (nil))
(debug_insn 17 16 18 4 (debug_marker) "cmodules/fbgc_stl.c":82:3 -1
     (nil))
(insn:TI 18 17 19 4 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 5 di [orig:85 arg ] [85]) [1 *arg_6(D)+0 S8 A64])) "cmodules/fbgc_stl.c":82:11 66 {*movdi_internal}
     (nil))
(call_insn:TI 19 18 62 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f626c7e8600 convert_fbgc_object_to_int>) [0 convert_fbgc_object_to_int S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":82:11 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f626c7e8600 convert_fbgc_object_to_int>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(note 62 19 56 4 NOTE_INSN_EPILOGUE_BEG)
(insn/f 56 62 20 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "cmodules/fbgc_stl.c":87:1 959 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn:TI 20 56 21 4 (set (reg/v:SI 5 di [orig:83 d ] [83])
        (reg:SI 0 ax [90])) "cmodules/fbgc_stl.c":82:11 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [90])
        (nil)))
(debug_insn 21 20 22 4 (var_location:SI d (reg/v:SI 5 di [orig:83 d ] [83])) "cmodules/fbgc_stl.c":82:11 -1
     (nil))
(debug_insn 22 21 24 4 (debug_marker) "cmodules/fbgc_stl.c":83:3 -1
     (nil))
(call_insn/j:TI 24 22 25 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_int_object") [flags 0x41]  <function_decl 0x7f626c7fa500 new_fbgc_int_object>) [0 new_fbgc_int_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":83:10 681 {*sibcall_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_int_object") [flags 0x41]  <function_decl 0x7f626c7fa500 new_fbgc_int_object>)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:422839530 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 25 24 46)
(note 46 25 0 NOTE_INSN_DELETED)

;; Function fbgc_double (fbgc_double, funcdef_no=61, decl_uid=5709, cgraph_uid=62, symbol_order=69)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)


fbgc_double

Dataflow summary:
def_info->table_size = 224, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags] 20 [xmm0]
;;  ref usage 	r0={6d,3u} r1={5d,1u} r2={4d} r4={5d,3u} r5={6d,4u} r7={4d,13u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={9d,1u} r18={3d} r20={4d,2u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 259{232d,27u,0e} in 27{24 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(0){ }d10(1){ }d14(2){ }d19(4){ }d25(5){ }d26(7){ }d61(20){ }d65(21){ }d69(22){ }d73(23){ }d77(24){ }d81(25){ }d85(26){ }d89(27){ }d117(36){ }d121(37){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  kill	
;; lr  out 	 4 [si] 5 [di] 7 [sp]
;; live  out 	 4 [si] 5 [di] 7 [sp]

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 7 [sp] 17 [flags]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 4 [si] 5 [di] 7 [sp]
;; live  out 	 4 [si] 5 [di] 7 [sp]

( 2 )->[3]->( 1 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 7 [sp] 20 [xmm0]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 4 3 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 51 to worklist
  Adding insn 41 to worklist
  Adding insn 34 to worklist
  Adding insn 24 to worklist
  Adding insn 19 to worklist
Finished finding needed instructions:
processing block 4 lr out =  0 [ax] 7 [sp]
  Adding insn 56 to worklist
  Adding insn 18 to worklist
processing block 3 lr out =  0 [ax] 7 [sp]
  Adding insn 50 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 52 to worklist
processing block 2 lr out =  4 [si] 5 [di] 7 [sp]
  Adding insn 9 to worklist
  Adding insn 47 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)
;;   ======================================================
;;   -- basic block 2 from 47 to 10 -- after reload
;;   ======================================================

;;	  0--> b  0: i   8 debug_marker                            :nothing
;;	  0--> b  0: i  47 {sp=sp-0x8;clobber flags;clobber [scratch];}:hsw_decodern,hsw_p0156
;;	  0--> b  0: i   9 flags=cmp(si,0x1)                       :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  10 pc={(flags==0)?L60:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 0
;;   new head = 8
;;   new tail = 10

;;   ======================================================
;;   -- basic block 3 from 52 to 51 -- after reload
;;   ======================================================

;;	  0--> b  0: i  52 dx=si                                   :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  29 debug_marker                            :nothing
;;	  0--> b  0: i  32 di=0x64                                 :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  31 si=`*.LC6'                              :hsw_decodern,hsw_p1|hsw_p5
;;	  0--> b  0: i  58 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  34 ax=call [`cprintf']                     :hsw_decoder0
;;	  1--> b  0: i  35 debug_marker                            :nothing
;;	  1--> b  0: i  59 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  50 {sp=sp+0x8;clobber flags;clobber [scratch];}:hsw_decodern,hsw_p0156
;;	  1--> b  0: i  41 use ax                                  :nothing
;;	  2--> b  0: i  51 simple_return                           :hsw_decoder0
;;	Ready list (final):  
;;   total time = 2
;;   new head = 52
;;   new tail = 51

;;   ======================================================
;;   -- basic block 4 from 12 to 24 -- after reload
;;   ======================================================

;;	  0--> b  0: i  12 loc 0x1                                 :nothing
;;	  0--> b  0: i  13 loc di                                  :nothing
;;	  0--> b  0: i  14 debug_marker                            :nothing
;;	  0--> b  0: i  15 loc D#9                                 :nothing
;;	  0--> b  0: i  16 loc D#10                                :nothing
;;	  0--> b  0: i  17 debug_marker                            :nothing
;;	  0--> b  0: i  18 di=[di]                                 :hsw_decodern,hsw_p23
;;	  2--> b  0: i  19 xmm0=call [`convert_fbgc_object_to_double']:hsw_decoder0
;;	  2--> b  0: i  21 loc xmm0                                :nothing
;;	  2--> b  0: i  22 debug_marker                            :nothing
;;	  2--> b  0: i  56 {sp=sp+0x8;clobber flags;clobber [scratch];}:hsw_decodern,hsw_p0156
;;	  3--> b  0: i  24 ax=call [`new_fbgc_double_object']      :hsw_decoder0
;;	Ready list (final):  
;;   total time = 3
;;   new head = 12
;;   new tail = 24



starting the processing of deferred insns
ending the processing of deferred insns


fbgc_double

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags] 20 [xmm0]
;;  ref usage 	r0={6d,3u} r1={5d,1u} r2={4d} r4={5d,3u} r5={6d,4u} r7={4d,13u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={9d,1u} r18={3d} r20={4d,2u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 259{232d,27u,0e} in 27{24 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 7 [sp] 17 [flags]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(note 6 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 6 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 4 47 2 (debug_marker) "cmodules/fbgc_stl.c":90:2 -1
     (nil))
(insn/f:TI 47 8 48 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "cmodules/fbgc_stl.c":89:41 959 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (nil))))
(note 48 47 9 2 NOTE_INSN_PROLOGUE_END)
(insn 9 48 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 4 si [orig:86 argc ] [86])
            (const_int 1 [0x1]))) "cmodules/fbgc_stl.c":90:4 11 {*cmpsi_1}
     (nil))
(jump_insn 10 9 28 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 60)
            (pc))) "cmodules/fbgc_stl.c":90:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 422839532 (nil)))
 -> 60)
;;  succ:       4 [39.4% (guessed)]  count:422839528 (estimated locally) (CAN_FALLTHRU)
;;              3 [60.6% (guessed)]  count:650902296 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 4 [si] 5 [di] 7 [sp]
;; live  out 	 4 [si] 5 [di] 7 [sp]

;; basic block 3, loop depth 0, count 650902295 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [60.6% (guessed)]  count:650902296 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]
;; live  kill	 17 [flags]
(note 28 10 52 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn:TI 52 28 29 3 (set (reg/v:SI 1 dx [orig:86 argc ] [86])
        (reg:SI 4 si [89])) 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [89])
        (nil)))
(debug_insn 29 52 32 3 (debug_marker) "cmodules/fbgc_stl.c":94:7 -1
     (nil))
(insn 32 29 31 3 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_stl.c":94:7 67 {*movsi_internal}
     (nil))
(insn 31 32 58 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f626c494cf0 *.LC6>)) "cmodules/fbgc_stl.c":94:7 66 {*movdi_internal}
     (nil))
(insn 58 31 34 3 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":94:7 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(call_insn:TI 34 58 35 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":94:7 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(debug_insn 35 34 59 3 (debug_marker) "cmodules/fbgc_stl.c":95:2 -1
     (nil))
(insn 59 35 61 3 (parallel [
            (set (reg/i:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":96:1 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 61 59 50 3 NOTE_INSN_EPILOGUE_BEG)
(insn/f 50 61 41 3 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "cmodules/fbgc_stl.c":96:1 959 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn 41 50 51 3 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":96:1 -1
     (nil))
(jump_insn:TI 51 41 55 3 (simple_return) "cmodules/fbgc_stl.c":96:1 690 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [always]  count:650902295 (estimated locally)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 55 51 60)
;; basic block 4, loop depth 0, count 422839530 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       2 [39.4% (guessed)]  count:422839528 (estimated locally) (CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 7 [sp] 20 [xmm0]
;; live  kill	 17 [flags]
(code_label 60 55 11 4 64 (nil) [1 uses])
(note 11 60 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 12 11 13 4 (var_location:SI D#9 (const_int 1 [0x1])) -1
     (nil))
(debug_insn 13 12 14 4 (var_location:DI arg (reg/v/f:DI 5 di [orig:85 arg ] [85])) -1
     (nil))
(debug_insn 14 13 15 4 (debug_marker:BLK) "cmodules/fbgc_stl.c":89:1 -1
     (nil))
(debug_insn 15 14 16 4 (var_location:SI D#10 (debug_expr:SI D#9)) -1
     (nil))
(debug_insn 16 15 17 4 (var_location:SI argc (debug_expr:SI D#10)) -1
     (nil))
(debug_insn 17 16 18 4 (debug_marker) "cmodules/fbgc_stl.c":91:3 -1
     (nil))
(insn:TI 18 17 19 4 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 5 di [orig:85 arg ] [85]) [1 *arg_6(D)+0 S8 A64])) "cmodules/fbgc_stl.c":91:14 66 {*movdi_internal}
     (nil))
(call_insn:TI 19 18 21 4 (set (reg:DF 20 xmm0)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f626c7e8700 convert_fbgc_object_to_double>) [0 convert_fbgc_object_to_double S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":91:14 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_double") [flags 0x41]  <function_decl 0x7f626c7e8700 convert_fbgc_object_to_double>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(debug_insn 21 19 22 4 (var_location:DF d (reg/v:DF 20 xmm0 [orig:83 d ] [83])) "cmodules/fbgc_stl.c":91:14 -1
     (nil))
(debug_insn 22 21 62 4 (debug_marker) "cmodules/fbgc_stl.c":92:3 -1
     (nil))
(note 62 22 56 4 NOTE_INSN_EPILOGUE_BEG)
(insn/f 56 62 24 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "cmodules/fbgc_stl.c":96:1 959 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(call_insn/j:TI 24 56 25 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f626c7f3d00 new_fbgc_double_object>) [0 new_fbgc_double_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":92:10 681 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DF 20 xmm0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_double_object") [flags 0x41]  <function_decl 0x7f626c7f3d00 new_fbgc_double_object>)
            (nil)))
    (expr_list:DF (use (reg:DF 20 xmm0))
        (nil)))
;;  succ:       EXIT [always]  count:422839530 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 25 24 46)
(note 46 25 0 NOTE_INSN_DELETED)

;; Function fbgc_matrix (fbgc_matrix, funcdef_no=63, decl_uid=5713, cgraph_uid=64, symbol_order=73)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)


fbgc_matrix

Dataflow summary:
def_info->table_size = 367, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 40 [r12]
;;  ref usage 	r0={8d,6u} r1={8d,2u} r2={7d,1u} r3={4d,4u,1e} r4={8d,4u} r5={11d,8u} r6={4d,4u} r7={10d,18u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r17={8d,1u} r18={5d} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={6d} r37={6d} r38={5d} r39={5d} r40={4d,4u} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} 
;;    total ref usage 440{387d,52u,1e} in 46{41 regular + 5 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(36){ }d-1(37){ }d-1(40){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 40 [r12]
;; lr  def 	 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]
;; live  gen 	 7 [sp] 17 [flags]
;; live  kill	
;; lr  out 	 4 [si] 5 [di] 7 [sp]
;; live  out 	 4 [si] 5 [di] 7 [sp]

( 2 )->[3]->( 1 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]

( 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]

( 4 3 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(40){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 66 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
  Adding insn 72 to worklist
  Adding insn 55 to worklist
  Adding insn 48 to worklist
  Adding insn 38 to worklist
  Adding insn 31 to worklist
  Adding insn 25 to worklist
  Adding insn 19 to worklist
Finished finding needed instructions:
processing block 4 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
  Adding insn 80 to worklist
  Adding insn 79 to worklist
  Adding insn 78 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 33 to worklist
  Adding insn 29 to worklist
  Adding insn 26 to worklist
  Adding insn 23 to worklist
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 74 to worklist
processing block 3 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 83 to worklist
  Adding insn 82 to worklist
  Adding insn 46 to worklist
  Adding insn 45 to worklist
  Adding insn 73 to worklist
processing block 2 lr out =  4 [si] 5 [di] 7 [sp]
  Adding insn 9 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)
;;   ======================================================
;;   -- basic block 2 from 64 to 10 -- after reload
;;   ======================================================

;;	  0--> b  0: i   8 debug_marker                            :nothing
;;	  0--> b  0: i  64 [--sp]=r12                              :hsw_decodern,(hsw_p4+hsw_p237)
;;	  1--> b  0: i  65 [--sp]=bp                               :hsw_decodern,(hsw_p4+hsw_p237)
;;	  2--> b  0: i  66 [--sp]=bx                               :hsw_decodern,(hsw_p4+hsw_p237)
;;	  2--> b  0: i   9 flags=cmp(si,0x3)                       :hsw_decodern,hsw_p0156
;;	  2--> b  0: i  10 pc={(flags==0)?L84:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 2
;;   new head = 8
;;   new tail = 10

;;   ======================================================
;;   -- basic block 3 from 73 to 72 -- after reload
;;   ======================================================

;;	  0--> b  0: i  73 dx=si                                   :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  43 debug_marker                            :nothing
;;	  0--> b  0: i  46 di=0x64                                 :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  45 si=`*.LC7'                              :hsw_decodern,hsw_p1|hsw_p5
;;	  0--> b  0: i  82 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  48 ax=call [`cprintf']                     :hsw_decoder0
;;	  1--> b  0: i  49 debug_marker                            :nothing
;;	  1--> b  0: i  69 bx=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  1--> b  0: i  83 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  70 bp=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  2--> b  0: i  55 use ax                                  :nothing
;;	  2--> b  0: i  71 r12=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  3--> b  0: i  72 simple_return                           :hsw_decoder0
;;	Ready list (final):  
;;   total time = 3
;;   new head = 73
;;   new tail = 72

;;   ======================================================
;;   -- basic block 4 from 74 to 38 -- after reload
;;   ======================================================

;;	  0--> b  0: i  74 bx=di                                   :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  12 loc 0x3                                 :nothing
;;	  0--> b  0: i  13 loc di                                  :nothing
;;	  0--> b  0: i  14 debug_marker                            :nothing
;;	  0--> b  0: i  15 loc D#11                                :nothing
;;	  0--> b  0: i  16 loc D#12                                :nothing
;;	  0--> b  0: i  17 debug_marker                            :nothing
;;	  0--> b  0: i  18 di=[di]                                 :hsw_decodern,hsw_p23
;;	  2--> b  0: i  19 ax=call [`convert_fbgc_object_to_int']  :hsw_decoder0
;;	  2--> b  0: i  23 di=[bx+0x8]                             :hsw_decodern,hsw_p23
;;	  3--> b  0: i  20 bp=ax                                   :hsw_decodern,hsw_p0156
;;	  3--> b  0: i  21 loc bp                                  :nothing
;;	  3--> b  0: i  22 debug_marker                            :nothing
;;	  4--> b  0: i  25 ax=call [`convert_fbgc_object_to_int']  :hsw_decoder0
;;	  4--> b  0: i  29 di=[bx+0x10]                            :hsw_decodern,hsw_p23
;;	  5--> b  0: i  26 r12=ax                                  :hsw_decodern,hsw_p0156
;;	  5--> b  0: i  27 loc r12                                 :nothing
;;	  5--> b  0: i  28 debug_marker                            :nothing
;;	  6--> b  0: i  31 ax=call [`convert_fbgc_object_to_int']  :hsw_decoder0
;;	  6--> b  0: i  78 bx=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  6--> b  0: i  35 dx=r12                                  :hsw_decodern,hsw_p0156
;;	  6--> b  0: i  36 si=bp                                   :hsw_decodern,hsw_p0156
;;	  7--> b  0: i  33 cx=sxn(ax)                              :hsw_decodern,hsw_p0156
;;	  7--> b  0: i  79 bp=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  7--> b  0: i  37 di=0x4                                  :hsw_decodern,hsw_p0156
;;	  7--> b  0: i  80 r12=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  8--> b  0: i  38 ax=call [`new_fbgc_matrix_object']      :hsw_decoder0
;;	Ready list (final):  
;;   total time = 8
;;   new head = 74
;;   new tail = 38



starting the processing of deferred insns
ending the processing of deferred insns


fbgc_matrix

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 40 [r12]
;;  ref usage 	r0={8d,6u} r1={8d,2u} r2={7d,1u} r3={4d,4u,1e} r4={8d,4u} r5={11d,8u} r6={4d,4u} r7={10d,18u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r17={8d,1u} r18={5d} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={6d} r37={6d} r38={5d} r39={5d} r40={4d,4u} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} 
;;    total ref usage 440{387d,52u,1e} in 46{41 regular + 5 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 40 [r12]
;; lr  def 	 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]
;; live  gen 	 7 [sp] 17 [flags]
;; live  kill	
(note 6 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 6 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 4 64 2 (debug_marker) "cmodules/fbgc_stl.c":145:2 -1
     (nil))
(insn/f:TI 64 8 65 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 40 r12)) "cmodules/fbgc_stl.c":143:41 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 40 r12)
        (nil)))
(insn/f:TI 65 64 66 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) "cmodules/fbgc_stl.c":143:41 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f:TI 66 65 67 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) "cmodules/fbgc_stl.c":143:41 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(note 67 66 9 2 NOTE_INSN_PROLOGUE_END)
(insn 9 67 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 4 si [orig:94 argc ] [94])
            (const_int 3 [0x3]))) "cmodules/fbgc_stl.c":145:4 11 {*cmpsi_1}
     (nil))
(jump_insn 10 9 42 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 84)
            (pc))) "cmodules/fbgc_stl.c":145:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 422839532 (nil)))
 -> 84)
;;  succ:       4 [39.4% (guessed)]  count:422839528 (estimated locally) (CAN_FALLTHRU)
;;              3 [60.6% (guessed)]  count:650902296 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 4 [si] 5 [di] 7 [sp]
;; live  out 	 4 [si] 5 [di] 7 [sp]

;; basic block 3, loop depth 0, count 650902295 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [60.6% (guessed)]  count:650902296 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]
;; live  kill	 17 [flags]
(note 42 10 73 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn:TI 73 42 43 3 (set (reg/v:SI 1 dx [orig:94 argc ] [94])
        (reg:SI 4 si [100])) 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [100])
        (nil)))
(debug_insn 43 73 46 3 (debug_marker) "cmodules/fbgc_stl.c":150:7 -1
     (nil))
(insn 46 43 45 3 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_stl.c":150:7 67 {*movsi_internal}
     (nil))
(insn 45 46 82 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f626c4a5e10 *.LC7>)) "cmodules/fbgc_stl.c":150:7 66 {*movdi_internal}
     (nil))
(insn 82 45 48 3 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":150:7 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(call_insn:TI 48 82 49 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":150:7 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(debug_insn 49 48 85 3 (debug_marker) "cmodules/fbgc_stl.c":151:2 -1
     (nil))
(note 85 49 69 3 NOTE_INSN_EPILOGUE_BEG)
(insn/f 69 85 83 3 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":152:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn 83 69 70 3 (parallel [
            (set (reg/i:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":152:1 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn/f 70 83 55 3 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":152:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn 55 70 71 3 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":152:1 -1
     (nil))
(insn/f:TI 71 55 72 3 (set (reg:DI 40 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":152:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn:TI 72 71 77 3 (simple_return) "cmodules/fbgc_stl.c":152:1 690 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [always]  count:650902295 (estimated locally)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]

(barrier 77 72 84)
;; basic block 4, loop depth 0, count 422839530 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [39.4% (guessed)]  count:422839528 (estimated locally) (CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r12]
;; live  kill	
(code_label 84 77 11 4 68 (nil) [1 uses])
(note 11 84 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 32 11 74 4 NOTE_INSN_DELETED)
(insn:TI 74 32 12 4 (set (reg/v/f:DI 3 bx [orig:93 arg ] [93])
        (reg:DI 5 di [99])) 66 {*movdi_internal}
     (nil))
(debug_insn 12 74 13 4 (var_location:SI D#11 (const_int 3 [0x3])) -1
     (nil))
(debug_insn 13 12 14 4 (var_location:DI arg (reg/f:DI 5 di [orig:93 arg ] [93])) -1
     (nil))
(debug_insn 14 13 15 4 (debug_marker:BLK) "cmodules/fbgc_stl.c":143:1 -1
     (nil))
(debug_insn 15 14 16 4 (var_location:SI D#12 (debug_expr:SI D#11)) -1
     (nil))
(debug_insn 16 15 17 4 (var_location:SI argc (debug_expr:SI D#12)) -1
     (nil))
(debug_insn 17 16 18 4 (debug_marker) "cmodules/fbgc_stl.c":146:3 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 5 di)
        (mem/f:DI (reg/f:DI 5 di [orig:93 arg ] [93]) [1 *arg_8(D)+0 S8 A64])) "cmodules/fbgc_stl.c":146:14 66 {*movdi_internal}
     (nil))
(call_insn:TI 19 18 23 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f626c7e8600 convert_fbgc_object_to_int>) [0 convert_fbgc_object_to_int S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":146:14 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f626c7e8600 convert_fbgc_object_to_int>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 19 20 4 (set (reg/f:DI 5 di [orig:95 MEM[(struct fbgc_object * *)arg_8(D) + 8B] ] [95])
        (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:93 arg ] [93])
                (const_int 8 [0x8])) [1 MEM[(struct fbgc_object * *)arg_8(D) + 8B]+0 S8 A64])) "cmodules/fbgc_stl.c":147:14 66 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:93 arg ] [93])
                (const_int 8 [0x8])) [1 MEM[(struct fbgc_object * *)arg_8(D) + 8B]+0 S8 A64])
        (nil)))
(insn:TI 20 23 21 4 (set (reg:SI 6 bp [orig:83 _10 ] [83])
        (reg:SI 0 ax [101])) "cmodules/fbgc_stl.c":146:14 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [101])
        (nil)))
(debug_insn 21 20 22 4 (var_location:SI r (reg:SI 6 bp [orig:83 _10 ] [83])) "cmodules/fbgc_stl.c":146:10 -1
     (nil))
(debug_insn 22 21 25 4 (debug_marker) "cmodules/fbgc_stl.c":147:3 -1
     (nil))
(call_insn:TI 25 22 29 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f626c7e8600 convert_fbgc_object_to_int>) [0 convert_fbgc_object_to_int S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":147:14 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f626c7e8600 convert_fbgc_object_to_int>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 29 25 26 4 (set (reg/f:DI 5 di [orig:96 MEM[(struct fbgc_object * *)arg_8(D) + 16B] ] [96])
        (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:93 arg ] [93])
                (const_int 16 [0x10])) [1 MEM[(struct fbgc_object * *)arg_8(D) + 16B]+0 S8 A64])) "cmodules/fbgc_stl.c":148:44 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:93 arg ] [93])
        (nil)))
(insn:TI 26 29 27 4 (set (reg:SI 40 r12 [orig:86 _13 ] [86])
        (reg:SI 0 ax [102])) "cmodules/fbgc_stl.c":147:14 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [102])
        (nil)))
(debug_insn 27 26 28 4 (var_location:SI c (reg:SI 40 r12 [orig:86 _13 ] [86])) "cmodules/fbgc_stl.c":147:10 -1
     (nil))
(debug_insn 28 27 31 4 (debug_marker) "cmodules/fbgc_stl.c":148:3 -1
     (nil))
(call_insn:TI 31 28 86 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f626c7e8600 convert_fbgc_object_to_int>) [0 convert_fbgc_object_to_int S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":148:44 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_fbgc_object_to_int") [flags 0x41]  <function_decl 0x7f626c7e8600 convert_fbgc_object_to_int>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(note 86 31 78 4 NOTE_INSN_EPILOGUE_BEG)
(insn/f 78 86 35 4 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":152:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn 35 78 36 4 (set (reg:SI 1 dx)
        (reg:SI 40 r12 [orig:86 _13 ] [86])) "cmodules/fbgc_stl.c":148:10 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 40 r12 [orig:86 _13 ] [86])
        (nil)))
(insn 36 35 33 4 (set (reg:SI 4 si)
        (reg:SI 6 bp [orig:83 _10 ] [83])) "cmodules/fbgc_stl.c":148:10 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 6 bp [orig:83 _10 ] [83])
        (nil)))
(insn:TI 33 36 79 4 (set (reg:SI 2 cx [orig:97 _16 ] [97])
        (sign_extend:SI (reg:QI 0 ax [103]))) "cmodules/fbgc_stl.c":148:10 134 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [103])
        (nil)))
(insn/f 79 33 37 4 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":152:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn 37 79 80 4 (set (reg:SI 5 di)
        (const_int 4 [0x4])) "cmodules/fbgc_stl.c":148:10 67 {*movsi_internal}
     (nil))
(insn/f 80 37 38 4 (set (reg:DI 40 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "cmodules/fbgc_stl.c":152:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(call_insn/j:TI 38 80 39 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("new_fbgc_matrix_object") [flags 0x41]  <function_decl 0x7f626c80b100 new_fbgc_matrix_object>) [0 new_fbgc_matrix_object S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":148:10 681 {*sibcall_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("new_fbgc_matrix_object") [flags 0x41]  <function_decl 0x7f626c80b100 new_fbgc_matrix_object>)
                        (nil))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
;;  succ:       EXIT [always]  count:422839530 (estimated locally) (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12]

(barrier 39 38 62)
(note 62 39 0 NOTE_INSN_DELETED)

;; Function fbgc_mem (fbgc_mem, funcdef_no=64, decl_uid=5721, cgraph_uid=65, symbol_order=75)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)


fbgc_mem

Dataflow summary:
def_info->table_size = 157, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={7d,5u} r1={4d,2u} r2={3d} r4={4d,3u} r5={4d,1u} r7={4d,12u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={10d,1u} r18={2d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 192{168d,24u,0e} in 32{30 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(0){ }d9(1){ }d12(2){ }d16(4){ }d20(5){ }d21(7){ }d45(20){ }d48(21){ }d51(22){ }d54(23){ }d57(24){ }d60(25){ }d63(26){ }d66(27){ }d85(36){ }d88(37){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  kill	
;; lr  out 	 4 [si] 7 [sp]
;; live  out 	 4 [si] 7 [sp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 7 [sp] 17 [flags]
;; live  in  	 4 [si] 7 [sp]
;; live  gen 	 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 4 [si] 7 [sp]
;; live  out 	 4 [si] 7 [sp]

( 2 )->[3]->( 1 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 7 [sp]

( 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 7 [sp]

( 3 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 49 to worklist
  Adding insn 39 to worklist
  Adding insn 13 to worklist
  Adding insn 65 to worklist
  Adding insn 62 to worklist
  Adding insn 28 to worklist
Finished finding needed instructions:
processing block 3 lr out =  0 [ax] 7 [sp]
  Adding insn 48 to worklist
  Adding insn 54 to worklist
  Adding insn 56 to worklist
processing block 4 lr out =  0 [ax] 7 [sp]
  Adding insn 64 to worklist
  Adding insn 61 to worklist
  Adding insn 55 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 50 to worklist
processing block 2 lr out =  4 [si] 7 [sp]
  Adding insn 8 to worklist
  Adding insn 45 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)
;;   ======================================================
;;   -- basic block 2 from 45 to 9 -- after reload
;;   ======================================================

;;	  0--> b  0: i   7 debug_marker                            :nothing
;;	  0--> b  0: i  45 {sp=sp-0x8;clobber flags;clobber [scratch];}:hsw_decodern,hsw_p0156
;;	  0--> b  0: i   8 flags=cmp(si,0)                         :hsw_decodern,hsw_p0156
;;	  0--> b  0: i   9 pc={(flags!=0)?L16:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 0
;;   new head = 7
;;   new tail = 9

;;   ======================================================
;;   -- basic block 3 from 11 to 49 -- after reload
;;   ======================================================

;;	  0--> b  0: i  11 debug_marker                            :nothing
;;	  0--> b  0: i  56 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  13 call [`print_fbgc_memory_block']        :hsw_decoder0
;;	  1--> b  0: i  31 loc clobber                             :nothing
;;	  1--> b  0: i  32 loc clobber                             :nothing
;;	  1--> b  0: i  33 debug_marker                            :nothing
;;	  1--> b  0: i  54 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  48 {sp=sp+0x8;clobber flags;clobber [scratch];}:hsw_decodern,hsw_p0156
;;	  1--> b  0: i  39 use ax                                  :nothing
;;	  2--> b  0: i  49 simple_return                           :hsw_decoder0
;;	Ready list (final):  
;;   total time = 2
;;   new head = 11
;;   new tail = 49

;;   ======================================================
;;   -- basic block 4 from 50 to 65 -- after reload
;;   ======================================================

;;	  0--> b  0: i  50 dx=si                                   :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  18 loc entry_value                         :nothing
;;	  0--> b  0: i  19 loc dx                                  :nothing
;;	  0--> b  0: i  20 debug_marker                            :nothing
;;	  0--> b  0: i  21 loc D#13                                :nothing
;;	  0--> b  0: i  22 loc D#14                                :nothing
;;	  0--> b  0: i  23 debug_marker                            :nothing
;;	  0--> b  0: i  26 di=0x64                                 :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  25 si=`*.LC8'                              :hsw_decodern,hsw_p1|hsw_p5
;;	  0--> b  0: i  55 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  28 ax=call [`cprintf']                     :hsw_decoder0
;;	  1--> b  0: i  58 loc clobber                             :nothing
;;	  1--> b  0: i  59 loc clobber                             :nothing
;;	  1--> b  0: i  60 debug_marker                            :nothing
;;	  1--> b  0: i  61 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  64 {sp=sp+0x8;clobber flags;clobber [scratch];}:hsw_decodern,hsw_p0156
;;	  1--> b  0: i  62 use ax                                  :nothing
;;	  2--> b  0: i  65 simple_return                           :hsw_decoder0
;;	Ready list (final):  
;;   total time = 2
;;   new head = 50
;;   new tail = 65



starting the processing of deferred insns
ending the processing of deferred insns


fbgc_mem

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={7d,5u} r1={4d,2u} r2={3d} r4={4d,3u} r5={4d,1u} r7={4d,12u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={10d,1u} r18={2d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 192{168d,24u,0e} in 32{30 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 7 [sp] 17 [flags]
;; live  in  	 4 [si] 7 [sp]
;; live  gen 	 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 5 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 45 2 (debug_marker) "cmodules/fbgc_stl.c":156:2 -1
     (nil))
(insn/f:TI 45 7 46 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "cmodules/fbgc_stl.c":155:35 959 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (nil))))
(note 46 45 8 2 NOTE_INSN_PROLOGUE_END)
(insn 8 46 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 4 si [orig:84 argc ] [84])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":156:4 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) "cmodules/fbgc_stl.c":156:4 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 16)
;;  succ:       3 [50.0% (guessed)]  count:536870912 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;;              4 [50.0% (guessed)]  count:536870912 (estimated locally) (CAN_FALLTHRU)
;; lr  out 	 4 [si] 7 [sp]
;; live  out 	 4 [si] 7 [sp]

;; basic block 3, loop depth 0, count 536870913 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [50.0% (guessed)]  count:536870912 (estimated locally) (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 7 [sp]
;; live  kill	 17 [flags]
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 11 10 56 3 (debug_marker) "cmodules/fbgc_stl.c":157:3 -1
     (nil))
(insn:TI 56 11 13 3 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":157:3 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(call_insn:TI 13 56 31 3 (call (mem:QI (symbol_ref:DI ("print_fbgc_memory_block") [flags 0x41]  <function_decl 0x7f626c7ed000 print_fbgc_memory_block>) [0 print_fbgc_memory_block S1 A8])
        (const_int 0 [0])) "cmodules/fbgc_stl.c":157:3 666 {*call}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("print_fbgc_memory_block") [flags 0x41]  <function_decl 0x7f626c7ed000 print_fbgc_memory_block>)
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(debug_insn 31 13 32 3 (var_location:SI argc (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 32 31 33 3 (var_location:DI arg (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 33 32 54 3 (debug_marker) "cmodules/fbgc_stl.c":160:2 -1
     (nil))
(insn 54 33 69 3 (parallel [
            (set (reg/i:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":161:1 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 69 54 48 3 NOTE_INSN_EPILOGUE_BEG)
(insn/f 48 69 39 3 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "cmodules/fbgc_stl.c":161:1 959 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn 39 48 49 3 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":161:1 -1
     (nil))
(jump_insn:TI 49 39 53 3 (simple_return) "cmodules/fbgc_stl.c":161:1 690 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [always]  count:536870913 (estimated locally)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 53 49 16)
;; basic block 4, loop depth 0, count 536870913 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [50.0% (guessed)]  count:536870912 (estimated locally) (CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]
;; live  kill	 17 [flags]
(code_label 16 53 17 4 70 (nil) [1 uses])
(note 17 16 50 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn:TI 50 17 18 4 (set (reg/v:SI 1 dx [orig:84 argc ] [84])
        (reg:SI 4 si [86])) 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [86])
        (nil)))
(debug_insn 18 50 19 4 (var_location:DI D#13 (entry_value:DI (reg:DI 5 di [ arg ]))) -1
     (nil))
(debug_insn 19 18 20 4 (var_location:SI argc (reg/v:SI 1 dx [orig:84 argc ] [84])) -1
     (nil))
(debug_insn 20 19 21 4 (debug_marker:BLK) "cmodules/fbgc_stl.c":155:1 -1
     (nil))
(debug_insn 21 20 22 4 (var_location:DI D#14 (debug_expr:DI D#13)) -1
     (nil))
(debug_insn 22 21 23 4 (var_location:DI arg (debug_expr:DI D#14)) -1
     (nil))
(debug_insn 23 22 26 4 (debug_marker) "cmodules/fbgc_stl.c":159:7 -1
     (nil))
(insn 26 23 25 4 (set (reg:SI 5 di)
        (const_int 100 [0x64])) "cmodules/fbgc_stl.c":159:7 67 {*movsi_internal}
     (nil))
(insn 25 26 55 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f626c4b86c0 *.LC8>)) "cmodules/fbgc_stl.c":159:7 66 {*movdi_internal}
     (nil))
(insn 55 25 28 4 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":159:7 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(call_insn:TI 28 55 58 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>) [0 cprintf S1 A8])
            (const_int 0 [0]))) "cmodules/fbgc_stl.c":159:7 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("cprintf") [flags 0x41]  <function_decl 0x7f626c7e3d00 cprintf>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(debug_insn 58 28 59 4 (var_location:SI argc (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 59 58 60 4 (var_location:DI arg (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 60 59 61 4 (debug_marker) "cmodules/fbgc_stl.c":160:2 -1
     (nil))
(insn 61 60 70 4 (parallel [
            (set (reg/i:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "cmodules/fbgc_stl.c":161:1 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 70 61 64 4 NOTE_INSN_EPILOGUE_BEG)
(insn/f 64 70 62 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "cmodules/fbgc_stl.c":161:1 959 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn 62 64 65 4 (use (reg/i:DI 0 ax)) "cmodules/fbgc_stl.c":161:1 -1
     (nil))
(jump_insn:TI 65 62 68 4 (simple_return) "cmodules/fbgc_stl.c":161:1 690 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [always]  count:536870913 (estimated locally)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 68 65 44)
(note 44 68 0 NOTE_INSN_DELETED)
