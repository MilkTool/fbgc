UNKNOWN $ Begin with unknown
NIL $ null or none
INT $ int class
DOUBLE $ double class
COMPLEX $ complex class
STRING $ string class
MATRIX $ matrix class
TUPLE $ tuple class
CFUN $ c function
FUN $ builtin fbgc function
NAME $ name class, name:value pairs
IDENTIFIER $ identifiers
RANGE $ range obj
REFERENCE
CSTRING
MONATRIX
NUPLE
MONUPLE
ARRAY
LINKED_LIST
CMODULE
GARBAGE
FIELD
END $ end
FUN_MAKE
ELIF
ELSE
WHILE
FOR
BREAK
CONT
LOAD
TRUE
FALSE
IF
RETURN
NEWLINE
LPARA $ (
RPARA $ )
LBRACK $ [
RBRACK $ ]
LBRACE $ {
RBRACE $ }
THREE_DOT $ ...
R_ARROW $ ->
L_ARROW $ <-
RW_ARROW $ ~>
LW_ARROW $ <~
TWO_COLON $ ::
PLUS_ASSIGN $ +=
MINUS_ASSIGN $ -=
STAR_ASSIGN $ *=
SLASH_ASSIGN $ /=
CONST_ASSIGN $ :=
PLUSPLUS $ ++
MINUSMINUS $ --
IF_THEN $ =>
STARSTAR $ **
SLASHSLASH $ //
LO_EQ $ <=
GR_EQ $ >=
EQ_EQ $ ==
NOT_EQ $ !=
R_SHIFT $ >>
L_SHIFT $ <<
CARET $ ^
PERCENT $ %
LOWER $ <
GREATER $ >
PIPE $ |
AMPERSAND $ &
SLASH $ /
STAR $ *
MINUS $ -
PLUS $ +
EXCLAMATION $ !
TILDE $ ~
SEMICOLON $ ;
COLON $ :
ASSIGN $ =
COMMA $ ,
DOT $ .
UMINUS $ -
UPLUS $ +
START
JUMP
AND
OR
NOT
ROW
EXPRESSION
ASSIGNMENT
STATEMENT
ASSIGNMENT_EXPRESSION
UNARY_EXPRESSION
BINARY_EXPRESSION
BALANCED_EXPRESSION_LIST
UNBALANCED_EXPRESSION_LIST
ASSIGN_SUBSCRIPT
LOAD_SUBSCRIPT
LEN
IF_BEGIN
ELIF_BEGIN
WHILE_BEGIN
FOR_BEGIN
FUN_CALL
BUILD_TUPLE
BUILD_MATRIX