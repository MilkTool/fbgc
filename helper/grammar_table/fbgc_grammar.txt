#grammar and token definition file
# ! is a special keyword character
# In order to define grammar tokens : !grammar_tokens
# tokens : !tokens


!grammar_tokens
	GM_NEWLINE
	GM_ATOM
	GM_BINOP
	GM_UNOP
	GM_ASSIGNOP
	GM_UNBALANCED_LIST
	GM_BALANCED_LIST
	GM_LPARA
	GM_LBRACK
	GM_SEMICOLON
	GM_COMMA
	GM_ID

!tokens
	NEWLINE
	INT
	DOUBLE
	STRING
	ID
	PLUS
	MINUS
	STAR
	SLASH
	UNOP
	ASSIGNOP	
	LPARA
	LBRACK
	COMMA
	RPARA
	RBRACK
	SEMICOLON


.ATOM = INT | DOUBLE | STRING

.x = ATOM | UNOP

.BINOP = PLUS | MINUS | STAR | SLASH

# .EXPRESSION = ATOM
# 	|UNARY_EXPRESSION
# 	|BINARY_EXPRESSION
# 	|PARA_EXPRESSION
# 	|BALANCED_EXPRESSION_LIST
# 	|EXPRESSION

# .OPERATOR = 
# 	BINOP
# 	|UNARY_OPERATOR
# 	|ASSIGNMENT_OPERATOR

# .ASSIGNMENT =
# 	ASSIGNMENT_EXPRESSION
# 	|PARA_ASSIGNMENT_EXPRESSION

# .STATEMENT =
# 	EXPRESSION
# 	|ASSIGNMENT

!left

GM_NEWLINE:
	(GM_NEWLINE | GM_ATOM) (NEWLINE)


# GM_ATOM:
# 	(GM_NEWLINE) (ATOM)
# 	(GM_BINOP | GM_ASSIGNOP | GM_UNOP) (ATOM)
# 	(GM_UNBALANCED_LIST | GM_LPARA | GM_LBRACK ) (ATOM)
# 	(GM_SEMICOLON | GM_COMMA) (ATOM)


# GM_ID:
# 	(GM_NEWLINE) (ID)
# 	(GM_BINOP | GM_ASSIGNOP | GM_UNOP) (ID)
# 	(GM_UNBALANCED_LIST | GM_LPARA | GM_LBRACK ) (ID)
# 	(GM_SEMICOLON | GM_COMMA) (ATOM)


# GM_LPARA:
# 	(GM_NEWLINE | GM_BINOP | GM_UNOP | GM_ASSIGNOP | GM_LPARA) (LPARA)
# 	(GM_SEMICOLON | GM_COMMA | GM_LBRACK | GM_UNBALANCED_LIST | GM_ID) (LPARA)


# GM_UNOP:
# 	(GM_NEWLINE | GM_BINOP | GM_UNOP) (UNOP)


GM_BINOP:
	(GM_ATOM) (BINOP)

# GM_UNOP:
# 	(GM_NEWLINE | GM_BINOP | GM_UNOP) (BINOP)
# 	?PLUS -> UPLUS
# 	?MINUS -> UMINUS
