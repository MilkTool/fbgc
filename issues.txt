#Known bugs


2) Return value of a void function
	previously we were checking the last token in the list so if it wasn't return we were adding "return nil", but following function showed that this is a wrong approach  

	f = fun(a,b)
		if(a == b)
			return ""
		end
	end

	this function won't return anything if a != b, will create recursion...

3) String format cannot work for more than one value 
	"fbg %d c" % 3 will work but "f %d %d "% (3,4) won't work

4) empty if-end blocks create problem in the parser. The connection of the "if" object in the main list cannot be done
	Try to see the error
	if(3);end #this is problematic
	if(3);x;end #this is ok



+) Lexer has a bug : format was read as "for" and mat words
	
	--Solved
	!b metachar is added to solve boundary problems for words
	New location finding algorithm, now we can detect which part in the given regex pattern is catched

+) | |  operator has precedence issues, check this

	if(|a|-1 != |b|)
		do smt
	end

	--Solved
	But we have changed the precedence of pipe operator,which result to unexpected behaviors
	this should be noted.

	Should we make the same precedence for all logical operators ?
+)
	Parser crashes for unary operators.
	check this
	y = x*-x
	will not exactly y = x*(-x) 


	--Solved


