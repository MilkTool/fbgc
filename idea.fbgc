load('io')
load('math')

s = ' ' * 3
print('Empty string: ',s)

s[0] = 'a'
s[1] = 'b'
s[2] = 'c'
print('string is:',s)

s = ''<<('f','b','g')

reverse_str = fun(s){
	final_str = ''
	finalstr <<= s[end-1 ~> begin]
	return finalstr
}

my_str = 'ABCDEF'
your_str = reverse_str(my_str)
print(your_str);

if(your_str == 'FEDCBA'){
	print('Reverse operaiton was succesful.')
}
elif(your_str == my_str){
	print('Reverse operaiton did not work!')
}
else{
	print('Something is wrong..')
}

fun sin(x){
	return x;
}



:>-----------------------------
a = 5
x = 10

sin = fun(x,y)
{
	b = 3
	return x+y+a
}


a,5,=,x,10,=,sin,x,y,2,BT,fun,b,3,=,x,y,+,a,+,return,=

:>------------------------------
a = 5
x = 10

sin = fun(x,y){
	a,b = 2,3
	return x+y+a
}
:>------------------------------

sin,x,y,2,
=,fun,(


class Robot:
    
    def __init__(self, name):
        self.name = name
        
    def say_hi(self):
        print("Hi, I am " + self.name)
        
class PhysicianRobot(Robot):
    def say_hi(self):
        print("Everything will be okay! ") 
        print(self.name + " takes care of you!")




Robot = class(){

	Robot = fun(name){
		.name = name;

	}

	say_hi = fun(){
		print('Hi, I am :%s' % .name )
	}

	op+ = fun(x){

		return .a + x

	}  
}        

PhysicianRobot = class(Robot){
	say_hi = fun(){
	 	print("Everything will be okay!") 
		print('Hi, I am :%s' % .name )
	}

}

y = PhysicianRobot('James')
y.say_hi()



y = "string"
for i in y:
	print(i)

y = "string"
for i,x -> (|y|) {
	print(y[i])
}


i,1,10,12,3,BT,=,FOR,{...}




for x,y = ((1,2),(5,10)){




}

:>----------------------------
z = 1
lol = 
fun(x,y)
	x = 10;
	z = 2;
	return x+y+z;
end

lol,x,y,2,BUILD_TUPLE,fun,x,10,= 
=,

